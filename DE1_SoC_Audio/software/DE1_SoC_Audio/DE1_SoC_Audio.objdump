
DE1_SoC_Audio.elf:     file format elf32-littlenios2
DE1_SoC_Audio.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x050801c0

Program Header:
    LOAD off    0x00001000 vaddr 0x05080000 paddr 0x05080000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x05080020 paddr 0x05080020 align 2**12
         filesz 0x000161a4 memsz 0x000161a4 flags r-x
    LOAD off    0x000171c4 vaddr 0x050961c4 paddr 0x05097cc0 align 2**12
         filesz 0x00001afc memsz 0x00001afc flags rw-
    LOAD off    0x000197bc vaddr 0x050997bc paddr 0x050997bc align 2**12
         filesz 0x00000000 memsz 0x00000190 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  05080000  05080000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   000001a0  05080020  05080020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00015228  050801c0  050801c0  000011c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000ddc  050953e8  050953e8  000163e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001afc  050961c4  05097cc0  000171c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000190  050997bc  050997bc  000197bc  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00000000  00000000  00018cc0  2**0
                  CONTENTS
  7 .onchip_memory2 00000000  0509994c  0509994c  00018cc0  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00018cc0  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00001028  00000000  00000000  00018ce8  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00028716  00000000  00000000  00019d10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000a2a6  00000000  00000000  00042426  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000d952  00000000  00000000  0004c6cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00002ab4  00000000  00000000  0005a020  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00003bd5  00000000  00000000  0005cad4  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001c7f9  00000000  00000000  000606a9  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000060  00000000  00000000  0007cea4  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001a88  00000000  00000000  0007cf08  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  00082442  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  00082445  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  00082451  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  00082452  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  00082453  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  00082457  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  0008245b  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   00000009  00000000  00000000  0008245f  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    00000009  00000000  00000000  00082468  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   00000009  00000000  00000000  00082471  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 0000000a  00000000  00000000  0008247a  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 00000061  00000000  00000000  00082484  2**0
                  CONTENTS, READONLY
 30 .jdi          000049d0  00000000  00000000  000824e5  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     000a5840  00000000  00000000  00086eb5  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
05080000 l    d  .entry	00000000 .entry
05080020 l    d  .exceptions	00000000 .exceptions
050801c0 l    d  .text	00000000 .text
050953e8 l    d  .rodata	00000000 .rodata
050961c4 l    d  .rwdata	00000000 .rwdata
050997bc l    d  .bss	00000000 .bss
00000000 l    d  .sdram	00000000 .sdram
0509994c l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../DE1_SoC_Audio_bsp//obj/HAL/src/crt0.o
05080208 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
05080094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 AUDIO.c
050997fc l     O .bss	00000028 reg_file
00000000 l    df *ABS*	00000000 I2C.c
00000000 l    df *ABS*	00000000 LED.c
00000000 l    df *ABS*	00000000 SEG7.c
050961c4 l     O .rwdata	00000010 szMap
00000000 l    df *ABS*	00000000 debug.c
00000000 l    df *ABS*	00000000 main.c
050997bc l     O .bss	00000004 sum.4417
050997c0 l     O .bss	00000002 cnt.4418
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
05095ed2 l     O .rodata	00000010 zeroes.4389
05095ee2 l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 vfprintf.c
05095ef2 l     O .rodata	00000010 zeroes.4404
05086fbc l     F .text	000000bc __sbprintf
05095f02 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
050872f0 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
05088e20 l     F .text	00000008 __fp_unlock
05088e34 l     F .text	0000019c __sinit.part.1
05088fd0 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
050961d4 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
05096618 l     O .rwdata	00000020 lc_ctype_charset
050965f8 l     O .rwdata	00000020 lc_message_charset
05096638 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
05095f34 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
05096068 l     O .rodata	00000010 blanks.4332
05096058 l     O .rodata	00000010 zeroes.4333
00000000 l    df *ABS*	00000000 vfprintf.c
0508d7d8 l     F .text	000000fc __sprint_r.part.0
05096088 l     O .rodata	00000010 blanks.4348
05096078 l     O .rodata	00000010 zeroes.4349
0508ed64 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0509286c l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0509298c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
050929b8 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
05092c68 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
05092d5c l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
05092e48 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
05093030 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
05097cb4 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
050932c0 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
05093408 l     F .text	00000038 alt_dev_reg
05096c20 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
05093708 l     F .text	0000020c altera_avalon_jtag_uart_irq
05093914 l     F .text	000000a8 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
05093f54 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
05094338 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
050947f0 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
05094930 l     F .text	00000050 alt_get_errno
05094980 l     F .text	000000cc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
05082018 g     F .text	0000005c display_time_elapsed
0508ba10 g     F .text	00000074 _mprec_log10
05081048 g     F .text	00000124 I2C_Read
0508bafc g     F .text	0000008c __any_on
0508f300 g     F .text	00000054 _isatty_r
05095f40 g     O .rodata	00000028 __mprec_tinytens
05092f6c g     F .text	0000007c alt_main
050829a0 g     F .text	000000c0 _puts_r
05081d88 g     F .text	00000064 button_monitor_isr
0509984c g     O .bss	00000100 alt_irq
0508f354 g     F .text	00000060 _lseek_r
05097cc0 g       *ABS*	00000000 __flash_rwdata_start
05091398 g     F .text	00000088 .hidden __eqdf2
05081c2c g     F .text	0000003c ui_is_mic_record
0509994c g       *ABS*	00000000 __alt_heap_start
0508020c g     F .text	00000188 AUDIO_Init
05082964 g     F .text	0000003c printf
0508f56c g     F .text	0000009c _wcrtomb_r
05080454 g     F .text	00000078 AUDIO_AdcEnableHighPassFilter
0508c28c g     F .text	0000005c __sseek
05089170 g     F .text	00000010 __sinit
0508f414 g     F .text	00000140 __swbuf_r
05089c38 g     F .text	0000007c _setlocale_r
05088fd8 g     F .text	00000068 __sfmoreglue
0509300c g     F .text	00000024 __malloc_unlock
0508a908 g     F .text	0000015c memmove
05089158 g     F .text	00000018 _cleanup
05080d08 g     F .text	000000f4 aduio_RegWrite
05080f1c g     F .text	00000030 AUDIO_FifoClear
0508ab8c g     F .text	000000a8 _Balloc
050816e0 g     F .text	00000030 LED_AllOff
05091420 g     F .text	000000dc .hidden __gtdf2
05094d48 g     F .text	00000024 altera_nios2_gen2_irq_init
05080ec4 g     F .text	00000058 AUDIO_AdcFifoGetData
050813ec g     F .text	00000130 i2c_write
05080000 g     F .entry	0000001c __reset
05082074 g     F .text	00000098 show_power
05080020 g       *ABS*	00000000 __flash_exceptions_start
0508f2a4 g     F .text	0000005c _fstat_r
050997e0 g     O .bss	00000004 errno
0508c208 g     F .text	00000008 __seofread
0508c59c g     F .text	0000123c ___svfiprintf_internal_r
050997ec g     O .bss	00000004 alt_argv
0509fc80 g       *ABS*	00000000 _gp
05093290 g     F .text	00000030 usleep
05082294 g     F .text	00000064 show_menu
05096aa0 g     O .rwdata	00000180 alt_fd_list
05094d6c g     F .text	00000090 alt_find_dev
0508a7c0 g     F .text	00000148 memcpy
05081674 g     F .text	0000003c LED_Display
05088e28 g     F .text	0000000c _cleanup_r
05092684 g     F .text	000000dc .hidden __floatsidf
05081dec g     F .text	00000084 button_monitor_start
050948b4 g     F .text	0000007c alt_io_redirect
050914fc g     F .text	000000f4 .hidden __ltdf2
050953e8 g       *ABS*	00000000 __DTOR_END__
05082a60 g     F .text	00000014 puts
0508c0ec g     F .text	00000074 __fpclassifyd
0508b96c g     F .text	000000a4 __ratio
0508ed48 g     F .text	0000001c __vfiprintf_internal
05081e70 g     F .text	000001a8 init_audio
05093b14 g     F .text	0000021c altera_avalon_jtag_uart_read
05082934 g     F .text	00000030 _printf_r
05082878 g     F .text	00000064 .hidden __udivsi3
05092cb8 g     F .text	000000a4 isatty
05080bf0 g     F .text	0000008c AUDIO_EnableByPass
05095f90 g     O .rodata	000000c8 __mprec_tens
05089cb4 g     F .text	0000000c __locale_charset
05087168 g     F .text	00000034 vsnprintf
05094fc4 g     F .text	00000090 alt_icache_flush
0508116c g     F .text	0000017c I2C_MultipleRead
050997dc g     O .bss	00000004 __malloc_top_pad
050809c8 g     F .text	00000114 AUDIO_SetLineInVol
05097c88 g     O .rwdata	00000004 __mb_cur_max
05089ce4 g     F .text	0000000c _localeconv_r
0508af98 g     F .text	0000003c __i2b
050895f4 g     F .text	000004bc __sfvwrite_r
05081784 g     F .text	00000060 SEG7_Clear
0508c160 g     F .text	00000054 _sbrk_r
05081b9c g     F .text	00000090 myprintf_dword_array
0508f3b4 g     F .text	00000060 _read_r
05097ca8 g     O .rwdata	00000004 alt_max_fd
0508ef98 g     F .text	000000f0 _fclose_r
05088df0 g     F .text	00000030 fflush
0508057c g     F .text	000000e0 AUDIO_DacEnableZeroCross
050997d8 g     O .bss	00000004 __malloc_max_sbrked_mem
05092ab8 g     F .text	000001b0 alt_irq_register
05090204 g     F .text	000008ac .hidden __adddf3
0508b714 g     F .text	0000010c __b2d
0508fccc g     F .text	00000538 .hidden __umoddi3
05092e98 g     F .text	000000d4 lseek
05097c80 g     O .rwdata	00000004 _global_impure_ptr
0508bb88 g     F .text	00000564 _realloc_r
0509994c g       *ABS*	00000000 __bss_end
05094700 g     F .text	000000f0 alt_iic_isr_register
05094c40 g     F .text	00000108 alt_tick
0508f754 g     F .text	00000578 .hidden __udivdi3
0508f200 g     F .text	00000024 _fputwc_r
05095f68 g     O .rodata	00000028 __mprec_bigtens
0508ad7c g     F .text	00000104 __s2b
05092760 g     F .text	000000a8 .hidden __floatunsidf
050803dc g     F .text	00000078 AUDIO_MicBoost
0508b454 g     F .text	00000060 __mcmp
05089190 g     F .text	00000018 __fp_lock_all
050946b4 g     F .text	0000004c alt_ic_irq_enabled
05080f4c g     F .text	000000fc I2C_Write
05081844 g     F .text	00000074 SEG7_Number
05094ba4 g     F .text	0000009c alt_alarm_stop
050997e4 g     O .bss	00000004 alt_irq_active
050800ec g     F .exceptions	000000d4 alt_irq_handler
05096a78 g     O .rwdata	00000028 alt_dev_null
050812e8 g     F .text	0000008c i2c_start
050942f0 g     F .text	00000048 alt_dcache_flush_all
0508ae80 g     F .text	00000068 __hi0bits
05092604 g     F .text	00000080 .hidden __fixdfsi
05097cc0 g       *ABS*	00000000 __ram_rwdata_end
05097ca0 g     O .rwdata	00000008 alt_dev_list
05093310 g     F .text	000000f8 write
050961c4 g       *ABS*	00000000 __ram_rodata_end
05092a08 g     F .text	000000b0 fstat
050914fc g     F .text	000000f4 .hidden __ledf2
05081aa8 g     F .text	0000006c myprintf
0508b1cc g     F .text	00000140 __pow5mult
0508d8ec g     F .text	0000145c ___vfiprintf_internal_r
050997d0 g     O .bss	00000004 __nlocale_changed
050828dc g     F .text	00000058 .hidden __umodsi3
05080c7c g     F .text	0000008c AUDIO_EnableSiteTone
0509994c g       *ABS*	00000000 end
050816b0 g     F .text	00000030 LED_AllOn
05093640 g     F .text	000000c8 altera_avalon_jtag_uart_init
050953e8 g       *ABS*	00000000 __CTOR_LIST__
050ce200 g       *ABS*	00000000 __alt_stack_pointer
05093fcc g     F .text	0000008c alt_avalon_timer_sc_init
05092808 g     F .text	00000064 .hidden __clzsi2
05093d30 g     F .text	00000224 altera_avalon_jtag_uart_write
05089180 g     F .text	00000004 __sfp_lock_acquire
0508a6dc g     F .text	000000e4 memchr
05084da8 g     F .text	000021f8 ___vfprintf_internal_r
05082a74 g     F .text	00000058 _sprintf_r
050892e4 g     F .text	00000310 _free_r
05089cc0 g     F .text	00000010 __locale_mb_cur_max
05095234 g     F .text	00000180 __call_exitprocs
050997cc g     O .bss	00000004 __mlocale_changed
05097c8c g     O .rwdata	00000004 __malloc_sbrk_base
050801c0 g     F .text	0000004c _start
050997f4 g     O .bss	00000004 _alt_tick_rate
0508b30c g     F .text	00000148 __lshift
050997f8 g     O .bss	00000004 _alt_nticks
05093080 g     F .text	000000fc read
05093478 g     F .text	00000064 alt_sys_init
0508c3cc g     F .text	000001d0 __ssprint_r
0509511c g     F .text	00000118 __register_exitproc
0508065c g     F .text	0000008c AUDIO_DacEnableSoftMute
0508afd4 g     F .text	000001f8 __multiply
050939bc g     F .text	00000068 altera_avalon_jtag_uart_close
050961c4 g       *ABS*	00000000 __ram_rwdata_start
050953e8 g       *ABS*	00000000 __ram_rodata_start
05099824 g     O .bss	00000028 __malloc_current_mallinfo
0508b820 g     F .text	0000014c __d2b
05081ca4 g     F .text	0000003c ui_is_dac_zero_cross
050934dc g     F .text	00000060 altera_avalon_jtag_uart_read_fd
05094f10 g     F .text	000000b4 alt_get_fd
05094198 g     F .text	00000158 alt_busy_sleep
0508ee80 g     F .text	00000054 _close_r
050950a0 g     F .text	0000007c memcmp
0509359c g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0509994c g       *ABS*	00000000 __alt_stack_base
050935ec g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0508719c g     F .text	00000154 __swsetup_r
0508210c g     F .text	00000058 init
05090ab0 g     F .text	000008e8 .hidden __divdf3
05089040 g     F .text	00000118 __sfp
0508ba84 g     F .text	00000078 __copybits
050804cc g     F .text	000000b0 AUDIO_DacDeemphasisControl
05096670 g     O .rwdata	00000408 __malloc_av_
0508918c g     F .text	00000004 __sinit_lock_release
05087078 g     F .text	000000f0 _vsnprintf_r
05081374 g     F .text	00000078 i2c_stop
050915f0 g     F .text	00000718 .hidden __muldf3
0508c1b4 g     F .text	00000054 __sread
050817e4 g     F .text	00000060 SEG7_Full
05094dfc g     F .text	00000114 alt_find_file
05081988 g     F .text	000000ec SEG7_Decimal
05094388 g     F .text	000000a4 alt_dev_llist_insert
05092fe8 g     F .text	00000024 __malloc_lock
050931e0 g     F .text	000000b0 sbrk
05082bd0 g     F .text	000021d8 ___svfprintf_internal_r
05080854 g     F .text	00000090 AUDIO_SetInputSource
05088d94 g     F .text	0000005c _fflush_r
0508eed4 g     F .text	000000c4 _calloc_r
05080394 g     F .text	00000048 AUDIO_InterfaceActive
050997bc g       *ABS*	00000000 __bss_start
0508aa64 g     F .text	00000128 memset
050822f8 g     F .text	00000488 main
050997f0 g     O .bss	00000004 alt_envp
050997d4 g     O .bss	00000004 __malloc_max_total_mem
0509353c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0508151c g     F .text	00000158 i2c_read
0508f554 g     F .text	00000018 __swbuf
050997c4 g     O .bss	00000004 record_sample_rate
0508c2e8 g     F .text	00000008 __sclose
050ce200 g       *ABS*	00000000 __alt_heap_limit
0508f088 g     F .text	00000014 fclose
050874f0 g     F .text	00001688 _dtoa_r
05089ed0 g     F .text	0000080c _malloc_r
0508f6c8 g     F .text	00000030 __ascii_wctomb
05097cac g     O .rwdata	00000004 alt_errno
05089ab0 g     F .text	000000c4 _fwalk
05081ce0 g     F .text	000000a8 ui_get_sample_rate
05082780 g     F .text	00000084 .hidden __divsi3
050891c0 g     F .text	00000124 _malloc_trim_r
050953e8 g       *ABS*	00000000 __CTOR_END__
05080774 g     F .text	000000e0 AUDIO_LineInMute
0508c2f0 g     F .text	000000dc strcmp
050806e8 g     F .text	0000008c AUDIO_MicMute
050953e8 g       *ABS*	00000000 __flash_rodata_start
050953e8 g       *ABS*	00000000 __DTOR_LIST__
05091398 g     F .text	00000088 .hidden __nedf2
05093440 g     F .text	00000038 alt_irq_init
0509317c g     F .text	00000064 alt_release_fd
05082acc g     F .text	0000006c sprintf
05096098 g     O .rodata	00000100 .hidden __clz_tab
050818b8 g     F .text	000000d0 SEG7_Hex
05081a74 g     F .text	00000034 debug_output
050997c8 g     O .bss	00000004 _PathLocale
05095054 g     F .text	00000014 atexit
05082164 g     F .text	00000130 dump_record_data
0508ee20 g     F .text	00000060 _write_r
05089cf0 g     F .text	00000018 setlocale
05097c84 g     O .rwdata	00000004 _impure_ptr
050997e8 g     O .bss	00000004 alt_argc
05088b78 g     F .text	0000021c __sflush_r
0509448c g     F .text	00000060 _do_dtors
05089cdc g     F .text	00000008 __locale_cjk_lang
05080e88 g     F .text	0000003c AUDIO_AdcFifoNotEmpty
05080020 g       .exceptions	00000000 alt_irq_entry
0508b6b0 g     F .text	00000064 __ulp
050891a8 g     F .text	00000018 __fp_unlock_all
05081c68 g     F .text	0000003c ui_is_mic_boost
05080e38 g     F .text	00000050 AUDIO_DacFifoSetData
05097c98 g     O .rwdata	00000008 alt_fs_list
05081b14 g     F .text	00000088 myprintf_hex_array
05080020 g       *ABS*	00000000 __ram_exceptions_start
050808e4 g     F .text	000000e4 AUDIO_SetSampleRate
05089d08 g     F .text	0000000c localeconv
05080000 g       *ABS*	00000000 __alt_mem_onchip_memory2
05094520 g     F .text	00000050 alt_ic_isr_register
05097cc0 g       *ABS*	00000000 _edata
0509994c g       *ABS*	00000000 _end
05080adc g     F .text	00000114 AUDIO_SetLineOutVol
0508f09c g     F .text	00000164 __fputwc
050801c0 g       *ABS*	00000000 __ram_exceptions_end
05093a24 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
05094610 g     F .text	000000a4 alt_ic_irq_disable
0508c210 g     F .text	0000007c __swrite
05097c90 g     O .rwdata	00000004 __malloc_trim_threshold
05089cd0 g     F .text	0000000c __locale_msgcharset
05095068 g     F .text	00000038 exit
05081710 g     F .text	00000074 LED_LightCount
05089b74 g     F .text	000000c4 _fwalk_reent
0508b4b4 g     F .text	000001fc __mdiff
05082804 g     F .text	00000074 .hidden __modsi3
050ce200 g       *ABS*	00000000 __alt_data_end
05080020 g     F .exceptions	00000000 alt_exception
05089184 g     F .text	00000004 __sfp_lock_release
00000000 g       *ABS*	00000000 __alt_mem_sdram
050953b4 g     F .text	00000034 _exit
05094058 g     F .text	00000140 alt_alarm_start
05089d14 g     F .text	000001bc __smakebuf_r
05082b38 g     F .text	00000098 strlen
05094a4c g     F .text	00000158 open
05080dfc g     F .text	0000003c AUDIO_DacFifoNotFull
05091420 g     F .text	000000dc .hidden __gedf2
05097c94 g     O .rwdata	00000004 __wctomb
0508d8d4 g     F .text	00000018 __sprint_r
050944ec g     F .text	00000034 alt_icache_flush_all
05097cb0 g     O .rwdata	00000004 alt_priority_mask
05094570 g     F .text	000000a0 alt_ic_irq_enable
05086fa0 g     F .text	0000001c __vfprintf_internal
0508f6f8 g     F .text	0000005c _wctomb_r
05091d08 g     F .text	000008fc .hidden __subdf3
0508aee8 g     F .text	000000b0 __lo0bits
05097cb8 g     O .rwdata	00000008 alt_alarm_list
0509442c g     F .text	00000060 _do_ctors
0508f608 g     F .text	000000c0 wcrtomb
050928bc g     F .text	000000d0 close
05092dc4 g     F .text	00000084 alt_load
0508f224 g     F .text	00000080 fputwc
05089188 g     F .text	00000004 __sinit_lock_acquire
0508ac5c g     F .text	00000120 __multadd
050955a4 g     O .rodata	00000800 szMenu
0508ac34 g     F .text	00000028 _Bfree



Disassembly of section .entry:

05080000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
 5080000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
 5080004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
 5080008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 508000c:	00bffd16 	blt	zero,r2,5080004 <__alt_data_end+0xfffb1e04>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 5080010:	00414234 	movhi	at,1288
    ori r1, r1, %lo(_start)
 5080014:	08407014 	ori	at,at,448
    jmp r1
 5080018:	0800683a 	jmp	at
 508001c:	00000000 	call	0 <__alt_mem_sdram>

Disassembly of section .exceptions:

05080020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 5080020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 5080024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 5080028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 508002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 5080030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 5080034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 5080038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 508003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 5080040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 5080044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 5080048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 508004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 5080050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 5080054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 5080058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 508005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 5080060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 5080064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 5080068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 508006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 5080070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 5080074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 5080078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 508007c:	10000326 	beq	r2,zero,508008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 5080080:	20000226 	beq	r4,zero,508008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 5080084:	50800ec0 	call	50800ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 5080088:	00000306 	br	5080098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 508008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 5080090:	e8bfff17 	ldw	r2,-4(ea)

05080094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
 5080094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 5080098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 508009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 50800a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 50800a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 50800a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 50800ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 50800b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 50800b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 50800b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 50800bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 50800c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 50800c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 50800c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 50800cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 50800d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 50800d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 50800d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 50800dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 50800e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 50800e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 50800e8:	ef80083a 	eret

050800ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 50800ec:	defff904 	addi	sp,sp,-28
 50800f0:	dfc00615 	stw	ra,24(sp)
 50800f4:	df000515 	stw	fp,20(sp)
 50800f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 50800fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 5080100:	0005313a 	rdctl	r2,ipending
 5080104:	e0bffe15 	stw	r2,-8(fp)

  return active;
 5080108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 508010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 5080110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 5080114:	00800044 	movi	r2,1
 5080118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 508011c:	e0fffb17 	ldw	r3,-20(fp)
 5080120:	e0bffc17 	ldw	r2,-16(fp)
 5080124:	1884703a 	and	r2,r3,r2
 5080128:	10001426 	beq	r2,zero,508017c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 508012c:	008142b4 	movhi	r2,1290
 5080130:	10a61304 	addi	r2,r2,-26548
 5080134:	e0fffd17 	ldw	r3,-12(fp)
 5080138:	180690fa 	slli	r3,r3,3
 508013c:	10c5883a 	add	r2,r2,r3
 5080140:	10c00017 	ldw	r3,0(r2)
 5080144:	008142b4 	movhi	r2,1290
 5080148:	10a61304 	addi	r2,r2,-26548
 508014c:	e13ffd17 	ldw	r4,-12(fp)
 5080150:	200890fa 	slli	r4,r4,3
 5080154:	1105883a 	add	r2,r2,r4
 5080158:	10800104 	addi	r2,r2,4
 508015c:	10800017 	ldw	r2,0(r2)
 5080160:	1009883a 	mov	r4,r2
 5080164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 5080168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 508016c:	0005313a 	rdctl	r2,ipending
 5080170:	e0bfff15 	stw	r2,-4(fp)

  return active;
 5080174:	e0bfff17 	ldw	r2,-4(fp)
 5080178:	00000706 	br	5080198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 508017c:	e0bffc17 	ldw	r2,-16(fp)
 5080180:	1085883a 	add	r2,r2,r2
 5080184:	e0bffc15 	stw	r2,-16(fp)
      i++;
 5080188:	e0bffd17 	ldw	r2,-12(fp)
 508018c:	10800044 	addi	r2,r2,1
 5080190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 5080194:	003fe106 	br	508011c <__alt_data_end+0xfffb1f1c>

    active = alt_irq_pending ();
 5080198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 508019c:	e0bffb17 	ldw	r2,-20(fp)
 50801a0:	103fdb1e 	bne	r2,zero,5080110 <__alt_data_end+0xfffb1f10>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 50801a4:	0001883a 	nop
}
 50801a8:	0001883a 	nop
 50801ac:	e037883a 	mov	sp,fp
 50801b0:	dfc00117 	ldw	ra,4(sp)
 50801b4:	df000017 	ldw	fp,0(sp)
 50801b8:	dec00204 	addi	sp,sp,8
 50801bc:	f800283a 	ret

Disassembly of section .text:

050801c0 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
 50801c0:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
 50801c4:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
 50801c8:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
 50801cc:	00bffd16 	blt	zero,r2,50801c4 <__alt_data_end+0xfffb1fc4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 50801d0:	06c14334 	movhi	sp,1292
    ori sp, sp, %lo(__alt_stack_pointer)
 50801d4:	def88014 	ori	sp,sp,57856
    movhi gp, %hi(_gp)
 50801d8:	06814274 	movhi	gp,1289
    ori gp, gp, %lo(_gp)
 50801dc:	d6bf2014 	ori	gp,gp,64640
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 50801e0:	00814274 	movhi	r2,1289
    ori r2, r2, %lo(__bss_start)
 50801e4:	10a5ef14 	ori	r2,r2,38844

    movhi r3, %hi(__bss_end)
 50801e8:	00c14274 	movhi	r3,1289
    ori r3, r3, %lo(__bss_end)
 50801ec:	18e65314 	ori	r3,r3,39244

    beq r2, r3, 1f
 50801f0:	10c00326 	beq	r2,r3,5080200 <_start+0x40>

0:
    stw zero, (r2)
 50801f4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 50801f8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 50801fc:	10fffd36 	bltu	r2,r3,50801f4 <__alt_data_end+0xfffb1ff4>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 5080200:	5092dc40 	call	5092dc4 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 5080204:	5092f6c0 	call	5092f6c <alt_main>

05080208 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 5080208:	003fff06 	br	5080208 <__alt_data_end+0xfffb2008>

0508020c <AUDIO_Init>:

/////////////////////////////////////////////////////////////////////////
///////////// External function body ////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

bool AUDIO_Init(void){
 508020c:	defffd04 	addi	sp,sp,-12
 5080210:	dfc00215 	stw	ra,8(sp)
 5080214:	df000115 	stw	fp,4(sp)
 5080218:	df000104 	addi	fp,sp,4
   bool bSuccess = TRUE;
 508021c:	00800044 	movi	r2,1
 5080220:	e0bfff15 	stw	r2,-4(fp)
    AUDIO_DEBUG(("[AUDIO] AUDIO_Init...\r\n"));
 5080224:	01014274 	movhi	r4,1289
 5080228:	2114fa04 	addi	r4,r4,21480
 508022c:	5081aa80 	call	5081aa8 <myprintf>

    if (bSuccess)
 5080230:	e0bfff17 	ldw	r2,-4(fp)
 5080234:	10000426 	beq	r2,zero,5080248 <AUDIO_Init+0x3c>
        bSuccess = aduio_RegWrite(15, 0x0000);  // reset
 5080238:	000b883a 	mov	r5,zero
 508023c:	010003c4 	movi	r4,15
 5080240:	5080d080 	call	5080d08 <aduio_RegWrite>
 5080244:	e0bfff15 	stw	r2,-4(fp)
        
    if (bSuccess)
 5080248:	e0bfff17 	ldw	r2,-4(fp)
 508024c:	10000426 	beq	r2,zero,5080260 <AUDIO_Init+0x54>
        bSuccess = aduio_RegWrite(9, 0x0000);  // inactive interface         
 5080250:	000b883a 	mov	r5,zero
 5080254:	01000244 	movi	r4,9
 5080258:	5080d080 	call	5080d08 <aduio_RegWrite>
 508025c:	e0bfff15 	stw	r2,-4(fp)
       
    //usleep(20*1000);    
    if (bSuccess)
 5080260:	e0bfff17 	ldw	r2,-4(fp)
 5080264:	10000426 	beq	r2,zero,5080278 <AUDIO_Init+0x6c>
        bSuccess = aduio_RegWrite(0, 0x0017);  // Left Line In: set left line in volume
 5080268:	014005c4 	movi	r5,23
 508026c:	0009883a 	mov	r4,zero
 5080270:	5080d080 	call	5080d08 <aduio_RegWrite>
 5080274:	e0bfff15 	stw	r2,-4(fp)
        
    if (bSuccess)
 5080278:	e0bfff17 	ldw	r2,-4(fp)
 508027c:	10000426 	beq	r2,zero,5080290 <AUDIO_Init+0x84>
        bSuccess = aduio_RegWrite(1, 0x0017);  // Right Line In: set right line in volume
 5080280:	014005c4 	movi	r5,23
 5080284:	01000044 	movi	r4,1
 5080288:	5080d080 	call	5080d08 <aduio_RegWrite>
 508028c:	e0bfff15 	stw	r2,-4(fp)
        
    if (bSuccess)
 5080290:	e0bfff17 	ldw	r2,-4(fp)
 5080294:	10000426 	beq	r2,zero,50802a8 <AUDIO_Init+0x9c>
        bSuccess = aduio_RegWrite(2, 0x005B);  // Left Headphone Out: set left line out volume
 5080298:	014016c4 	movi	r5,91
 508029c:	01000084 	movi	r4,2
 50802a0:	5080d080 	call	5080d08 <aduio_RegWrite>
 50802a4:	e0bfff15 	stw	r2,-4(fp)
        
    if (bSuccess)
 50802a8:	e0bfff17 	ldw	r2,-4(fp)
 50802ac:	10000426 	beq	r2,zero,50802c0 <AUDIO_Init+0xb4>
        bSuccess = aduio_RegWrite(3, 0x005B);  // Right Headphone Out: set right line out volume
 50802b0:	014016c4 	movi	r5,91
 50802b4:	010000c4 	movi	r4,3
 50802b8:	5080d080 	call	5080d08 <aduio_RegWrite>
 50802bc:	e0bfff15 	stw	r2,-4(fp)
        
    if (bSuccess)      
 50802c0:	e0bfff17 	ldw	r2,-4(fp)
 50802c4:	10000426 	beq	r2,zero,50802d8 <AUDIO_Init+0xcc>
        bSuccess = aduio_RegWrite(4, 0x0015);  // Analogue Audio Path Control: set mic as input and boost it, and enable dac         
 50802c8:	01400544 	movi	r5,21
 50802cc:	01000104 	movi	r4,4
 50802d0:	5080d080 	call	5080d08 <aduio_RegWrite>
 50802d4:	e0bfff15 	stw	r2,-4(fp)
                
    if (bSuccess)
 50802d8:	e0bfff17 	ldw	r2,-4(fp)
 50802dc:	10000426 	beq	r2,zero,50802f0 <AUDIO_Init+0xe4>
        bSuccess = aduio_RegWrite(5, 0x0000);  // Digital Audio Path Control: disable soft mute         
 50802e0:	000b883a 	mov	r5,zero
 50802e4:	01000144 	movi	r4,5
 50802e8:	5080d080 	call	5080d08 <aduio_RegWrite>
 50802ec:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
 50802f0:	e0bfff17 	ldw	r2,-4(fp)
 50802f4:	10000426 	beq	r2,zero,5080308 <AUDIO_Init+0xfc>
        bSuccess = aduio_RegWrite(6, 0);  // power down control: power on all         
 50802f8:	000b883a 	mov	r5,zero
 50802fc:	01000184 	movi	r4,6
 5080300:	5080d080 	call	5080d08 <aduio_RegWrite>
 5080304:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
 5080308:	e0bfff17 	ldw	r2,-4(fp)
 508030c:	10000426 	beq	r2,zero,5080320 <AUDIO_Init+0x114>
        bSuccess = aduio_RegWrite(7, 0x0042);  // I2S, iwl=16-bits, Enable Master Mode         
 5080310:	01401084 	movi	r5,66
 5080314:	010001c4 	movi	r4,7
 5080318:	5080d080 	call	5080d08 <aduio_RegWrite>
 508031c:	e0bfff15 	stw	r2,-4(fp)
//        bSuccess = aduio_RegWrite(7, 0x0041);  // MSB-First, left justified, iwl=16-bits, Enable Master Mode         

    if (bSuccess)
 5080320:	e0bfff17 	ldw	r2,-4(fp)
 5080324:	10000426 	beq	r2,zero,5080338 <AUDIO_Init+0x12c>
        bSuccess = aduio_RegWrite(8, 0x0002);  // Normal, Base OVer-Sampleing Rate 384 fs (BOSR=1)         
 5080328:	01400084 	movi	r5,2
 508032c:	01000204 	movi	r4,8
 5080330:	5080d080 	call	5080d08 <aduio_RegWrite>
 5080334:	e0bfff15 	stw	r2,-4(fp)


    if (bSuccess)
 5080338:	e0bfff17 	ldw	r2,-4(fp)
 508033c:	10000426 	beq	r2,zero,5080350 <AUDIO_Init+0x144>
        bSuccess = aduio_RegWrite(9, 0x0001);  // active interface
 5080340:	01400044 	movi	r5,1
 5080344:	01000244 	movi	r4,9
 5080348:	5080d080 	call	5080d08 <aduio_RegWrite>
 508034c:	e0bfff15 	stw	r2,-4(fp)
        
        
         
    AUDIO_DEBUG(("[AUDIO] AUDIO_Init %s\r\n", bSuccess?"success":"fail"));        
 5080350:	e0bfff17 	ldw	r2,-4(fp)
 5080354:	10000326 	beq	r2,zero,5080364 <AUDIO_Init+0x158>
 5080358:	00814274 	movhi	r2,1289
 508035c:	10950004 	addi	r2,r2,21504
 5080360:	00000206 	br	508036c <AUDIO_Init+0x160>
 5080364:	00814274 	movhi	r2,1289
 5080368:	10950204 	addi	r2,r2,21512
 508036c:	100b883a 	mov	r5,r2
 5080370:	01014274 	movhi	r4,1289
 5080374:	21150404 	addi	r4,r4,21520
 5080378:	5081aa80 	call	5081aa8 <myprintf>
    
    return bSuccess;        
 508037c:	e0bfff17 	ldw	r2,-4(fp)
         
}
 5080380:	e037883a 	mov	sp,fp
 5080384:	dfc00117 	ldw	ra,4(sp)
 5080388:	df000017 	ldw	fp,0(sp)
 508038c:	dec00204 	addi	sp,sp,8
 5080390:	f800283a 	ret

05080394 <AUDIO_InterfaceActive>:

bool AUDIO_InterfaceActive(bool bActive){
 5080394:	defffc04 	addi	sp,sp,-16
 5080398:	dfc00315 	stw	ra,12(sp)
 508039c:	df000215 	stw	fp,8(sp)
 50803a0:	df000204 	addi	fp,sp,8
 50803a4:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    bSuccess = aduio_RegWrite(9, bActive?0x0001:0x0000); 
 50803a8:	e0bfff17 	ldw	r2,-4(fp)
 50803ac:	1004c03a 	cmpne	r2,r2,zero
 50803b0:	10803fcc 	andi	r2,r2,255
 50803b4:	100b883a 	mov	r5,r2
 50803b8:	01000244 	movi	r4,9
 50803bc:	5080d080 	call	5080d08 <aduio_RegWrite>
 50803c0:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;
 50803c4:	e0bffe17 	ldw	r2,-8(fp)
}
 50803c8:	e037883a 	mov	sp,fp
 50803cc:	dfc00117 	ldw	ra,4(sp)
 50803d0:	df000017 	ldw	fp,0(sp)
 50803d4:	dec00204 	addi	sp,sp,8
 50803d8:	f800283a 	ret

050803dc <AUDIO_MicBoost>:

bool AUDIO_MicBoost(bool bBoost){
 50803dc:	defffb04 	addi	sp,sp,-20
 50803e0:	dfc00415 	stw	ra,16(sp)
 50803e4:	df000315 	stw	fp,12(sp)
 50803e8:	df000304 	addi	fp,sp,12
 50803ec:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control;
    control = reg_file[4];
 50803f0:	008142b4 	movhi	r2,1290
 50803f4:	10a5ff04 	addi	r2,r2,-26628
 50803f8:	1080020b 	ldhu	r2,8(r2)
 50803fc:	e0bffd0d 	sth	r2,-12(fp)
    if (bBoost)
 5080400:	e0bfff17 	ldw	r2,-4(fp)
 5080404:	10000426 	beq	r2,zero,5080418 <AUDIO_MicBoost+0x3c>
        control |= 0x0001;
 5080408:	e0bffd0b 	ldhu	r2,-12(fp)
 508040c:	10800054 	ori	r2,r2,1
 5080410:	e0bffd0d 	sth	r2,-12(fp)
 5080414:	00000406 	br	5080428 <AUDIO_MicBoost+0x4c>
    else        
        control &= 0xFFFE;
 5080418:	e0fffd0b 	ldhu	r3,-12(fp)
 508041c:	00bfff84 	movi	r2,-2
 5080420:	1884703a 	and	r2,r3,r2
 5080424:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(4, control);  // Left Line In: set left line in volume
 5080428:	e0bffd0b 	ldhu	r2,-12(fp)
 508042c:	100b883a 	mov	r5,r2
 5080430:	01000104 	movi	r4,4
 5080434:	5080d080 	call	5080d08 <aduio_RegWrite>
 5080438:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;
 508043c:	e0bffe17 	ldw	r2,-8(fp)
}
 5080440:	e037883a 	mov	sp,fp
 5080444:	dfc00117 	ldw	ra,4(sp)
 5080448:	df000017 	ldw	fp,0(sp)
 508044c:	dec00204 	addi	sp,sp,8
 5080450:	f800283a 	ret

05080454 <AUDIO_AdcEnableHighPassFilter>:

bool AUDIO_AdcEnableHighPassFilter(bool bEnable){
 5080454:	defffb04 	addi	sp,sp,-20
 5080458:	dfc00415 	stw	ra,16(sp)
 508045c:	df000315 	stw	fp,12(sp)
 5080460:	df000304 	addi	fp,sp,12
 5080464:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control;
    control = reg_file[5];
 5080468:	008142b4 	movhi	r2,1290
 508046c:	10a5ff04 	addi	r2,r2,-26628
 5080470:	1080028b 	ldhu	r2,10(r2)
 5080474:	e0bffd0d 	sth	r2,-12(fp)
    if (bEnable)
 5080478:	e0bfff17 	ldw	r2,-4(fp)
 508047c:	10000526 	beq	r2,zero,5080494 <AUDIO_AdcEnableHighPassFilter+0x40>
        control &= 0xFFFE;
 5080480:	e0fffd0b 	ldhu	r3,-12(fp)
 5080484:	00bfff84 	movi	r2,-2
 5080488:	1884703a 	and	r2,r3,r2
 508048c:	e0bffd0d 	sth	r2,-12(fp)
 5080490:	00000306 	br	50804a0 <AUDIO_AdcEnableHighPassFilter+0x4c>
    else        
        control |= 0x0001;
 5080494:	e0bffd0b 	ldhu	r2,-12(fp)
 5080498:	10800054 	ori	r2,r2,1
 508049c:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(5, control);  // Left Line In: set left line in volume
 50804a0:	e0bffd0b 	ldhu	r2,-12(fp)
 50804a4:	100b883a 	mov	r5,r2
 50804a8:	01000144 	movi	r4,5
 50804ac:	5080d080 	call	5080d08 <aduio_RegWrite>
 50804b0:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;    
 50804b4:	e0bffe17 	ldw	r2,-8(fp)
}
 50804b8:	e037883a 	mov	sp,fp
 50804bc:	dfc00117 	ldw	ra,4(sp)
 50804c0:	df000017 	ldw	fp,0(sp)
 50804c4:	dec00204 	addi	sp,sp,8
 50804c8:	f800283a 	ret

050804cc <AUDIO_DacDeemphasisControl>:



bool AUDIO_DacDeemphasisControl(alt_u8 deemphasis_type){
 50804cc:	defffb04 	addi	sp,sp,-20
 50804d0:	dfc00415 	stw	ra,16(sp)
 50804d4:	df000315 	stw	fp,12(sp)
 50804d8:	df000304 	addi	fp,sp,12
 50804dc:	2005883a 	mov	r2,r4
 50804e0:	e0bfff05 	stb	r2,-4(fp)
    bool bSuccess;
    alt_u16 control;
    control = reg_file[5];
 50804e4:	008142b4 	movhi	r2,1290
 50804e8:	10a5ff04 	addi	r2,r2,-26628
 50804ec:	1080028b 	ldhu	r2,10(r2)
 50804f0:	e0bffd0d 	sth	r2,-12(fp)
    control &= 0xFFF9;
 50804f4:	e0fffd0b 	ldhu	r3,-12(fp)
 50804f8:	00bffe44 	movi	r2,-7
 50804fc:	1884703a 	and	r2,r3,r2
 5080500:	e0bffd0d 	sth	r2,-12(fp)
    switch(deemphasis_type){
 5080504:	e0bfff03 	ldbu	r2,-4(fp)
 5080508:	10c000a0 	cmpeqi	r3,r2,2
 508050c:	1800081e 	bne	r3,zero,5080530 <AUDIO_DacDeemphasisControl+0x64>
 5080510:	10c000e0 	cmpeqi	r3,r2,3
 5080514:	18000a1e 	bne	r3,zero,5080540 <AUDIO_DacDeemphasisControl+0x74>
 5080518:	10800060 	cmpeqi	r2,r2,1
 508051c:	10000c26 	beq	r2,zero,5080550 <AUDIO_DacDeemphasisControl+0x84>
        case DEEMPHASIS_48K: control |= ((0x03) << 1); break;
 5080520:	e0bffd0b 	ldhu	r2,-12(fp)
 5080524:	10800194 	ori	r2,r2,6
 5080528:	e0bffd0d 	sth	r2,-12(fp)
 508052c:	00000806 	br	5080550 <AUDIO_DacDeemphasisControl+0x84>
        case DEEMPHASIS_44K1: control |= ((0x02) << 1); break;
 5080530:	e0bffd0b 	ldhu	r2,-12(fp)
 5080534:	10800114 	ori	r2,r2,4
 5080538:	e0bffd0d 	sth	r2,-12(fp)
 508053c:	00000406 	br	5080550 <AUDIO_DacDeemphasisControl+0x84>
        case DEEMPHASIS_32K: control |= ((0x01) << 1); break;
 5080540:	e0bffd0b 	ldhu	r2,-12(fp)
 5080544:	10800094 	ori	r2,r2,2
 5080548:	e0bffd0d 	sth	r2,-12(fp)
 508054c:	0001883a 	nop
    }
    bSuccess = aduio_RegWrite(5, control);  // Left Line In: set left line in volume
 5080550:	e0bffd0b 	ldhu	r2,-12(fp)
 5080554:	100b883a 	mov	r5,r2
 5080558:	01000144 	movi	r4,5
 508055c:	5080d080 	call	5080d08 <aduio_RegWrite>
 5080560:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;       
 5080564:	e0bffe17 	ldw	r2,-8(fp)
}
 5080568:	e037883a 	mov	sp,fp
 508056c:	dfc00117 	ldw	ra,4(sp)
 5080570:	df000017 	ldw	fp,0(sp)
 5080574:	dec00204 	addi	sp,sp,8
 5080578:	f800283a 	ret

0508057c <AUDIO_DacEnableZeroCross>:

bool AUDIO_DacEnableZeroCross(bool bEnable){
 508057c:	defffa04 	addi	sp,sp,-24
 5080580:	dfc00515 	stw	ra,20(sp)
 5080584:	df000415 	stw	fp,16(sp)
 5080588:	df000404 	addi	fp,sp,16
 508058c:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control_l, control_r;
    alt_u16 mask;
    control_l = reg_file[2];
 5080590:	008142b4 	movhi	r2,1290
 5080594:	10a5ff04 	addi	r2,r2,-26628
 5080598:	1080010b 	ldhu	r2,4(r2)
 508059c:	e0bffd0d 	sth	r2,-12(fp)
    control_r = reg_file[3];
 50805a0:	008142b4 	movhi	r2,1290
 50805a4:	10a5ff04 	addi	r2,r2,-26628
 50805a8:	1080018b 	ldhu	r2,6(r2)
 50805ac:	e0bffd8d 	sth	r2,-10(fp)
    mask = 0x01 << 7;
 50805b0:	00802004 	movi	r2,128
 50805b4:	e0bffe0d 	sth	r2,-8(fp)
    if (bEnable){
 50805b8:	e0bfff17 	ldw	r2,-4(fp)
 50805bc:	10000926 	beq	r2,zero,50805e4 <AUDIO_DacEnableZeroCross+0x68>
        control_l |= mask;
 50805c0:	e0fffd0b 	ldhu	r3,-12(fp)
 50805c4:	e0bffe0b 	ldhu	r2,-8(fp)
 50805c8:	1884b03a 	or	r2,r3,r2
 50805cc:	e0bffd0d 	sth	r2,-12(fp)
        control_r |= mask;
 50805d0:	e0fffd8b 	ldhu	r3,-10(fp)
 50805d4:	e0bffe0b 	ldhu	r2,-8(fp)
 50805d8:	1884b03a 	or	r2,r3,r2
 50805dc:	e0bffd8d 	sth	r2,-10(fp)
 50805e0:	00000c06 	br	5080614 <AUDIO_DacEnableZeroCross+0x98>
    }else{        
        control_l &= ~mask;
 50805e4:	e0bffe0b 	ldhu	r2,-8(fp)
 50805e8:	0084303a 	nor	r2,zero,r2
 50805ec:	1007883a 	mov	r3,r2
 50805f0:	e0bffd0b 	ldhu	r2,-12(fp)
 50805f4:	1884703a 	and	r2,r3,r2
 50805f8:	e0bffd0d 	sth	r2,-12(fp)
        control_r &= ~mask;
 50805fc:	e0bffe0b 	ldhu	r2,-8(fp)
 5080600:	0084303a 	nor	r2,zero,r2
 5080604:	1007883a 	mov	r3,r2
 5080608:	e0bffd8b 	ldhu	r2,-10(fp)
 508060c:	1884703a 	and	r2,r3,r2
 5080610:	e0bffd8d 	sth	r2,-10(fp)
    }        
    bSuccess = aduio_RegWrite(2, control_l);  // Left Line In: set left line in volume
 5080614:	e0bffd0b 	ldhu	r2,-12(fp)
 5080618:	100b883a 	mov	r5,r2
 508061c:	01000084 	movi	r4,2
 5080620:	5080d080 	call	5080d08 <aduio_RegWrite>
 5080624:	e0bffc15 	stw	r2,-16(fp)
    if (bSuccess)
 5080628:	e0bffc17 	ldw	r2,-16(fp)
 508062c:	10000526 	beq	r2,zero,5080644 <AUDIO_DacEnableZeroCross+0xc8>
        bSuccess = aduio_RegWrite(3, control_r);  // Left Line In: set left line in volume
 5080630:	e0bffd8b 	ldhu	r2,-10(fp)
 5080634:	100b883a 	mov	r5,r2
 5080638:	010000c4 	movi	r4,3
 508063c:	5080d080 	call	5080d08 <aduio_RegWrite>
 5080640:	e0bffc15 	stw	r2,-16(fp)
    return bSuccess;      
 5080644:	e0bffc17 	ldw	r2,-16(fp)
}
 5080648:	e037883a 	mov	sp,fp
 508064c:	dfc00117 	ldw	ra,4(sp)
 5080650:	df000017 	ldw	fp,0(sp)
 5080654:	dec00204 	addi	sp,sp,8
 5080658:	f800283a 	ret

0508065c <AUDIO_DacEnableSoftMute>:

bool AUDIO_DacEnableSoftMute(bool bEnable){
 508065c:	defffb04 	addi	sp,sp,-20
 5080660:	dfc00415 	stw	ra,16(sp)
 5080664:	df000315 	stw	fp,12(sp)
 5080668:	df000304 	addi	fp,sp,12
 508066c:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control;
    alt_u16 mask;
    control = reg_file[5];
 5080670:	008142b4 	movhi	r2,1290
 5080674:	10a5ff04 	addi	r2,r2,-26628
 5080678:	1080028b 	ldhu	r2,10(r2)
 508067c:	e0bffd0d 	sth	r2,-12(fp)
    mask = 0x01 << 3;
 5080680:	00800204 	movi	r2,8
 5080684:	e0bffd8d 	sth	r2,-10(fp)
    if (bEnable)
 5080688:	e0bfff17 	ldw	r2,-4(fp)
 508068c:	10000526 	beq	r2,zero,50806a4 <AUDIO_DacEnableSoftMute+0x48>
        control |= mask;
 5080690:	e0fffd0b 	ldhu	r3,-12(fp)
 5080694:	e0bffd8b 	ldhu	r2,-10(fp)
 5080698:	1884b03a 	or	r2,r3,r2
 508069c:	e0bffd0d 	sth	r2,-12(fp)
 50806a0:	00000606 	br	50806bc <AUDIO_DacEnableSoftMute+0x60>
    else        
        control &= ~mask;
 50806a4:	e0bffd8b 	ldhu	r2,-10(fp)
 50806a8:	0084303a 	nor	r2,zero,r2
 50806ac:	1007883a 	mov	r3,r2
 50806b0:	e0bffd0b 	ldhu	r2,-12(fp)
 50806b4:	1884703a 	and	r2,r3,r2
 50806b8:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(5, control);  // Left Line In: set left line in volume
 50806bc:	e0bffd0b 	ldhu	r2,-12(fp)
 50806c0:	100b883a 	mov	r5,r2
 50806c4:	01000144 	movi	r4,5
 50806c8:	5080d080 	call	5080d08 <aduio_RegWrite>
 50806cc:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;      
 50806d0:	e0bffe17 	ldw	r2,-8(fp)
}
 50806d4:	e037883a 	mov	sp,fp
 50806d8:	dfc00117 	ldw	ra,4(sp)
 50806dc:	df000017 	ldw	fp,0(sp)
 50806e0:	dec00204 	addi	sp,sp,8
 50806e4:	f800283a 	ret

050806e8 <AUDIO_MicMute>:

bool AUDIO_MicMute(bool bMute){
 50806e8:	defffb04 	addi	sp,sp,-20
 50806ec:	dfc00415 	stw	ra,16(sp)
 50806f0:	df000315 	stw	fp,12(sp)
 50806f4:	df000304 	addi	fp,sp,12
 50806f8:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control;
    alt_u16 mask;
    control = reg_file[4];
 50806fc:	008142b4 	movhi	r2,1290
 5080700:	10a5ff04 	addi	r2,r2,-26628
 5080704:	1080020b 	ldhu	r2,8(r2)
 5080708:	e0bffd0d 	sth	r2,-12(fp)
    mask = 0x01 << 1;
 508070c:	00800084 	movi	r2,2
 5080710:	e0bffd8d 	sth	r2,-10(fp)
    if (bMute)
 5080714:	e0bfff17 	ldw	r2,-4(fp)
 5080718:	10000526 	beq	r2,zero,5080730 <AUDIO_MicMute+0x48>
        control |= mask;
 508071c:	e0fffd0b 	ldhu	r3,-12(fp)
 5080720:	e0bffd8b 	ldhu	r2,-10(fp)
 5080724:	1884b03a 	or	r2,r3,r2
 5080728:	e0bffd0d 	sth	r2,-12(fp)
 508072c:	00000606 	br	5080748 <AUDIO_MicMute+0x60>
    else        
        control &= ~mask;
 5080730:	e0bffd8b 	ldhu	r2,-10(fp)
 5080734:	0084303a 	nor	r2,zero,r2
 5080738:	1007883a 	mov	r3,r2
 508073c:	e0bffd0b 	ldhu	r2,-12(fp)
 5080740:	1884703a 	and	r2,r3,r2
 5080744:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(4, control);  // Left Line In: set left line in volume
 5080748:	e0bffd0b 	ldhu	r2,-12(fp)
 508074c:	100b883a 	mov	r5,r2
 5080750:	01000104 	movi	r4,4
 5080754:	5080d080 	call	5080d08 <aduio_RegWrite>
 5080758:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;        
 508075c:	e0bffe17 	ldw	r2,-8(fp)
}
 5080760:	e037883a 	mov	sp,fp
 5080764:	dfc00117 	ldw	ra,4(sp)
 5080768:	df000017 	ldw	fp,0(sp)
 508076c:	dec00204 	addi	sp,sp,8
 5080770:	f800283a 	ret

05080774 <AUDIO_LineInMute>:

bool AUDIO_LineInMute(bool bMute){
 5080774:	defffa04 	addi	sp,sp,-24
 5080778:	dfc00515 	stw	ra,20(sp)
 508077c:	df000415 	stw	fp,16(sp)
 5080780:	df000404 	addi	fp,sp,16
 5080784:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control_l, control_r;
    alt_u16 mask;
    control_l = reg_file[0];
 5080788:	008142b4 	movhi	r2,1290
 508078c:	10a5ff04 	addi	r2,r2,-26628
 5080790:	1080000b 	ldhu	r2,0(r2)
 5080794:	e0bffd0d 	sth	r2,-12(fp)
    control_r = reg_file[1];
 5080798:	008142b4 	movhi	r2,1290
 508079c:	10a5ff04 	addi	r2,r2,-26628
 50807a0:	1080008b 	ldhu	r2,2(r2)
 50807a4:	e0bffd8d 	sth	r2,-10(fp)
    mask = 0x01 << 7;
 50807a8:	00802004 	movi	r2,128
 50807ac:	e0bffe0d 	sth	r2,-8(fp)
    if (bMute){
 50807b0:	e0bfff17 	ldw	r2,-4(fp)
 50807b4:	10000926 	beq	r2,zero,50807dc <AUDIO_LineInMute+0x68>
        control_l |= mask;
 50807b8:	e0fffd0b 	ldhu	r3,-12(fp)
 50807bc:	e0bffe0b 	ldhu	r2,-8(fp)
 50807c0:	1884b03a 	or	r2,r3,r2
 50807c4:	e0bffd0d 	sth	r2,-12(fp)
        control_r |= mask;
 50807c8:	e0fffd8b 	ldhu	r3,-10(fp)
 50807cc:	e0bffe0b 	ldhu	r2,-8(fp)
 50807d0:	1884b03a 	or	r2,r3,r2
 50807d4:	e0bffd8d 	sth	r2,-10(fp)
 50807d8:	00000c06 	br	508080c <AUDIO_LineInMute+0x98>
    }else{        
        control_l &= ~mask;
 50807dc:	e0bffe0b 	ldhu	r2,-8(fp)
 50807e0:	0084303a 	nor	r2,zero,r2
 50807e4:	1007883a 	mov	r3,r2
 50807e8:	e0bffd0b 	ldhu	r2,-12(fp)
 50807ec:	1884703a 	and	r2,r3,r2
 50807f0:	e0bffd0d 	sth	r2,-12(fp)
        control_r &= ~mask;
 50807f4:	e0bffe0b 	ldhu	r2,-8(fp)
 50807f8:	0084303a 	nor	r2,zero,r2
 50807fc:	1007883a 	mov	r3,r2
 5080800:	e0bffd8b 	ldhu	r2,-10(fp)
 5080804:	1884703a 	and	r2,r3,r2
 5080808:	e0bffd8d 	sth	r2,-10(fp)
    }        
    bSuccess = aduio_RegWrite(0, control_l);  // Left Line In: set left line in volume
 508080c:	e0bffd0b 	ldhu	r2,-12(fp)
 5080810:	100b883a 	mov	r5,r2
 5080814:	0009883a 	mov	r4,zero
 5080818:	5080d080 	call	5080d08 <aduio_RegWrite>
 508081c:	e0bffc15 	stw	r2,-16(fp)
    if (bSuccess)
 5080820:	e0bffc17 	ldw	r2,-16(fp)
 5080824:	10000526 	beq	r2,zero,508083c <AUDIO_LineInMute+0xc8>
        bSuccess = aduio_RegWrite(1, control_r);  // Left Line In: set left line in volume
 5080828:	e0bffd8b 	ldhu	r2,-10(fp)
 508082c:	100b883a 	mov	r5,r2
 5080830:	01000044 	movi	r4,1
 5080834:	5080d080 	call	5080d08 <aduio_RegWrite>
 5080838:	e0bffc15 	stw	r2,-16(fp)
    return bSuccess;        
 508083c:	e0bffc17 	ldw	r2,-16(fp)
}
 5080840:	e037883a 	mov	sp,fp
 5080844:	dfc00117 	ldw	ra,4(sp)
 5080848:	df000017 	ldw	fp,0(sp)
 508084c:	dec00204 	addi	sp,sp,8
 5080850:	f800283a 	ret

05080854 <AUDIO_SetInputSource>:



bool AUDIO_SetInputSource(alt_u8 InputSource){
 5080854:	defffb04 	addi	sp,sp,-20
 5080858:	dfc00415 	stw	ra,16(sp)
 508085c:	df000315 	stw	fp,12(sp)
 5080860:	df000304 	addi	fp,sp,12
 5080864:	2005883a 	mov	r2,r4
 5080868:	e0bfff05 	stb	r2,-4(fp)
    bool bSuccess;
    alt_u16 control;
    alt_u16 mask;
    control = reg_file[4];
 508086c:	008142b4 	movhi	r2,1290
 5080870:	10a5ff04 	addi	r2,r2,-26628
 5080874:	1080020b 	ldhu	r2,8(r2)
 5080878:	e0bffd0d 	sth	r2,-12(fp)
    mask = 0x01 << 2;
 508087c:	00800104 	movi	r2,4
 5080880:	e0bffd8d 	sth	r2,-10(fp)
    if (InputSource == SOURCE_MIC)
 5080884:	e0bfff03 	ldbu	r2,-4(fp)
 5080888:	1000051e 	bne	r2,zero,50808a0 <AUDIO_SetInputSource+0x4c>
        control |= mask;
 508088c:	e0fffd0b 	ldhu	r3,-12(fp)
 5080890:	e0bffd8b 	ldhu	r2,-10(fp)
 5080894:	1884b03a 	or	r2,r3,r2
 5080898:	e0bffd0d 	sth	r2,-12(fp)
 508089c:	00000606 	br	50808b8 <AUDIO_SetInputSource+0x64>
    else        
        control &= ~mask;
 50808a0:	e0bffd8b 	ldhu	r2,-10(fp)
 50808a4:	0084303a 	nor	r2,zero,r2
 50808a8:	1007883a 	mov	r3,r2
 50808ac:	e0bffd0b 	ldhu	r2,-12(fp)
 50808b0:	1884703a 	and	r2,r3,r2
 50808b4:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(4, control);  // Left Line In: set left line in volume
 50808b8:	e0bffd0b 	ldhu	r2,-12(fp)
 50808bc:	100b883a 	mov	r5,r2
 50808c0:	01000104 	movi	r4,4
 50808c4:	5080d080 	call	5080d08 <aduio_RegWrite>
 50808c8:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;       
 50808cc:	e0bffe17 	ldw	r2,-8(fp)
}
 50808d0:	e037883a 	mov	sp,fp
 50808d4:	dfc00117 	ldw	ra,4(sp)
 50808d8:	df000017 	ldw	fp,0(sp)
 50808dc:	dec00204 	addi	sp,sp,8
 50808e0:	f800283a 	ret

050808e4 <AUDIO_SetSampleRate>:

// See datasheet page 39
bool AUDIO_SetSampleRate(alt_u8 SampleRate){
 50808e4:	defffb04 	addi	sp,sp,-20
 50808e8:	dfc00415 	stw	ra,16(sp)
 50808ec:	df000315 	stw	fp,12(sp)
 50808f0:	df000304 	addi	fp,sp,12
 50808f4:	2005883a 	mov	r2,r4
 50808f8:	e0bfff05 	stb	r2,-4(fp)
    bool bSuccess;
    alt_u16 control;
    control = 0;
 50808fc:	e03ffd0d 	sth	zero,-12(fp)

    switch(SampleRate){
 5080900:	e0bfff03 	ldbu	r2,-4(fp)
 5080904:	10c001e8 	cmpgeui	r3,r2,7
 5080908:	1800211e 	bne	r3,zero,5080990 <AUDIO_SetSampleRate+0xac>
 508090c:	100690ba 	slli	r3,r2,2
 5080910:	00814234 	movhi	r2,1288
 5080914:	10824904 	addi	r2,r2,2340
 5080918:	1885883a 	add	r2,r3,r2
 508091c:	10800017 	ldw	r2,0(r2)
 5080920:	1000683a 	jmp	r2
 5080924:	05080940 	call	508094 <__alt_mem_sdram+0x508094>
 5080928:	05080948 	cmpgei	r20,zero,8229
 508092c:	05080954 	movui	r20,8229
 5080930:	05080960 	cmpeqi	r20,zero,8229
 5080934:	0508096c 	andhi	r20,zero,8229
 5080938:	05080978 	rdprs	r20,zero,8229
 508093c:	05080984 	movi	r20,8230
         // MCLK = 18.432
        case RATE_ADC48K_DAC48K: control = (0x0) << 2; break;
 5080940:	e03ffd0d 	sth	zero,-12(fp)
 5080944:	00001206 	br	5080990 <AUDIO_SetSampleRate+0xac>
        case RATE_ADC48K_DAC8K: control = (0x1) << 2; break;
 5080948:	00800104 	movi	r2,4
 508094c:	e0bffd0d 	sth	r2,-12(fp)
 5080950:	00000f06 	br	5080990 <AUDIO_SetSampleRate+0xac>
        case RATE_ADC8K_DAC48K: control = (0x2) << 2; break;
 5080954:	00800204 	movi	r2,8
 5080958:	e0bffd0d 	sth	r2,-12(fp)
 508095c:	00000c06 	br	5080990 <AUDIO_SetSampleRate+0xac>
        case RATE_ADC8K_DAC8K: control = (0x3) << 2; break;
 5080960:	00800304 	movi	r2,12
 5080964:	e0bffd0d 	sth	r2,-12(fp)
 5080968:	00000906 	br	5080990 <AUDIO_SetSampleRate+0xac>
        case RATE_ADC32K_DAC32K: control = (0x6) << 2; break;
 508096c:	00800604 	movi	r2,24
 5080970:	e0bffd0d 	sth	r2,-12(fp)
 5080974:	00000606 	br	5080990 <AUDIO_SetSampleRate+0xac>
        case RATE_ADC96K_DAC96K: control = (0x7) << 2; break;
 5080978:	00800704 	movi	r2,28
 508097c:	e0bffd0d 	sth	r2,-12(fp)
 5080980:	00000306 	br	5080990 <AUDIO_SetSampleRate+0xac>
        case RATE_ADC44K1_DAC44K1: control = (0x8) << 2; break;
 5080984:	00800804 	movi	r2,32
 5080988:	e0bffd0d 	sth	r2,-12(fp)
 508098c:	0001883a 	nop
        // MCLK = 11.2896
      //  case RATE_ADC44K1_DAC8K: control = (0x9) << 2; break;
      //  case RATE_ADC8K_DAC44K1: control = (0xA) << 2; break;
    }
    control |= 0x02; // BOSR=1 (384fs = 384*48k = 18.432M)
 5080990:	e0bffd0b 	ldhu	r2,-12(fp)
 5080994:	10800094 	ori	r2,r2,2
 5080998:	e0bffd0d 	sth	r2,-12(fp)
        
    bSuccess = aduio_RegWrite(8, control);  // Left Line In: set left line in volume
 508099c:	e0bffd0b 	ldhu	r2,-12(fp)
 50809a0:	100b883a 	mov	r5,r2
 50809a4:	01000204 	movi	r4,8
 50809a8:	5080d080 	call	5080d08 <aduio_RegWrite>
 50809ac:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;      
 50809b0:	e0bffe17 	ldw	r2,-8(fp)
}
 50809b4:	e037883a 	mov	sp,fp
 50809b8:	dfc00117 	ldw	ra,4(sp)
 50809bc:	df000017 	ldw	fp,0(sp)
 50809c0:	dec00204 	addi	sp,sp,8
 50809c4:	f800283a 	ret

050809c8 <AUDIO_SetLineInVol>:





bool AUDIO_SetLineInVol(alt_u16 l_vol, alt_u16 r_vol){
 50809c8:	defffa04 	addi	sp,sp,-24
 50809cc:	dfc00515 	stw	ra,20(sp)
 50809d0:	df000415 	stw	fp,16(sp)
 50809d4:	df000404 	addi	fp,sp,16
 50809d8:	2007883a 	mov	r3,r4
 50809dc:	2805883a 	mov	r2,r5
 50809e0:	e0fffe0d 	sth	r3,-8(fp)
 50809e4:	e0bfff0d 	sth	r2,-4(fp)
    bool bSuccess;
    alt_u16 control;
    
    // left
    control = reg_file[0];
 50809e8:	008142b4 	movhi	r2,1290
 50809ec:	10a5ff04 	addi	r2,r2,-26628
 50809f0:	1080000b 	ldhu	r2,0(r2)
 50809f4:	e0bffd0d 	sth	r2,-12(fp)
    control &= 0xFFE0;
 50809f8:	e0fffd0b 	ldhu	r3,-12(fp)
 50809fc:	00bff804 	movi	r2,-32
 5080a00:	1884703a 	and	r2,r3,r2
 5080a04:	e0bffd0d 	sth	r2,-12(fp)
    control += l_vol & 0x1F;
 5080a08:	e0bffe0b 	ldhu	r2,-8(fp)
 5080a0c:	108007cc 	andi	r2,r2,31
 5080a10:	1007883a 	mov	r3,r2
 5080a14:	e0bffd0b 	ldhu	r2,-12(fp)
 5080a18:	1885883a 	add	r2,r3,r2
 5080a1c:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(0, control);
 5080a20:	e0bffd0b 	ldhu	r2,-12(fp)
 5080a24:	100b883a 	mov	r5,r2
 5080a28:	0009883a 	mov	r4,zero
 5080a2c:	5080d080 	call	5080d08 <aduio_RegWrite>
 5080a30:	e0bffc15 	stw	r2,-16(fp)
    
    if (bSuccess){
 5080a34:	e0bffc17 	ldw	r2,-16(fp)
 5080a38:	10001326 	beq	r2,zero,5080a88 <AUDIO_SetLineInVol+0xc0>
        // right
        control = reg_file[1];
 5080a3c:	008142b4 	movhi	r2,1290
 5080a40:	10a5ff04 	addi	r2,r2,-26628
 5080a44:	1080008b 	ldhu	r2,2(r2)
 5080a48:	e0bffd0d 	sth	r2,-12(fp)
        control &= 0xFFE0;
 5080a4c:	e0fffd0b 	ldhu	r3,-12(fp)
 5080a50:	00bff804 	movi	r2,-32
 5080a54:	1884703a 	and	r2,r3,r2
 5080a58:	e0bffd0d 	sth	r2,-12(fp)
        control += r_vol & 0x1F;
 5080a5c:	e0bfff0b 	ldhu	r2,-4(fp)
 5080a60:	108007cc 	andi	r2,r2,31
 5080a64:	1007883a 	mov	r3,r2
 5080a68:	e0bffd0b 	ldhu	r2,-12(fp)
 5080a6c:	1885883a 	add	r2,r3,r2
 5080a70:	e0bffd0d 	sth	r2,-12(fp)
        bSuccess = aduio_RegWrite(1, control);        
 5080a74:	e0bffd0b 	ldhu	r2,-12(fp)
 5080a78:	100b883a 	mov	r5,r2
 5080a7c:	01000044 	movi	r4,1
 5080a80:	5080d080 	call	5080d08 <aduio_RegWrite>
 5080a84:	e0bffc15 	stw	r2,-16(fp)
    }
    
    AUDIO_DEBUG(("[AUDIO] set Line-In vol(%d,%d) %s\r\n", l_vol, r_vol, bSuccess?"success":"fail"));        
 5080a88:	e0fffe0b 	ldhu	r3,-8(fp)
 5080a8c:	e13fff0b 	ldhu	r4,-4(fp)
 5080a90:	e0bffc17 	ldw	r2,-16(fp)
 5080a94:	10000326 	beq	r2,zero,5080aa4 <AUDIO_SetLineInVol+0xdc>
 5080a98:	00814274 	movhi	r2,1289
 5080a9c:	10950004 	addi	r2,r2,21504
 5080aa0:	00000206 	br	5080aac <AUDIO_SetLineInVol+0xe4>
 5080aa4:	00814274 	movhi	r2,1289
 5080aa8:	10950204 	addi	r2,r2,21512
 5080aac:	100f883a 	mov	r7,r2
 5080ab0:	200d883a 	mov	r6,r4
 5080ab4:	180b883a 	mov	r5,r3
 5080ab8:	01014274 	movhi	r4,1289
 5080abc:	21150a04 	addi	r4,r4,21544
 5080ac0:	5081aa80 	call	5081aa8 <myprintf>
    return bSuccess;
 5080ac4:	e0bffc17 	ldw	r2,-16(fp)
}
 5080ac8:	e037883a 	mov	sp,fp
 5080acc:	dfc00117 	ldw	ra,4(sp)
 5080ad0:	df000017 	ldw	fp,0(sp)
 5080ad4:	dec00204 	addi	sp,sp,8
 5080ad8:	f800283a 	ret

05080adc <AUDIO_SetLineOutVol>:

bool AUDIO_SetLineOutVol(alt_u16 l_vol, alt_u16 r_vol){
 5080adc:	defffa04 	addi	sp,sp,-24
 5080ae0:	dfc00515 	stw	ra,20(sp)
 5080ae4:	df000415 	stw	fp,16(sp)
 5080ae8:	df000404 	addi	fp,sp,16
 5080aec:	2007883a 	mov	r3,r4
 5080af0:	2805883a 	mov	r2,r5
 5080af4:	e0fffe0d 	sth	r3,-8(fp)
 5080af8:	e0bfff0d 	sth	r2,-4(fp)
    bool bSuccess;
    alt_u16 control;

 
    // left
    control = reg_file[2];
 5080afc:	008142b4 	movhi	r2,1290
 5080b00:	10a5ff04 	addi	r2,r2,-26628
 5080b04:	1080010b 	ldhu	r2,4(r2)
 5080b08:	e0bffd0d 	sth	r2,-12(fp)
    control &= 0xFF80;
 5080b0c:	e0fffd0b 	ldhu	r3,-12(fp)
 5080b10:	00bfe004 	movi	r2,-128
 5080b14:	1884703a 	and	r2,r3,r2
 5080b18:	e0bffd0d 	sth	r2,-12(fp)
    control += l_vol & 0x7F;
 5080b1c:	e0bffe0b 	ldhu	r2,-8(fp)
 5080b20:	10801fcc 	andi	r2,r2,127
 5080b24:	1007883a 	mov	r3,r2
 5080b28:	e0bffd0b 	ldhu	r2,-12(fp)
 5080b2c:	1885883a 	add	r2,r3,r2
 5080b30:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(2, control);
 5080b34:	e0bffd0b 	ldhu	r2,-12(fp)
 5080b38:	100b883a 	mov	r5,r2
 5080b3c:	01000084 	movi	r4,2
 5080b40:	5080d080 	call	5080d08 <aduio_RegWrite>
 5080b44:	e0bffc15 	stw	r2,-16(fp)
    
    if (bSuccess){
 5080b48:	e0bffc17 	ldw	r2,-16(fp)
 5080b4c:	10001326 	beq	r2,zero,5080b9c <AUDIO_SetLineOutVol+0xc0>
        // right
        control = reg_file[3];
 5080b50:	008142b4 	movhi	r2,1290
 5080b54:	10a5ff04 	addi	r2,r2,-26628
 5080b58:	1080018b 	ldhu	r2,6(r2)
 5080b5c:	e0bffd0d 	sth	r2,-12(fp)
        control &= 0xFF80;
 5080b60:	e0fffd0b 	ldhu	r3,-12(fp)
 5080b64:	00bfe004 	movi	r2,-128
 5080b68:	1884703a 	and	r2,r3,r2
 5080b6c:	e0bffd0d 	sth	r2,-12(fp)
        control += r_vol & 0x7F;
 5080b70:	e0bfff0b 	ldhu	r2,-4(fp)
 5080b74:	10801fcc 	andi	r2,r2,127
 5080b78:	1007883a 	mov	r3,r2
 5080b7c:	e0bffd0b 	ldhu	r2,-12(fp)
 5080b80:	1885883a 	add	r2,r3,r2
 5080b84:	e0bffd0d 	sth	r2,-12(fp)
        bSuccess = aduio_RegWrite(3, control);        
 5080b88:	e0bffd0b 	ldhu	r2,-12(fp)
 5080b8c:	100b883a 	mov	r5,r2
 5080b90:	010000c4 	movi	r4,3
 5080b94:	5080d080 	call	5080d08 <aduio_RegWrite>
 5080b98:	e0bffc15 	stw	r2,-16(fp)
    }    
    
    AUDIO_DEBUG(("[AUDIO] set Line-Out vol(%d,%d) %s\r\n", l_vol, r_vol, bSuccess?"success":"fail"));
 5080b9c:	e0fffe0b 	ldhu	r3,-8(fp)
 5080ba0:	e13fff0b 	ldhu	r4,-4(fp)
 5080ba4:	e0bffc17 	ldw	r2,-16(fp)
 5080ba8:	10000326 	beq	r2,zero,5080bb8 <AUDIO_SetLineOutVol+0xdc>
 5080bac:	00814274 	movhi	r2,1289
 5080bb0:	10950004 	addi	r2,r2,21504
 5080bb4:	00000206 	br	5080bc0 <AUDIO_SetLineOutVol+0xe4>
 5080bb8:	00814274 	movhi	r2,1289
 5080bbc:	10950204 	addi	r2,r2,21512
 5080bc0:	100f883a 	mov	r7,r2
 5080bc4:	200d883a 	mov	r6,r4
 5080bc8:	180b883a 	mov	r5,r3
 5080bcc:	01014274 	movhi	r4,1289
 5080bd0:	21151304 	addi	r4,r4,21580
 5080bd4:	5081aa80 	call	5081aa8 <myprintf>
    
    return bSuccess;
 5080bd8:	e0bffc17 	ldw	r2,-16(fp)
}
 5080bdc:	e037883a 	mov	sp,fp
 5080be0:	dfc00117 	ldw	ra,4(sp)
 5080be4:	df000017 	ldw	fp,0(sp)
 5080be8:	dec00204 	addi	sp,sp,8
 5080bec:	f800283a 	ret

05080bf0 <AUDIO_EnableByPass>:


bool AUDIO_EnableByPass(bool bEnable){
 5080bf0:	defffb04 	addi	sp,sp,-20
 5080bf4:	dfc00415 	stw	ra,16(sp)
 5080bf8:	df000315 	stw	fp,12(sp)
 5080bfc:	df000304 	addi	fp,sp,12
 5080c00:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control;
    alt_u16 mask;
    control = reg_file[4];
 5080c04:	008142b4 	movhi	r2,1290
 5080c08:	10a5ff04 	addi	r2,r2,-26628
 5080c0c:	1080020b 	ldhu	r2,8(r2)
 5080c10:	e0bffd0d 	sth	r2,-12(fp)
    mask = 0x01 << 3;
 5080c14:	00800204 	movi	r2,8
 5080c18:	e0bffd8d 	sth	r2,-10(fp)
    if (bEnable)
 5080c1c:	e0bfff17 	ldw	r2,-4(fp)
 5080c20:	10000526 	beq	r2,zero,5080c38 <AUDIO_EnableByPass+0x48>
        control |= mask;
 5080c24:	e0fffd0b 	ldhu	r3,-12(fp)
 5080c28:	e0bffd8b 	ldhu	r2,-10(fp)
 5080c2c:	1884b03a 	or	r2,r3,r2
 5080c30:	e0bffd0d 	sth	r2,-12(fp)
 5080c34:	00000606 	br	5080c50 <AUDIO_EnableByPass+0x60>
    else        
        control &= ~mask;
 5080c38:	e0bffd8b 	ldhu	r2,-10(fp)
 5080c3c:	0084303a 	nor	r2,zero,r2
 5080c40:	1007883a 	mov	r3,r2
 5080c44:	e0bffd0b 	ldhu	r2,-12(fp)
 5080c48:	1884703a 	and	r2,r3,r2
 5080c4c:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(4, control); 
 5080c50:	e0bffd0b 	ldhu	r2,-12(fp)
 5080c54:	100b883a 	mov	r5,r2
 5080c58:	01000104 	movi	r4,4
 5080c5c:	5080d080 	call	5080d08 <aduio_RegWrite>
 5080c60:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;  	
 5080c64:	e0bffe17 	ldw	r2,-8(fp)
}
 5080c68:	e037883a 	mov	sp,fp
 5080c6c:	dfc00117 	ldw	ra,4(sp)
 5080c70:	df000017 	ldw	fp,0(sp)
 5080c74:	dec00204 	addi	sp,sp,8
 5080c78:	f800283a 	ret

05080c7c <AUDIO_EnableSiteTone>:

bool AUDIO_EnableSiteTone(bool bEnable){
 5080c7c:	defffb04 	addi	sp,sp,-20
 5080c80:	dfc00415 	stw	ra,16(sp)
 5080c84:	df000315 	stw	fp,12(sp)
 5080c88:	df000304 	addi	fp,sp,12
 5080c8c:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control;
    alt_u16 mask;
    control = reg_file[4];
 5080c90:	008142b4 	movhi	r2,1290
 5080c94:	10a5ff04 	addi	r2,r2,-26628
 5080c98:	1080020b 	ldhu	r2,8(r2)
 5080c9c:	e0bffd0d 	sth	r2,-12(fp)
    mask = 0x01 << 5;
 5080ca0:	00800804 	movi	r2,32
 5080ca4:	e0bffd8d 	sth	r2,-10(fp)
    if (bEnable)
 5080ca8:	e0bfff17 	ldw	r2,-4(fp)
 5080cac:	10000526 	beq	r2,zero,5080cc4 <AUDIO_EnableSiteTone+0x48>
        control |= mask;
 5080cb0:	e0fffd0b 	ldhu	r3,-12(fp)
 5080cb4:	e0bffd8b 	ldhu	r2,-10(fp)
 5080cb8:	1884b03a 	or	r2,r3,r2
 5080cbc:	e0bffd0d 	sth	r2,-12(fp)
 5080cc0:	00000606 	br	5080cdc <AUDIO_EnableSiteTone+0x60>
    else        
        control &= ~mask;
 5080cc4:	e0bffd8b 	ldhu	r2,-10(fp)
 5080cc8:	0084303a 	nor	r2,zero,r2
 5080ccc:	1007883a 	mov	r3,r2
 5080cd0:	e0bffd0b 	ldhu	r2,-12(fp)
 5080cd4:	1884703a 	and	r2,r3,r2
 5080cd8:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(4, control); 
 5080cdc:	e0bffd0b 	ldhu	r2,-12(fp)
 5080ce0:	100b883a 	mov	r5,r2
 5080ce4:	01000104 	movi	r4,4
 5080ce8:	5080d080 	call	5080d08 <aduio_RegWrite>
 5080cec:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;        
 5080cf0:	e0bffe17 	ldw	r2,-8(fp)
}
 5080cf4:	e037883a 	mov	sp,fp
 5080cf8:	dfc00117 	ldw	ra,4(sp)
 5080cfc:	df000017 	ldw	fp,0(sp)
 5080d00:	dec00204 	addi	sp,sp,8
 5080d04:	f800283a 	ret

05080d08 <aduio_RegWrite>:

/////////////////////////////////////////////////////////////////////////
///////////// Interla function body ////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

bool aduio_RegWrite(alt_u8 reg_index, alt_u16 data16){
 5080d08:	defff904 	addi	sp,sp,-28
 5080d0c:	dfc00615 	stw	ra,24(sp)
 5080d10:	df000515 	stw	fp,20(sp)
 5080d14:	df000504 	addi	fp,sp,20
 5080d18:	2007883a 	mov	r3,r4
 5080d1c:	2805883a 	mov	r2,r5
 5080d20:	e0fffe05 	stb	r3,-8(fp)
 5080d24:	e0bfff0d 	sth	r2,-4(fp)
    bool bSuccess;
    alt_u8 data, control;
    if (reg_index <= 10)
 5080d28:	e0bffe03 	ldbu	r2,-8(fp)
 5080d2c:	108002e8 	cmpgeui	r2,r2,11
 5080d30:	1000071e 	bne	r2,zero,5080d50 <aduio_RegWrite+0x48>
        reg_file[reg_index] = data16;
 5080d34:	e0fffe03 	ldbu	r3,-8(fp)
 5080d38:	008142b4 	movhi	r2,1290
 5080d3c:	10a5ff04 	addi	r2,r2,-26628
 5080d40:	18c7883a 	add	r3,r3,r3
 5080d44:	10c5883a 	add	r2,r2,r3
 5080d48:	e0ffff0b 	ldhu	r3,-4(fp)
 5080d4c:	10c0000d 	sth	r3,0(r2)
    data = data16 & 0xFF;
 5080d50:	e0bfff0b 	ldhu	r2,-4(fp)
 5080d54:	e0bffc05 	stb	r2,-16(fp)
    control = (reg_index << 1) & 0xFE;
 5080d58:	e0bffe03 	ldbu	r2,-8(fp)
 5080d5c:	1085883a 	add	r2,r2,r2
 5080d60:	e0bffc45 	stb	r2,-15(fp)
    control |= ((data16 >> 8) & 0x01);
 5080d64:	e0bfff0b 	ldhu	r2,-4(fp)
 5080d68:	1004d23a 	srli	r2,r2,8
 5080d6c:	1080004c 	andi	r2,r2,1
 5080d70:	1007883a 	mov	r3,r2
 5080d74:	e0bffc43 	ldbu	r2,-15(fp)
 5080d78:	1884b03a 	or	r2,r3,r2
 5080d7c:	e0bffc45 	stb	r2,-15(fp)
    AUDIO_DEBUG(("[AUDIO] set audio reg[%02d] = %04Xh\r\n", reg_index, data16));
 5080d80:	e0bffe03 	ldbu	r2,-8(fp)
 5080d84:	e0ffff0b 	ldhu	r3,-4(fp)
 5080d88:	180d883a 	mov	r6,r3
 5080d8c:	100b883a 	mov	r5,r2
 5080d90:	01014274 	movhi	r4,1289
 5080d94:	21151d04 	addi	r4,r4,21620
 5080d98:	5081aa80 	call	5081aa8 <myprintf>
    bSuccess = I2C_Write(I2C_SCL_BASE, I2C_SDA_BASE, I2C_AUDIO_ADDR, control, data);
 5080d9c:	e0fffc43 	ldbu	r3,-15(fp)
 5080da0:	e0bffc03 	ldbu	r2,-16(fp)
 5080da4:	d8800015 	stw	r2,0(sp)
 5080da8:	180f883a 	mov	r7,r3
 5080dac:	01800d04 	movi	r6,52
 5080db0:	01410034 	movhi	r5,1024
 5080db4:	29400804 	addi	r5,r5,32
 5080db8:	01010034 	movhi	r4,1024
 5080dbc:	21000c04 	addi	r4,r4,48
 5080dc0:	5080f4c0 	call	5080f4c <I2C_Write>
 5080dc4:	e0bffd15 	stw	r2,-12(fp)
    if (!bSuccess) 
 5080dc8:	e0bffd17 	ldw	r2,-12(fp)
 5080dcc:	1000031e 	bne	r2,zero,5080ddc <aduio_RegWrite+0xd4>
        AUDIO_DEBUG(("[AUDIO] write reg fail!!!!\r\n"));
 5080dd0:	01014274 	movhi	r4,1289
 5080dd4:	21152704 	addi	r4,r4,21660
 5080dd8:	5081aa80 	call	5081aa8 <myprintf>
    usleep(50*1000);  // wait audio chip read        
 5080ddc:	0130d414 	movui	r4,50000
 5080de0:	50932900 	call	5093290 <usleep>
    return bSuccess;        
 5080de4:	e0bffd17 	ldw	r2,-12(fp)
}
 5080de8:	e037883a 	mov	sp,fp
 5080dec:	dfc00117 	ldw	ra,4(sp)
 5080df0:	df000017 	ldw	fp,0(sp)
 5080df4:	dec00204 	addi	sp,sp,8
 5080df8:	f800283a 	ret

05080dfc <AUDIO_DacFifoNotFull>:

/////////////////////////////////////////////////////////////////////////
///////////// Audio Play & Recor ////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
// check whether the dac-fifo is full.
bool AUDIO_DacFifoNotFull(void){
 5080dfc:	defffe04 	addi	sp,sp,-8
 5080e00:	df000115 	stw	fp,4(sp)
 5080e04:	df000104 	addi	fp,sp,4
    bool bReady;
    bReady = AUDIO_DAC_FULL()?FALSE:TRUE;
 5080e08:	00814434 	movhi	r2,1296
 5080e0c:	10840504 	addi	r2,r2,4116
 5080e10:	10800037 	ldwio	r2,0(r2)
 5080e14:	1080004c 	andi	r2,r2,1
 5080e18:	1005003a 	cmpeq	r2,r2,zero
 5080e1c:	10803fcc 	andi	r2,r2,255
 5080e20:	e0bfff15 	stw	r2,-4(fp)
    return bReady;
 5080e24:	e0bfff17 	ldw	r2,-4(fp)
}
 5080e28:	e037883a 	mov	sp,fp
 5080e2c:	df000017 	ldw	fp,0(sp)
 5080e30:	dec00104 	addi	sp,sp,4
 5080e34:	f800283a 	ret

05080e38 <AUDIO_DacFifoSetData>:

// call AUDIO_PlayIsReady to make sure the fifo is not full before call this function 
void AUDIO_DacFifoSetData(short ch_left, short ch_right){
 5080e38:	defffd04 	addi	sp,sp,-12
 5080e3c:	df000215 	stw	fp,8(sp)
 5080e40:	df000204 	addi	fp,sp,8
 5080e44:	2007883a 	mov	r3,r4
 5080e48:	2805883a 	mov	r2,r5
 5080e4c:	e0fffe0d 	sth	r3,-8(fp)
 5080e50:	e0bfff0d 	sth	r2,-4(fp)
    AUDIO_DAC_WRITE_L(ch_left);
 5080e54:	e0fffe0f 	ldh	r3,-8(fp)
 5080e58:	00814434 	movhi	r2,1296
 5080e5c:	10840004 	addi	r2,r2,4096
 5080e60:	10c00035 	stwio	r3,0(r2)
    AUDIO_DAC_WRITE_R(ch_right);
 5080e64:	e0ffff0f 	ldh	r3,-4(fp)
 5080e68:	00814434 	movhi	r2,1296
 5080e6c:	10840104 	addi	r2,r2,4100
 5080e70:	10c00035 	stwio	r3,0(r2)
}
 5080e74:	0001883a 	nop
 5080e78:	e037883a 	mov	sp,fp
 5080e7c:	df000017 	ldw	fp,0(sp)
 5080e80:	dec00104 	addi	sp,sp,4
 5080e84:	f800283a 	ret

05080e88 <AUDIO_AdcFifoNotEmpty>:

// wheck whether there is data available in adc-fifo
bool AUDIO_AdcFifoNotEmpty(void){
 5080e88:	defffe04 	addi	sp,sp,-8
 5080e8c:	df000115 	stw	fp,4(sp)
 5080e90:	df000104 	addi	fp,sp,4
    bool bReady;
    bReady = AUDIO_ADC_EMPTY()?FALSE:TRUE;
 5080e94:	00814434 	movhi	r2,1296
 5080e98:	10840504 	addi	r2,r2,4116
 5080e9c:	10800037 	ldwio	r2,0(r2)
 5080ea0:	1080008c 	andi	r2,r2,2
 5080ea4:	1005003a 	cmpeq	r2,r2,zero
 5080ea8:	10803fcc 	andi	r2,r2,255
 5080eac:	e0bfff15 	stw	r2,-4(fp)
    return bReady;
 5080eb0:	e0bfff17 	ldw	r2,-4(fp)
}
 5080eb4:	e037883a 	mov	sp,fp
 5080eb8:	df000017 	ldw	fp,0(sp)
 5080ebc:	dec00104 	addi	sp,sp,4
 5080ec0:	f800283a 	ret

05080ec4 <AUDIO_AdcFifoGetData>:


// make sure the data is available before call this fucntion
void AUDIO_AdcFifoGetData(short *pch_left, short *pch_right){
 5080ec4:	defffd04 	addi	sp,sp,-12
 5080ec8:	df000215 	stw	fp,8(sp)
 5080ecc:	df000204 	addi	fp,sp,8
 5080ed0:	e13ffe15 	stw	r4,-8(fp)
 5080ed4:	e17fff15 	stw	r5,-4(fp)
    *pch_left = AUDIO_ADC_READ_L();
 5080ed8:	00814434 	movhi	r2,1296
 5080edc:	10840204 	addi	r2,r2,4104
 5080ee0:	10800037 	ldwio	r2,0(r2)
 5080ee4:	1007883a 	mov	r3,r2
 5080ee8:	e0bffe17 	ldw	r2,-8(fp)
 5080eec:	10c0000d 	sth	r3,0(r2)
    *pch_right = AUDIO_ADC_READ_R();
 5080ef0:	00814434 	movhi	r2,1296
 5080ef4:	10840304 	addi	r2,r2,4108
 5080ef8:	10800037 	ldwio	r2,0(r2)
 5080efc:	1007883a 	mov	r3,r2
 5080f00:	e0bfff17 	ldw	r2,-4(fp)
 5080f04:	10c0000d 	sth	r3,0(r2)
    
}
 5080f08:	0001883a 	nop
 5080f0c:	e037883a 	mov	sp,fp
 5080f10:	df000017 	ldw	fp,0(sp)
 5080f14:	dec00104 	addi	sp,sp,4
 5080f18:	f800283a 	ret

05080f1c <AUDIO_FifoClear>:

void AUDIO_FifoClear(void){
 5080f1c:	deffff04 	addi	sp,sp,-4
 5080f20:	df000015 	stw	fp,0(sp)
 5080f24:	d839883a 	mov	fp,sp
    AUDIO_FIFO_CLEAR();
 5080f28:	00c00044 	movi	r3,1
 5080f2c:	00814434 	movhi	r2,1296
 5080f30:	10840404 	addi	r2,r2,4112
 5080f34:	10c00035 	stwio	r3,0(r2)
}
 5080f38:	0001883a 	nop
 5080f3c:	e037883a 	mov	sp,fp
 5080f40:	df000017 	ldw	fp,0(sp)
 5080f44:	dec00104 	addi	sp,sp,4
 5080f48:	f800283a 	ret

05080f4c <I2C_Write>:
bool i2c_write(alt_u32 clk_base, alt_u32 data_base, alt_u8 Data);
void i2c_read(alt_u32 clk_base, alt_u32 data_base, alt_u8 *pData, bool bAck);



bool I2C_Write(alt_u32 clk_base, alt_u32 data_base, alt_8 DeviceAddr, alt_u8 ControlAddr, alt_u8 ControlData){
 5080f4c:	defff804 	addi	sp,sp,-32
 5080f50:	dfc00715 	stw	ra,28(sp)
 5080f54:	df000615 	stw	fp,24(sp)
 5080f58:	df000604 	addi	fp,sp,24
 5080f5c:	e13ffb15 	stw	r4,-20(fp)
 5080f60:	e17ffc15 	stw	r5,-16(fp)
 5080f64:	3009883a 	mov	r4,r6
 5080f68:	3807883a 	mov	r3,r7
 5080f6c:	e0800217 	ldw	r2,8(fp)
 5080f70:	e13ffd05 	stb	r4,-12(fp)
 5080f74:	e0fffe05 	stb	r3,-8(fp)
 5080f78:	e0bfff05 	stb	r2,-4(fp)
    bool bSuccess = TRUE;
 5080f7c:	00800044 	movi	r2,1
 5080f80:	e0bffa15 	stw	r2,-24(fp)
    //alt_u8 DeviceAddr;
    
    // device id
    //DeviceAddr = HMB_E2_I2C_ID;

    i2c_start(clk_base, data_base);
 5080f84:	e17ffc17 	ldw	r5,-16(fp)
 5080f88:	e13ffb17 	ldw	r4,-20(fp)
 5080f8c:	50812e80 	call	50812e8 <i2c_start>
    if (!i2c_write(clk_base, data_base, DeviceAddr)){  // send ID
 5080f90:	e0bffd03 	ldbu	r2,-12(fp)
 5080f94:	10803fcc 	andi	r2,r2,255
 5080f98:	100d883a 	mov	r6,r2
 5080f9c:	e17ffc17 	ldw	r5,-16(fp)
 5080fa0:	e13ffb17 	ldw	r4,-20(fp)
 5080fa4:	50813ec0 	call	50813ec <i2c_write>
 5080fa8:	1000041e 	bne	r2,zero,5080fbc <I2C_Write+0x70>
        bSuccess = FALSE;
 5080fac:	e03ffa15 	stw	zero,-24(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address NACK!\n"));
 5080fb0:	01014274 	movhi	r4,1289
 5080fb4:	21152f04 	addi	r4,r4,21692
 5080fb8:	5081aa80 	call	5081aa8 <myprintf>
    }
    if (bSuccess && !i2c_write(clk_base, data_base, ControlAddr)){ // send sub-address
 5080fbc:	e0bffa17 	ldw	r2,-24(fp)
 5080fc0:	10000a26 	beq	r2,zero,5080fec <I2C_Write+0xa0>
 5080fc4:	e0bffe03 	ldbu	r2,-8(fp)
 5080fc8:	100d883a 	mov	r6,r2
 5080fcc:	e17ffc17 	ldw	r5,-16(fp)
 5080fd0:	e13ffb17 	ldw	r4,-20(fp)
 5080fd4:	50813ec0 	call	50813ec <i2c_write>
 5080fd8:	1000041e 	bne	r2,zero,5080fec <I2C_Write+0xa0>
        bSuccess = FALSE;
 5080fdc:	e03ffa15 	stw	zero,-24(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress NACK!\n"));
 5080fe0:	01014274 	movhi	r4,1289
 5080fe4:	21153704 	addi	r4,r4,21724
 5080fe8:	5081aa80 	call	5081aa8 <myprintf>
    }            
    if (bSuccess && !i2c_write(clk_base, data_base, ControlData)){  
 5080fec:	e0bffa17 	ldw	r2,-24(fp)
 5080ff0:	10000a26 	beq	r2,zero,508101c <I2C_Write+0xd0>
 5080ff4:	e0bfff03 	ldbu	r2,-4(fp)
 5080ff8:	100d883a 	mov	r6,r2
 5080ffc:	e17ffc17 	ldw	r5,-16(fp)
 5081000:	e13ffb17 	ldw	r4,-20(fp)
 5081004:	50813ec0 	call	50813ec <i2c_write>
 5081008:	1000041e 	bne	r2,zero,508101c <I2C_Write+0xd0>
        bSuccess = FALSE;
 508100c:	e03ffa15 	stw	zero,-24(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: write NACK!\n"));
 5081010:	01014274 	movhi	r4,1289
 5081014:	21154004 	addi	r4,r4,21760
 5081018:	5081aa80 	call	5081aa8 <myprintf>
    }
    i2c_stop(clk_base, data_base);
 508101c:	e17ffc17 	ldw	r5,-16(fp)
 5081020:	e13ffb17 	ldw	r4,-20(fp)
 5081024:	50813740 	call	5081374 <i2c_stop>
    
    usleep(7*1000); // delay to wait EE2 ready (at least 5 ms delay is required)
 5081028:	0106d604 	movi	r4,7000
 508102c:	50932900 	call	5093290 <usleep>
    
    return bSuccess;
 5081030:	e0bffa17 	ldw	r2,-24(fp)

    
}
 5081034:	e037883a 	mov	sp,fp
 5081038:	dfc00117 	ldw	ra,4(sp)
 508103c:	df000017 	ldw	fp,0(sp)
 5081040:	dec00204 	addi	sp,sp,8
 5081044:	f800283a 	ret

05081048 <I2C_Read>:

bool I2C_Read(alt_u32 clk_base, alt_u32 data_base, alt_8 DeviceAddr, alt_u8 ControlAddr, alt_u8 *pControlData){
 5081048:	defff904 	addi	sp,sp,-28
 508104c:	dfc00615 	stw	ra,24(sp)
 5081050:	df000515 	stw	fp,20(sp)
 5081054:	df000504 	addi	fp,sp,20
 5081058:	e13ffc15 	stw	r4,-16(fp)
 508105c:	e17ffd15 	stw	r5,-12(fp)
 5081060:	3007883a 	mov	r3,r6
 5081064:	3805883a 	mov	r2,r7
 5081068:	e0fffe05 	stb	r3,-8(fp)
 508106c:	e0bfff05 	stb	r2,-4(fp)
    bool bSuccess = TRUE;
 5081070:	00800044 	movi	r2,1
 5081074:	e0bffb15 	stw	r2,-20(fp)
    //alt_u8 DeviceAddr;
   
    // device id
    //DeviceAddr = HMB_E2_I2C_ID;

    i2c_start(clk_base, data_base);
 5081078:	e17ffd17 	ldw	r5,-12(fp)
 508107c:	e13ffc17 	ldw	r4,-16(fp)
 5081080:	50812e80 	call	50812e8 <i2c_start>
    if (!i2c_write(clk_base, data_base, DeviceAddr)){  // send ID
 5081084:	e0bffe03 	ldbu	r2,-8(fp)
 5081088:	10803fcc 	andi	r2,r2,255
 508108c:	100d883a 	mov	r6,r2
 5081090:	e17ffd17 	ldw	r5,-12(fp)
 5081094:	e13ffc17 	ldw	r4,-16(fp)
 5081098:	50813ec0 	call	50813ec <i2c_write>
 508109c:	1000041e 	bne	r2,zero,50810b0 <I2C_Read+0x68>
        bSuccess = FALSE;
 50810a0:	e03ffb15 	stw	zero,-20(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address NACK!\n"));
 50810a4:	01014274 	movhi	r4,1289
 50810a8:	21152f04 	addi	r4,r4,21692
 50810ac:	5081aa80 	call	5081aa8 <myprintf>
    }
    if (bSuccess && !i2c_write(clk_base, data_base, ControlAddr)){ // send sub-address
 50810b0:	e0bffb17 	ldw	r2,-20(fp)
 50810b4:	10000a26 	beq	r2,zero,50810e0 <I2C_Read+0x98>
 50810b8:	e0bfff03 	ldbu	r2,-4(fp)
 50810bc:	100d883a 	mov	r6,r2
 50810c0:	e17ffd17 	ldw	r5,-12(fp)
 50810c4:	e13ffc17 	ldw	r4,-16(fp)
 50810c8:	50813ec0 	call	50813ec <i2c_write>
 50810cc:	1000041e 	bne	r2,zero,50810e0 <I2C_Read+0x98>
        bSuccess = FALSE;
 50810d0:	e03ffb15 	stw	zero,-20(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress NACK!\n"));
 50810d4:	01014274 	movhi	r4,1289
 50810d8:	21153704 	addi	r4,r4,21724
 50810dc:	5081aa80 	call	5081aa8 <myprintf>
    }            
    i2c_start(clk_base, data_base);  // restart
 50810e0:	e17ffd17 	ldw	r5,-12(fp)
 50810e4:	e13ffc17 	ldw	r4,-16(fp)
 50810e8:	50812e80 	call	50812e8 <i2c_start>
    DeviceAddr |= 1; // Read
 50810ec:	e0bffe03 	ldbu	r2,-8(fp)
 50810f0:	10800054 	ori	r2,r2,1
 50810f4:	e0bffe05 	stb	r2,-8(fp)
    if (bSuccess && !i2c_write(clk_base, data_base, DeviceAddr)){  // send id
 50810f8:	e0bffb17 	ldw	r2,-20(fp)
 50810fc:	10000b26 	beq	r2,zero,508112c <I2C_Read+0xe4>
 5081100:	e0bffe03 	ldbu	r2,-8(fp)
 5081104:	10803fcc 	andi	r2,r2,255
 5081108:	100d883a 	mov	r6,r2
 508110c:	e17ffd17 	ldw	r5,-12(fp)
 5081110:	e13ffc17 	ldw	r4,-16(fp)
 5081114:	50813ec0 	call	50813ec <i2c_write>
 5081118:	1000041e 	bne	r2,zero,508112c <I2C_Read+0xe4>
        bSuccess = FALSE;
 508111c:	e03ffb15 	stw	zero,-20(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address+1 NACK!\n"));
 5081120:	01014274 	movhi	r4,1289
 5081124:	21154804 	addi	r4,r4,21792
 5081128:	5081aa80 	call	5081aa8 <myprintf>
    }
    
    if (bSuccess){
 508112c:	e0bffb17 	ldw	r2,-20(fp)
 5081130:	10000526 	beq	r2,zero,5081148 <I2C_Read+0x100>
        i2c_read(clk_base, data_base, pControlData, FALSE);  // read
 5081134:	000f883a 	mov	r7,zero
 5081138:	e1800217 	ldw	r6,8(fp)
 508113c:	e17ffd17 	ldw	r5,-12(fp)
 5081140:	e13ffc17 	ldw	r4,-16(fp)
 5081144:	508151c0 	call	508151c <i2c_read>
    }        
    i2c_stop(clk_base, data_base);
 5081148:	e17ffd17 	ldw	r5,-12(fp)
 508114c:	e13ffc17 	ldw	r4,-16(fp)
 5081150:	50813740 	call	5081374 <i2c_stop>
    
    return bSuccess;
 5081154:	e0bffb17 	ldw	r2,-20(fp)
}
 5081158:	e037883a 	mov	sp,fp
 508115c:	dfc00117 	ldw	ra,4(sp)
 5081160:	df000017 	ldw	fp,0(sp)
 5081164:	dec00204 	addi	sp,sp,8
 5081168:	f800283a 	ret

0508116c <I2C_MultipleRead>:

bool I2C_MultipleRead(alt_u32 clk_base, alt_u32 data_base, alt_8 DeviceAddr, alt_u8 szData[], alt_u16 len){
 508116c:	defff604 	addi	sp,sp,-40
 5081170:	dfc00915 	stw	ra,36(sp)
 5081174:	df000815 	stw	fp,32(sp)
 5081178:	df000804 	addi	fp,sp,32
 508117c:	e13ffb15 	stw	r4,-20(fp)
 5081180:	e17ffc15 	stw	r5,-16(fp)
 5081184:	3007883a 	mov	r3,r6
 5081188:	e1fffe15 	stw	r7,-8(fp)
 508118c:	e0800217 	ldw	r2,8(fp)
 5081190:	e0fffd05 	stb	r3,-12(fp)
 5081194:	e0bfff0d 	sth	r2,-4(fp)
    int i;
    bool bSuccess = TRUE;
 5081198:	00800044 	movi	r2,1
 508119c:	e0bff915 	stw	r2,-28(fp)
    //alt_u8 DeviceAddr, 
    alt_u8 ControlAddr = 0;
 50811a0:	e03ffa05 	stb	zero,-24(fp)
    
   
    // device id
    //DeviceAddr = HMB_E2_I2C_ID;

    i2c_start(clk_base, data_base);
 50811a4:	e17ffc17 	ldw	r5,-16(fp)
 50811a8:	e13ffb17 	ldw	r4,-20(fp)
 50811ac:	50812e80 	call	50812e8 <i2c_start>
    if (!i2c_write(clk_base, data_base, DeviceAddr)){  // send ID
 50811b0:	e0bffd03 	ldbu	r2,-12(fp)
 50811b4:	10803fcc 	andi	r2,r2,255
 50811b8:	100d883a 	mov	r6,r2
 50811bc:	e17ffc17 	ldw	r5,-16(fp)
 50811c0:	e13ffb17 	ldw	r4,-20(fp)
 50811c4:	50813ec0 	call	50813ec <i2c_write>
 50811c8:	1000041e 	bne	r2,zero,50811dc <I2C_MultipleRead+0x70>
        bSuccess = FALSE;
 50811cc:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address NACK!\n"));
 50811d0:	01014274 	movhi	r4,1289
 50811d4:	21152f04 	addi	r4,r4,21692
 50811d8:	5081aa80 	call	5081aa8 <myprintf>
    }
    if (bSuccess && !i2c_write(clk_base, data_base, ControlAddr)){ // send sub-address
 50811dc:	e0bff917 	ldw	r2,-28(fp)
 50811e0:	10000a26 	beq	r2,zero,508120c <I2C_MultipleRead+0xa0>
 50811e4:	e0bffa03 	ldbu	r2,-24(fp)
 50811e8:	100d883a 	mov	r6,r2
 50811ec:	e17ffc17 	ldw	r5,-16(fp)
 50811f0:	e13ffb17 	ldw	r4,-20(fp)
 50811f4:	50813ec0 	call	50813ec <i2c_write>
 50811f8:	1000041e 	bne	r2,zero,508120c <I2C_MultipleRead+0xa0>
        bSuccess = FALSE;
 50811fc:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress NACK!\n"));
 5081200:	01014274 	movhi	r4,1289
 5081204:	21153704 	addi	r4,r4,21724
 5081208:	5081aa80 	call	5081aa8 <myprintf>
    }    
    if (bSuccess)        
 508120c:	e0bff917 	ldw	r2,-28(fp)
 5081210:	10000326 	beq	r2,zero,5081220 <I2C_MultipleRead+0xb4>
        i2c_start(clk_base, data_base);  // restart
 5081214:	e17ffc17 	ldw	r5,-16(fp)
 5081218:	e13ffb17 	ldw	r4,-20(fp)
 508121c:	50812e80 	call	50812e8 <i2c_start>
    DeviceAddr |= 1; // Read
 5081220:	e0bffd03 	ldbu	r2,-12(fp)
 5081224:	10800054 	ori	r2,r2,1
 5081228:	e0bffd05 	stb	r2,-12(fp)
    if (bSuccess && !i2c_write(clk_base, data_base, DeviceAddr)){  // send id
 508122c:	e0bff917 	ldw	r2,-28(fp)
 5081230:	10000b26 	beq	r2,zero,5081260 <I2C_MultipleRead+0xf4>
 5081234:	e0bffd03 	ldbu	r2,-12(fp)
 5081238:	10803fcc 	andi	r2,r2,255
 508123c:	100d883a 	mov	r6,r2
 5081240:	e17ffc17 	ldw	r5,-16(fp)
 5081244:	e13ffb17 	ldw	r4,-20(fp)
 5081248:	50813ec0 	call	50813ec <i2c_write>
 508124c:	1000041e 	bne	r2,zero,5081260 <I2C_MultipleRead+0xf4>
        bSuccess = FALSE;
 5081250:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address+1 NACK!\n"));
 5081254:	01014274 	movhi	r4,1289
 5081258:	21154804 	addi	r4,r4,21792
 508125c:	5081aa80 	call	5081aa8 <myprintf>
    }
    
    if (bSuccess){
 5081260:	e0bff917 	ldw	r2,-28(fp)
 5081264:	10001726 	beq	r2,zero,50812c4 <I2C_MultipleRead+0x158>
        for(i=0;i<len && bSuccess;i++){
 5081268:	e03ff815 	stw	zero,-32(fp)
 508126c:	00001006 	br	50812b0 <I2C_MultipleRead+0x144>
            i2c_read(clk_base, data_base, &szData[i], (i==(len-1))?FALSE:TRUE);  // read
 5081270:	e0bff817 	ldw	r2,-32(fp)
 5081274:	e0fffe17 	ldw	r3,-8(fp)
 5081278:	1889883a 	add	r4,r3,r2
 508127c:	e0bfff0b 	ldhu	r2,-4(fp)
 5081280:	10ffffc4 	addi	r3,r2,-1
 5081284:	e0bff817 	ldw	r2,-32(fp)
 5081288:	1884c03a 	cmpne	r2,r3,r2
 508128c:	10803fcc 	andi	r2,r2,255
 5081290:	100f883a 	mov	r7,r2
 5081294:	200d883a 	mov	r6,r4
 5081298:	e17ffc17 	ldw	r5,-16(fp)
 508129c:	e13ffb17 	ldw	r4,-20(fp)
 50812a0:	508151c0 	call	508151c <i2c_read>
        bSuccess = FALSE;
        I2C_DEBUG(("I2C HMB_E2 Fail: Address+1 NACK!\n"));
    }
    
    if (bSuccess){
        for(i=0;i<len && bSuccess;i++){
 50812a4:	e0bff817 	ldw	r2,-32(fp)
 50812a8:	10800044 	addi	r2,r2,1
 50812ac:	e0bff815 	stw	r2,-32(fp)
 50812b0:	e0bfff0b 	ldhu	r2,-4(fp)
 50812b4:	e0fff817 	ldw	r3,-32(fp)
 50812b8:	1880020e 	bge	r3,r2,50812c4 <I2C_MultipleRead+0x158>
 50812bc:	e0bff917 	ldw	r2,-28(fp)
 50812c0:	103feb1e 	bne	r2,zero,5081270 <__alt_data_end+0xfffb3070>
            i2c_read(clk_base, data_base, &szData[i], (i==(len-1))?FALSE:TRUE);  // read
        }            
    }        
    i2c_stop(clk_base, data_base);
 50812c4:	e17ffc17 	ldw	r5,-16(fp)
 50812c8:	e13ffb17 	ldw	r4,-20(fp)
 50812cc:	50813740 	call	5081374 <i2c_stop>
    
    return bSuccess;    
 50812d0:	e0bff917 	ldw	r2,-28(fp)
    
}
 50812d4:	e037883a 	mov	sp,fp
 50812d8:	dfc00117 	ldw	ra,4(sp)
 50812dc:	df000017 	ldw	fp,0(sp)
 50812e0:	dec00204 	addi	sp,sp,8
 50812e4:	f800283a 	ret

050812e8 <i2c_start>:
///////////// Interncal function (i2cXXX) body //////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////


//SDA 1->0 while SCL=1
void i2c_start(alt_u32 clk_base, alt_u32 data_base){
 50812e8:	defffc04 	addi	sp,sp,-16
 50812ec:	dfc00315 	stw	ra,12(sp)
 50812f0:	df000215 	stw	fp,8(sp)
 50812f4:	df000204 	addi	fp,sp,8
 50812f8:	e13ffe15 	stw	r4,-8(fp)
 50812fc:	e17fff15 	stw	r5,-4(fp)
    
    // make sure it is in normal state
    SDA_DIR_OUT(data_base);  // data output enabled
 5081300:	e0bfff17 	ldw	r2,-4(fp)
 5081304:	10800104 	addi	r2,r2,4
 5081308:	1007883a 	mov	r3,r2
 508130c:	00800044 	movi	r2,1
 5081310:	18800035 	stwio	r2,0(r3)
    
    
    
    // start condition 
    SDA_HIGH(data_base); // data high
 5081314:	e0bfff17 	ldw	r2,-4(fp)
 5081318:	00c00044 	movi	r3,1
 508131c:	10c00035 	stwio	r3,0(r2)
    SCL_HIGH(clk_base);
 5081320:	e0bffe17 	ldw	r2,-8(fp)
 5081324:	00c00044 	movi	r3,1
 5081328:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY;
 508132c:	01000044 	movi	r4,1
 5081330:	50932900 	call	5093290 <usleep>
     
    SDA_LOW(data_base); // data low
 5081334:	e0bfff17 	ldw	r2,-4(fp)
 5081338:	0007883a 	mov	r3,zero
 508133c:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; 
 5081340:	01000044 	movi	r4,1
 5081344:	50932900 	call	5093290 <usleep>
    SCL_LOW(clk_base); // clock low
 5081348:	e0bffe17 	ldw	r2,-8(fp)
 508134c:	0007883a 	mov	r3,zero
 5081350:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY;
 5081354:	01000044 	movi	r4,1
 5081358:	50932900 	call	5093290 <usleep>
}
 508135c:	0001883a 	nop
 5081360:	e037883a 	mov	sp,fp
 5081364:	dfc00117 	ldw	ra,4(sp)
 5081368:	df000017 	ldw	fp,0(sp)
 508136c:	dec00204 	addi	sp,sp,8
 5081370:	f800283a 	ret

05081374 <i2c_stop>:

// SDA 0->1 while SCL=1
void i2c_stop(alt_u32 clk_base, alt_u32 data_base){
 5081374:	defffc04 	addi	sp,sp,-16
 5081378:	dfc00315 	stw	ra,12(sp)
 508137c:	df000215 	stw	fp,8(sp)
 5081380:	df000204 	addi	fp,sp,8
 5081384:	e13ffe15 	stw	r4,-8(fp)
 5081388:	e17fff15 	stw	r5,-4(fp)
    // assume SCL = 0
    
    SDA_DIR_OUT(data_base);  // data output enabled
 508138c:	e0bfff17 	ldw	r2,-4(fp)
 5081390:	10800104 	addi	r2,r2,4
 5081394:	1007883a 	mov	r3,r2
 5081398:	00800044 	movi	r2,1
 508139c:	18800035 	stwio	r2,0(r3)
    SDA_LOW(data_base); // Data Low
 50813a0:	e0bfff17 	ldw	r2,-4(fp)
 50813a4:	0007883a 	mov	r3,zero
 50813a8:	10c00035 	stwio	r3,0(r2)
    //SCL_DELAY; 
    SCL_HIGH(clk_base);  // clock high
 50813ac:	e0bffe17 	ldw	r2,-8(fp)
 50813b0:	00c00044 	movi	r3,1
 50813b4:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock high long delay
 50813b8:	01000044 	movi	r4,1
 50813bc:	50932900 	call	5093290 <usleep>
    SDA_HIGH(data_base); // data high
 50813c0:	e0bfff17 	ldw	r2,-4(fp)
 50813c4:	00c00044 	movi	r3,1
 50813c8:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // data high delay
 50813cc:	01000044 	movi	r4,1
 50813d0:	50932900 	call	5093290 <usleep>
}
 50813d4:	0001883a 	nop
 50813d8:	e037883a 	mov	sp,fp
 50813dc:	dfc00117 	ldw	ra,4(sp)
 50813e0:	df000017 	ldw	fp,0(sp)
 50813e4:	dec00204 	addi	sp,sp,8
 50813e8:	f800283a 	ret

050813ec <i2c_write>:

bool i2c_write(alt_u32 clk_base, alt_u32 data_base, alt_u8 Data){ // return true if device response ack
 50813ec:	defff804 	addi	sp,sp,-32
 50813f0:	dfc00715 	stw	ra,28(sp)
 50813f4:	df000615 	stw	fp,24(sp)
 50813f8:	df000604 	addi	fp,sp,24
 50813fc:	e13ffd15 	stw	r4,-12(fp)
 5081400:	e17ffe15 	stw	r5,-8(fp)
 5081404:	3005883a 	mov	r2,r6
 5081408:	e0bfff05 	stb	r2,-4(fp)
    alt_u8 Mask = 0x80;
 508140c:	00bfe004 	movi	r2,-128
 5081410:	e0bffa05 	stb	r2,-24(fp)
    bool bAck;
    int i;
    
    // assume, SCL = 0
    
    SDA_DIR_OUT(data_base);  // data write mode
 5081414:	e0bffe17 	ldw	r2,-8(fp)
 5081418:	10800104 	addi	r2,r2,4
 508141c:	1007883a 	mov	r3,r2
 5081420:	00800044 	movi	r2,1
 5081424:	18800035 	stwio	r2,0(r3)
    
    for(i=0;i<8;i++){
 5081428:	e03ffb15 	stw	zero,-20(fp)
 508142c:	00001f06 	br	50814ac <i2c_write+0xc0>
        SCL_LOW(clk_base);  // new, make sure data change at clk low
 5081430:	e0bffd17 	ldw	r2,-12(fp)
 5081434:	0007883a 	mov	r3,zero
 5081438:	10c00035 	stwio	r3,0(r2)
        // output data on bus
        if (Data & Mask){ // there is a delay in this command
 508143c:	e0ffff03 	ldbu	r3,-4(fp)
 5081440:	e0bffa03 	ldbu	r2,-24(fp)
 5081444:	1884703a 	and	r2,r3,r2
 5081448:	10803fcc 	andi	r2,r2,255
 508144c:	10000426 	beq	r2,zero,5081460 <i2c_write+0x74>
            SDA_HIGH(data_base);
 5081450:	e0bffe17 	ldw	r2,-8(fp)
 5081454:	00c00044 	movi	r3,1
 5081458:	10c00035 	stwio	r3,0(r2)
 508145c:	00000306 	br	508146c <i2c_write+0x80>
        }else{    
            SDA_LOW(data_base);
 5081460:	e0bffe17 	ldw	r2,-8(fp)
 5081464:	0007883a 	mov	r3,zero
 5081468:	10c00035 	stwio	r3,0(r2)
        }
        Mask >>= 1; // there is a delay in this command
 508146c:	e0bffa03 	ldbu	r2,-24(fp)
 5081470:	1004d07a 	srli	r2,r2,1
 5081474:	e0bffa05 	stb	r2,-24(fp)
        // clock high
        SCL_HIGH(clk_base);
 5081478:	e0bffd17 	ldw	r2,-12(fp)
 508147c:	00c00044 	movi	r3,1
 5081480:	10c00035 	stwio	r3,0(r2)
        SCL_DELAY;
 5081484:	01000044 	movi	r4,1
 5081488:	50932900 	call	5093290 <usleep>
        SCL_LOW(clk_base);
 508148c:	e0bffd17 	ldw	r2,-12(fp)
 5081490:	0007883a 	mov	r3,zero
 5081494:	10c00035 	stwio	r3,0(r2)
        SCL_DELAY;
 5081498:	01000044 	movi	r4,1
 508149c:	50932900 	call	5093290 <usleep>
    
    // assume, SCL = 0
    
    SDA_DIR_OUT(data_base);  // data write mode
    
    for(i=0;i<8;i++){
 50814a0:	e0bffb17 	ldw	r2,-20(fp)
 50814a4:	10800044 	addi	r2,r2,1
 50814a8:	e0bffb15 	stw	r2,-20(fp)
 50814ac:	e0bffb17 	ldw	r2,-20(fp)
 50814b0:	10800210 	cmplti	r2,r2,8
 50814b4:	103fde1e 	bne	r2,zero,5081430 <__alt_data_end+0xfffb3230>
        SCL_LOW(clk_base);
        SCL_DELAY;
    }
    
    //===== get ack
    SDA_DIR_IN(data_base);  // data read mode
 50814b8:	e0bffe17 	ldw	r2,-8(fp)
 50814bc:	10800104 	addi	r2,r2,4
 50814c0:	0007883a 	mov	r3,zero
 50814c4:	10c00035 	stwio	r3,0(r2)
    //SCL_DELAY;
    // clock high
    SCL_HIGH(clk_base);  // clock high
 50814c8:	e0bffd17 	ldw	r2,-12(fp)
 50814cc:	00c00044 	movi	r3,1
 50814d0:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY;  // clock high delay
 50814d4:	01000044 	movi	r4,1
 50814d8:	50932900 	call	5093290 <usleep>
    bAck = SDA_READ(data_base)?FALSE:TRUE;  // get ack
 50814dc:	e0bffe17 	ldw	r2,-8(fp)
 50814e0:	10800037 	ldwio	r2,0(r2)
 50814e4:	1005003a 	cmpeq	r2,r2,zero
 50814e8:	10803fcc 	andi	r2,r2,255
 50814ec:	e0bffc15 	stw	r2,-16(fp)
    //SCL_DELAY;
    //SDA_DIR_OUT;
    SCL_LOW(clk_base); // clock low         
 50814f0:	e0bffd17 	ldw	r2,-12(fp)
 50814f4:	0007883a 	mov	r3,zero
 50814f8:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock low delay
 50814fc:	01000044 	movi	r4,1
 5081500:	50932900 	call	5093290 <usleep>
    return bAck;
 5081504:	e0bffc17 	ldw	r2,-16(fp)
}    
 5081508:	e037883a 	mov	sp,fp
 508150c:	dfc00117 	ldw	ra,4(sp)
 5081510:	df000017 	ldw	fp,0(sp)
 5081514:	dec00204 	addi	sp,sp,8
 5081518:	f800283a 	ret

0508151c <i2c_read>:

void i2c_read(alt_u32 clk_base, alt_u32 data_base, alt_u8 *pData, bool bAck){ // return true if device response ack
 508151c:	defff804 	addi	sp,sp,-32
 5081520:	dfc00715 	stw	ra,28(sp)
 5081524:	df000615 	stw	fp,24(sp)
 5081528:	df000604 	addi	fp,sp,24
 508152c:	e13ffc15 	stw	r4,-16(fp)
 5081530:	e17ffd15 	stw	r5,-12(fp)
 5081534:	e1bffe15 	stw	r6,-8(fp)
 5081538:	e1ffff15 	stw	r7,-4(fp)
    alt_u8 Data=0;
 508153c:	e03ffa05 	stb	zero,-24(fp)
    int i;
    
    // assume SCL = low
    
    SDA_DIR_IN(data_base);  // set data read mode
 5081540:	e0bffd17 	ldw	r2,-12(fp)
 5081544:	10800104 	addi	r2,r2,4
 5081548:	0007883a 	mov	r3,zero
 508154c:	10c00035 	stwio	r3,0(r2)
    SCL_LOW(clk_base); // clock low
 5081550:	e0bffc17 	ldw	r2,-16(fp)
 5081554:	0007883a 	mov	r3,zero
 5081558:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock low delay
 508155c:	01000044 	movi	r4,1
 5081560:	50932900 	call	5093290 <usleep>

    for(i=0;i<8;i++){
 5081564:	e03ffb15 	stw	zero,-20(fp)
 5081568:	00001606 	br	50815c4 <i2c_read+0xa8>
        Data <<= 1;
 508156c:	e0bffa03 	ldbu	r2,-24(fp)
 5081570:	1085883a 	add	r2,r2,r2
 5081574:	e0bffa05 	stb	r2,-24(fp)
        SCL_HIGH(clk_base);  // clock high
 5081578:	e0bffc17 	ldw	r2,-16(fp)
 508157c:	00c00044 	movi	r3,1
 5081580:	10c00035 	stwio	r3,0(r2)
        SCL_DELAY;
 5081584:	01000044 	movi	r4,1
 5081588:	50932900 	call	5093290 <usleep>
        if (SDA_READ(data_base))  // read data   
 508158c:	e0bffd17 	ldw	r2,-12(fp)
 5081590:	10800037 	ldwio	r2,0(r2)
 5081594:	10000326 	beq	r2,zero,50815a4 <i2c_read+0x88>
            Data |= 0x01;
 5081598:	e0bffa03 	ldbu	r2,-24(fp)
 508159c:	10800054 	ori	r2,r2,1
 50815a0:	e0bffa05 	stb	r2,-24(fp)
        SCL_LOW(clk_base);  // clock log  
 50815a4:	e0bffc17 	ldw	r2,-16(fp)
 50815a8:	0007883a 	mov	r3,zero
 50815ac:	10c00035 	stwio	r3,0(r2)
        SCL_DELAY;
 50815b0:	01000044 	movi	r4,1
 50815b4:	50932900 	call	5093290 <usleep>
    
    SDA_DIR_IN(data_base);  // set data read mode
    SCL_LOW(clk_base); // clock low
    SCL_DELAY; // clock low delay

    for(i=0;i<8;i++){
 50815b8:	e0bffb17 	ldw	r2,-20(fp)
 50815bc:	10800044 	addi	r2,r2,1
 50815c0:	e0bffb15 	stw	r2,-20(fp)
 50815c4:	e0bffb17 	ldw	r2,-20(fp)
 50815c8:	10800210 	cmplti	r2,r2,8
 50815cc:	103fe71e 	bne	r2,zero,508156c <__alt_data_end+0xfffb336c>
        SCL_LOW(clk_base);  // clock log  
        SCL_DELAY;
    }
    
    // send ACK
    SCL_LOW(clk_base);  // new, make sure data change at clk low
 50815d0:	e0bffc17 	ldw	r2,-16(fp)
 50815d4:	0007883a 	mov	r3,zero
 50815d8:	10c00035 	stwio	r3,0(r2)
    SDA_DIR_OUT(data_base);  // set data write mode
 50815dc:	e0bffd17 	ldw	r2,-12(fp)
 50815e0:	10800104 	addi	r2,r2,4
 50815e4:	1007883a 	mov	r3,r2
 50815e8:	00800044 	movi	r2,1
 50815ec:	18800035 	stwio	r2,0(r3)
    if (bAck)
 50815f0:	e0bfff17 	ldw	r2,-4(fp)
 50815f4:	10000426 	beq	r2,zero,5081608 <i2c_read+0xec>
        SDA_LOW(data_base);
 50815f8:	e0bffd17 	ldw	r2,-12(fp)
 50815fc:	0007883a 	mov	r3,zero
 5081600:	10c00035 	stwio	r3,0(r2)
 5081604:	00000306 	br	5081614 <i2c_read+0xf8>
    else
        SDA_HIGH(data_base);
 5081608:	e0bffd17 	ldw	r2,-12(fp)
 508160c:	00c00044 	movi	r3,1
 5081610:	10c00035 	stwio	r3,0(r2)
    SCL_HIGH(clk_base); // clock high
 5081614:	e0bffc17 	ldw	r2,-16(fp)
 5081618:	00c00044 	movi	r3,1
 508161c:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock high  delay
 5081620:	01000044 	movi	r4,1
 5081624:	50932900 	call	5093290 <usleep>
    SCL_LOW(clk_base); // clock low
 5081628:	e0bffc17 	ldw	r2,-16(fp)
 508162c:	0007883a 	mov	r3,zero
 5081630:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock low delay
 5081634:	01000044 	movi	r4,1
 5081638:	50932900 	call	5093290 <usleep>
    SDA_LOW(data_base);  // data low
 508163c:	e0bffd17 	ldw	r2,-12(fp)
 5081640:	0007883a 	mov	r3,zero
 5081644:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // data low delay
 5081648:	01000044 	movi	r4,1
 508164c:	50932900 	call	5093290 <usleep>
//    SDA_DIR_IN;  // set data read mode
    
    *pData = Data;
 5081650:	e0bffe17 	ldw	r2,-8(fp)
 5081654:	e0fffa03 	ldbu	r3,-24(fp)
 5081658:	10c00005 	stb	r3,0(r2)
}
 508165c:	0001883a 	nop
 5081660:	e037883a 	mov	sp,fp
 5081664:	dfc00117 	ldw	ra,4(sp)
 5081668:	df000017 	ldw	fp,0(sp)
 508166c:	dec00204 	addi	sp,sp,8
 5081670:	f800283a 	ret

05081674 <LED_Display>:
#define LED_INIT_MASK   (0x01 << 24)

#define LED_SET(mask)   IOWR_ALTERA_AVALON_PIO_DATA(PIO_LED_BASE, mask)


void LED_Display(alt_u32 Mask){ // 1: light, 0:unlight
 5081674:	defffd04 	addi	sp,sp,-12
 5081678:	df000215 	stw	fp,8(sp)
 508167c:	df000204 	addi	fp,sp,8
 5081680:	e13fff15 	stw	r4,-4(fp)
    alt_u32 ThisMask;
    ThisMask = Mask;//~(Mask & 0x7FFFFFF);
 5081684:	e0bfff17 	ldw	r2,-4(fp)
 5081688:	e0bffe15 	stw	r2,-8(fp)
    LED_SET(ThisMask);  //0:ligh, 1:unlight
 508168c:	e0fffe17 	ldw	r3,-8(fp)
 5081690:	00810034 	movhi	r2,1024
 5081694:	10801404 	addi	r2,r2,80
 5081698:	10c00035 	stwio	r3,0(r2)
    
}
 508169c:	0001883a 	nop
 50816a0:	e037883a 	mov	sp,fp
 50816a4:	df000017 	ldw	fp,0(sp)
 50816a8:	dec00104 	addi	sp,sp,4
 50816ac:	f800283a 	ret

050816b0 <LED_AllOn>:


void LED_AllOn(void){
 50816b0:	defffe04 	addi	sp,sp,-8
 50816b4:	dfc00115 	stw	ra,4(sp)
 50816b8:	df000015 	stw	fp,0(sp)
 50816bc:	d839883a 	mov	fp,sp
    LED_Display(0xFFFFFFFF);       
 50816c0:	013fffc4 	movi	r4,-1
 50816c4:	50816740 	call	5081674 <LED_Display>
}
 50816c8:	0001883a 	nop
 50816cc:	e037883a 	mov	sp,fp
 50816d0:	dfc00117 	ldw	ra,4(sp)
 50816d4:	df000017 	ldw	fp,0(sp)
 50816d8:	dec00204 	addi	sp,sp,8
 50816dc:	f800283a 	ret

050816e0 <LED_AllOff>:

void LED_AllOff(void){
 50816e0:	defffe04 	addi	sp,sp,-8
 50816e4:	dfc00115 	stw	ra,4(sp)
 50816e8:	df000015 	stw	fp,0(sp)
 50816ec:	d839883a 	mov	fp,sp
    LED_Display(0x00);       
 50816f0:	0009883a 	mov	r4,zero
 50816f4:	50816740 	call	5081674 <LED_Display>
}
 50816f8:	0001883a 	nop
 50816fc:	e037883a 	mov	sp,fp
 5081700:	dfc00117 	ldw	ra,4(sp)
 5081704:	df000017 	ldw	fp,0(sp)
 5081708:	dec00204 	addi	sp,sp,8
 508170c:	f800283a 	ret

05081710 <LED_LightCount>:


void LED_LightCount(alt_u8 LightCount){ // 1: light, 0:unlight
 5081710:	defffb04 	addi	sp,sp,-20
 5081714:	dfc00415 	stw	ra,16(sp)
 5081718:	df000315 	stw	fp,12(sp)
 508171c:	df000304 	addi	fp,sp,12
 5081720:	2005883a 	mov	r2,r4
 5081724:	e0bfff05 	stb	r2,-4(fp)
    alt_u32 Mask = 0;
 5081728:	e03ffd15 	stw	zero,-12(fp)
    int i;
    for(i=0;i<LightCount;i++){
 508172c:	e03ffe15 	stw	zero,-8(fp)
 5081730:	00000906 	br	5081758 <LED_LightCount+0x48>
        Mask <<= 1;
 5081734:	e0bffd17 	ldw	r2,-12(fp)
 5081738:	1085883a 	add	r2,r2,r2
 508173c:	e0bffd15 	stw	r2,-12(fp)
        Mask |= 0x01;
 5081740:	e0bffd17 	ldw	r2,-12(fp)
 5081744:	10800054 	ori	r2,r2,1
 5081748:	e0bffd15 	stw	r2,-12(fp)


void LED_LightCount(alt_u8 LightCount){ // 1: light, 0:unlight
    alt_u32 Mask = 0;
    int i;
    for(i=0;i<LightCount;i++){
 508174c:	e0bffe17 	ldw	r2,-8(fp)
 5081750:	10800044 	addi	r2,r2,1
 5081754:	e0bffe15 	stw	r2,-8(fp)
 5081758:	e0bfff03 	ldbu	r2,-4(fp)
 508175c:	e0fffe17 	ldw	r3,-8(fp)
 5081760:	18bff416 	blt	r3,r2,5081734 <__alt_data_end+0xfffb3534>
        Mask <<= 1;
        Mask |= 0x01;
    }
    LED_Display(Mask);  //0:ligh, 1:unlight
 5081764:	e13ffd17 	ldw	r4,-12(fp)
 5081768:	50816740 	call	5081674 <LED_Display>
    
}
 508176c:	0001883a 	nop
 5081770:	e037883a 	mov	sp,fp
 5081774:	dfc00117 	ldw	ra,4(sp)
 5081778:	df000017 	ldw	fp,0(sp)
 508177c:	dec00204 	addi	sp,sp,8
 5081780:	f800283a 	ret

05081784 <SEG7_Clear>:
static    unsigned char szMap[] = {
        63, 6, 91, 79, 102, 109, 125, 7, 
        127, 111, 119, 124, 57, 94, 121, 113
    };  // 0,1,2,....9, a, b, c, d, e, f
    
void SEG7_Clear(void){
 5081784:	defffe04 	addi	sp,sp,-8
 5081788:	df000115 	stw	fp,4(sp)
 508178c:	df000104 	addi	fp,sp,4
    int i;
    for(i=0;i<SEG7_NUM;i++){
 5081790:	e03fff15 	stw	zero,-4(fp)
 5081794:	00000b06 	br	50817c4 <SEG7_Clear+0x40>
        SEG7_SET(i, 0x00);
 5081798:	e0bfff17 	ldw	r2,-4(fp)
 508179c:	1085883a 	add	r2,r2,r2
 50817a0:	1085883a 	add	r2,r2,r2
 50817a4:	1007883a 	mov	r3,r2
 50817a8:	00810034 	movhi	r2,1024
 50817ac:	1885883a 	add	r2,r3,r2
 50817b0:	0007883a 	mov	r3,zero
 50817b4:	10c00035 	stwio	r3,0(r2)
        127, 111, 119, 124, 57, 94, 121, 113
    };  // 0,1,2,....9, a, b, c, d, e, f
    
void SEG7_Clear(void){
    int i;
    for(i=0;i<SEG7_NUM;i++){
 50817b8:	e0bfff17 	ldw	r2,-4(fp)
 50817bc:	10800044 	addi	r2,r2,1
 50817c0:	e0bfff15 	stw	r2,-4(fp)
 50817c4:	e0bfff17 	ldw	r2,-4(fp)
 50817c8:	10800190 	cmplti	r2,r2,6
 50817cc:	103ff21e 	bne	r2,zero,5081798 <__alt_data_end+0xfffb3598>
        SEG7_SET(i, 0x00);
    }        
}
 50817d0:	0001883a 	nop
 50817d4:	e037883a 	mov	sp,fp
 50817d8:	df000017 	ldw	fp,0(sp)
 50817dc:	dec00104 	addi	sp,sp,4
 50817e0:	f800283a 	ret

050817e4 <SEG7_Full>:
void SEG7_Full(void){
 50817e4:	defffe04 	addi	sp,sp,-8
 50817e8:	df000115 	stw	fp,4(sp)
 50817ec:	df000104 	addi	fp,sp,4
    int i;
    for(i=0;i<SEG7_NUM;i++){
 50817f0:	e03fff15 	stw	zero,-4(fp)
 50817f4:	00000b06 	br	5081824 <SEG7_Full+0x40>
        SEG7_SET(i, 0xFF);
 50817f8:	e0bfff17 	ldw	r2,-4(fp)
 50817fc:	1085883a 	add	r2,r2,r2
 5081800:	1085883a 	add	r2,r2,r2
 5081804:	1007883a 	mov	r3,r2
 5081808:	00810034 	movhi	r2,1024
 508180c:	1885883a 	add	r2,r3,r2
 5081810:	00c03fc4 	movi	r3,255
 5081814:	10c00035 	stwio	r3,0(r2)
        SEG7_SET(i, 0x00);
    }        
}
void SEG7_Full(void){
    int i;
    for(i=0;i<SEG7_NUM;i++){
 5081818:	e0bfff17 	ldw	r2,-4(fp)
 508181c:	10800044 	addi	r2,r2,1
 5081820:	e0bfff15 	stw	r2,-4(fp)
 5081824:	e0bfff17 	ldw	r2,-4(fp)
 5081828:	10800190 	cmplti	r2,r2,6
 508182c:	103ff21e 	bne	r2,zero,50817f8 <__alt_data_end+0xfffb35f8>
        SEG7_SET(i, 0xFF);
    }        
}
 5081830:	0001883a 	nop
 5081834:	e037883a 	mov	sp,fp
 5081838:	df000017 	ldw	fp,0(sp)
 508183c:	dec00104 	addi	sp,sp,4
 5081840:	f800283a 	ret

05081844 <SEG7_Number>:

void SEG7_Number(void){
 5081844:	defffe04 	addi	sp,sp,-8
 5081848:	df000115 	stw	fp,4(sp)
 508184c:	df000104 	addi	fp,sp,4
    int i;
    for(i=0;i<SEG7_NUM;i++){
 5081850:	e03fff15 	stw	zero,-4(fp)
 5081854:	00001006 	br	5081898 <SEG7_Number+0x54>
        SEG7_SET(i, szMap[i]);
 5081858:	e0bfff17 	ldw	r2,-4(fp)
 508185c:	1085883a 	add	r2,r2,r2
 5081860:	1085883a 	add	r2,r2,r2
 5081864:	1007883a 	mov	r3,r2
 5081868:	00810034 	movhi	r2,1024
 508186c:	1887883a 	add	r3,r3,r2
 5081870:	00814274 	movhi	r2,1289
 5081874:	10987104 	addi	r2,r2,25028
 5081878:	e13fff17 	ldw	r4,-4(fp)
 508187c:	1105883a 	add	r2,r2,r4
 5081880:	10800003 	ldbu	r2,0(r2)
 5081884:	10803fcc 	andi	r2,r2,255
 5081888:	18800035 	stwio	r2,0(r3)
    }        
}

void SEG7_Number(void){
    int i;
    for(i=0;i<SEG7_NUM;i++){
 508188c:	e0bfff17 	ldw	r2,-4(fp)
 5081890:	10800044 	addi	r2,r2,1
 5081894:	e0bfff15 	stw	r2,-4(fp)
 5081898:	e0bfff17 	ldw	r2,-4(fp)
 508189c:	10800190 	cmplti	r2,r2,6
 50818a0:	103fed1e 	bne	r2,zero,5081858 <__alt_data_end+0xfffb3658>
        SEG7_SET(i, szMap[i]);
    }        
}
 50818a4:	0001883a 	nop
 50818a8:	e037883a 	mov	sp,fp
 50818ac:	df000017 	ldw	fp,0(sp)
 50818b0:	dec00104 	addi	sp,sp,4
 50818b4:	f800283a 	ret

050818b8 <SEG7_Hex>:

void SEG7_Hex(alt_u32 Data, alt_u8 point_mask){
 50818b8:	defffb04 	addi	sp,sp,-20
 50818bc:	df000415 	stw	fp,16(sp)
 50818c0:	df000404 	addi	fp,sp,16
 50818c4:	e13ffe15 	stw	r4,-8(fp)
 50818c8:	2805883a 	mov	r2,r5
 50818cc:	e0bfff05 	stb	r2,-4(fp)
    alt_u8 mask = 0x01;
 50818d0:	00800044 	movi	r2,1
 50818d4:	e0bffc05 	stb	r2,-16(fp)
    alt_u8 seg_mask;
    int i;
    
    //
    seg_mask = 0;
 50818d8:	e03ffc45 	stb	zero,-15(fp)
    for(i=0;i<SEG7_NUM;i++){
 50818dc:	e03ffd15 	stw	zero,-12(fp)
 50818e0:	00002106 	br	5081968 <SEG7_Hex+0xb0>
        seg_mask = szMap[Data & 0x0F];
 50818e4:	e0bffe17 	ldw	r2,-8(fp)
 50818e8:	10c003cc 	andi	r3,r2,15
 50818ec:	00814274 	movhi	r2,1289
 50818f0:	10987104 	addi	r2,r2,25028
 50818f4:	10c5883a 	add	r2,r2,r3
 50818f8:	10800003 	ldbu	r2,0(r2)
 50818fc:	e0bffc45 	stb	r2,-15(fp)
        Data >>= 4;
 5081900:	e0bffe17 	ldw	r2,-8(fp)
 5081904:	1004d13a 	srli	r2,r2,4
 5081908:	e0bffe15 	stw	r2,-8(fp)
        if (point_mask & mask)
 508190c:	e0ffff03 	ldbu	r3,-4(fp)
 5081910:	e0bffc03 	ldbu	r2,-16(fp)
 5081914:	1884703a 	and	r2,r3,r2
 5081918:	10803fcc 	andi	r2,r2,255
 508191c:	10000426 	beq	r2,zero,5081930 <SEG7_Hex+0x78>
            seg_mask |= 0x80;
 5081920:	e0fffc43 	ldbu	r3,-15(fp)
 5081924:	00bfe004 	movi	r2,-128
 5081928:	1884b03a 	or	r2,r3,r2
 508192c:	e0bffc45 	stb	r2,-15(fp)
        mask <<= 1;     
 5081930:	e0bffc03 	ldbu	r2,-16(fp)
 5081934:	1085883a 	add	r2,r2,r2
 5081938:	e0bffc05 	stb	r2,-16(fp)
        SEG7_SET(i, seg_mask);
 508193c:	e0bffd17 	ldw	r2,-12(fp)
 5081940:	1085883a 	add	r2,r2,r2
 5081944:	1085883a 	add	r2,r2,r2
 5081948:	1007883a 	mov	r3,r2
 508194c:	00810034 	movhi	r2,1024
 5081950:	1885883a 	add	r2,r3,r2
 5081954:	e0fffc43 	ldbu	r3,-15(fp)
 5081958:	10c00035 	stwio	r3,0(r2)
    alt_u8 seg_mask;
    int i;
    
    //
    seg_mask = 0;
    for(i=0;i<SEG7_NUM;i++){
 508195c:	e0bffd17 	ldw	r2,-12(fp)
 5081960:	10800044 	addi	r2,r2,1
 5081964:	e0bffd15 	stw	r2,-12(fp)
 5081968:	e0bffd17 	ldw	r2,-12(fp)
 508196c:	10800190 	cmplti	r2,r2,6
 5081970:	103fdc1e 	bne	r2,zero,50818e4 <__alt_data_end+0xfffb36e4>
        if (point_mask & mask)
            seg_mask |= 0x80;
        mask <<= 1;     
        SEG7_SET(i, seg_mask);
    }        
}
 5081974:	0001883a 	nop
 5081978:	e037883a 	mov	sp,fp
 508197c:	df000017 	ldw	fp,0(sp)
 5081980:	dec00104 	addi	sp,sp,4
 5081984:	f800283a 	ret

05081988 <SEG7_Decimal>:

void SEG7_Decimal(alt_u32 Data, alt_u8 point_mask){
 5081988:	defffa04 	addi	sp,sp,-24
 508198c:	dfc00515 	stw	ra,20(sp)
 5081990:	df000415 	stw	fp,16(sp)
 5081994:	df000404 	addi	fp,sp,16
 5081998:	e13ffe15 	stw	r4,-8(fp)
 508199c:	2805883a 	mov	r2,r5
 50819a0:	e0bfff05 	stb	r2,-4(fp)
    alt_u8 mask = 0x01;
 50819a4:	00800044 	movi	r2,1
 50819a8:	e0bffc05 	stb	r2,-16(fp)
    alt_u8 seg_mask;
    int i;
    
    //
    seg_mask = 0;
 50819ac:	e03ffc45 	stb	zero,-15(fp)
    for(i=0;i<SEG7_NUM;i++){
 50819b0:	e03ffd15 	stw	zero,-12(fp)
 50819b4:	00002606 	br	5081a50 <SEG7_Decimal+0xc8>
        seg_mask = szMap[Data%10];
 50819b8:	e0bffe17 	ldw	r2,-8(fp)
 50819bc:	01400284 	movi	r5,10
 50819c0:	1009883a 	mov	r4,r2
 50819c4:	50828dc0 	call	50828dc <__umodsi3>
 50819c8:	1007883a 	mov	r3,r2
 50819cc:	00814274 	movhi	r2,1289
 50819d0:	10987104 	addi	r2,r2,25028
 50819d4:	10c5883a 	add	r2,r2,r3
 50819d8:	10800003 	ldbu	r2,0(r2)
 50819dc:	e0bffc45 	stb	r2,-15(fp)
        Data /= 10;
 50819e0:	e0bffe17 	ldw	r2,-8(fp)
 50819e4:	01400284 	movi	r5,10
 50819e8:	1009883a 	mov	r4,r2
 50819ec:	50828780 	call	5082878 <__udivsi3>
 50819f0:	e0bffe15 	stw	r2,-8(fp)
        if (point_mask & mask)
 50819f4:	e0ffff03 	ldbu	r3,-4(fp)
 50819f8:	e0bffc03 	ldbu	r2,-16(fp)
 50819fc:	1884703a 	and	r2,r3,r2
 5081a00:	10803fcc 	andi	r2,r2,255
 5081a04:	10000426 	beq	r2,zero,5081a18 <SEG7_Decimal+0x90>
            seg_mask |= 0x80;
 5081a08:	e0fffc43 	ldbu	r3,-15(fp)
 5081a0c:	00bfe004 	movi	r2,-128
 5081a10:	1884b03a 	or	r2,r3,r2
 5081a14:	e0bffc45 	stb	r2,-15(fp)
        mask <<= 1;   
 5081a18:	e0bffc03 	ldbu	r2,-16(fp)
 5081a1c:	1085883a 	add	r2,r2,r2
 5081a20:	e0bffc05 	stb	r2,-16(fp)
        SEG7_SET(i, seg_mask);
 5081a24:	e0bffd17 	ldw	r2,-12(fp)
 5081a28:	1085883a 	add	r2,r2,r2
 5081a2c:	1085883a 	add	r2,r2,r2
 5081a30:	1007883a 	mov	r3,r2
 5081a34:	00810034 	movhi	r2,1024
 5081a38:	1885883a 	add	r2,r3,r2
 5081a3c:	e0fffc43 	ldbu	r3,-15(fp)
 5081a40:	10c00035 	stwio	r3,0(r2)
    alt_u8 seg_mask;
    int i;
    
    //
    seg_mask = 0;
    for(i=0;i<SEG7_NUM;i++){
 5081a44:	e0bffd17 	ldw	r2,-12(fp)
 5081a48:	10800044 	addi	r2,r2,1
 5081a4c:	e0bffd15 	stw	r2,-12(fp)
 5081a50:	e0bffd17 	ldw	r2,-12(fp)
 5081a54:	10800190 	cmplti	r2,r2,6
 5081a58:	103fd71e 	bne	r2,zero,50819b8 <__alt_data_end+0xfffb37b8>
            seg_mask |= 0x80;
        mask <<= 1;   
        SEG7_SET(i, seg_mask);
    }        
  
} 
 5081a5c:	0001883a 	nop
 5081a60:	e037883a 	mov	sp,fp
 5081a64:	dfc00117 	ldw	ra,4(sp)
 5081a68:	df000017 	ldw	fp,0(sp)
 5081a6c:	dec00204 	addi	sp,sp,8
 5081a70:	f800283a 	ret

05081a74 <debug_output>:
    if (!UART_IsOpened())
        UART_Open();
    UART_WriteString(pMessage);  // UART debug
}
#else
void debug_output(char *pMessage){
 5081a74:	defffd04 	addi	sp,sp,-12
 5081a78:	dfc00215 	stw	ra,8(sp)
 5081a7c:	df000115 	stw	fp,4(sp)
 5081a80:	df000104 	addi	fp,sp,4
 5081a84:	e13fff15 	stw	r4,-4(fp)
    printf(pMessage);
 5081a88:	e13fff17 	ldw	r4,-4(fp)
 5081a8c:	50829640 	call	5082964 <printf>
}
 5081a90:	0001883a 	nop
 5081a94:	e037883a 	mov	sp,fp
 5081a98:	dfc00117 	ldw	ra,4(sp)
 5081a9c:	df000017 	ldw	fp,0(sp)
 5081aa0:	dec00204 	addi	sp,sp,8
 5081aa4:	f800283a 	ret

05081aa8 <myprintf>:

#endif


int myprintf(char *format, ...){
 5081aa8:	deff7804 	addi	sp,sp,-544
 5081aac:	dfc08415 	stw	ra,528(sp)
 5081ab0:	df008315 	stw	fp,524(sp)
 5081ab4:	df008304 	addi	fp,sp,524
 5081ab8:	e13fff15 	stw	r4,-4(fp)
 5081abc:	e1400215 	stw	r5,8(fp)
 5081ac0:	e1800315 	stw	r6,12(fp)
 5081ac4:	e1c00415 	stw	r7,16(fp)
    int rc;
    char szText[512];
    
    va_list paramList;
    va_start(paramList, format);
 5081ac8:	e0800204 	addi	r2,fp,8
 5081acc:	e0bffe15 	stw	r2,-8(fp)
    rc = vsnprintf(szText, 512, format, paramList);
 5081ad0:	e0fffe17 	ldw	r3,-8(fp)
 5081ad4:	e0bf7e04 	addi	r2,fp,-520
 5081ad8:	180f883a 	mov	r7,r3
 5081adc:	e1bfff17 	ldw	r6,-4(fp)
 5081ae0:	01408004 	movi	r5,512
 5081ae4:	1009883a 	mov	r4,r2
 5081ae8:	50871680 	call	5087168 <vsnprintf>
 5081aec:	e0bf7d15 	stw	r2,-524(fp)
    va_end(paramList);
    
    debug_output(szText);
 5081af0:	e0bf7e04 	addi	r2,fp,-520
 5081af4:	1009883a 	mov	r4,r2
 5081af8:	5081a740 	call	5081a74 <debug_output>

    return rc;    
 5081afc:	e0bf7d17 	ldw	r2,-524(fp)
}
 5081b00:	e037883a 	mov	sp,fp
 5081b04:	dfc00117 	ldw	ra,4(sp)
 5081b08:	df000017 	ldw	fp,0(sp)
 5081b0c:	dec00504 	addi	sp,sp,20
 5081b10:	f800283a 	ret

05081b14 <myprintf_hex_array>:


int myprintf_hex_array(unsigned char *pHex, int len){
 5081b14:	defff704 	addi	sp,sp,-36
 5081b18:	dfc00815 	stw	ra,32(sp)
 5081b1c:	df000715 	stw	fp,28(sp)
 5081b20:	df000704 	addi	fp,sp,28
 5081b24:	e13ffe15 	stw	r4,-8(fp)
 5081b28:	e17fff15 	stw	r5,-4(fp)
    int i;
    unsigned char szText[16];
    for(i=0;i<len;i++){
 5081b2c:	e03ff915 	stw	zero,-28(fp)
 5081b30:	00001106 	br	5081b78 <myprintf_hex_array+0x64>
        sprintf(szText, "[%02X]", *(pHex+i));
 5081b34:	e0bff917 	ldw	r2,-28(fp)
 5081b38:	e0fffe17 	ldw	r3,-8(fp)
 5081b3c:	1885883a 	add	r2,r3,r2
 5081b40:	10800003 	ldbu	r2,0(r2)
 5081b44:	10c03fcc 	andi	r3,r2,255
 5081b48:	e0bffa04 	addi	r2,fp,-24
 5081b4c:	180d883a 	mov	r6,r3
 5081b50:	01414274 	movhi	r5,1289
 5081b54:	29555104 	addi	r5,r5,21828
 5081b58:	1009883a 	mov	r4,r2
 5081b5c:	5082acc0 	call	5082acc <sprintf>
        DEBUG((szText));
 5081b60:	e0bffa04 	addi	r2,fp,-24
 5081b64:	1009883a 	mov	r4,r2
 5081b68:	5081aa80 	call	5081aa8 <myprintf>


int myprintf_hex_array(unsigned char *pHex, int len){
    int i;
    unsigned char szText[16];
    for(i=0;i<len;i++){
 5081b6c:	e0bff917 	ldw	r2,-28(fp)
 5081b70:	10800044 	addi	r2,r2,1
 5081b74:	e0bff915 	stw	r2,-28(fp)
 5081b78:	e0fff917 	ldw	r3,-28(fp)
 5081b7c:	e0bfff17 	ldw	r2,-4(fp)
 5081b80:	18bfec16 	blt	r3,r2,5081b34 <__alt_data_end+0xfffb3934>
        sprintf(szText, "[%02X]", *(pHex+i));
        DEBUG((szText));
    }
    return len;
 5081b84:	e0bfff17 	ldw	r2,-4(fp)
}
 5081b88:	e037883a 	mov	sp,fp
 5081b8c:	dfc00117 	ldw	ra,4(sp)
 5081b90:	df000017 	ldw	fp,0(sp)
 5081b94:	dec00204 	addi	sp,sp,8
 5081b98:	f800283a 	ret

05081b9c <myprintf_dword_array>:

int  myprintf_dword_array(unsigned int *pArray, int nElementCount){
 5081b9c:	defff704 	addi	sp,sp,-36
 5081ba0:	dfc00815 	stw	ra,32(sp)
 5081ba4:	df000715 	stw	fp,28(sp)
 5081ba8:	df000704 	addi	fp,sp,28
 5081bac:	e13ffe15 	stw	r4,-8(fp)
 5081bb0:	e17fff15 	stw	r5,-4(fp)
    int i;
    char szText[16];
    for(i=0;i<nElementCount;i++){
 5081bb4:	e03ff915 	stw	zero,-28(fp)
 5081bb8:	00001306 	br	5081c08 <myprintf_dword_array+0x6c>
        sprintf(szText, "[%08X]", *(pArray+i));
 5081bbc:	e0bff917 	ldw	r2,-28(fp)
 5081bc0:	1085883a 	add	r2,r2,r2
 5081bc4:	1085883a 	add	r2,r2,r2
 5081bc8:	1007883a 	mov	r3,r2
 5081bcc:	e0bffe17 	ldw	r2,-8(fp)
 5081bd0:	10c5883a 	add	r2,r2,r3
 5081bd4:	10c00017 	ldw	r3,0(r2)
 5081bd8:	e0bffa04 	addi	r2,fp,-24
 5081bdc:	180d883a 	mov	r6,r3
 5081be0:	01414274 	movhi	r5,1289
 5081be4:	29555304 	addi	r5,r5,21836
 5081be8:	1009883a 	mov	r4,r2
 5081bec:	5082acc0 	call	5082acc <sprintf>
        DEBUG((szText));
 5081bf0:	e0bffa04 	addi	r2,fp,-24
 5081bf4:	1009883a 	mov	r4,r2
 5081bf8:	5081aa80 	call	5081aa8 <myprintf>
}

int  myprintf_dword_array(unsigned int *pArray, int nElementCount){
    int i;
    char szText[16];
    for(i=0;i<nElementCount;i++){
 5081bfc:	e0bff917 	ldw	r2,-28(fp)
 5081c00:	10800044 	addi	r2,r2,1
 5081c04:	e0bff915 	stw	r2,-28(fp)
 5081c08:	e0fff917 	ldw	r3,-28(fp)
 5081c0c:	e0bfff17 	ldw	r2,-4(fp)
 5081c10:	18bfea16 	blt	r3,r2,5081bbc <__alt_data_end+0xfffb39bc>
        sprintf(szText, "[%08X]", *(pArray+i));
        DEBUG((szText));
    }
    return nElementCount;
 5081c14:	e0bfff17 	ldw	r2,-4(fp)
}
 5081c18:	e037883a 	mov	sp,fp
 5081c1c:	dfc00117 	ldw	ra,4(sp)
 5081c20:	df000017 	ldw	fp,0(sp)
 5081c24:	dec00204 	addi	sp,sp,8
 5081c28:	f800283a 	ret

05081c2c <ui_is_mic_record>:
int record_sample_rate;

///////////////////////////////////////////////////////////////////////////////
//////////// Internal function implement(body) ////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
bool ui_is_mic_record(void){
 5081c2c:	defffe04 	addi	sp,sp,-8
 5081c30:	df000115 	stw	fp,4(sp)
 5081c34:	df000104 	addi	fp,sp,4
    bool bMicRecord;
    bMicRecord = (IORD(SW_BASE, 0) & 0x01)?FALSE:TRUE;
 5081c38:	00810034 	movhi	r2,1024
 5081c3c:	10801004 	addi	r2,r2,64
 5081c40:	10800037 	ldwio	r2,0(r2)
 5081c44:	1080004c 	andi	r2,r2,1
 5081c48:	1005003a 	cmpeq	r2,r2,zero
 5081c4c:	10803fcc 	andi	r2,r2,255
 5081c50:	e0bfff15 	stw	r2,-4(fp)
    return bMicRecord;    
 5081c54:	e0bfff17 	ldw	r2,-4(fp)
}
 5081c58:	e037883a 	mov	sp,fp
 5081c5c:	df000017 	ldw	fp,0(sp)
 5081c60:	dec00104 	addi	sp,sp,4
 5081c64:	f800283a 	ret

05081c68 <ui_is_mic_boost>:

bool ui_is_mic_boost(void){
 5081c68:	defffe04 	addi	sp,sp,-8
 5081c6c:	df000115 	stw	fp,4(sp)
 5081c70:	df000104 	addi	fp,sp,4
    bool bMicBoost;
    bMicBoost = (IORD(SW_BASE, 0) & (0x01 << 1))?TRUE:FALSE;
 5081c74:	00810034 	movhi	r2,1024
 5081c78:	10801004 	addi	r2,r2,64
 5081c7c:	10800037 	ldwio	r2,0(r2)
 5081c80:	1080008c 	andi	r2,r2,2
 5081c84:	1004c03a 	cmpne	r2,r2,zero
 5081c88:	10803fcc 	andi	r2,r2,255
 5081c8c:	e0bfff15 	stw	r2,-4(fp)
    return bMicBoost;    
 5081c90:	e0bfff17 	ldw	r2,-4(fp)
}
 5081c94:	e037883a 	mov	sp,fp
 5081c98:	df000017 	ldw	fp,0(sp)
 5081c9c:	dec00104 	addi	sp,sp,4
 5081ca0:	f800283a 	ret

05081ca4 <ui_is_dac_zero_cross>:

bool ui_is_dac_zero_cross(void){
 5081ca4:	defffe04 	addi	sp,sp,-8
 5081ca8:	df000115 	stw	fp,4(sp)
 5081cac:	df000104 	addi	fp,sp,4
    bool bZeroCross;
    bZeroCross = (IORD(SW_BASE, 0) & (0x01 << 2))?TRUE:FALSE;
 5081cb0:	00810034 	movhi	r2,1024
 5081cb4:	10801004 	addi	r2,r2,64
 5081cb8:	10800037 	ldwio	r2,0(r2)
 5081cbc:	1080010c 	andi	r2,r2,4
 5081cc0:	1004c03a 	cmpne	r2,r2,zero
 5081cc4:	10803fcc 	andi	r2,r2,255
 5081cc8:	e0bfff15 	stw	r2,-4(fp)
    return bZeroCross;      
 5081ccc:	e0bfff17 	ldw	r2,-4(fp)
}
 5081cd0:	e037883a 	mov	sp,fp
 5081cd4:	df000017 	ldw	fp,0(sp)
 5081cd8:	dec00104 	addi	sp,sp,4
 5081cdc:	f800283a 	ret

05081ce0 <ui_get_sample_rate>:

int ui_get_sample_rate(void){
 5081ce0:	defffd04 	addi	sp,sp,-12
 5081ce4:	df000215 	stw	fp,8(sp)
 5081ce8:	df000204 	addi	fp,sp,8
    int sample_rate = 96000;
 5081cec:	00800074 	movhi	r2,1
 5081cf0:	109dc004 	addi	r2,r2,30464
 5081cf4:	e0bffe15 	stw	r2,-8(fp)
    alt_u32 mask;
    mask = IORD(SW_BASE, 0);
 5081cf8:	00810034 	movhi	r2,1024
 5081cfc:	10801004 	addi	r2,r2,64
 5081d00:	10800037 	ldwio	r2,0(r2)
 5081d04:	e0bfff15 	stw	r2,-4(fp)
    mask = (mask >> 3) & 0x07;
 5081d08:	e0bfff17 	ldw	r2,-4(fp)
 5081d0c:	1004d0fa 	srli	r2,r2,3
 5081d10:	108001cc 	andi	r2,r2,7
 5081d14:	e0bfff15 	stw	r2,-4(fp)
    if (mask == 1)
 5081d18:	e0bfff17 	ldw	r2,-4(fp)
 5081d1c:	10800058 	cmpnei	r2,r2,1
 5081d20:	1000031e 	bne	r2,zero,5081d30 <ui_get_sample_rate+0x50>
        sample_rate = 48000;
 5081d24:	00aee014 	movui	r2,48000
 5081d28:	e0bffe15 	stw	r2,-8(fp)
 5081d2c:	00001106 	br	5081d74 <ui_get_sample_rate+0x94>
    else if (mask == 2)
 5081d30:	e0bfff17 	ldw	r2,-4(fp)
 5081d34:	10800098 	cmpnei	r2,r2,2
 5081d38:	1000031e 	bne	r2,zero,5081d48 <ui_get_sample_rate+0x68>
        sample_rate = 44100;
 5081d3c:	00ab1114 	movui	r2,44100
 5081d40:	e0bffe15 	stw	r2,-8(fp)
 5081d44:	00000b06 	br	5081d74 <ui_get_sample_rate+0x94>
    else if (mask == 3)
 5081d48:	e0bfff17 	ldw	r2,-4(fp)
 5081d4c:	108000d8 	cmpnei	r2,r2,3
 5081d50:	1000031e 	bne	r2,zero,5081d60 <ui_get_sample_rate+0x80>
        sample_rate = 32000;
 5081d54:	009f4004 	movi	r2,32000
 5081d58:	e0bffe15 	stw	r2,-8(fp)
 5081d5c:	00000506 	br	5081d74 <ui_get_sample_rate+0x94>
    else if (mask == 4)
 5081d60:	e0bfff17 	ldw	r2,-4(fp)
 5081d64:	10800118 	cmpnei	r2,r2,4
 5081d68:	1000021e 	bne	r2,zero,5081d74 <ui_get_sample_rate+0x94>
        sample_rate = 8000;
 5081d6c:	0087d004 	movi	r2,8000
 5081d70:	e0bffe15 	stw	r2,-8(fp)
    return sample_rate;      
 5081d74:	e0bffe17 	ldw	r2,-8(fp)
} 
 5081d78:	e037883a 	mov	sp,fp
 5081d7c:	df000017 	ldw	fp,0(sp)
 5081d80:	dec00104 	addi	sp,sp,4
 5081d84:	f800283a 	ret

05081d88 <button_monitor_isr>:

void button_monitor_isr(void* context, alt_u32 id){
 5081d88:	defffc04 	addi	sp,sp,-16
 5081d8c:	df000315 	stw	fp,12(sp)
 5081d90:	df000304 	addi	fp,sp,12
 5081d94:	e13ffe15 	stw	r4,-8(fp)
 5081d98:	e17fff15 	stw	r5,-4(fp)
    volatile alt_u32* pPressedMask = (volatile alt_u32*)context;
 5081d9c:	e0bffe17 	ldw	r2,-8(fp)
 5081da0:	e0bffd15 	stw	r2,-12(fp)
    *pPressedMask |= IORD_ALTERA_AVALON_PIO_EDGE_CAP(KEY_BASE) & 0x0F;  // 4-button 
 5081da4:	00810034 	movhi	r2,1024
 5081da8:	10801b04 	addi	r2,r2,108
 5081dac:	10800037 	ldwio	r2,0(r2)
 5081db0:	10c003cc 	andi	r3,r2,15
 5081db4:	e0bffd17 	ldw	r2,-12(fp)
 5081db8:	10800017 	ldw	r2,0(r2)
 5081dbc:	10c6b03a 	or	r3,r2,r3
 5081dc0:	e0bffd17 	ldw	r2,-12(fp)
 5081dc4:	10c00015 	stw	r3,0(r2)
    
    IOWR_ALTERA_AVALON_PIO_EDGE_CAP(KEY_BASE,0); 
 5081dc8:	0007883a 	mov	r3,zero
 5081dcc:	00810034 	movhi	r2,1024
 5081dd0:	10801b04 	addi	r2,r2,108
 5081dd4:	10c00035 	stwio	r3,0(r2)
}
 5081dd8:	0001883a 	nop
 5081ddc:	e037883a 	mov	sp,fp
 5081de0:	df000017 	ldw	fp,0(sp)
 5081de4:	dec00104 	addi	sp,sp,4
 5081de8:	f800283a 	ret

05081dec <button_monitor_start>:

bool button_monitor_start(volatile alt_u32 *pPressedMask){
 5081dec:	defffc04 	addi	sp,sp,-16
 5081df0:	dfc00315 	stw	ra,12(sp)
 5081df4:	df000215 	stw	fp,8(sp)
 5081df8:	df000204 	addi	fp,sp,8
 5081dfc:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess = TRUE;
 5081e00:	00800044 	movi	r2,1
 5081e04:	e0bffe15 	stw	r2,-8(fp)
    // enable interrupt
    IOWR_ALTERA_AVALON_PIO_IRQ_MASK(KEY_BASE, 0x0F); // 4-button
 5081e08:	00c003c4 	movi	r3,15
 5081e0c:	00810034 	movhi	r2,1024
 5081e10:	10801a04 	addi	r2,r2,104
 5081e14:	10c00035 	stwio	r3,0(r2)
    
    // Reset the edge catpure register
    IOWR_ALTERA_AVALON_PIO_EDGE_CAP(KEY_BASE,0); 
 5081e18:	0007883a 	mov	r3,zero
 5081e1c:	00810034 	movhi	r2,1024
 5081e20:	10801b04 	addi	r2,r2,108
 5081e24:	10c00035 	stwio	r3,0(r2)
    
    // register IRQ
    if (bSuccess && (alt_irq_register(KEY_IRQ, (void *)pPressedMask, button_monitor_isr) != 0)){
 5081e28:	e0bffe17 	ldw	r2,-8(fp)
 5081e2c:	10000a26 	beq	r2,zero,5081e58 <button_monitor_start+0x6c>
 5081e30:	01814234 	movhi	r6,1288
 5081e34:	31876204 	addi	r6,r6,7560
 5081e38:	e17fff17 	ldw	r5,-4(fp)
 5081e3c:	01000084 	movi	r4,2
 5081e40:	5092ab80 	call	5092ab8 <alt_irq_register>
 5081e44:	10000426 	beq	r2,zero,5081e58 <button_monitor_start+0x6c>
        printf("[SW-MONITOR]register button IRQ fail\r\n");
 5081e48:	01014274 	movhi	r4,1289
 5081e4c:	21155504 	addi	r4,r4,21844
 5081e50:	5082a600 	call	5082a60 <puts>
        bSuccess = FALSE;
 5081e54:	e03ffe15 	stw	zero,-8(fp)
    }
    
    return bSuccess;        
 5081e58:	e0bffe17 	ldw	r2,-8(fp)
}
 5081e5c:	e037883a 	mov	sp,fp
 5081e60:	dfc00117 	ldw	ra,4(sp)
 5081e64:	df000017 	ldw	fp,0(sp)
 5081e68:	dec00204 	addi	sp,sp,8
 5081e6c:	f800283a 	ret

05081e70 <init_audio>:




bool init_audio(AUDIO_FUNC audio_func){
 5081e70:	defffb04 	addi	sp,sp,-20
 5081e74:	dfc00415 	stw	ra,16(sp)
 5081e78:	df000315 	stw	fp,12(sp)
 5081e7c:	df000304 	addi	fp,sp,12
 5081e80:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess = TRUE;
 5081e84:	00800044 	movi	r2,1
 5081e88:	e0bffd15 	stw	r2,-12(fp)
    AUDIO_InterfaceActive(FALSE);
 5081e8c:	0009883a 	mov	r4,zero
 5081e90:	50803940 	call	5080394 <AUDIO_InterfaceActive>
    //
    if (audio_func == MIC_RECORD){
 5081e94:	e0bfff17 	ldw	r2,-4(fp)
 5081e98:	10000f1e 	bne	r2,zero,5081ed8 <init_audio+0x68>
        bool bMicBoost;
        bMicBoost = ui_is_mic_boost();
 5081e9c:	5081c680 	call	5081c68 <ui_is_mic_boost>
 5081ea0:	e0bffe15 	stw	r2,-8(fp)
        AUDIO_SetInputSource(SOURCE_MIC);
 5081ea4:	0009883a 	mov	r4,zero
 5081ea8:	50808540 	call	5080854 <AUDIO_SetInputSource>
        AUDIO_DacEnableSoftMute(TRUE);
 5081eac:	01000044 	movi	r4,1
 5081eb0:	508065c0 	call	508065c <AUDIO_DacEnableSoftMute>
        AUDIO_AdcEnableHighPassFilter(FALSE);
 5081eb4:	0009883a 	mov	r4,zero
 5081eb8:	50804540 	call	5080454 <AUDIO_AdcEnableHighPassFilter>
        AUDIO_MicBoost(bMicBoost);   
 5081ebc:	e13ffe17 	ldw	r4,-8(fp)
 5081ec0:	50803dc0 	call	50803dc <AUDIO_MicBoost>
        AUDIO_MicMute(FALSE);
 5081ec4:	0009883a 	mov	r4,zero
 5081ec8:	50806e80 	call	50806e8 <AUDIO_MicMute>
        AUDIO_LineInMute(TRUE);
 5081ecc:	01000044 	movi	r4,1
 5081ed0:	50807740 	call	5080774 <AUDIO_LineInMute>
 5081ed4:	00002606 	br	5081f70 <init_audio+0x100>
    }else if (audio_func == LINEIN_RECORD){
 5081ed8:	e0bfff17 	ldw	r2,-4(fp)
 5081edc:	10800058 	cmpnei	r2,r2,1
 5081ee0:	10000e1e 	bne	r2,zero,5081f1c <init_audio+0xac>
        AUDIO_SetInputSource(SOURCE_LINEIN);
 5081ee4:	01000044 	movi	r4,1
 5081ee8:	50808540 	call	5080854 <AUDIO_SetInputSource>
        AUDIO_DacEnableSoftMute(TRUE);
 5081eec:	01000044 	movi	r4,1
 5081ef0:	508065c0 	call	508065c <AUDIO_DacEnableSoftMute>
        AUDIO_AdcEnableHighPassFilter(FALSE);
 5081ef4:	0009883a 	mov	r4,zero
 5081ef8:	50804540 	call	5080454 <AUDIO_AdcEnableHighPassFilter>
        AUDIO_MicMute(TRUE);
 5081efc:	01000044 	movi	r4,1
 5081f00:	50806e80 	call	50806e8 <AUDIO_MicMute>
        AUDIO_LineInMute(FALSE);
 5081f04:	0009883a 	mov	r4,zero
 5081f08:	50807740 	call	5080774 <AUDIO_LineInMute>
        AUDIO_SetLineInVol(0x17, 0x17);  // max 0x1F, min:0; 0x17: 0dB (assume max input is 2.0v rms)
 5081f0c:	014005c4 	movi	r5,23
 5081f10:	010005c4 	movi	r4,23
 5081f14:	50809c80 	call	50809c8 <AUDIO_SetLineInVol>
 5081f18:	00001506 	br	5081f70 <init_audio+0x100>
    }else if (audio_func == LINEOUT_PLAY){
 5081f1c:	e0bfff17 	ldw	r2,-4(fp)
 5081f20:	10800098 	cmpnei	r2,r2,2
 5081f24:	1000121e 	bne	r2,zero,5081f70 <init_audio+0x100>
        AUDIO_DacEnableSoftMute(TRUE);
 5081f28:	01000044 	movi	r4,1
 5081f2c:	508065c0 	call	508065c <AUDIO_DacEnableSoftMute>
        AUDIO_MicBoost(FALSE);   
 5081f30:	0009883a 	mov	r4,zero
 5081f34:	50803dc0 	call	50803dc <AUDIO_MicBoost>
        AUDIO_MicMute(TRUE);
 5081f38:	01000044 	movi	r4,1
 5081f3c:	50806e80 	call	50806e8 <AUDIO_MicMute>
        AUDIO_LineInMute(FALSE);
 5081f40:	0009883a 	mov	r4,zero
 5081f44:	50807740 	call	5080774 <AUDIO_LineInMute>
        AUDIO_DacEnableSoftMute(FALSE);
 5081f48:	0009883a 	mov	r4,zero
 5081f4c:	508065c0 	call	508065c <AUDIO_DacEnableSoftMute>
        //AUDIO_DacDeemphasisControl(DEEMPHASIS_48K);
        AUDIO_DacEnableZeroCross(ui_is_dac_zero_cross());
 5081f50:	5081ca40 	call	5081ca4 <ui_is_dac_zero_cross>
 5081f54:	1009883a 	mov	r4,r2
 5081f58:	508057c0 	call	508057c <AUDIO_DacEnableZeroCross>
        AUDIO_SetLineOutVol(LINEOUT_DEFUALT_VOL, LINEOUT_DEFUALT_VOL); // max 7F, min: 30, 0x79: 0 db
 5081f5c:	01401e44 	movi	r5,121
 5081f60:	01001e44 	movi	r4,121
 5081f64:	5080adc0 	call	5080adc <AUDIO_SetLineOutVol>
        AUDIO_DacEnableSoftMute(FALSE);
 5081f68:	0009883a 	mov	r4,zero
 5081f6c:	508065c0 	call	508065c <AUDIO_DacEnableSoftMute>
    }
    
    if (record_sample_rate == 8000)
 5081f70:	008142b4 	movhi	r2,1290
 5081f74:	10a5f104 	addi	r2,r2,-26684
 5081f78:	10800017 	ldw	r2,0(r2)
 5081f7c:	1087d018 	cmpnei	r2,r2,8000
 5081f80:	1000031e 	bne	r2,zero,5081f90 <init_audio+0x120>
        AUDIO_SetSampleRate(RATE_ADC8K_DAC8K);
 5081f84:	010000c4 	movi	r4,3
 5081f88:	50808e40 	call	50808e4 <AUDIO_SetSampleRate>
 5081f8c:	00001a06 	br	5081ff8 <init_audio+0x188>
    else if (record_sample_rate == 32000)
 5081f90:	008142b4 	movhi	r2,1290
 5081f94:	10a5f104 	addi	r2,r2,-26684
 5081f98:	10800017 	ldw	r2,0(r2)
 5081f9c:	109f4018 	cmpnei	r2,r2,32000
 5081fa0:	1000031e 	bne	r2,zero,5081fb0 <init_audio+0x140>
        AUDIO_SetSampleRate(RATE_ADC32K_DAC32K);
 5081fa4:	01000104 	movi	r4,4
 5081fa8:	50808e40 	call	50808e4 <AUDIO_SetSampleRate>
 5081fac:	00001206 	br	5081ff8 <init_audio+0x188>
    else if (record_sample_rate == 48000)
 5081fb0:	008142b4 	movhi	r2,1290
 5081fb4:	10a5f104 	addi	r2,r2,-26684
 5081fb8:	10c00017 	ldw	r3,0(r2)
 5081fbc:	00aee014 	movui	r2,48000
 5081fc0:	1880031e 	bne	r3,r2,5081fd0 <init_audio+0x160>
        AUDIO_SetSampleRate(RATE_ADC48K_DAC48K);
 5081fc4:	0009883a 	mov	r4,zero
 5081fc8:	50808e40 	call	50808e4 <AUDIO_SetSampleRate>
 5081fcc:	00000a06 	br	5081ff8 <init_audio+0x188>
    else if (record_sample_rate == 44100)
 5081fd0:	008142b4 	movhi	r2,1290
 5081fd4:	10a5f104 	addi	r2,r2,-26684
 5081fd8:	10c00017 	ldw	r3,0(r2)
 5081fdc:	00ab1114 	movui	r2,44100
 5081fe0:	1880031e 	bne	r3,r2,5081ff0 <init_audio+0x180>
        AUDIO_SetSampleRate(RATE_ADC44K1_DAC44K1);
 5081fe4:	01000184 	movi	r4,6
 5081fe8:	50808e40 	call	50808e4 <AUDIO_SetSampleRate>
 5081fec:	00000206 	br	5081ff8 <init_audio+0x188>
    else    
        AUDIO_SetSampleRate(RATE_ADC96K_DAC96K);
 5081ff0:	01000144 	movi	r4,5
 5081ff4:	50808e40 	call	50808e4 <AUDIO_SetSampleRate>
    //
    AUDIO_InterfaceActive(TRUE);
 5081ff8:	01000044 	movi	r4,1
 5081ffc:	50803940 	call	5080394 <AUDIO_InterfaceActive>
    
    return bSuccess;             
 5082000:	e0bffd17 	ldw	r2,-12(fp)
}
 5082004:	e037883a 	mov	sp,fp
 5082008:	dfc00117 	ldw	ra,4(sp)
 508200c:	df000017 	ldw	fp,0(sp)
 5082010:	dec00204 	addi	sp,sp,8
 5082014:	f800283a 	ret

05082018 <display_time_elapsed>:


void display_time_elapsed(alt_u32 sample_num){
 5082018:	defffc04 	addi	sp,sp,-16
 508201c:	dfc00315 	stw	ra,12(sp)
 5082020:	df000215 	stw	fp,8(sp)
 5082024:	df000204 	addi	fp,sp,8
 5082028:	e13fff15 	stw	r4,-4(fp)
    // assume sample rate is 48K
    alt_u32 time;
    time = sample_num * 100 / record_sample_rate;
 508202c:	e0bfff17 	ldw	r2,-4(fp)
 5082030:	10c01924 	muli	r3,r2,100
 5082034:	008142b4 	movhi	r2,1290
 5082038:	10a5f104 	addi	r2,r2,-26684
 508203c:	10800017 	ldw	r2,0(r2)
 5082040:	100b883a 	mov	r5,r2
 5082044:	1809883a 	mov	r4,r3
 5082048:	50828780 	call	5082878 <__udivsi3>
 508204c:	e0bffe15 	stw	r2,-8(fp)
    SEG7_Decimal(time, 0x04);
 5082050:	01400104 	movi	r5,4
 5082054:	e13ffe17 	ldw	r4,-8(fp)
 5082058:	50819880 	call	5081988 <SEG7_Decimal>
}
 508205c:	0001883a 	nop
 5082060:	e037883a 	mov	sp,fp
 5082064:	dfc00117 	ldw	ra,4(sp)
 5082068:	df000017 	ldw	fp,0(sp)
 508206c:	dec00204 	addi	sp,sp,8
 5082070:	f800283a 	ret

05082074 <show_power>:

void show_power(short sample){
 5082074:	defffc04 	addi	sp,sp,-16
 5082078:	dfc00315 	stw	ra,12(sp)
 508207c:	df000215 	stw	fp,8(sp)
 5082080:	df000204 	addi	fp,sp,8
 5082084:	2005883a 	mov	r2,r4
 5082088:	e0bfff0d 	sth	r2,-4(fp)
    static alt_u32 sum = 0;
    static alt_u16   cnt = 0;
    alt_u16 power = 0;
 508208c:	e03ffe0d 	sth	zero,-8(fp)
    sum += (sample >= 0)?sample:-sample;
 5082090:	e0bfff0f 	ldh	r2,-4(fp)
 5082094:	10000216 	blt	r2,zero,50820a0 <show_power+0x2c>
 5082098:	e0bfff0f 	ldh	r2,-4(fp)
 508209c:	00000206 	br	50820a8 <show_power+0x34>
 50820a0:	e0bfff0f 	ldh	r2,-4(fp)
 50820a4:	0085c83a 	sub	r2,zero,r2
 50820a8:	d0e6cf17 	ldw	r3,-25796(gp)
 50820ac:	10c5883a 	add	r2,r2,r3
 50820b0:	d0a6cf15 	stw	r2,-25796(gp)
    cnt++;
 50820b4:	d0a6d00b 	ldhu	r2,-25792(gp)
 50820b8:	10800044 	addi	r2,r2,1
 50820bc:	d0a6d00d 	sth	r2,-25792(gp)
    if (cnt == 32){
 50820c0:	d0a6d00b 	ldhu	r2,-25792(gp)
 50820c4:	10bfffcc 	andi	r2,r2,65535
 50820c8:	10800818 	cmpnei	r2,r2,32
 50820cc:	1000091e 	bne	r2,zero,50820f4 <show_power+0x80>
        power = sum >> 13;
 50820d0:	d0a6cf17 	ldw	r2,-25796(gp)
 50820d4:	1004d37a 	srli	r2,r2,13
 50820d8:	e0bffe0d 	sth	r2,-8(fp)
        LED_LightCount(power); 
 50820dc:	e0bffe0b 	ldhu	r2,-8(fp)
 50820e0:	10803fcc 	andi	r2,r2,255
 50820e4:	1009883a 	mov	r4,r2
 50820e8:	50817100 	call	5081710 <LED_LightCount>
        sum = 0;
 50820ec:	d026cf15 	stw	zero,-25796(gp)
        cnt = 0;
 50820f0:	d026d00d 	sth	zero,-25792(gp)
    }
}
 50820f4:	0001883a 	nop
 50820f8:	e037883a 	mov	sp,fp
 50820fc:	dfc00117 	ldw	ra,4(sp)
 5082100:	df000017 	ldw	fp,0(sp)
 5082104:	dec00204 	addi	sp,sp,8
 5082108:	f800283a 	ret

0508210c <init>:


bool init(void){
 508210c:	defffd04 	addi	sp,sp,-12
 5082110:	dfc00215 	stw	ra,8(sp)
 5082114:	df000115 	stw	fp,4(sp)
 5082118:	df000104 	addi	fp,sp,4
    bool bSuccess = TRUE;
 508211c:	00800044 	movi	r2,1
 5082120:	e0bfff15 	stw	r2,-4(fp)
    
    SEG7_Clear();
 5082124:	50817840 	call	5081784 <SEG7_Clear>


    SEG7_Decimal(0x00000000, 0x00);
 5082128:	000b883a 	mov	r5,zero
 508212c:	0009883a 	mov	r4,zero
 5082130:	50819880 	call	5081988 <SEG7_Decimal>

    // prepare    
    if (!AUDIO_Init()){
 5082134:	508020c0 	call	508020c <AUDIO_Init>
 5082138:	1000041e 	bne	r2,zero,508214c <init+0x40>

        printf("Audio Init Error\r\n");
 508213c:	01014274 	movhi	r4,1289
 5082140:	21155f04 	addi	r4,r4,21884
 5082144:	5082a600 	call	5082a60 <puts>
        bSuccess = FALSE;
 5082148:	e03fff15 	stw	zero,-4(fp)
    }
    
        
    return bSuccess;
 508214c:	e0bfff17 	ldw	r2,-4(fp)
}
 5082150:	e037883a 	mov	sp,fp
 5082154:	dfc00117 	ldw	ra,4(sp)
 5082158:	df000017 	ldw	fp,0(sp)
 508215c:	dec00204 	addi	sp,sp,8
 5082160:	f800283a 	ret

05082164 <dump_record_data>:

void dump_record_data(alt_u32 *pData, alt_u32 len){
 5082164:	defff804 	addi	sp,sp,-32
 5082168:	dfc00715 	stw	ra,28(sp)
 508216c:	df000615 	stw	fp,24(sp)
 5082170:	df000604 	addi	fp,sp,24
 5082174:	e13ffe15 	stw	r4,-8(fp)
 5082178:	e17fff15 	stw	r5,-4(fp)
    short sample_l, sample_r, sample_max = 0;
 508217c:	e03ffa0d 	sth	zero,-24(fp)
    alt_u32 data;
    int i;
    //return ;
    for(i=0;i<len;i++){
 5082180:	e03ffb15 	stw	zero,-20(fp)
 5082184:	00003506 	br	508225c <dump_record_data+0xf8>
        data = *pData++;
 5082188:	e0bffe17 	ldw	r2,-8(fp)
 508218c:	10c00104 	addi	r3,r2,4
 5082190:	e0fffe15 	stw	r3,-8(fp)
 5082194:	10800017 	ldw	r2,0(r2)
 5082198:	e0bffc15 	stw	r2,-16(fp)
        sample_l = (short)((data >> 16) & 0xFFFF); 
 508219c:	e0bffc17 	ldw	r2,-16(fp)
 50821a0:	1004d43a 	srli	r2,r2,16
 50821a4:	e0bffd0d 	sth	r2,-12(fp)
        sample_r = (short)(data & 0xFFFF);
 50821a8:	e0bffc17 	ldw	r2,-16(fp)
 50821ac:	e0bffd8d 	sth	r2,-10(fp)
        printf("[%d]%d/%d\n", i, sample_l, sample_r);
 50821b0:	e0bffd0f 	ldh	r2,-12(fp)
 50821b4:	e0fffd8f 	ldh	r3,-10(fp)
 50821b8:	180f883a 	mov	r7,r3
 50821bc:	100d883a 	mov	r6,r2
 50821c0:	e17ffb17 	ldw	r5,-20(fp)
 50821c4:	01014274 	movhi	r4,1289
 50821c8:	21156404 	addi	r4,r4,21904
 50821cc:	50829640 	call	5082964 <printf>
        if (sample_l > 0 && sample_max <  sample_l)
 50821d0:	e0bffd0f 	ldh	r2,-12(fp)
 50821d4:	0080050e 	bge	zero,r2,50821ec <dump_record_data+0x88>
 50821d8:	e0fffa0f 	ldh	r3,-24(fp)
 50821dc:	e0bffd0f 	ldh	r2,-12(fp)
 50821e0:	1880020e 	bge	r3,r2,50821ec <dump_record_data+0x88>
            sample_max = sample_l;
 50821e4:	e0bffd0b 	ldhu	r2,-12(fp)
 50821e8:	e0bffa0d 	sth	r2,-24(fp)
        if (sample_l < 0 && sample_max <  -sample_l)
 50821ec:	e0bffd0f 	ldh	r2,-12(fp)
 50821f0:	1000070e 	bge	r2,zero,5082210 <dump_record_data+0xac>
 50821f4:	e0fffa0f 	ldh	r3,-24(fp)
 50821f8:	e0bffd0f 	ldh	r2,-12(fp)
 50821fc:	0085c83a 	sub	r2,zero,r2
 5082200:	1880030e 	bge	r3,r2,5082210 <dump_record_data+0xac>
            sample_max = -sample_l;
 5082204:	e0bffd0b 	ldhu	r2,-12(fp)
 5082208:	0085c83a 	sub	r2,zero,r2
 508220c:	e0bffa0d 	sth	r2,-24(fp)
        if (sample_r > 0 && sample_max <  sample_r)
 5082210:	e0bffd8f 	ldh	r2,-10(fp)
 5082214:	0080050e 	bge	zero,r2,508222c <dump_record_data+0xc8>
 5082218:	e0fffa0f 	ldh	r3,-24(fp)
 508221c:	e0bffd8f 	ldh	r2,-10(fp)
 5082220:	1880020e 	bge	r3,r2,508222c <dump_record_data+0xc8>
            sample_max = sample_r;
 5082224:	e0bffd8b 	ldhu	r2,-10(fp)
 5082228:	e0bffa0d 	sth	r2,-24(fp)
        if (sample_r < 0 && sample_max <  -sample_r)
 508222c:	e0bffd8f 	ldh	r2,-10(fp)
 5082230:	1000070e 	bge	r2,zero,5082250 <dump_record_data+0xec>
 5082234:	e0fffa0f 	ldh	r3,-24(fp)
 5082238:	e0bffd8f 	ldh	r2,-10(fp)
 508223c:	0085c83a 	sub	r2,zero,r2
 5082240:	1880030e 	bge	r3,r2,5082250 <dump_record_data+0xec>
            sample_max = -sample_r;
 5082244:	e0bffd8b 	ldhu	r2,-10(fp)
 5082248:	0085c83a 	sub	r2,zero,r2
 508224c:	e0bffa0d 	sth	r2,-24(fp)
void dump_record_data(alt_u32 *pData, alt_u32 len){
    short sample_l, sample_r, sample_max = 0;
    alt_u32 data;
    int i;
    //return ;
    for(i=0;i<len;i++){
 5082250:	e0bffb17 	ldw	r2,-20(fp)
 5082254:	10800044 	addi	r2,r2,1
 5082258:	e0bffb15 	stw	r2,-20(fp)
 508225c:	e0fffb17 	ldw	r3,-20(fp)
 5082260:	e0bfff17 	ldw	r2,-4(fp)
 5082264:	18bfc836 	bltu	r3,r2,5082188 <__alt_data_end+0xfffb3f88>
        if (sample_r > 0 && sample_max <  sample_r)
            sample_max = sample_r;
        if (sample_r < 0 && sample_max <  -sample_r)
            sample_max = -sample_r;
    }
    printf("max=%d\n", sample_max);
 5082268:	e0bffa0f 	ldh	r2,-24(fp)
 508226c:	100b883a 	mov	r5,r2
 5082270:	01014274 	movhi	r4,1289
 5082274:	21156704 	addi	r4,r4,21916
 5082278:	50829640 	call	5082964 <printf>
}
 508227c:	0001883a 	nop
 5082280:	e037883a 	mov	sp,fp
 5082284:	dfc00117 	ldw	ra,4(sp)
 5082288:	df000017 	ldw	fp,0(sp)
 508228c:	dec00204 	addi	sp,sp,8
 5082290:	f800283a 	ret

05082294 <show_menu>:
    "  LED:  Display audio singal strength.\n",
    "  SEG7: Display time elapsed for playing/recording.\n"
    "\n\n"
};

void show_menu(void){
 5082294:	defffd04 	addi	sp,sp,-12
 5082298:	dfc00215 	stw	ra,8(sp)
 508229c:	df000115 	stw	fp,4(sp)
 50822a0:	df000104 	addi	fp,sp,4
    int i;
    for(i=0;i<sizeof(szMenu)/sizeof(szMenu[0]);i++)
 50822a4:	e03fff15 	stw	zero,-4(fp)
 50822a8:	00000a06 	br	50822d4 <show_menu+0x40>
        printf(szMenu[i]);
 50822ac:	e0bfff17 	ldw	r2,-4(fp)
 50822b0:	100691fa 	slli	r3,r2,7
 50822b4:	00814274 	movhi	r2,1289
 50822b8:	10956904 	addi	r2,r2,21924
 50822bc:	1885883a 	add	r2,r3,r2
 50822c0:	1009883a 	mov	r4,r2
 50822c4:	50829640 	call	5082964 <printf>
    "\n\n"
};

void show_menu(void){
    int i;
    for(i=0;i<sizeof(szMenu)/sizeof(szMenu[0]);i++)
 50822c8:	e0bfff17 	ldw	r2,-4(fp)
 50822cc:	10800044 	addi	r2,r2,1
 50822d0:	e0bfff15 	stw	r2,-4(fp)
 50822d4:	e0bfff17 	ldw	r2,-4(fp)
 50822d8:	10800430 	cmpltui	r2,r2,16
 50822dc:	103ff31e 	bne	r2,zero,50822ac <__alt_data_end+0xfffb40ac>
        printf(szMenu[i]);
}
 50822e0:	0001883a 	nop
 50822e4:	e037883a 	mov	sp,fp
 50822e8:	dfc00117 	ldw	ra,4(sp)
 50822ec:	df000017 	ldw	fp,0(sp)
 50822f0:	dec00204 	addi	sp,sp,8
 50822f4:	f800283a 	ret

050822f8 <main>:

int main()
{
 50822f8:	deffeb04 	addi	sp,sp,-84
 50822fc:	dfc01415 	stw	ra,80(sp)
 5082300:	df001315 	stw	fp,76(sp)
 5082304:	df001304 	addi	fp,sp,76
    typedef enum{
        ST_STANDY,
        ST_RECODING,
        ST_PLAYING
    }STATE;
    STATE state = ST_STANDY;
 5082308:	e03fed15 	stw	zero,-76(fp)
    volatile alt_u32 button_mask=0;
 508230c:	e03ffe15 	stw	zero,-8(fp)
    bool bRecordPressed, bPlayPressed, bError = FALSE;
 5082310:	e03fee15 	stw	zero,-72(fp)
    alt_u32 *pBuf, *pPlaying, *pRecording, RecordLen, PlayLen, data, try_cnt, buf_sample_size;
    alt_u16 ch_right, ch_left;

    
    printf("\nHello World\n");
 5082314:	01014274 	movhi	r4,1289
 5082318:	21176904 	addi	r4,r4,23972
 508231c:	5082a600 	call	5082a60 <puts>

    show_menu();    
 5082320:	50822940 	call	5082294 <show_menu>
    if (!init())
 5082324:	508210c0 	call	508210c <init>
 5082328:	1000021e 	bne	r2,zero,5082334 <main+0x3c>
        return 0;
 508232c:	0005883a 	mov	r2,zero
 5082330:	00010e06 	br	508276c <main+0x474>
        
    
#ifdef USE_SDRAM_FOR_DATA
    pBuf = (alt_u32 *)SDRAM_BASE;
 5082334:	e03ff615 	stw	zero,-40(fp)
    buf_sample_size = SDRAM_SPAN/sizeof(alt_u32);
 5082338:	00804034 	movhi	r2,256
 508233c:	e0bff715 	stw	r2,-36(fp)
        LCD_TextOut("malloc fail\n\n");
        printf("malloc fail\r\n");
        return 0;
    }
#endif    
    button_monitor_start(&button_mask);  // button IRQ
 5082340:	e0bffe04 	addi	r2,fp,-8
 5082344:	1009883a 	mov	r4,r2
 5082348:	5081dec0 	call	5081dec <button_monitor_start>
    printf("ready\n");
 508234c:	01014274 	movhi	r4,1289
 5082350:	21176d04 	addi	r4,r4,23988
 5082354:	5082a600 	call	5082a60 <puts>
    
    
    // test
    record_sample_rate = ui_get_sample_rate(); 
 5082358:	5081ce00 	call	5081ce0 <ui_get_sample_rate>
 508235c:	1007883a 	mov	r3,r2
 5082360:	008142b4 	movhi	r2,1290
 5082364:	10a5f104 	addi	r2,r2,-26684
 5082368:	10c00015 	stw	r3,0(r2)
    RecordLen = buf_sample_size;
 508236c:	e0bff717 	ldw	r2,-36(fp)
 5082370:	e0bff115 	stw	r2,-60(fp)
    //
    
    // infinite loop
    while(1){
        // 
        bRecordPressed = (button_mask & RECORD_BUTTON)?TRUE:FALSE;
 5082374:	e0bffe17 	ldw	r2,-8(fp)
 5082378:	1080020c 	andi	r2,r2,8
 508237c:	1004c03a 	cmpne	r2,r2,zero
 5082380:	10803fcc 	andi	r2,r2,255
 5082384:	e0bff815 	stw	r2,-32(fp)
        bPlayPressed = (button_mask & PLAY_BUTTON)?TRUE:FALSE;
 5082388:	e0bffe17 	ldw	r2,-8(fp)
 508238c:	1080010c 	andi	r2,r2,4
 5082390:	1004c03a 	cmpne	r2,r2,zero
 5082394:	10803fcc 	andi	r2,r2,255
 5082398:	e0bff915 	stw	r2,-28(fp)
        if (bPlayPressed || bRecordPressed) 
 508239c:	e0bff917 	ldw	r2,-28(fp)
 50823a0:	1000021e 	bne	r2,zero,50823ac <main+0xb4>
 50823a4:	e0bff817 	ldw	r2,-32(fp)
 50823a8:	10000126 	beq	r2,zero,50823b0 <main+0xb8>
            button_mask = 0;
 50823ac:	e03ffe15 	stw	zero,-8(fp)
        if (state == ST_STANDY){
 50823b0:	e0bfed17 	ldw	r2,-76(fp)
 50823b4:	10004c1e 	bne	r2,zero,50824e8 <main+0x1f0>
            if (bRecordPressed){
 50823b8:	e0bff817 	ldw	r2,-32(fp)
 50823bc:	10002f26 	beq	r2,zero,508247c <main+0x184>
                bool bMicRecord;
                record_sample_rate = ui_get_sample_rate();
 50823c0:	5081ce00 	call	5081ce0 <ui_get_sample_rate>
 50823c4:	1007883a 	mov	r3,r2
 50823c8:	008142b4 	movhi	r2,1290
 50823cc:	10a5f104 	addi	r2,r2,-26684
 50823d0:	10c00015 	stw	r3,0(r2)
                bMicRecord = ui_is_mic_record();
 50823d4:	5081c2c0 	call	5081c2c <ui_is_mic_record>
 50823d8:	e0bffa15 	stw	r2,-24(fp)
                AUDIO_FifoClear();
 50823dc:	5080f1c0 	call	5080f1c <AUDIO_FifoClear>
                init_audio(bMicRecord?MIC_RECORD:LINEIN_RECORD);
 50823e0:	e0bffa17 	ldw	r2,-24(fp)
 50823e4:	1005003a 	cmpeq	r2,r2,zero
 50823e8:	10803fcc 	andi	r2,r2,255
 50823ec:	1009883a 	mov	r4,r2
 50823f0:	5081e700 	call	5081e70 <init_audio>
                AUDIO_FifoClear();
 50823f4:	5080f1c0 	call	5080f1c <AUDIO_FifoClear>
                state = ST_RECODING;
 50823f8:	00800044 	movi	r2,1
 50823fc:	e0bfed15 	stw	r2,-76(fp)
                if (bMicRecord){
 5082400:	e0bffa17 	ldw	r2,-24(fp)
 5082404:	10001226 	beq	r2,zero,5082450 <main+0x158>
                    bool bMicBoost = ui_is_mic_boost();
 5082408:	5081c680 	call	5081c68 <ui_is_mic_boost>
 508240c:	e0bffb15 	stw	r2,-20(fp)
                    printf("MIC %srecording (sample rate = %d)...\r\n", bMicBoost?"Boost ":"", record_sample_rate);
 5082410:	e0bffb17 	ldw	r2,-20(fp)
 5082414:	10000326 	beq	r2,zero,5082424 <main+0x12c>
 5082418:	00814274 	movhi	r2,1289
 508241c:	10976f04 	addi	r2,r2,23996
 5082420:	00000206 	br	508242c <main+0x134>
 5082424:	00814274 	movhi	r2,1289
 5082428:	10977104 	addi	r2,r2,24004
 508242c:	00c142b4 	movhi	r3,1290
 5082430:	18e5f104 	addi	r3,r3,-26684
 5082434:	18c00017 	ldw	r3,0(r3)
 5082438:	180d883a 	mov	r6,r3
 508243c:	100b883a 	mov	r5,r2
 5082440:	01014274 	movhi	r4,1289
 5082444:	21177204 	addi	r4,r4,24008
 5082448:	50829640 	call	5082964 <printf>
 508244c:	00000706 	br	508246c <main+0x174>

                }else{
                    printf("LINE-IN recording (sample rate = %d)...\r\n", record_sample_rate);
 5082450:	008142b4 	movhi	r2,1290
 5082454:	10a5f104 	addi	r2,r2,-26684
 5082458:	10800017 	ldw	r2,0(r2)
 508245c:	100b883a 	mov	r5,r2
 5082460:	01014274 	movhi	r4,1289
 5082464:	21177c04 	addi	r4,r4,24048
 5082468:	50829640 	call	5082964 <printf>


                }                    
                pRecording = pBuf;
 508246c:	e0bff617 	ldw	r2,-40(fp)
 5082470:	e0bff015 	stw	r2,-64(fp)
                RecordLen = 0;
 5082474:	e03ff115 	stw	zero,-60(fp)
 5082478:	00001906 	br	50824e0 <main+0x1e8>
            }else if (bPlayPressed){
 508247c:	e0bff917 	ldw	r2,-28(fp)
 5082480:	10001726 	beq	r2,zero,50824e0 <main+0x1e8>
                if (RecordLen == 0){
 5082484:	e0bff117 	ldw	r2,-60(fp)
 5082488:	1000041e 	bne	r2,zero,508249c <main+0x1a4>
                    printf("Please record before play audio\r\n");
 508248c:	01014274 	movhi	r4,1289
 5082490:	21178704 	addi	r4,r4,24092
 5082494:	5082a600 	call	5082a60 <puts>
 5082498:	00001106 	br	50824e0 <main+0x1e8>

                }else{
                    bool bZeroCross = ui_is_dac_zero_cross();
 508249c:	5081ca40 	call	5081ca4 <ui_is_dac_zero_cross>
 50824a0:	e0bffc15 	stw	r2,-16(fp)
                    AUDIO_FifoClear();
 50824a4:	5080f1c0 	call	5080f1c <AUDIO_FifoClear>
                    init_audio(LINEOUT_PLAY);
 50824a8:	01000084 	movi	r4,2
 50824ac:	5081e700 	call	5081e70 <init_audio>
                    state = ST_PLAYING;
 50824b0:	00800084 	movi	r2,2
 50824b4:	e0bfed15 	stw	r2,-76(fp)
                    printf("playing (sample rate = %d)...\r\n", record_sample_rate);
 50824b8:	008142b4 	movhi	r2,1290
 50824bc:	10a5f104 	addi	r2,r2,-26684
 50824c0:	10800017 	ldw	r2,0(r2)
 50824c4:	100b883a 	mov	r5,r2
 50824c8:	01014274 	movhi	r4,1289
 50824cc:	21179004 	addi	r4,r4,24128
 50824d0:	50829640 	call	5082964 <printf>


                    pPlaying = pBuf;
 50824d4:	e0bff617 	ldw	r2,-40(fp)
 50824d8:	e0bfef15 	stw	r2,-68(fp)
                    PlayLen = 0;
 50824dc:	e03ff215 	stw	zero,-56(fp)
                }  
            }
            bError = FALSE;
 50824e0:	e03fee15 	stw	zero,-72(fp)
 50824e4:	003fa306 	br	5082374 <__alt_data_end+0xfffb4174>
        }else if (state == ST_RECODING){
 50824e8:	e0bfed17 	ldw	r2,-76(fp)
 50824ec:	10800058 	cmpnei	r2,r2,1
 50824f0:	1000471e 	bne	r2,zero,5082610 <main+0x318>
            if (bRecordPressed || (RecordLen >= buf_sample_size) || bError){
 50824f4:	e0bff817 	ldw	r2,-32(fp)
 50824f8:	1000051e 	bne	r2,zero,5082510 <main+0x218>
 50824fc:	e0fff117 	ldw	r3,-60(fp)
 5082500:	e0bff717 	ldw	r2,-36(fp)
 5082504:	1880022e 	bgeu	r3,r2,5082510 <main+0x218>
 5082508:	e0bfee17 	ldw	r2,-72(fp)
 508250c:	10000826 	beq	r2,zero,5082530 <main+0x238>
                // stop record
                printf("record %d samples\n", (int)RecordLen);
 5082510:	e0bff117 	ldw	r2,-60(fp)
 5082514:	100b883a 	mov	r5,r2
 5082518:	01014274 	movhi	r4,1289
 508251c:	21179804 	addi	r4,r4,24160
 5082520:	50829640 	call	5082964 <printf>


                state = ST_STANDY;
 5082524:	e03fed15 	stw	zero,-76(fp)
                LED_AllOff();
 5082528:	50816e00 	call	50816e0 <LED_AllOff>
 508252c:	00008e06 	br	5082768 <main+0x470>
               // dump_record_data(pBuf, RecordLen);
                
            }else{
                // continue recoding
                int i = 0;
 5082530:	e03ff415 	stw	zero,-48(fp)
                while ((i < RECORD_BLOCK_SIZE) && (RecordLen < buf_sample_size)){
 5082534:	00002d06 	br	50825ec <main+0x2f4>
                    try_cnt = 0;
 5082538:	e03ff315 	stw	zero,-52(fp)
                    while (!AUDIO_AdcFifoNotEmpty() && try_cnt < MAX_TRY_CNT){ // wait while empty
 508253c:	00000306 	br	508254c <main+0x254>
                        try_cnt++;    
 5082540:	e0bff317 	ldw	r2,-52(fp)
 5082544:	10800044 	addi	r2,r2,1
 5082548:	e0bff315 	stw	r2,-52(fp)
            }else{
                // continue recoding
                int i = 0;
                while ((i < RECORD_BLOCK_SIZE) && (RecordLen < buf_sample_size)){
                    try_cnt = 0;
                    while (!AUDIO_AdcFifoNotEmpty() && try_cnt < MAX_TRY_CNT){ // wait while empty
 508254c:	5080e880 	call	5080e88 <AUDIO_AdcFifoNotEmpty>
 5082550:	1000031e 	bne	r2,zero,5082560 <main+0x268>
 5082554:	e0bff317 	ldw	r2,-52(fp)
 5082558:	10810030 	cmpltui	r2,r2,1024
 508255c:	103ff81e 	bne	r2,zero,5082540 <__alt_data_end+0xfffb4340>
                        try_cnt++;    
                    }    
                    if (try_cnt >= MAX_TRY_CNT){
 5082560:	e0bff317 	ldw	r2,-52(fp)
 5082564:	10810030 	cmpltui	r2,r2,1024
 5082568:	1000031e 	bne	r2,zero,5082578 <main+0x280>
                        bError = TRUE;
 508256c:	00800044 	movi	r2,1
 5082570:	e0bfee15 	stw	r2,-72(fp)
                        break;
 5082574:	00002306 	br	5082604 <main+0x30c>
                    }    
                    AUDIO_AdcFifoGetData(&ch_left, &ch_right);
 5082578:	e0ffff04 	addi	r3,fp,-4
 508257c:	e0bfff84 	addi	r2,fp,-2
 5082580:	180b883a 	mov	r5,r3
 5082584:	1009883a 	mov	r4,r2
 5082588:	5080ec40 	call	5080ec4 <AUDIO_AdcFifoGetData>
                    data = (ch_left << 16) | ch_right;
 508258c:	e0bfff8b 	ldhu	r2,-2(fp)
 5082590:	10bfffcc 	andi	r2,r2,65535
 5082594:	1006943a 	slli	r3,r2,16
 5082598:	e0bfff0b 	ldhu	r2,-4(fp)
 508259c:	10bfffcc 	andi	r2,r2,65535
 50825a0:	1884b03a 	or	r2,r3,r2
 50825a4:	e0bffd15 	stw	r2,-12(fp)
                    *pRecording++ = data;
 50825a8:	e0bff017 	ldw	r2,-64(fp)
 50825ac:	10c00104 	addi	r3,r2,4
 50825b0:	e0fff015 	stw	r3,-64(fp)
 50825b4:	e0fffd17 	ldw	r3,-12(fp)
 50825b8:	10c00015 	stw	r3,0(r2)
                    RecordLen++;
 50825bc:	e0bff117 	ldw	r2,-60(fp)
 50825c0:	10800044 	addi	r2,r2,1
 50825c4:	e0bff115 	stw	r2,-60(fp)
                    i++;
 50825c8:	e0bff417 	ldw	r2,-48(fp)
 50825cc:	10800044 	addi	r2,r2,1
 50825d0:	e0bff415 	stw	r2,-48(fp)
                    show_power(data & 0xFFFF);
 50825d4:	e0bffd17 	ldw	r2,-12(fp)
 50825d8:	10bfffcc 	andi	r2,r2,65535
 50825dc:	10a0001c 	xori	r2,r2,32768
 50825e0:	10a00004 	addi	r2,r2,-32768
 50825e4:	1009883a 	mov	r4,r2
 50825e8:	50820740 	call	5082074 <show_power>
               // dump_record_data(pBuf, RecordLen);
                
            }else{
                // continue recoding
                int i = 0;
                while ((i < RECORD_BLOCK_SIZE) && (RecordLen < buf_sample_size)){
 50825ec:	e0bff417 	ldw	r2,-48(fp)
 50825f0:	10803e88 	cmpgei	r2,r2,250
 50825f4:	1000031e 	bne	r2,zero,5082604 <main+0x30c>
 50825f8:	e0fff117 	ldw	r3,-60(fp)
 50825fc:	e0bff717 	ldw	r2,-36(fp)
 5082600:	18bfcd36 	bltu	r3,r2,5082538 <__alt_data_end+0xfffb4338>
                    *pRecording++ = data;
                    RecordLen++;
                    i++;
                    show_power(data & 0xFFFF);
                }  // while
                display_time_elapsed(RecordLen);    
 5082604:	e13ff117 	ldw	r4,-60(fp)
 5082608:	50820180 	call	5082018 <display_time_elapsed>
 508260c:	003f5906 	br	5082374 <__alt_data_end+0xfffb4174>
            }     
        }else if (state == ST_PLAYING){
 5082610:	e0bfed17 	ldw	r2,-76(fp)
 5082614:	10800098 	cmpnei	r2,r2,2
 5082618:	103f561e 	bne	r2,zero,5082374 <__alt_data_end+0xfffb4174>
            if (bPlayPressed || (PlayLen >= RecordLen) || bError){
 508261c:	e0bff917 	ldw	r2,-28(fp)
 5082620:	1000051e 	bne	r2,zero,5082638 <main+0x340>
 5082624:	e0fff217 	ldw	r3,-56(fp)
 5082628:	e0bff117 	ldw	r2,-60(fp)
 508262c:	1880022e 	bgeu	r3,r2,5082638 <main+0x340>
 5082630:	e0bfee17 	ldw	r2,-72(fp)
 5082634:	10001126 	beq	r2,zero,508267c <main+0x384>
                // stop playing
                printf("Play Stop %s\r\n", bError?"(Error)":"");
 5082638:	e0bfee17 	ldw	r2,-72(fp)
 508263c:	10000326 	beq	r2,zero,508264c <main+0x354>
 5082640:	00814274 	movhi	r2,1289
 5082644:	10979d04 	addi	r2,r2,24180
 5082648:	00000206 	br	5082654 <main+0x35c>
 508264c:	00814274 	movhi	r2,1289
 5082650:	10977104 	addi	r2,r2,24004
 5082654:	100b883a 	mov	r5,r2
 5082658:	01014274 	movhi	r4,1289
 508265c:	21179f04 	addi	r4,r4,24188
 5082660:	50829640 	call	5082964 <printf>

                state = ST_STANDY;
 5082664:	e03fed15 	stw	zero,-76(fp)
                LED_AllOff();
 5082668:	50816e00 	call	50816e0 <LED_AllOff>
                dump_record_data(pBuf, RecordLen);
 508266c:	e17ff117 	ldw	r5,-60(fp)
 5082670:	e13ff617 	ldw	r4,-40(fp)
 5082674:	50821640 	call	5082164 <dump_record_data>
 5082678:	00003b06 	br	5082768 <main+0x470>
            }else{
                // continue playing
                int i = 0;
 508267c:	e03ff515 	stw	zero,-44(fp)
                while ((i < PLAY_BLOCK_SIZE) && (PlayLen < RecordLen)){
 5082680:	00003106 	br	5082748 <main+0x450>
                    try_cnt = 0;                
 5082684:	e03ff315 	stw	zero,-52(fp)
                    while (!AUDIO_DacFifoNotFull() && try_cnt < MAX_TRY_CNT){  // wait while full
 5082688:	00000306 	br	5082698 <main+0x3a0>
                        try_cnt++;
 508268c:	e0bff317 	ldw	r2,-52(fp)
 5082690:	10800044 	addi	r2,r2,1
 5082694:	e0bff315 	stw	r2,-52(fp)
            }else{
                // continue playing
                int i = 0;
                while ((i < PLAY_BLOCK_SIZE) && (PlayLen < RecordLen)){
                    try_cnt = 0;                
                    while (!AUDIO_DacFifoNotFull() && try_cnt < MAX_TRY_CNT){  // wait while full
 5082698:	5080dfc0 	call	5080dfc <AUDIO_DacFifoNotFull>
 508269c:	1000031e 	bne	r2,zero,50826ac <main+0x3b4>
 50826a0:	e0bff317 	ldw	r2,-52(fp)
 50826a4:	10810030 	cmpltui	r2,r2,1024
 50826a8:	103ff81e 	bne	r2,zero,508268c <__alt_data_end+0xfffb448c>
                        try_cnt++;
                    }    
                    if (try_cnt >= MAX_TRY_CNT){
 50826ac:	e0bff317 	ldw	r2,-52(fp)
 50826b0:	10810030 	cmpltui	r2,r2,1024
 50826b4:	1000031e 	bne	r2,zero,50826c4 <main+0x3cc>
                        bError = TRUE;
 50826b8:	00800044 	movi	r2,1
 50826bc:	e0bfee15 	stw	r2,-72(fp)
                        break;
 50826c0:	00002706 	br	5082760 <main+0x468>
                    }    
                    data = *pPlaying++;
 50826c4:	e0bfef17 	ldw	r2,-68(fp)
 50826c8:	10c00104 	addi	r3,r2,4
 50826cc:	e0ffef15 	stw	r3,-68(fp)
 50826d0:	10800017 	ldw	r2,0(r2)
 50826d4:	e0bffd15 	stw	r2,-12(fp)
                   
                    //data = 0;
                    ch_left = data >> 16;
 50826d8:	e0bffd17 	ldw	r2,-12(fp)
 50826dc:	1004d43a 	srli	r2,r2,16
 50826e0:	e0bfff8d 	sth	r2,-2(fp)
                    ch_right = data & 0xFFFF;
 50826e4:	e0bffd17 	ldw	r2,-12(fp)
 50826e8:	e0bfff0d 	sth	r2,-4(fp)
                    AUDIO_DacFifoSetData(ch_left, ch_right);  
 50826ec:	e0bfff8b 	ldhu	r2,-2(fp)
 50826f0:	10bfffcc 	andi	r2,r2,65535
 50826f4:	10a0001c 	xori	r2,r2,32768
 50826f8:	10a00004 	addi	r2,r2,-32768
 50826fc:	e0ffff0b 	ldhu	r3,-4(fp)
 5082700:	18ffffcc 	andi	r3,r3,65535
 5082704:	18e0001c 	xori	r3,r3,32768
 5082708:	18e00004 	addi	r3,r3,-32768
 508270c:	180b883a 	mov	r5,r3
 5082710:	1009883a 	mov	r4,r2
 5082714:	5080e380 	call	5080e38 <AUDIO_DacFifoSetData>
                    i++;
 5082718:	e0bff517 	ldw	r2,-44(fp)
 508271c:	10800044 	addi	r2,r2,1
 5082720:	e0bff515 	stw	r2,-44(fp)
                    PlayLen++;
 5082724:	e0bff217 	ldw	r2,-56(fp)
 5082728:	10800044 	addi	r2,r2,1
 508272c:	e0bff215 	stw	r2,-56(fp)
                    show_power(data & 0xFFFF);
 5082730:	e0bffd17 	ldw	r2,-12(fp)
 5082734:	10bfffcc 	andi	r2,r2,65535
 5082738:	10a0001c 	xori	r2,r2,32768
 508273c:	10a00004 	addi	r2,r2,-32768
 5082740:	1009883a 	mov	r4,r2
 5082744:	50820740 	call	5082074 <show_power>
                LED_AllOff();
                dump_record_data(pBuf, RecordLen);
            }else{
                // continue playing
                int i = 0;
                while ((i < PLAY_BLOCK_SIZE) && (PlayLen < RecordLen)){
 5082748:	e0bff517 	ldw	r2,-44(fp)
 508274c:	10803e88 	cmpgei	r2,r2,250
 5082750:	1000031e 	bne	r2,zero,5082760 <main+0x468>
 5082754:	e0fff217 	ldw	r3,-56(fp)
 5082758:	e0bff117 	ldw	r2,-60(fp)
 508275c:	18bfc936 	bltu	r3,r2,5082684 <__alt_data_end+0xfffb4484>
                    i++;
                    PlayLen++;
                    show_power(data & 0xFFFF);
                    //printf("[%d] %d/%d\n", PlayLen, (short)((data >> 16) & 0xFFFF), (short)(data & 0xFFFF));
                }
                display_time_elapsed(PlayLen);
 5082760:	e13ff217 	ldw	r4,-56(fp)
 5082764:	50820180 	call	5082018 <display_time_elapsed>
            }
        }        
    }
 5082768:	003f0206 	br	5082374 <__alt_data_end+0xfffb4174>
    
}
 508276c:	e037883a 	mov	sp,fp
 5082770:	dfc00117 	ldw	ra,4(sp)
 5082774:	df000017 	ldw	fp,0(sp)
 5082778:	dec00204 	addi	sp,sp,8
 508277c:	f800283a 	ret

05082780 <__divsi3>:
 5082780:	20001b16 	blt	r4,zero,50827f0 <__divsi3+0x70>
 5082784:	000f883a 	mov	r7,zero
 5082788:	28001616 	blt	r5,zero,50827e4 <__divsi3+0x64>
 508278c:	200d883a 	mov	r6,r4
 5082790:	29001a2e 	bgeu	r5,r4,50827fc <__divsi3+0x7c>
 5082794:	00800804 	movi	r2,32
 5082798:	00c00044 	movi	r3,1
 508279c:	00000106 	br	50827a4 <__divsi3+0x24>
 50827a0:	10000d26 	beq	r2,zero,50827d8 <__divsi3+0x58>
 50827a4:	294b883a 	add	r5,r5,r5
 50827a8:	10bfffc4 	addi	r2,r2,-1
 50827ac:	18c7883a 	add	r3,r3,r3
 50827b0:	293ffb36 	bltu	r5,r4,50827a0 <__alt_data_end+0xfffb45a0>
 50827b4:	0005883a 	mov	r2,zero
 50827b8:	18000726 	beq	r3,zero,50827d8 <__divsi3+0x58>
 50827bc:	0005883a 	mov	r2,zero
 50827c0:	31400236 	bltu	r6,r5,50827cc <__divsi3+0x4c>
 50827c4:	314dc83a 	sub	r6,r6,r5
 50827c8:	10c4b03a 	or	r2,r2,r3
 50827cc:	1806d07a 	srli	r3,r3,1
 50827d0:	280ad07a 	srli	r5,r5,1
 50827d4:	183ffa1e 	bne	r3,zero,50827c0 <__alt_data_end+0xfffb45c0>
 50827d8:	38000126 	beq	r7,zero,50827e0 <__divsi3+0x60>
 50827dc:	0085c83a 	sub	r2,zero,r2
 50827e0:	f800283a 	ret
 50827e4:	014bc83a 	sub	r5,zero,r5
 50827e8:	39c0005c 	xori	r7,r7,1
 50827ec:	003fe706 	br	508278c <__alt_data_end+0xfffb458c>
 50827f0:	0109c83a 	sub	r4,zero,r4
 50827f4:	01c00044 	movi	r7,1
 50827f8:	003fe306 	br	5082788 <__alt_data_end+0xfffb4588>
 50827fc:	00c00044 	movi	r3,1
 5082800:	003fee06 	br	50827bc <__alt_data_end+0xfffb45bc>

05082804 <__modsi3>:
 5082804:	20001716 	blt	r4,zero,5082864 <__modsi3+0x60>
 5082808:	000f883a 	mov	r7,zero
 508280c:	2005883a 	mov	r2,r4
 5082810:	28001216 	blt	r5,zero,508285c <__modsi3+0x58>
 5082814:	2900162e 	bgeu	r5,r4,5082870 <__modsi3+0x6c>
 5082818:	01800804 	movi	r6,32
 508281c:	00c00044 	movi	r3,1
 5082820:	00000106 	br	5082828 <__modsi3+0x24>
 5082824:	30000a26 	beq	r6,zero,5082850 <__modsi3+0x4c>
 5082828:	294b883a 	add	r5,r5,r5
 508282c:	31bfffc4 	addi	r6,r6,-1
 5082830:	18c7883a 	add	r3,r3,r3
 5082834:	293ffb36 	bltu	r5,r4,5082824 <__alt_data_end+0xfffb4624>
 5082838:	18000526 	beq	r3,zero,5082850 <__modsi3+0x4c>
 508283c:	1806d07a 	srli	r3,r3,1
 5082840:	11400136 	bltu	r2,r5,5082848 <__modsi3+0x44>
 5082844:	1145c83a 	sub	r2,r2,r5
 5082848:	280ad07a 	srli	r5,r5,1
 508284c:	183ffb1e 	bne	r3,zero,508283c <__alt_data_end+0xfffb463c>
 5082850:	38000126 	beq	r7,zero,5082858 <__modsi3+0x54>
 5082854:	0085c83a 	sub	r2,zero,r2
 5082858:	f800283a 	ret
 508285c:	014bc83a 	sub	r5,zero,r5
 5082860:	003fec06 	br	5082814 <__alt_data_end+0xfffb4614>
 5082864:	0109c83a 	sub	r4,zero,r4
 5082868:	01c00044 	movi	r7,1
 508286c:	003fe706 	br	508280c <__alt_data_end+0xfffb460c>
 5082870:	00c00044 	movi	r3,1
 5082874:	003ff106 	br	508283c <__alt_data_end+0xfffb463c>

05082878 <__udivsi3>:
 5082878:	200d883a 	mov	r6,r4
 508287c:	2900152e 	bgeu	r5,r4,50828d4 <__udivsi3+0x5c>
 5082880:	28001416 	blt	r5,zero,50828d4 <__udivsi3+0x5c>
 5082884:	00800804 	movi	r2,32
 5082888:	00c00044 	movi	r3,1
 508288c:	00000206 	br	5082898 <__udivsi3+0x20>
 5082890:	10000e26 	beq	r2,zero,50828cc <__udivsi3+0x54>
 5082894:	28000516 	blt	r5,zero,50828ac <__udivsi3+0x34>
 5082898:	294b883a 	add	r5,r5,r5
 508289c:	10bfffc4 	addi	r2,r2,-1
 50828a0:	18c7883a 	add	r3,r3,r3
 50828a4:	293ffa36 	bltu	r5,r4,5082890 <__alt_data_end+0xfffb4690>
 50828a8:	18000826 	beq	r3,zero,50828cc <__udivsi3+0x54>
 50828ac:	0005883a 	mov	r2,zero
 50828b0:	31400236 	bltu	r6,r5,50828bc <__udivsi3+0x44>
 50828b4:	314dc83a 	sub	r6,r6,r5
 50828b8:	10c4b03a 	or	r2,r2,r3
 50828bc:	1806d07a 	srli	r3,r3,1
 50828c0:	280ad07a 	srli	r5,r5,1
 50828c4:	183ffa1e 	bne	r3,zero,50828b0 <__alt_data_end+0xfffb46b0>
 50828c8:	f800283a 	ret
 50828cc:	0005883a 	mov	r2,zero
 50828d0:	f800283a 	ret
 50828d4:	00c00044 	movi	r3,1
 50828d8:	003ff406 	br	50828ac <__alt_data_end+0xfffb46ac>

050828dc <__umodsi3>:
 50828dc:	2005883a 	mov	r2,r4
 50828e0:	2900122e 	bgeu	r5,r4,508292c <__umodsi3+0x50>
 50828e4:	28001116 	blt	r5,zero,508292c <__umodsi3+0x50>
 50828e8:	01800804 	movi	r6,32
 50828ec:	00c00044 	movi	r3,1
 50828f0:	00000206 	br	50828fc <__umodsi3+0x20>
 50828f4:	30000c26 	beq	r6,zero,5082928 <__umodsi3+0x4c>
 50828f8:	28000516 	blt	r5,zero,5082910 <__umodsi3+0x34>
 50828fc:	294b883a 	add	r5,r5,r5
 5082900:	31bfffc4 	addi	r6,r6,-1
 5082904:	18c7883a 	add	r3,r3,r3
 5082908:	293ffa36 	bltu	r5,r4,50828f4 <__alt_data_end+0xfffb46f4>
 508290c:	18000626 	beq	r3,zero,5082928 <__umodsi3+0x4c>
 5082910:	1806d07a 	srli	r3,r3,1
 5082914:	11400136 	bltu	r2,r5,508291c <__umodsi3+0x40>
 5082918:	1145c83a 	sub	r2,r2,r5
 508291c:	280ad07a 	srli	r5,r5,1
 5082920:	183ffb1e 	bne	r3,zero,5082910 <__alt_data_end+0xfffb4710>
 5082924:	f800283a 	ret
 5082928:	f800283a 	ret
 508292c:	00c00044 	movi	r3,1
 5082930:	003ff706 	br	5082910 <__alt_data_end+0xfffb4710>

05082934 <_printf_r>:
 5082934:	defffd04 	addi	sp,sp,-12
 5082938:	2805883a 	mov	r2,r5
 508293c:	dfc00015 	stw	ra,0(sp)
 5082940:	d9800115 	stw	r6,4(sp)
 5082944:	d9c00215 	stw	r7,8(sp)
 5082948:	21400217 	ldw	r5,8(r4)
 508294c:	d9c00104 	addi	r7,sp,4
 5082950:	100d883a 	mov	r6,r2
 5082954:	5084da80 	call	5084da8 <___vfprintf_internal_r>
 5082958:	dfc00017 	ldw	ra,0(sp)
 508295c:	dec00304 	addi	sp,sp,12
 5082960:	f800283a 	ret

05082964 <printf>:
 5082964:	defffc04 	addi	sp,sp,-16
 5082968:	dfc00015 	stw	ra,0(sp)
 508296c:	d9400115 	stw	r5,4(sp)
 5082970:	d9800215 	stw	r6,8(sp)
 5082974:	d9c00315 	stw	r7,12(sp)
 5082978:	00814274 	movhi	r2,1289
 508297c:	109f2104 	addi	r2,r2,31876
 5082980:	10800017 	ldw	r2,0(r2)
 5082984:	200b883a 	mov	r5,r4
 5082988:	d9800104 	addi	r6,sp,4
 508298c:	11000217 	ldw	r4,8(r2)
 5082990:	5086fa00 	call	5086fa0 <__vfprintf_internal>
 5082994:	dfc00017 	ldw	ra,0(sp)
 5082998:	dec00404 	addi	sp,sp,16
 508299c:	f800283a 	ret

050829a0 <_puts_r>:
 50829a0:	defff604 	addi	sp,sp,-40
 50829a4:	dc000715 	stw	r16,28(sp)
 50829a8:	2021883a 	mov	r16,r4
 50829ac:	2809883a 	mov	r4,r5
 50829b0:	dc400815 	stw	r17,32(sp)
 50829b4:	dfc00915 	stw	ra,36(sp)
 50829b8:	2823883a 	mov	r17,r5
 50829bc:	5082b380 	call	5082b38 <strlen>
 50829c0:	10c00044 	addi	r3,r2,1
 50829c4:	d8800115 	stw	r2,4(sp)
 50829c8:	00814274 	movhi	r2,1289
 50829cc:	1097a304 	addi	r2,r2,24204
 50829d0:	d8800215 	stw	r2,8(sp)
 50829d4:	00800044 	movi	r2,1
 50829d8:	d8800315 	stw	r2,12(sp)
 50829dc:	00800084 	movi	r2,2
 50829e0:	dc400015 	stw	r17,0(sp)
 50829e4:	d8c00615 	stw	r3,24(sp)
 50829e8:	dec00415 	stw	sp,16(sp)
 50829ec:	d8800515 	stw	r2,20(sp)
 50829f0:	80000226 	beq	r16,zero,50829fc <_puts_r+0x5c>
 50829f4:	80800e17 	ldw	r2,56(r16)
 50829f8:	10001426 	beq	r2,zero,5082a4c <_puts_r+0xac>
 50829fc:	81400217 	ldw	r5,8(r16)
 5082a00:	2880030b 	ldhu	r2,12(r5)
 5082a04:	10c8000c 	andi	r3,r2,8192
 5082a08:	1800061e 	bne	r3,zero,5082a24 <_puts_r+0x84>
 5082a0c:	29001917 	ldw	r4,100(r5)
 5082a10:	00f7ffc4 	movi	r3,-8193
 5082a14:	10880014 	ori	r2,r2,8192
 5082a18:	20c6703a 	and	r3,r4,r3
 5082a1c:	2880030d 	sth	r2,12(r5)
 5082a20:	28c01915 	stw	r3,100(r5)
 5082a24:	d9800404 	addi	r6,sp,16
 5082a28:	8009883a 	mov	r4,r16
 5082a2c:	50895f40 	call	50895f4 <__sfvwrite_r>
 5082a30:	1000091e 	bne	r2,zero,5082a58 <_puts_r+0xb8>
 5082a34:	00800284 	movi	r2,10
 5082a38:	dfc00917 	ldw	ra,36(sp)
 5082a3c:	dc400817 	ldw	r17,32(sp)
 5082a40:	dc000717 	ldw	r16,28(sp)
 5082a44:	dec00a04 	addi	sp,sp,40
 5082a48:	f800283a 	ret
 5082a4c:	8009883a 	mov	r4,r16
 5082a50:	50891700 	call	5089170 <__sinit>
 5082a54:	003fe906 	br	50829fc <__alt_data_end+0xfffb47fc>
 5082a58:	00bfffc4 	movi	r2,-1
 5082a5c:	003ff606 	br	5082a38 <__alt_data_end+0xfffb4838>

05082a60 <puts>:
 5082a60:	00814274 	movhi	r2,1289
 5082a64:	109f2104 	addi	r2,r2,31876
 5082a68:	200b883a 	mov	r5,r4
 5082a6c:	11000017 	ldw	r4,0(r2)
 5082a70:	50829a01 	jmpi	50829a0 <_puts_r>

05082a74 <_sprintf_r>:
 5082a74:	deffe404 	addi	sp,sp,-112
 5082a78:	2807883a 	mov	r3,r5
 5082a7c:	dfc01a15 	stw	ra,104(sp)
 5082a80:	d9c01b15 	stw	r7,108(sp)
 5082a84:	00a00034 	movhi	r2,32768
 5082a88:	10bfffc4 	addi	r2,r2,-1
 5082a8c:	02008204 	movi	r8,520
 5082a90:	d8800215 	stw	r2,8(sp)
 5082a94:	d8800515 	stw	r2,20(sp)
 5082a98:	d9c01b04 	addi	r7,sp,108
 5082a9c:	d80b883a 	mov	r5,sp
 5082aa0:	00bfffc4 	movi	r2,-1
 5082aa4:	d8c00015 	stw	r3,0(sp)
 5082aa8:	d8c00415 	stw	r3,16(sp)
 5082aac:	da00030d 	sth	r8,12(sp)
 5082ab0:	d880038d 	sth	r2,14(sp)
 5082ab4:	5082bd00 	call	5082bd0 <___svfprintf_internal_r>
 5082ab8:	d8c00017 	ldw	r3,0(sp)
 5082abc:	18000005 	stb	zero,0(r3)
 5082ac0:	dfc01a17 	ldw	ra,104(sp)
 5082ac4:	dec01c04 	addi	sp,sp,112
 5082ac8:	f800283a 	ret

05082acc <sprintf>:
 5082acc:	deffe304 	addi	sp,sp,-116
 5082ad0:	2007883a 	mov	r3,r4
 5082ad4:	dfc01a15 	stw	ra,104(sp)
 5082ad8:	d9801b15 	stw	r6,108(sp)
 5082adc:	d9c01c15 	stw	r7,112(sp)
 5082ae0:	01014274 	movhi	r4,1289
 5082ae4:	211f2104 	addi	r4,r4,31876
 5082ae8:	21000017 	ldw	r4,0(r4)
 5082aec:	00a00034 	movhi	r2,32768
 5082af0:	10bfffc4 	addi	r2,r2,-1
 5082af4:	280d883a 	mov	r6,r5
 5082af8:	02008204 	movi	r8,520
 5082afc:	d8800215 	stw	r2,8(sp)
 5082b00:	d8800515 	stw	r2,20(sp)
 5082b04:	d9c01b04 	addi	r7,sp,108
 5082b08:	d80b883a 	mov	r5,sp
 5082b0c:	00bfffc4 	movi	r2,-1
 5082b10:	d8c00015 	stw	r3,0(sp)
 5082b14:	d8c00415 	stw	r3,16(sp)
 5082b18:	da00030d 	sth	r8,12(sp)
 5082b1c:	d880038d 	sth	r2,14(sp)
 5082b20:	5082bd00 	call	5082bd0 <___svfprintf_internal_r>
 5082b24:	d8c00017 	ldw	r3,0(sp)
 5082b28:	18000005 	stb	zero,0(r3)
 5082b2c:	dfc01a17 	ldw	ra,104(sp)
 5082b30:	dec01d04 	addi	sp,sp,116
 5082b34:	f800283a 	ret

05082b38 <strlen>:
 5082b38:	208000cc 	andi	r2,r4,3
 5082b3c:	10002026 	beq	r2,zero,5082bc0 <strlen+0x88>
 5082b40:	20800007 	ldb	r2,0(r4)
 5082b44:	10002026 	beq	r2,zero,5082bc8 <strlen+0x90>
 5082b48:	2005883a 	mov	r2,r4
 5082b4c:	00000206 	br	5082b58 <strlen+0x20>
 5082b50:	10c00007 	ldb	r3,0(r2)
 5082b54:	18001826 	beq	r3,zero,5082bb8 <strlen+0x80>
 5082b58:	10800044 	addi	r2,r2,1
 5082b5c:	10c000cc 	andi	r3,r2,3
 5082b60:	183ffb1e 	bne	r3,zero,5082b50 <__alt_data_end+0xfffb4950>
 5082b64:	10c00017 	ldw	r3,0(r2)
 5082b68:	01ffbff4 	movhi	r7,65279
 5082b6c:	39ffbfc4 	addi	r7,r7,-257
 5082b70:	00ca303a 	nor	r5,zero,r3
 5082b74:	01a02074 	movhi	r6,32897
 5082b78:	19c7883a 	add	r3,r3,r7
 5082b7c:	31a02004 	addi	r6,r6,-32640
 5082b80:	1946703a 	and	r3,r3,r5
 5082b84:	1986703a 	and	r3,r3,r6
 5082b88:	1800091e 	bne	r3,zero,5082bb0 <strlen+0x78>
 5082b8c:	10800104 	addi	r2,r2,4
 5082b90:	10c00017 	ldw	r3,0(r2)
 5082b94:	19cb883a 	add	r5,r3,r7
 5082b98:	00c6303a 	nor	r3,zero,r3
 5082b9c:	28c6703a 	and	r3,r5,r3
 5082ba0:	1986703a 	and	r3,r3,r6
 5082ba4:	183ff926 	beq	r3,zero,5082b8c <__alt_data_end+0xfffb498c>
 5082ba8:	00000106 	br	5082bb0 <strlen+0x78>
 5082bac:	10800044 	addi	r2,r2,1
 5082bb0:	10c00007 	ldb	r3,0(r2)
 5082bb4:	183ffd1e 	bne	r3,zero,5082bac <__alt_data_end+0xfffb49ac>
 5082bb8:	1105c83a 	sub	r2,r2,r4
 5082bbc:	f800283a 	ret
 5082bc0:	2005883a 	mov	r2,r4
 5082bc4:	003fe706 	br	5082b64 <__alt_data_end+0xfffb4964>
 5082bc8:	0005883a 	mov	r2,zero
 5082bcc:	f800283a 	ret

05082bd0 <___svfprintf_internal_r>:
 5082bd0:	deffb704 	addi	sp,sp,-292
 5082bd4:	dfc04815 	stw	ra,288(sp)
 5082bd8:	ddc04615 	stw	r23,280(sp)
 5082bdc:	d9402c15 	stw	r5,176(sp)
 5082be0:	d9003915 	stw	r4,228(sp)
 5082be4:	302f883a 	mov	r23,r6
 5082be8:	d9c02d15 	stw	r7,180(sp)
 5082bec:	df004715 	stw	fp,284(sp)
 5082bf0:	dd804515 	stw	r22,276(sp)
 5082bf4:	dd404415 	stw	r21,272(sp)
 5082bf8:	dd004315 	stw	r20,268(sp)
 5082bfc:	dcc04215 	stw	r19,264(sp)
 5082c00:	dc804115 	stw	r18,260(sp)
 5082c04:	dc404015 	stw	r17,256(sp)
 5082c08:	dc003f15 	stw	r16,252(sp)
 5082c0c:	5089ce40 	call	5089ce4 <_localeconv_r>
 5082c10:	10800017 	ldw	r2,0(r2)
 5082c14:	1009883a 	mov	r4,r2
 5082c18:	d8803415 	stw	r2,208(sp)
 5082c1c:	5082b380 	call	5082b38 <strlen>
 5082c20:	d8c02c17 	ldw	r3,176(sp)
 5082c24:	d8803815 	stw	r2,224(sp)
 5082c28:	1880030b 	ldhu	r2,12(r3)
 5082c2c:	1080200c 	andi	r2,r2,128
 5082c30:	10000226 	beq	r2,zero,5082c3c <___svfprintf_internal_r+0x6c>
 5082c34:	18800417 	ldw	r2,16(r3)
 5082c38:	10067f26 	beq	r2,zero,5084638 <___svfprintf_internal_r+0x1a68>
 5082c3c:	dcc03917 	ldw	r19,228(sp)
 5082c40:	d8c00404 	addi	r3,sp,16
 5082c44:	05414274 	movhi	r21,1289
 5082c48:	d9001e04 	addi	r4,sp,120
 5082c4c:	ad57b484 	addi	r21,r21,24274
 5082c50:	d8c01e15 	stw	r3,120(sp)
 5082c54:	d8002015 	stw	zero,128(sp)
 5082c58:	d8001f15 	stw	zero,124(sp)
 5082c5c:	d8003315 	stw	zero,204(sp)
 5082c60:	d8003615 	stw	zero,216(sp)
 5082c64:	d8003715 	stw	zero,220(sp)
 5082c68:	1811883a 	mov	r8,r3
 5082c6c:	d8003a15 	stw	zero,232(sp)
 5082c70:	d8003b15 	stw	zero,236(sp)
 5082c74:	d8002f15 	stw	zero,188(sp)
 5082c78:	d9002815 	stw	r4,160(sp)
 5082c7c:	b8800007 	ldb	r2,0(r23)
 5082c80:	10026726 	beq	r2,zero,5083620 <___svfprintf_internal_r+0xa50>
 5082c84:	00c00944 	movi	r3,37
 5082c88:	b821883a 	mov	r16,r23
 5082c8c:	10c0021e 	bne	r2,r3,5082c98 <___svfprintf_internal_r+0xc8>
 5082c90:	00001406 	br	5082ce4 <___svfprintf_internal_r+0x114>
 5082c94:	10c00326 	beq	r2,r3,5082ca4 <___svfprintf_internal_r+0xd4>
 5082c98:	84000044 	addi	r16,r16,1
 5082c9c:	80800007 	ldb	r2,0(r16)
 5082ca0:	103ffc1e 	bne	r2,zero,5082c94 <__alt_data_end+0xfffb4a94>
 5082ca4:	85e3c83a 	sub	r17,r16,r23
 5082ca8:	88000e26 	beq	r17,zero,5082ce4 <___svfprintf_internal_r+0x114>
 5082cac:	d8c02017 	ldw	r3,128(sp)
 5082cb0:	d8801f17 	ldw	r2,124(sp)
 5082cb4:	45c00015 	stw	r23,0(r8)
 5082cb8:	1c47883a 	add	r3,r3,r17
 5082cbc:	10800044 	addi	r2,r2,1
 5082cc0:	d8c02015 	stw	r3,128(sp)
 5082cc4:	44400115 	stw	r17,4(r8)
 5082cc8:	d8801f15 	stw	r2,124(sp)
 5082ccc:	00c001c4 	movi	r3,7
 5082cd0:	18809716 	blt	r3,r2,5082f30 <___svfprintf_internal_r+0x360>
 5082cd4:	42000204 	addi	r8,r8,8
 5082cd8:	d9402f17 	ldw	r5,188(sp)
 5082cdc:	2c4b883a 	add	r5,r5,r17
 5082ce0:	d9402f15 	stw	r5,188(sp)
 5082ce4:	80800007 	ldb	r2,0(r16)
 5082ce8:	10009826 	beq	r2,zero,5082f4c <___svfprintf_internal_r+0x37c>
 5082cec:	84400047 	ldb	r17,1(r16)
 5082cf0:	00bfffc4 	movi	r2,-1
 5082cf4:	85c00044 	addi	r23,r16,1
 5082cf8:	d8002785 	stb	zero,158(sp)
 5082cfc:	0007883a 	mov	r3,zero
 5082d00:	000f883a 	mov	r7,zero
 5082d04:	d8802915 	stw	r2,164(sp)
 5082d08:	d8003115 	stw	zero,196(sp)
 5082d0c:	0025883a 	mov	r18,zero
 5082d10:	01401604 	movi	r5,88
 5082d14:	01800244 	movi	r6,9
 5082d18:	02800a84 	movi	r10,42
 5082d1c:	02401b04 	movi	r9,108
 5082d20:	bdc00044 	addi	r23,r23,1
 5082d24:	88bff804 	addi	r2,r17,-32
 5082d28:	2882f036 	bltu	r5,r2,50838ec <___svfprintf_internal_r+0xd1c>
 5082d2c:	100490ba 	slli	r2,r2,2
 5082d30:	01014234 	movhi	r4,1288
 5082d34:	210b5104 	addi	r4,r4,11588
 5082d38:	1105883a 	add	r2,r2,r4
 5082d3c:	10800017 	ldw	r2,0(r2)
 5082d40:	1000683a 	jmp	r2
 5082d44:	05083854 	movui	r20,8417
 5082d48:	050838ec 	andhi	r20,zero,8419
 5082d4c:	050838ec 	andhi	r20,zero,8419
 5082d50:	05083848 	cmpgei	r20,zero,8417
 5082d54:	050838ec 	andhi	r20,zero,8419
 5082d58:	050838ec 	andhi	r20,zero,8419
 5082d5c:	050838ec 	andhi	r20,zero,8419
 5082d60:	050838ec 	andhi	r20,zero,8419
 5082d64:	050838ec 	andhi	r20,zero,8419
 5082d68:	050838ec 	andhi	r20,zero,8419
 5082d6c:	05082fa8 	cmpgeui	r20,zero,8382
 5082d70:	05083784 	movi	r20,8414
 5082d74:	050838ec 	andhi	r20,zero,8419
 5082d78:	05082eb8 	rdprs	r20,zero,8378
 5082d7c:	05082fd0 	cmplti	r20,zero,8383
 5082d80:	050838ec 	andhi	r20,zero,8419
 5082d84:	05083044 	movi	r20,8385
 5082d88:	05083010 	cmplti	r20,zero,8384
 5082d8c:	05083010 	cmplti	r20,zero,8384
 5082d90:	05083010 	cmplti	r20,zero,8384
 5082d94:	05083010 	cmplti	r20,zero,8384
 5082d98:	05083010 	cmplti	r20,zero,8384
 5082d9c:	05083010 	cmplti	r20,zero,8384
 5082da0:	05083010 	cmplti	r20,zero,8384
 5082da4:	05083010 	cmplti	r20,zero,8384
 5082da8:	05083010 	cmplti	r20,zero,8384
 5082dac:	050838ec 	andhi	r20,zero,8419
 5082db0:	050838ec 	andhi	r20,zero,8419
 5082db4:	050838ec 	andhi	r20,zero,8419
 5082db8:	050838ec 	andhi	r20,zero,8419
 5082dbc:	050838ec 	andhi	r20,zero,8419
 5082dc0:	050838ec 	andhi	r20,zero,8419
 5082dc4:	050838ec 	andhi	r20,zero,8419
 5082dc8:	050838ec 	andhi	r20,zero,8419
 5082dcc:	050838ec 	andhi	r20,zero,8419
 5082dd0:	050838ec 	andhi	r20,zero,8419
 5082dd4:	050830fc 	xorhi	r20,zero,8387
 5082dd8:	05083050 	cmplti	r20,zero,8385
 5082ddc:	050838ec 	andhi	r20,zero,8419
 5082de0:	05083050 	cmplti	r20,zero,8385
 5082de4:	050838ec 	andhi	r20,zero,8419
 5082de8:	050838ec 	andhi	r20,zero,8419
 5082dec:	050838ec 	andhi	r20,zero,8419
 5082df0:	050838ec 	andhi	r20,zero,8419
 5082df4:	050830f0 	cmpltui	r20,zero,8387
 5082df8:	050838ec 	andhi	r20,zero,8419
 5082dfc:	050838ec 	andhi	r20,zero,8419
 5082e00:	050831b8 	rdprs	r20,zero,8390
 5082e04:	050838ec 	andhi	r20,zero,8419
 5082e08:	050838ec 	andhi	r20,zero,8419
 5082e0c:	050838ec 	andhi	r20,zero,8419
 5082e10:	050838ec 	andhi	r20,zero,8419
 5082e14:	050838ec 	andhi	r20,zero,8419
 5082e18:	05083628 	cmpgeui	r20,zero,8408
 5082e1c:	050838ec 	andhi	r20,zero,8419
 5082e20:	050838ec 	andhi	r20,zero,8419
 5082e24:	05083688 	cmpgei	r20,zero,8410
 5082e28:	050838ec 	andhi	r20,zero,8419
 5082e2c:	050838ec 	andhi	r20,zero,8419
 5082e30:	050838ec 	andhi	r20,zero,8419
 5082e34:	050838ec 	andhi	r20,zero,8419
 5082e38:	050838ec 	andhi	r20,zero,8419
 5082e3c:	050838ec 	andhi	r20,zero,8419
 5082e40:	050838ec 	andhi	r20,zero,8419
 5082e44:	050838ec 	andhi	r20,zero,8419
 5082e48:	050838ec 	andhi	r20,zero,8419
 5082e4c:	050838ec 	andhi	r20,zero,8419
 5082e50:	05083738 	rdprs	r20,zero,8412
 5082e54:	05083874 	movhi	r20,8417
 5082e58:	05083050 	cmplti	r20,zero,8385
 5082e5c:	05083050 	cmplti	r20,zero,8385
 5082e60:	05083050 	cmplti	r20,zero,8385
 5082e64:	050838c8 	cmpgei	r20,zero,8419
 5082e68:	05083874 	movhi	r20,8417
 5082e6c:	050838ec 	andhi	r20,zero,8419
 5082e70:	050838ec 	andhi	r20,zero,8419
 5082e74:	05083884 	movi	r20,8418
 5082e78:	050838ec 	andhi	r20,zero,8419
 5082e7c:	05083894 	movui	r20,8418
 5082e80:	05083774 	movhi	r20,8413
 5082e84:	05082ec4 	movi	r20,8379
 5082e88:	05083794 	movui	r20,8414
 5082e8c:	050838ec 	andhi	r20,zero,8419
 5082e90:	050837a0 	cmpeqi	r20,zero,8414
 5082e94:	050838ec 	andhi	r20,zero,8419
 5082e98:	050837fc 	xorhi	r20,zero,8415
 5082e9c:	050838ec 	andhi	r20,zero,8419
 5082ea0:	050838ec 	andhi	r20,zero,8419
 5082ea4:	0508380c 	andi	r20,zero,8416
 5082ea8:	d9003117 	ldw	r4,196(sp)
 5082eac:	d8802d15 	stw	r2,180(sp)
 5082eb0:	0109c83a 	sub	r4,zero,r4
 5082eb4:	d9003115 	stw	r4,196(sp)
 5082eb8:	94800114 	ori	r18,r18,4
 5082ebc:	bc400007 	ldb	r17,0(r23)
 5082ec0:	003f9706 	br	5082d20 <__alt_data_end+0xfffb4b20>
 5082ec4:	00800c04 	movi	r2,48
 5082ec8:	d9002d17 	ldw	r4,180(sp)
 5082ecc:	d9402917 	ldw	r5,164(sp)
 5082ed0:	d8802705 	stb	r2,156(sp)
 5082ed4:	00801e04 	movi	r2,120
 5082ed8:	d8802745 	stb	r2,157(sp)
 5082edc:	d8002785 	stb	zero,158(sp)
 5082ee0:	20c00104 	addi	r3,r4,4
 5082ee4:	25000017 	ldw	r20,0(r4)
 5082ee8:	002d883a 	mov	r22,zero
 5082eec:	90800094 	ori	r2,r18,2
 5082ef0:	28028616 	blt	r5,zero,508390c <___svfprintf_internal_r+0xd3c>
 5082ef4:	00bfdfc4 	movi	r2,-129
 5082ef8:	90a4703a 	and	r18,r18,r2
 5082efc:	d8c02d15 	stw	r3,180(sp)
 5082f00:	94800094 	ori	r18,r18,2
 5082f04:	a002731e 	bne	r20,zero,50838d4 <___svfprintf_internal_r+0xd04>
 5082f08:	00814274 	movhi	r2,1289
 5082f0c:	1097ad04 	addi	r2,r2,24244
 5082f10:	d8803a15 	stw	r2,232(sp)
 5082f14:	04401e04 	movi	r17,120
 5082f18:	d8c02917 	ldw	r3,164(sp)
 5082f1c:	0039883a 	mov	fp,zero
 5082f20:	1801d526 	beq	r3,zero,5083678 <___svfprintf_internal_r+0xaa8>
 5082f24:	0029883a 	mov	r20,zero
 5082f28:	002d883a 	mov	r22,zero
 5082f2c:	0001f106 	br	50836f4 <___svfprintf_internal_r+0xb24>
 5082f30:	d9402c17 	ldw	r5,176(sp)
 5082f34:	d9801e04 	addi	r6,sp,120
 5082f38:	9809883a 	mov	r4,r19
 5082f3c:	508c3cc0 	call	508c3cc <__ssprint_r>
 5082f40:	1000081e 	bne	r2,zero,5082f64 <___svfprintf_internal_r+0x394>
 5082f44:	da000404 	addi	r8,sp,16
 5082f48:	003f6306 	br	5082cd8 <__alt_data_end+0xfffb4ad8>
 5082f4c:	d8802017 	ldw	r2,128(sp)
 5082f50:	10000426 	beq	r2,zero,5082f64 <___svfprintf_internal_r+0x394>
 5082f54:	d9402c17 	ldw	r5,176(sp)
 5082f58:	d9003917 	ldw	r4,228(sp)
 5082f5c:	d9801e04 	addi	r6,sp,120
 5082f60:	508c3cc0 	call	508c3cc <__ssprint_r>
 5082f64:	d8802c17 	ldw	r2,176(sp)
 5082f68:	10c0030b 	ldhu	r3,12(r2)
 5082f6c:	d8802f17 	ldw	r2,188(sp)
 5082f70:	18c0100c 	andi	r3,r3,64
 5082f74:	1805f51e 	bne	r3,zero,508474c <___svfprintf_internal_r+0x1b7c>
 5082f78:	dfc04817 	ldw	ra,288(sp)
 5082f7c:	df004717 	ldw	fp,284(sp)
 5082f80:	ddc04617 	ldw	r23,280(sp)
 5082f84:	dd804517 	ldw	r22,276(sp)
 5082f88:	dd404417 	ldw	r21,272(sp)
 5082f8c:	dd004317 	ldw	r20,268(sp)
 5082f90:	dcc04217 	ldw	r19,264(sp)
 5082f94:	dc804117 	ldw	r18,260(sp)
 5082f98:	dc404017 	ldw	r17,256(sp)
 5082f9c:	dc003f17 	ldw	r16,252(sp)
 5082fa0:	dec04904 	addi	sp,sp,292
 5082fa4:	f800283a 	ret
 5082fa8:	d8802d17 	ldw	r2,180(sp)
 5082fac:	d9002d17 	ldw	r4,180(sp)
 5082fb0:	10800017 	ldw	r2,0(r2)
 5082fb4:	d8803115 	stw	r2,196(sp)
 5082fb8:	20800104 	addi	r2,r4,4
 5082fbc:	d9003117 	ldw	r4,196(sp)
 5082fc0:	203fb916 	blt	r4,zero,5082ea8 <__alt_data_end+0xfffb4ca8>
 5082fc4:	d8802d15 	stw	r2,180(sp)
 5082fc8:	bc400007 	ldb	r17,0(r23)
 5082fcc:	003f5406 	br	5082d20 <__alt_data_end+0xfffb4b20>
 5082fd0:	bc400007 	ldb	r17,0(r23)
 5082fd4:	bac00044 	addi	r11,r23,1
 5082fd8:	8a873926 	beq	r17,r10,5084cc0 <___svfprintf_internal_r+0x20f0>
 5082fdc:	88bff404 	addi	r2,r17,-48
 5082fe0:	0009883a 	mov	r4,zero
 5082fe4:	30868836 	bltu	r6,r2,5084a08 <___svfprintf_internal_r+0x1e38>
 5082fe8:	5c400007 	ldb	r17,0(r11)
 5082fec:	210002a4 	muli	r4,r4,10
 5082ff0:	5dc00044 	addi	r23,r11,1
 5082ff4:	b817883a 	mov	r11,r23
 5082ff8:	2089883a 	add	r4,r4,r2
 5082ffc:	88bff404 	addi	r2,r17,-48
 5083000:	30bff92e 	bgeu	r6,r2,5082fe8 <__alt_data_end+0xfffb4de8>
 5083004:	2005d716 	blt	r4,zero,5084764 <___svfprintf_internal_r+0x1b94>
 5083008:	d9002915 	stw	r4,164(sp)
 508300c:	003f4506 	br	5082d24 <__alt_data_end+0xfffb4b24>
 5083010:	b809883a 	mov	r4,r23
 5083014:	d8003115 	stw	zero,196(sp)
 5083018:	88bff404 	addi	r2,r17,-48
 508301c:	0017883a 	mov	r11,zero
 5083020:	24400007 	ldb	r17,0(r4)
 5083024:	5ac002a4 	muli	r11,r11,10
 5083028:	bdc00044 	addi	r23,r23,1
 508302c:	b809883a 	mov	r4,r23
 5083030:	12d7883a 	add	r11,r2,r11
 5083034:	88bff404 	addi	r2,r17,-48
 5083038:	30bff92e 	bgeu	r6,r2,5083020 <__alt_data_end+0xfffb4e20>
 508303c:	dac03115 	stw	r11,196(sp)
 5083040:	003f3806 	br	5082d24 <__alt_data_end+0xfffb4b24>
 5083044:	94802014 	ori	r18,r18,128
 5083048:	bc400007 	ldb	r17,0(r23)
 508304c:	003f3406 	br	5082d20 <__alt_data_end+0xfffb4b20>
 5083050:	18c03fcc 	andi	r3,r3,255
 5083054:	1807471e 	bne	r3,zero,5084d74 <___svfprintf_internal_r+0x21a4>
 5083058:	9080020c 	andi	r2,r18,8
 508305c:	10047d26 	beq	r2,zero,5084254 <___svfprintf_internal_r+0x1684>
 5083060:	d8c02d17 	ldw	r3,180(sp)
 5083064:	d9002d17 	ldw	r4,180(sp)
 5083068:	d9402d17 	ldw	r5,180(sp)
 508306c:	18c00017 	ldw	r3,0(r3)
 5083070:	21000117 	ldw	r4,4(r4)
 5083074:	29400204 	addi	r5,r5,8
 5083078:	d8c03615 	stw	r3,216(sp)
 508307c:	d9003715 	stw	r4,220(sp)
 5083080:	d9402d15 	stw	r5,180(sp)
 5083084:	d9003617 	ldw	r4,216(sp)
 5083088:	d9403717 	ldw	r5,220(sp)
 508308c:	da003e15 	stw	r8,248(sp)
 5083090:	04000044 	movi	r16,1
 5083094:	508c0ec0 	call	508c0ec <__fpclassifyd>
 5083098:	da003e17 	ldw	r8,248(sp)
 508309c:	14044b1e 	bne	r2,r16,50841cc <___svfprintf_internal_r+0x15fc>
 50830a0:	d9003617 	ldw	r4,216(sp)
 50830a4:	d9403717 	ldw	r5,220(sp)
 50830a8:	000d883a 	mov	r6,zero
 50830ac:	000f883a 	mov	r7,zero
 50830b0:	50914fc0 	call	50914fc <__ledf2>
 50830b4:	da003e17 	ldw	r8,248(sp)
 50830b8:	1005f316 	blt	r2,zero,5084888 <___svfprintf_internal_r+0x1cb8>
 50830bc:	df002783 	ldbu	fp,158(sp)
 50830c0:	008011c4 	movi	r2,71
 50830c4:	1445590e 	bge	r2,r17,508462c <___svfprintf_internal_r+0x1a5c>
 50830c8:	04014274 	movhi	r16,1289
 50830cc:	8417a504 	addi	r16,r16,24212
 50830d0:	00c000c4 	movi	r3,3
 50830d4:	00bfdfc4 	movi	r2,-129
 50830d8:	d8c02a15 	stw	r3,168(sp)
 50830dc:	90a4703a 	and	r18,r18,r2
 50830e0:	d8c02e15 	stw	r3,184(sp)
 50830e4:	d8002915 	stw	zero,164(sp)
 50830e8:	d8003215 	stw	zero,200(sp)
 50830ec:	00006606 	br	5083288 <___svfprintf_internal_r+0x6b8>
 50830f0:	94800214 	ori	r18,r18,8
 50830f4:	bc400007 	ldb	r17,0(r23)
 50830f8:	003f0906 	br	5082d20 <__alt_data_end+0xfffb4b20>
 50830fc:	18c03fcc 	andi	r3,r3,255
 5083100:	1807181e 	bne	r3,zero,5084d64 <___svfprintf_internal_r+0x2194>
 5083104:	94800414 	ori	r18,r18,16
 5083108:	9080080c 	andi	r2,r18,32
 508310c:	10039626 	beq	r2,zero,5083f68 <___svfprintf_internal_r+0x1398>
 5083110:	d9402d17 	ldw	r5,180(sp)
 5083114:	28800117 	ldw	r2,4(r5)
 5083118:	2d000017 	ldw	r20,0(r5)
 508311c:	29400204 	addi	r5,r5,8
 5083120:	d9402d15 	stw	r5,180(sp)
 5083124:	102d883a 	mov	r22,r2
 5083128:	10039816 	blt	r2,zero,5083f8c <___svfprintf_internal_r+0x13bc>
 508312c:	d9402917 	ldw	r5,164(sp)
 5083130:	df002783 	ldbu	fp,158(sp)
 5083134:	2803ab16 	blt	r5,zero,5083fe4 <___svfprintf_internal_r+0x1414>
 5083138:	00ffdfc4 	movi	r3,-129
 508313c:	a584b03a 	or	r2,r20,r22
 5083140:	90e4703a 	and	r18,r18,r3
 5083144:	10014a26 	beq	r2,zero,5083670 <___svfprintf_internal_r+0xaa0>
 5083148:	b0034b26 	beq	r22,zero,5083e78 <___svfprintf_internal_r+0x12a8>
 508314c:	dc402a15 	stw	r17,168(sp)
 5083150:	dc001e04 	addi	r16,sp,120
 5083154:	b023883a 	mov	r17,r22
 5083158:	402d883a 	mov	r22,r8
 508315c:	a009883a 	mov	r4,r20
 5083160:	880b883a 	mov	r5,r17
 5083164:	01800284 	movi	r6,10
 5083168:	000f883a 	mov	r7,zero
 508316c:	508fccc0 	call	508fccc <__umoddi3>
 5083170:	10800c04 	addi	r2,r2,48
 5083174:	843fffc4 	addi	r16,r16,-1
 5083178:	a009883a 	mov	r4,r20
 508317c:	880b883a 	mov	r5,r17
 5083180:	80800005 	stb	r2,0(r16)
 5083184:	01800284 	movi	r6,10
 5083188:	000f883a 	mov	r7,zero
 508318c:	508f7540 	call	508f754 <__udivdi3>
 5083190:	1029883a 	mov	r20,r2
 5083194:	10c4b03a 	or	r2,r2,r3
 5083198:	1823883a 	mov	r17,r3
 508319c:	103fef1e 	bne	r2,zero,508315c <__alt_data_end+0xfffb4f5c>
 50831a0:	d8c02817 	ldw	r3,160(sp)
 50831a4:	dc402a17 	ldw	r17,168(sp)
 50831a8:	b011883a 	mov	r8,r22
 50831ac:	1c07c83a 	sub	r3,r3,r16
 50831b0:	d8c02e15 	stw	r3,184(sp)
 50831b4:	00002e06 	br	5083270 <___svfprintf_internal_r+0x6a0>
 50831b8:	18c03fcc 	andi	r3,r3,255
 50831bc:	1806e71e 	bne	r3,zero,5084d5c <___svfprintf_internal_r+0x218c>
 50831c0:	94800414 	ori	r18,r18,16
 50831c4:	9080080c 	andi	r2,r18,32
 50831c8:	1002d426 	beq	r2,zero,5083d1c <___svfprintf_internal_r+0x114c>
 50831cc:	d9402d17 	ldw	r5,180(sp)
 50831d0:	d8c02917 	ldw	r3,164(sp)
 50831d4:	d8002785 	stb	zero,158(sp)
 50831d8:	28800204 	addi	r2,r5,8
 50831dc:	2d000017 	ldw	r20,0(r5)
 50831e0:	2d800117 	ldw	r22,4(r5)
 50831e4:	18041516 	blt	r3,zero,508423c <___svfprintf_internal_r+0x166c>
 50831e8:	013fdfc4 	movi	r4,-129
 50831ec:	a586b03a 	or	r3,r20,r22
 50831f0:	d8802d15 	stw	r2,180(sp)
 50831f4:	9124703a 	and	r18,r18,r4
 50831f8:	1802d51e 	bne	r3,zero,5083d50 <___svfprintf_internal_r+0x1180>
 50831fc:	d9402917 	ldw	r5,164(sp)
 5083200:	0039883a 	mov	fp,zero
 5083204:	2806be26 	beq	r5,zero,5084d00 <___svfprintf_internal_r+0x2130>
 5083208:	0029883a 	mov	r20,zero
 508320c:	002d883a 	mov	r22,zero
 5083210:	dc001e04 	addi	r16,sp,120
 5083214:	a006d0fa 	srli	r3,r20,3
 5083218:	b008977a 	slli	r4,r22,29
 508321c:	b02cd0fa 	srli	r22,r22,3
 5083220:	a50001cc 	andi	r20,r20,7
 5083224:	a0800c04 	addi	r2,r20,48
 5083228:	843fffc4 	addi	r16,r16,-1
 508322c:	20e8b03a 	or	r20,r4,r3
 5083230:	80800005 	stb	r2,0(r16)
 5083234:	a586b03a 	or	r3,r20,r22
 5083238:	183ff61e 	bne	r3,zero,5083214 <__alt_data_end+0xfffb5014>
 508323c:	90c0004c 	andi	r3,r18,1
 5083240:	18013926 	beq	r3,zero,5083728 <___svfprintf_internal_r+0xb58>
 5083244:	10803fcc 	andi	r2,r2,255
 5083248:	1080201c 	xori	r2,r2,128
 508324c:	10bfe004 	addi	r2,r2,-128
 5083250:	00c00c04 	movi	r3,48
 5083254:	10c13426 	beq	r2,r3,5083728 <___svfprintf_internal_r+0xb58>
 5083258:	80ffffc5 	stb	r3,-1(r16)
 508325c:	d8c02817 	ldw	r3,160(sp)
 5083260:	80bfffc4 	addi	r2,r16,-1
 5083264:	1021883a 	mov	r16,r2
 5083268:	1887c83a 	sub	r3,r3,r2
 508326c:	d8c02e15 	stw	r3,184(sp)
 5083270:	d8802e17 	ldw	r2,184(sp)
 5083274:	d9002917 	ldw	r4,164(sp)
 5083278:	1100010e 	bge	r2,r4,5083280 <___svfprintf_internal_r+0x6b0>
 508327c:	2005883a 	mov	r2,r4
 5083280:	d8802a15 	stw	r2,168(sp)
 5083284:	d8003215 	stw	zero,200(sp)
 5083288:	e7003fcc 	andi	fp,fp,255
 508328c:	e700201c 	xori	fp,fp,128
 5083290:	e73fe004 	addi	fp,fp,-128
 5083294:	e0000326 	beq	fp,zero,50832a4 <___svfprintf_internal_r+0x6d4>
 5083298:	d8c02a17 	ldw	r3,168(sp)
 508329c:	18c00044 	addi	r3,r3,1
 50832a0:	d8c02a15 	stw	r3,168(sp)
 50832a4:	90c0008c 	andi	r3,r18,2
 50832a8:	d8c02b15 	stw	r3,172(sp)
 50832ac:	18000326 	beq	r3,zero,50832bc <___svfprintf_internal_r+0x6ec>
 50832b0:	d8c02a17 	ldw	r3,168(sp)
 50832b4:	18c00084 	addi	r3,r3,2
 50832b8:	d8c02a15 	stw	r3,168(sp)
 50832bc:	90c0210c 	andi	r3,r18,132
 50832c0:	d8c03015 	stw	r3,192(sp)
 50832c4:	1801a11e 	bne	r3,zero,508394c <___svfprintf_internal_r+0xd7c>
 50832c8:	d9003117 	ldw	r4,196(sp)
 50832cc:	d8c02a17 	ldw	r3,168(sp)
 50832d0:	20e9c83a 	sub	r20,r4,r3
 50832d4:	05019d0e 	bge	zero,r20,508394c <___svfprintf_internal_r+0xd7c>
 50832d8:	02400404 	movi	r9,16
 50832dc:	d8c02017 	ldw	r3,128(sp)
 50832e0:	d8801f17 	ldw	r2,124(sp)
 50832e4:	4d051b0e 	bge	r9,r20,5084754 <___svfprintf_internal_r+0x1b84>
 50832e8:	01414274 	movhi	r5,1289
 50832ec:	2957b884 	addi	r5,r5,24290
 50832f0:	dc403c15 	stw	r17,240(sp)
 50832f4:	d9403515 	stw	r5,212(sp)
 50832f8:	a023883a 	mov	r17,r20
 50832fc:	482d883a 	mov	r22,r9
 5083300:	9029883a 	mov	r20,r18
 5083304:	070001c4 	movi	fp,7
 5083308:	8025883a 	mov	r18,r16
 508330c:	dc002c17 	ldw	r16,176(sp)
 5083310:	00000306 	br	5083320 <___svfprintf_internal_r+0x750>
 5083314:	8c7ffc04 	addi	r17,r17,-16
 5083318:	42000204 	addi	r8,r8,8
 508331c:	b440130e 	bge	r22,r17,508336c <___svfprintf_internal_r+0x79c>
 5083320:	01014274 	movhi	r4,1289
 5083324:	18c00404 	addi	r3,r3,16
 5083328:	10800044 	addi	r2,r2,1
 508332c:	2117b884 	addi	r4,r4,24290
 5083330:	41000015 	stw	r4,0(r8)
 5083334:	45800115 	stw	r22,4(r8)
 5083338:	d8c02015 	stw	r3,128(sp)
 508333c:	d8801f15 	stw	r2,124(sp)
 5083340:	e0bff40e 	bge	fp,r2,5083314 <__alt_data_end+0xfffb5114>
 5083344:	d9801e04 	addi	r6,sp,120
 5083348:	800b883a 	mov	r5,r16
 508334c:	9809883a 	mov	r4,r19
 5083350:	508c3cc0 	call	508c3cc <__ssprint_r>
 5083354:	103f031e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 5083358:	8c7ffc04 	addi	r17,r17,-16
 508335c:	d8c02017 	ldw	r3,128(sp)
 5083360:	d8801f17 	ldw	r2,124(sp)
 5083364:	da000404 	addi	r8,sp,16
 5083368:	b47fed16 	blt	r22,r17,5083320 <__alt_data_end+0xfffb5120>
 508336c:	9021883a 	mov	r16,r18
 5083370:	a025883a 	mov	r18,r20
 5083374:	8829883a 	mov	r20,r17
 5083378:	dc403c17 	ldw	r17,240(sp)
 508337c:	d9403517 	ldw	r5,212(sp)
 5083380:	a0c7883a 	add	r3,r20,r3
 5083384:	10800044 	addi	r2,r2,1
 5083388:	41400015 	stw	r5,0(r8)
 508338c:	45000115 	stw	r20,4(r8)
 5083390:	d8c02015 	stw	r3,128(sp)
 5083394:	d8801f15 	stw	r2,124(sp)
 5083398:	010001c4 	movi	r4,7
 508339c:	20829f16 	blt	r4,r2,5083e1c <___svfprintf_internal_r+0x124c>
 50833a0:	df002787 	ldb	fp,158(sp)
 50833a4:	42000204 	addi	r8,r8,8
 50833a8:	e0000c26 	beq	fp,zero,50833dc <___svfprintf_internal_r+0x80c>
 50833ac:	d8801f17 	ldw	r2,124(sp)
 50833b0:	d9002784 	addi	r4,sp,158
 50833b4:	18c00044 	addi	r3,r3,1
 50833b8:	10800044 	addi	r2,r2,1
 50833bc:	41000015 	stw	r4,0(r8)
 50833c0:	01000044 	movi	r4,1
 50833c4:	41000115 	stw	r4,4(r8)
 50833c8:	d8c02015 	stw	r3,128(sp)
 50833cc:	d8801f15 	stw	r2,124(sp)
 50833d0:	010001c4 	movi	r4,7
 50833d4:	20823816 	blt	r4,r2,5083cb8 <___svfprintf_internal_r+0x10e8>
 50833d8:	42000204 	addi	r8,r8,8
 50833dc:	d8802b17 	ldw	r2,172(sp)
 50833e0:	10000c26 	beq	r2,zero,5083414 <___svfprintf_internal_r+0x844>
 50833e4:	d8801f17 	ldw	r2,124(sp)
 50833e8:	d9002704 	addi	r4,sp,156
 50833ec:	18c00084 	addi	r3,r3,2
 50833f0:	10800044 	addi	r2,r2,1
 50833f4:	41000015 	stw	r4,0(r8)
 50833f8:	01000084 	movi	r4,2
 50833fc:	41000115 	stw	r4,4(r8)
 5083400:	d8c02015 	stw	r3,128(sp)
 5083404:	d8801f15 	stw	r2,124(sp)
 5083408:	010001c4 	movi	r4,7
 508340c:	20823216 	blt	r4,r2,5083cd8 <___svfprintf_internal_r+0x1108>
 5083410:	42000204 	addi	r8,r8,8
 5083414:	d9003017 	ldw	r4,192(sp)
 5083418:	00802004 	movi	r2,128
 508341c:	20819726 	beq	r4,r2,5083a7c <___svfprintf_internal_r+0xeac>
 5083420:	d9402917 	ldw	r5,164(sp)
 5083424:	d8802e17 	ldw	r2,184(sp)
 5083428:	28adc83a 	sub	r22,r5,r2
 508342c:	05802f0e 	bge	zero,r22,50834ec <___svfprintf_internal_r+0x91c>
 5083430:	07000404 	movi	fp,16
 5083434:	d8801f17 	ldw	r2,124(sp)
 5083438:	e583c00e 	bge	fp,r22,508433c <___svfprintf_internal_r+0x176c>
 508343c:	01414274 	movhi	r5,1289
 5083440:	2957b484 	addi	r5,r5,24274
 5083444:	dc402915 	stw	r17,164(sp)
 5083448:	d9402b15 	stw	r5,172(sp)
 508344c:	b023883a 	mov	r17,r22
 5083450:	050001c4 	movi	r20,7
 5083454:	902d883a 	mov	r22,r18
 5083458:	8025883a 	mov	r18,r16
 508345c:	dc002c17 	ldw	r16,176(sp)
 5083460:	00000306 	br	5083470 <___svfprintf_internal_r+0x8a0>
 5083464:	8c7ffc04 	addi	r17,r17,-16
 5083468:	42000204 	addi	r8,r8,8
 508346c:	e440110e 	bge	fp,r17,50834b4 <___svfprintf_internal_r+0x8e4>
 5083470:	18c00404 	addi	r3,r3,16
 5083474:	10800044 	addi	r2,r2,1
 5083478:	45400015 	stw	r21,0(r8)
 508347c:	47000115 	stw	fp,4(r8)
 5083480:	d8c02015 	stw	r3,128(sp)
 5083484:	d8801f15 	stw	r2,124(sp)
 5083488:	a0bff60e 	bge	r20,r2,5083464 <__alt_data_end+0xfffb5264>
 508348c:	d9801e04 	addi	r6,sp,120
 5083490:	800b883a 	mov	r5,r16
 5083494:	9809883a 	mov	r4,r19
 5083498:	508c3cc0 	call	508c3cc <__ssprint_r>
 508349c:	103eb11e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 50834a0:	8c7ffc04 	addi	r17,r17,-16
 50834a4:	d8c02017 	ldw	r3,128(sp)
 50834a8:	d8801f17 	ldw	r2,124(sp)
 50834ac:	da000404 	addi	r8,sp,16
 50834b0:	e47fef16 	blt	fp,r17,5083470 <__alt_data_end+0xfffb5270>
 50834b4:	9021883a 	mov	r16,r18
 50834b8:	b025883a 	mov	r18,r22
 50834bc:	882d883a 	mov	r22,r17
 50834c0:	dc402917 	ldw	r17,164(sp)
 50834c4:	d9002b17 	ldw	r4,172(sp)
 50834c8:	1d87883a 	add	r3,r3,r22
 50834cc:	10800044 	addi	r2,r2,1
 50834d0:	41000015 	stw	r4,0(r8)
 50834d4:	45800115 	stw	r22,4(r8)
 50834d8:	d8c02015 	stw	r3,128(sp)
 50834dc:	d8801f15 	stw	r2,124(sp)
 50834e0:	010001c4 	movi	r4,7
 50834e4:	2081ec16 	blt	r4,r2,5083c98 <___svfprintf_internal_r+0x10c8>
 50834e8:	42000204 	addi	r8,r8,8
 50834ec:	9080400c 	andi	r2,r18,256
 50834f0:	1001181e 	bne	r2,zero,5083954 <___svfprintf_internal_r+0xd84>
 50834f4:	d9402e17 	ldw	r5,184(sp)
 50834f8:	d8801f17 	ldw	r2,124(sp)
 50834fc:	44000015 	stw	r16,0(r8)
 5083500:	1947883a 	add	r3,r3,r5
 5083504:	10800044 	addi	r2,r2,1
 5083508:	41400115 	stw	r5,4(r8)
 508350c:	d8c02015 	stw	r3,128(sp)
 5083510:	d8801f15 	stw	r2,124(sp)
 5083514:	010001c4 	movi	r4,7
 5083518:	2081d116 	blt	r4,r2,5083c60 <___svfprintf_internal_r+0x1090>
 508351c:	42000204 	addi	r8,r8,8
 5083520:	9480010c 	andi	r18,r18,4
 5083524:	90003226 	beq	r18,zero,50835f0 <___svfprintf_internal_r+0xa20>
 5083528:	d9403117 	ldw	r5,196(sp)
 508352c:	d8802a17 	ldw	r2,168(sp)
 5083530:	28a1c83a 	sub	r16,r5,r2
 5083534:	04002e0e 	bge	zero,r16,50835f0 <___svfprintf_internal_r+0xa20>
 5083538:	04400404 	movi	r17,16
 508353c:	d8801f17 	ldw	r2,124(sp)
 5083540:	8c04b90e 	bge	r17,r16,5084828 <___svfprintf_internal_r+0x1c58>
 5083544:	01414274 	movhi	r5,1289
 5083548:	2957b884 	addi	r5,r5,24290
 508354c:	d9403515 	stw	r5,212(sp)
 5083550:	048001c4 	movi	r18,7
 5083554:	dd002c17 	ldw	r20,176(sp)
 5083558:	00000306 	br	5083568 <___svfprintf_internal_r+0x998>
 508355c:	843ffc04 	addi	r16,r16,-16
 5083560:	42000204 	addi	r8,r8,8
 5083564:	8c00130e 	bge	r17,r16,50835b4 <___svfprintf_internal_r+0x9e4>
 5083568:	01014274 	movhi	r4,1289
 508356c:	18c00404 	addi	r3,r3,16
 5083570:	10800044 	addi	r2,r2,1
 5083574:	2117b884 	addi	r4,r4,24290
 5083578:	41000015 	stw	r4,0(r8)
 508357c:	44400115 	stw	r17,4(r8)
 5083580:	d8c02015 	stw	r3,128(sp)
 5083584:	d8801f15 	stw	r2,124(sp)
 5083588:	90bff40e 	bge	r18,r2,508355c <__alt_data_end+0xfffb535c>
 508358c:	d9801e04 	addi	r6,sp,120
 5083590:	a00b883a 	mov	r5,r20
 5083594:	9809883a 	mov	r4,r19
 5083598:	508c3cc0 	call	508c3cc <__ssprint_r>
 508359c:	103e711e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 50835a0:	843ffc04 	addi	r16,r16,-16
 50835a4:	d8c02017 	ldw	r3,128(sp)
 50835a8:	d8801f17 	ldw	r2,124(sp)
 50835ac:	da000404 	addi	r8,sp,16
 50835b0:	8c3fed16 	blt	r17,r16,5083568 <__alt_data_end+0xfffb5368>
 50835b4:	d9403517 	ldw	r5,212(sp)
 50835b8:	1c07883a 	add	r3,r3,r16
 50835bc:	10800044 	addi	r2,r2,1
 50835c0:	41400015 	stw	r5,0(r8)
 50835c4:	44000115 	stw	r16,4(r8)
 50835c8:	d8c02015 	stw	r3,128(sp)
 50835cc:	d8801f15 	stw	r2,124(sp)
 50835d0:	010001c4 	movi	r4,7
 50835d4:	2080060e 	bge	r4,r2,50835f0 <___svfprintf_internal_r+0xa20>
 50835d8:	d9402c17 	ldw	r5,176(sp)
 50835dc:	d9801e04 	addi	r6,sp,120
 50835e0:	9809883a 	mov	r4,r19
 50835e4:	508c3cc0 	call	508c3cc <__ssprint_r>
 50835e8:	103e5e1e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 50835ec:	d8c02017 	ldw	r3,128(sp)
 50835f0:	d8803117 	ldw	r2,196(sp)
 50835f4:	d9002a17 	ldw	r4,168(sp)
 50835f8:	1100010e 	bge	r2,r4,5083600 <___svfprintf_internal_r+0xa30>
 50835fc:	2005883a 	mov	r2,r4
 5083600:	d9402f17 	ldw	r5,188(sp)
 5083604:	288b883a 	add	r5,r5,r2
 5083608:	d9402f15 	stw	r5,188(sp)
 508360c:	18019c1e 	bne	r3,zero,5083c80 <___svfprintf_internal_r+0x10b0>
 5083610:	b8800007 	ldb	r2,0(r23)
 5083614:	d8001f15 	stw	zero,124(sp)
 5083618:	da000404 	addi	r8,sp,16
 508361c:	103d991e 	bne	r2,zero,5082c84 <__alt_data_end+0xfffb4a84>
 5083620:	b821883a 	mov	r16,r23
 5083624:	003daf06 	br	5082ce4 <__alt_data_end+0xfffb4ae4>
 5083628:	18c03fcc 	andi	r3,r3,255
 508362c:	1805c71e 	bne	r3,zero,5084d4c <___svfprintf_internal_r+0x217c>
 5083630:	94800414 	ori	r18,r18,16
 5083634:	9080080c 	andi	r2,r18,32
 5083638:	10020126 	beq	r2,zero,5083e40 <___svfprintf_internal_r+0x1270>
 508363c:	d8802d17 	ldw	r2,180(sp)
 5083640:	d9002917 	ldw	r4,164(sp)
 5083644:	d8002785 	stb	zero,158(sp)
 5083648:	10c00204 	addi	r3,r2,8
 508364c:	15000017 	ldw	r20,0(r2)
 5083650:	15800117 	ldw	r22,4(r2)
 5083654:	20038e16 	blt	r4,zero,5084490 <___svfprintf_internal_r+0x18c0>
 5083658:	013fdfc4 	movi	r4,-129
 508365c:	a584b03a 	or	r2,r20,r22
 5083660:	d8c02d15 	stw	r3,180(sp)
 5083664:	9124703a 	and	r18,r18,r4
 5083668:	0039883a 	mov	fp,zero
 508366c:	103eb61e 	bne	r2,zero,5083148 <__alt_data_end+0xfffb4f48>
 5083670:	d8802917 	ldw	r2,164(sp)
 5083674:	1002c81e 	bne	r2,zero,5084198 <___svfprintf_internal_r+0x15c8>
 5083678:	d8002915 	stw	zero,164(sp)
 508367c:	d8002e15 	stw	zero,184(sp)
 5083680:	dc001e04 	addi	r16,sp,120
 5083684:	003efa06 	br	5083270 <__alt_data_end+0xfffb5070>
 5083688:	18c03fcc 	andi	r3,r3,255
 508368c:	1805ad1e 	bne	r3,zero,5084d44 <___svfprintf_internal_r+0x2174>
 5083690:	01414274 	movhi	r5,1289
 5083694:	2957a804 	addi	r5,r5,24224
 5083698:	d9403a15 	stw	r5,232(sp)
 508369c:	9080080c 	andi	r2,r18,32
 50836a0:	10006126 	beq	r2,zero,5083828 <___svfprintf_internal_r+0xc58>
 50836a4:	d8802d17 	ldw	r2,180(sp)
 50836a8:	15000017 	ldw	r20,0(r2)
 50836ac:	15800117 	ldw	r22,4(r2)
 50836b0:	10800204 	addi	r2,r2,8
 50836b4:	d8802d15 	stw	r2,180(sp)
 50836b8:	9080004c 	andi	r2,r18,1
 50836bc:	10018e26 	beq	r2,zero,5083cf8 <___svfprintf_internal_r+0x1128>
 50836c0:	a584b03a 	or	r2,r20,r22
 50836c4:	10030926 	beq	r2,zero,50842ec <___svfprintf_internal_r+0x171c>
 50836c8:	d8c02917 	ldw	r3,164(sp)
 50836cc:	00800c04 	movi	r2,48
 50836d0:	d8802705 	stb	r2,156(sp)
 50836d4:	dc402745 	stb	r17,157(sp)
 50836d8:	d8002785 	stb	zero,158(sp)
 50836dc:	90800094 	ori	r2,r18,2
 50836e0:	18048716 	blt	r3,zero,5084900 <___svfprintf_internal_r+0x1d30>
 50836e4:	00bfdfc4 	movi	r2,-129
 50836e8:	90a4703a 	and	r18,r18,r2
 50836ec:	94800094 	ori	r18,r18,2
 50836f0:	0039883a 	mov	fp,zero
 50836f4:	d9003a17 	ldw	r4,232(sp)
 50836f8:	dc001e04 	addi	r16,sp,120
 50836fc:	a08003cc 	andi	r2,r20,15
 5083700:	b006973a 	slli	r3,r22,28
 5083704:	2085883a 	add	r2,r4,r2
 5083708:	a028d13a 	srli	r20,r20,4
 508370c:	10800003 	ldbu	r2,0(r2)
 5083710:	b02cd13a 	srli	r22,r22,4
 5083714:	843fffc4 	addi	r16,r16,-1
 5083718:	1d28b03a 	or	r20,r3,r20
 508371c:	80800005 	stb	r2,0(r16)
 5083720:	a584b03a 	or	r2,r20,r22
 5083724:	103ff51e 	bne	r2,zero,50836fc <__alt_data_end+0xfffb54fc>
 5083728:	d8c02817 	ldw	r3,160(sp)
 508372c:	1c07c83a 	sub	r3,r3,r16
 5083730:	d8c02e15 	stw	r3,184(sp)
 5083734:	003ece06 	br	5083270 <__alt_data_end+0xfffb5070>
 5083738:	d8c02d17 	ldw	r3,180(sp)
 508373c:	d9002d17 	ldw	r4,180(sp)
 5083740:	d8002785 	stb	zero,158(sp)
 5083744:	18800017 	ldw	r2,0(r3)
 5083748:	21000104 	addi	r4,r4,4
 508374c:	00c00044 	movi	r3,1
 5083750:	d8c02a15 	stw	r3,168(sp)
 5083754:	d8801405 	stb	r2,80(sp)
 5083758:	d9002d15 	stw	r4,180(sp)
 508375c:	d8c02e15 	stw	r3,184(sp)
 5083760:	d8002915 	stw	zero,164(sp)
 5083764:	d8003215 	stw	zero,200(sp)
 5083768:	dc001404 	addi	r16,sp,80
 508376c:	0039883a 	mov	fp,zero
 5083770:	003ecc06 	br	50832a4 <__alt_data_end+0xfffb50a4>
 5083774:	18c03fcc 	andi	r3,r3,255
 5083778:	183e9226 	beq	r3,zero,50831c4 <__alt_data_end+0xfffb4fc4>
 508377c:	d9c02785 	stb	r7,158(sp)
 5083780:	003e9006 	br	50831c4 <__alt_data_end+0xfffb4fc4>
 5083784:	00c00044 	movi	r3,1
 5083788:	01c00ac4 	movi	r7,43
 508378c:	bc400007 	ldb	r17,0(r23)
 5083790:	003d6306 	br	5082d20 <__alt_data_end+0xfffb4b20>
 5083794:	94800814 	ori	r18,r18,32
 5083798:	bc400007 	ldb	r17,0(r23)
 508379c:	003d6006 	br	5082d20 <__alt_data_end+0xfffb4b20>
 50837a0:	d8c02d17 	ldw	r3,180(sp)
 50837a4:	d8002785 	stb	zero,158(sp)
 50837a8:	1c000017 	ldw	r16,0(r3)
 50837ac:	1d000104 	addi	r20,r3,4
 50837b0:	80040f26 	beq	r16,zero,50847f0 <___svfprintf_internal_r+0x1c20>
 50837b4:	d9002917 	ldw	r4,164(sp)
 50837b8:	2003dc16 	blt	r4,zero,508472c <___svfprintf_internal_r+0x1b5c>
 50837bc:	200d883a 	mov	r6,r4
 50837c0:	000b883a 	mov	r5,zero
 50837c4:	8009883a 	mov	r4,r16
 50837c8:	da003e15 	stw	r8,248(sp)
 50837cc:	508a6dc0 	call	508a6dc <memchr>
 50837d0:	da003e17 	ldw	r8,248(sp)
 50837d4:	10045826 	beq	r2,zero,5084938 <___svfprintf_internal_r+0x1d68>
 50837d8:	1405c83a 	sub	r2,r2,r16
 50837dc:	d8802e15 	stw	r2,184(sp)
 50837e0:	1003d816 	blt	r2,zero,5084744 <___svfprintf_internal_r+0x1b74>
 50837e4:	df002783 	ldbu	fp,158(sp)
 50837e8:	d8802a15 	stw	r2,168(sp)
 50837ec:	dd002d15 	stw	r20,180(sp)
 50837f0:	d8002915 	stw	zero,164(sp)
 50837f4:	d8003215 	stw	zero,200(sp)
 50837f8:	003ea306 	br	5083288 <__alt_data_end+0xfffb5088>
 50837fc:	18c03fcc 	andi	r3,r3,255
 5083800:	183f8c26 	beq	r3,zero,5083634 <__alt_data_end+0xfffb5434>
 5083804:	d9c02785 	stb	r7,158(sp)
 5083808:	003f8a06 	br	5083634 <__alt_data_end+0xfffb5434>
 508380c:	18c03fcc 	andi	r3,r3,255
 5083810:	1805631e 	bne	r3,zero,5084da0 <___svfprintf_internal_r+0x21d0>
 5083814:	01414274 	movhi	r5,1289
 5083818:	2957ad04 	addi	r5,r5,24244
 508381c:	d9403a15 	stw	r5,232(sp)
 5083820:	9080080c 	andi	r2,r18,32
 5083824:	103f9f1e 	bne	r2,zero,50836a4 <__alt_data_end+0xfffb54a4>
 5083828:	9080040c 	andi	r2,r18,16
 508382c:	10029c26 	beq	r2,zero,50842a0 <___svfprintf_internal_r+0x16d0>
 5083830:	d8c02d17 	ldw	r3,180(sp)
 5083834:	002d883a 	mov	r22,zero
 5083838:	1d000017 	ldw	r20,0(r3)
 508383c:	18c00104 	addi	r3,r3,4
 5083840:	d8c02d15 	stw	r3,180(sp)
 5083844:	003f9c06 	br	50836b8 <__alt_data_end+0xfffb54b8>
 5083848:	94800054 	ori	r18,r18,1
 508384c:	bc400007 	ldb	r17,0(r23)
 5083850:	003d3306 	br	5082d20 <__alt_data_end+0xfffb4b20>
 5083854:	38803fcc 	andi	r2,r7,255
 5083858:	1080201c 	xori	r2,r2,128
 508385c:	10bfe004 	addi	r2,r2,-128
 5083860:	1002971e 	bne	r2,zero,50842c0 <___svfprintf_internal_r+0x16f0>
 5083864:	00c00044 	movi	r3,1
 5083868:	01c00804 	movi	r7,32
 508386c:	bc400007 	ldb	r17,0(r23)
 5083870:	003d2b06 	br	5082d20 <__alt_data_end+0xfffb4b20>
 5083874:	18c03fcc 	andi	r3,r3,255
 5083878:	183e2326 	beq	r3,zero,5083108 <__alt_data_end+0xfffb4f08>
 508387c:	d9c02785 	stb	r7,158(sp)
 5083880:	003e2106 	br	5083108 <__alt_data_end+0xfffb4f08>
 5083884:	bc400007 	ldb	r17,0(r23)
 5083888:	8a430426 	beq	r17,r9,508449c <___svfprintf_internal_r+0x18cc>
 508388c:	94800414 	ori	r18,r18,16
 5083890:	003d2306 	br	5082d20 <__alt_data_end+0xfffb4b20>
 5083894:	18c03fcc 	andi	r3,r3,255
 5083898:	18053f1e 	bne	r3,zero,5084d98 <___svfprintf_internal_r+0x21c8>
 508389c:	9080080c 	andi	r2,r18,32
 50838a0:	10028926 	beq	r2,zero,50842c8 <___svfprintf_internal_r+0x16f8>
 50838a4:	d9402d17 	ldw	r5,180(sp)
 50838a8:	d9002f17 	ldw	r4,188(sp)
 50838ac:	28800017 	ldw	r2,0(r5)
 50838b0:	2007d7fa 	srai	r3,r4,31
 50838b4:	29400104 	addi	r5,r5,4
 50838b8:	d9402d15 	stw	r5,180(sp)
 50838bc:	11000015 	stw	r4,0(r2)
 50838c0:	10c00115 	stw	r3,4(r2)
 50838c4:	003ced06 	br	5082c7c <__alt_data_end+0xfffb4a7c>
 50838c8:	94801014 	ori	r18,r18,64
 50838cc:	bc400007 	ldb	r17,0(r23)
 50838d0:	003d1306 	br	5082d20 <__alt_data_end+0xfffb4b20>
 50838d4:	01014274 	movhi	r4,1289
 50838d8:	2117ad04 	addi	r4,r4,24244
 50838dc:	0039883a 	mov	fp,zero
 50838e0:	d9003a15 	stw	r4,232(sp)
 50838e4:	04401e04 	movi	r17,120
 50838e8:	003f8206 	br	50836f4 <__alt_data_end+0xfffb54f4>
 50838ec:	18c03fcc 	andi	r3,r3,255
 50838f0:	1805221e 	bne	r3,zero,5084d7c <___svfprintf_internal_r+0x21ac>
 50838f4:	883d9526 	beq	r17,zero,5082f4c <__alt_data_end+0xfffb4d4c>
 50838f8:	00c00044 	movi	r3,1
 50838fc:	d8c02a15 	stw	r3,168(sp)
 5083900:	dc401405 	stb	r17,80(sp)
 5083904:	d8002785 	stb	zero,158(sp)
 5083908:	003f9406 	br	508375c <__alt_data_end+0xfffb555c>
 508390c:	01014274 	movhi	r4,1289
 5083910:	2117ad04 	addi	r4,r4,24244
 5083914:	d9003a15 	stw	r4,232(sp)
 5083918:	d8c02d15 	stw	r3,180(sp)
 508391c:	1025883a 	mov	r18,r2
 5083920:	04401e04 	movi	r17,120
 5083924:	a584b03a 	or	r2,r20,r22
 5083928:	1000fa1e 	bne	r2,zero,5083d14 <___svfprintf_internal_r+0x1144>
 508392c:	0039883a 	mov	fp,zero
 5083930:	00800084 	movi	r2,2
 5083934:	10803fcc 	andi	r2,r2,255
 5083938:	00c00044 	movi	r3,1
 508393c:	10c21626 	beq	r2,r3,5084198 <___svfprintf_internal_r+0x15c8>
 5083940:	00c00084 	movi	r3,2
 5083944:	10fe301e 	bne	r2,r3,5083208 <__alt_data_end+0xfffb5008>
 5083948:	003d7606 	br	5082f24 <__alt_data_end+0xfffb4d24>
 508394c:	d8c02017 	ldw	r3,128(sp)
 5083950:	003e9506 	br	50833a8 <__alt_data_end+0xfffb51a8>
 5083954:	00801944 	movi	r2,101
 5083958:	14407c0e 	bge	r2,r17,5083b4c <___svfprintf_internal_r+0xf7c>
 508395c:	d9003617 	ldw	r4,216(sp)
 5083960:	d9403717 	ldw	r5,220(sp)
 5083964:	000d883a 	mov	r6,zero
 5083968:	000f883a 	mov	r7,zero
 508396c:	d8c03d15 	stw	r3,244(sp)
 5083970:	da003e15 	stw	r8,248(sp)
 5083974:	50913980 	call	5091398 <__eqdf2>
 5083978:	d8c03d17 	ldw	r3,244(sp)
 508397c:	da003e17 	ldw	r8,248(sp)
 5083980:	1000f51e 	bne	r2,zero,5083d58 <___svfprintf_internal_r+0x1188>
 5083984:	d8801f17 	ldw	r2,124(sp)
 5083988:	01014274 	movhi	r4,1289
 508398c:	2117b404 	addi	r4,r4,24272
 5083990:	18c00044 	addi	r3,r3,1
 5083994:	10800044 	addi	r2,r2,1
 5083998:	41000015 	stw	r4,0(r8)
 508399c:	01000044 	movi	r4,1
 50839a0:	41000115 	stw	r4,4(r8)
 50839a4:	d8c02015 	stw	r3,128(sp)
 50839a8:	d8801f15 	stw	r2,124(sp)
 50839ac:	010001c4 	movi	r4,7
 50839b0:	20826616 	blt	r4,r2,508434c <___svfprintf_internal_r+0x177c>
 50839b4:	42000204 	addi	r8,r8,8
 50839b8:	d8802617 	ldw	r2,152(sp)
 50839bc:	d9403317 	ldw	r5,204(sp)
 50839c0:	11400216 	blt	r2,r5,50839cc <___svfprintf_internal_r+0xdfc>
 50839c4:	9080004c 	andi	r2,r18,1
 50839c8:	103ed526 	beq	r2,zero,5083520 <__alt_data_end+0xfffb5320>
 50839cc:	d8803817 	ldw	r2,224(sp)
 50839d0:	d9003417 	ldw	r4,208(sp)
 50839d4:	d9403817 	ldw	r5,224(sp)
 50839d8:	1887883a 	add	r3,r3,r2
 50839dc:	d8801f17 	ldw	r2,124(sp)
 50839e0:	41000015 	stw	r4,0(r8)
 50839e4:	41400115 	stw	r5,4(r8)
 50839e8:	10800044 	addi	r2,r2,1
 50839ec:	d8c02015 	stw	r3,128(sp)
 50839f0:	d8801f15 	stw	r2,124(sp)
 50839f4:	010001c4 	movi	r4,7
 50839f8:	2082af16 	blt	r4,r2,50844b8 <___svfprintf_internal_r+0x18e8>
 50839fc:	42000204 	addi	r8,r8,8
 5083a00:	d8803317 	ldw	r2,204(sp)
 5083a04:	143fffc4 	addi	r16,r2,-1
 5083a08:	043ec50e 	bge	zero,r16,5083520 <__alt_data_end+0xfffb5320>
 5083a0c:	04400404 	movi	r17,16
 5083a10:	d8801f17 	ldw	r2,124(sp)
 5083a14:	8c00860e 	bge	r17,r16,5083c30 <___svfprintf_internal_r+0x1060>
 5083a18:	01414274 	movhi	r5,1289
 5083a1c:	2957b484 	addi	r5,r5,24274
 5083a20:	d9402b15 	stw	r5,172(sp)
 5083a24:	058001c4 	movi	r22,7
 5083a28:	dd002c17 	ldw	r20,176(sp)
 5083a2c:	00000306 	br	5083a3c <___svfprintf_internal_r+0xe6c>
 5083a30:	42000204 	addi	r8,r8,8
 5083a34:	843ffc04 	addi	r16,r16,-16
 5083a38:	8c00800e 	bge	r17,r16,5083c3c <___svfprintf_internal_r+0x106c>
 5083a3c:	18c00404 	addi	r3,r3,16
 5083a40:	10800044 	addi	r2,r2,1
 5083a44:	45400015 	stw	r21,0(r8)
 5083a48:	44400115 	stw	r17,4(r8)
 5083a4c:	d8c02015 	stw	r3,128(sp)
 5083a50:	d8801f15 	stw	r2,124(sp)
 5083a54:	b0bff60e 	bge	r22,r2,5083a30 <__alt_data_end+0xfffb5830>
 5083a58:	d9801e04 	addi	r6,sp,120
 5083a5c:	a00b883a 	mov	r5,r20
 5083a60:	9809883a 	mov	r4,r19
 5083a64:	508c3cc0 	call	508c3cc <__ssprint_r>
 5083a68:	103d3e1e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 5083a6c:	d8c02017 	ldw	r3,128(sp)
 5083a70:	d8801f17 	ldw	r2,124(sp)
 5083a74:	da000404 	addi	r8,sp,16
 5083a78:	003fee06 	br	5083a34 <__alt_data_end+0xfffb5834>
 5083a7c:	d9403117 	ldw	r5,196(sp)
 5083a80:	d8802a17 	ldw	r2,168(sp)
 5083a84:	28adc83a 	sub	r22,r5,r2
 5083a88:	05be650e 	bge	zero,r22,5083420 <__alt_data_end+0xfffb5220>
 5083a8c:	07000404 	movi	fp,16
 5083a90:	d8801f17 	ldw	r2,124(sp)
 5083a94:	e583a20e 	bge	fp,r22,5084920 <___svfprintf_internal_r+0x1d50>
 5083a98:	01414274 	movhi	r5,1289
 5083a9c:	2957b484 	addi	r5,r5,24274
 5083aa0:	dc403015 	stw	r17,192(sp)
 5083aa4:	d9402b15 	stw	r5,172(sp)
 5083aa8:	b023883a 	mov	r17,r22
 5083aac:	050001c4 	movi	r20,7
 5083ab0:	902d883a 	mov	r22,r18
 5083ab4:	8025883a 	mov	r18,r16
 5083ab8:	dc002c17 	ldw	r16,176(sp)
 5083abc:	00000306 	br	5083acc <___svfprintf_internal_r+0xefc>
 5083ac0:	8c7ffc04 	addi	r17,r17,-16
 5083ac4:	42000204 	addi	r8,r8,8
 5083ac8:	e440110e 	bge	fp,r17,5083b10 <___svfprintf_internal_r+0xf40>
 5083acc:	18c00404 	addi	r3,r3,16
 5083ad0:	10800044 	addi	r2,r2,1
 5083ad4:	45400015 	stw	r21,0(r8)
 5083ad8:	47000115 	stw	fp,4(r8)
 5083adc:	d8c02015 	stw	r3,128(sp)
 5083ae0:	d8801f15 	stw	r2,124(sp)
 5083ae4:	a0bff60e 	bge	r20,r2,5083ac0 <__alt_data_end+0xfffb58c0>
 5083ae8:	d9801e04 	addi	r6,sp,120
 5083aec:	800b883a 	mov	r5,r16
 5083af0:	9809883a 	mov	r4,r19
 5083af4:	508c3cc0 	call	508c3cc <__ssprint_r>
 5083af8:	103d1a1e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 5083afc:	8c7ffc04 	addi	r17,r17,-16
 5083b00:	d8c02017 	ldw	r3,128(sp)
 5083b04:	d8801f17 	ldw	r2,124(sp)
 5083b08:	da000404 	addi	r8,sp,16
 5083b0c:	e47fef16 	blt	fp,r17,5083acc <__alt_data_end+0xfffb58cc>
 5083b10:	9021883a 	mov	r16,r18
 5083b14:	b025883a 	mov	r18,r22
 5083b18:	882d883a 	mov	r22,r17
 5083b1c:	dc403017 	ldw	r17,192(sp)
 5083b20:	d9002b17 	ldw	r4,172(sp)
 5083b24:	1d87883a 	add	r3,r3,r22
 5083b28:	10800044 	addi	r2,r2,1
 5083b2c:	41000015 	stw	r4,0(r8)
 5083b30:	45800115 	stw	r22,4(r8)
 5083b34:	d8c02015 	stw	r3,128(sp)
 5083b38:	d8801f15 	stw	r2,124(sp)
 5083b3c:	010001c4 	movi	r4,7
 5083b40:	20819a16 	blt	r4,r2,50841ac <___svfprintf_internal_r+0x15dc>
 5083b44:	42000204 	addi	r8,r8,8
 5083b48:	003e3506 	br	5083420 <__alt_data_end+0xfffb5220>
 5083b4c:	d9403317 	ldw	r5,204(sp)
 5083b50:	00800044 	movi	r2,1
 5083b54:	18c00044 	addi	r3,r3,1
 5083b58:	1141710e 	bge	r2,r5,5084120 <___svfprintf_internal_r+0x1550>
 5083b5c:	dc401f17 	ldw	r17,124(sp)
 5083b60:	00800044 	movi	r2,1
 5083b64:	40800115 	stw	r2,4(r8)
 5083b68:	8c400044 	addi	r17,r17,1
 5083b6c:	44000015 	stw	r16,0(r8)
 5083b70:	d8c02015 	stw	r3,128(sp)
 5083b74:	dc401f15 	stw	r17,124(sp)
 5083b78:	008001c4 	movi	r2,7
 5083b7c:	14417416 	blt	r2,r17,5084150 <___svfprintf_internal_r+0x1580>
 5083b80:	42000204 	addi	r8,r8,8
 5083b84:	d8803817 	ldw	r2,224(sp)
 5083b88:	d9003417 	ldw	r4,208(sp)
 5083b8c:	8c400044 	addi	r17,r17,1
 5083b90:	10c7883a 	add	r3,r2,r3
 5083b94:	40800115 	stw	r2,4(r8)
 5083b98:	41000015 	stw	r4,0(r8)
 5083b9c:	d8c02015 	stw	r3,128(sp)
 5083ba0:	dc401f15 	stw	r17,124(sp)
 5083ba4:	008001c4 	movi	r2,7
 5083ba8:	14417216 	blt	r2,r17,5084174 <___svfprintf_internal_r+0x15a4>
 5083bac:	45800204 	addi	r22,r8,8
 5083bb0:	d9003617 	ldw	r4,216(sp)
 5083bb4:	d9403717 	ldw	r5,220(sp)
 5083bb8:	000d883a 	mov	r6,zero
 5083bbc:	000f883a 	mov	r7,zero
 5083bc0:	d8c03d15 	stw	r3,244(sp)
 5083bc4:	50913980 	call	5091398 <__eqdf2>
 5083bc8:	d8c03d17 	ldw	r3,244(sp)
 5083bcc:	1000b326 	beq	r2,zero,5083e9c <___svfprintf_internal_r+0x12cc>
 5083bd0:	d9403317 	ldw	r5,204(sp)
 5083bd4:	84000044 	addi	r16,r16,1
 5083bd8:	8c400044 	addi	r17,r17,1
 5083bdc:	28bfffc4 	addi	r2,r5,-1
 5083be0:	1887883a 	add	r3,r3,r2
 5083be4:	b0800115 	stw	r2,4(r22)
 5083be8:	b4000015 	stw	r16,0(r22)
 5083bec:	d8c02015 	stw	r3,128(sp)
 5083bf0:	dc401f15 	stw	r17,124(sp)
 5083bf4:	008001c4 	movi	r2,7
 5083bf8:	1440d216 	blt	r2,r17,5083f44 <___svfprintf_internal_r+0x1374>
 5083bfc:	b5800204 	addi	r22,r22,8
 5083c00:	d9003b17 	ldw	r4,236(sp)
 5083c04:	df0022c4 	addi	fp,sp,139
 5083c08:	8c400044 	addi	r17,r17,1
 5083c0c:	20c7883a 	add	r3,r4,r3
 5083c10:	b7000015 	stw	fp,0(r22)
 5083c14:	b1000115 	stw	r4,4(r22)
 5083c18:	d8c02015 	stw	r3,128(sp)
 5083c1c:	dc401f15 	stw	r17,124(sp)
 5083c20:	008001c4 	movi	r2,7
 5083c24:	14400e16 	blt	r2,r17,5083c60 <___svfprintf_internal_r+0x1090>
 5083c28:	b2000204 	addi	r8,r22,8
 5083c2c:	003e3c06 	br	5083520 <__alt_data_end+0xfffb5320>
 5083c30:	01014274 	movhi	r4,1289
 5083c34:	2117b484 	addi	r4,r4,24274
 5083c38:	d9002b15 	stw	r4,172(sp)
 5083c3c:	d9002b17 	ldw	r4,172(sp)
 5083c40:	1c07883a 	add	r3,r3,r16
 5083c44:	44000115 	stw	r16,4(r8)
 5083c48:	41000015 	stw	r4,0(r8)
 5083c4c:	10800044 	addi	r2,r2,1
 5083c50:	d8c02015 	stw	r3,128(sp)
 5083c54:	d8801f15 	stw	r2,124(sp)
 5083c58:	010001c4 	movi	r4,7
 5083c5c:	20be2f0e 	bge	r4,r2,508351c <__alt_data_end+0xfffb531c>
 5083c60:	d9402c17 	ldw	r5,176(sp)
 5083c64:	d9801e04 	addi	r6,sp,120
 5083c68:	9809883a 	mov	r4,r19
 5083c6c:	508c3cc0 	call	508c3cc <__ssprint_r>
 5083c70:	103cbc1e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 5083c74:	d8c02017 	ldw	r3,128(sp)
 5083c78:	da000404 	addi	r8,sp,16
 5083c7c:	003e2806 	br	5083520 <__alt_data_end+0xfffb5320>
 5083c80:	d9402c17 	ldw	r5,176(sp)
 5083c84:	d9801e04 	addi	r6,sp,120
 5083c88:	9809883a 	mov	r4,r19
 5083c8c:	508c3cc0 	call	508c3cc <__ssprint_r>
 5083c90:	103e5f26 	beq	r2,zero,5083610 <__alt_data_end+0xfffb5410>
 5083c94:	003cb306 	br	5082f64 <__alt_data_end+0xfffb4d64>
 5083c98:	d9402c17 	ldw	r5,176(sp)
 5083c9c:	d9801e04 	addi	r6,sp,120
 5083ca0:	9809883a 	mov	r4,r19
 5083ca4:	508c3cc0 	call	508c3cc <__ssprint_r>
 5083ca8:	103cae1e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 5083cac:	d8c02017 	ldw	r3,128(sp)
 5083cb0:	da000404 	addi	r8,sp,16
 5083cb4:	003e0d06 	br	50834ec <__alt_data_end+0xfffb52ec>
 5083cb8:	d9402c17 	ldw	r5,176(sp)
 5083cbc:	d9801e04 	addi	r6,sp,120
 5083cc0:	9809883a 	mov	r4,r19
 5083cc4:	508c3cc0 	call	508c3cc <__ssprint_r>
 5083cc8:	103ca61e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 5083ccc:	d8c02017 	ldw	r3,128(sp)
 5083cd0:	da000404 	addi	r8,sp,16
 5083cd4:	003dc106 	br	50833dc <__alt_data_end+0xfffb51dc>
 5083cd8:	d9402c17 	ldw	r5,176(sp)
 5083cdc:	d9801e04 	addi	r6,sp,120
 5083ce0:	9809883a 	mov	r4,r19
 5083ce4:	508c3cc0 	call	508c3cc <__ssprint_r>
 5083ce8:	103c9e1e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 5083cec:	d8c02017 	ldw	r3,128(sp)
 5083cf0:	da000404 	addi	r8,sp,16
 5083cf4:	003dc706 	br	5083414 <__alt_data_end+0xfffb5214>
 5083cf8:	d8802917 	ldw	r2,164(sp)
 5083cfc:	d8002785 	stb	zero,158(sp)
 5083d00:	103f0816 	blt	r2,zero,5083924 <__alt_data_end+0xfffb5724>
 5083d04:	00ffdfc4 	movi	r3,-129
 5083d08:	a584b03a 	or	r2,r20,r22
 5083d0c:	90e4703a 	and	r18,r18,r3
 5083d10:	103c8126 	beq	r2,zero,5082f18 <__alt_data_end+0xfffb4d18>
 5083d14:	0039883a 	mov	fp,zero
 5083d18:	003e7606 	br	50836f4 <__alt_data_end+0xfffb54f4>
 5083d1c:	9080040c 	andi	r2,r18,16
 5083d20:	10013d26 	beq	r2,zero,5084218 <___svfprintf_internal_r+0x1648>
 5083d24:	d9002d17 	ldw	r4,180(sp)
 5083d28:	d9402917 	ldw	r5,164(sp)
 5083d2c:	d8002785 	stb	zero,158(sp)
 5083d30:	20800104 	addi	r2,r4,4
 5083d34:	25000017 	ldw	r20,0(r4)
 5083d38:	002d883a 	mov	r22,zero
 5083d3c:	28013f16 	blt	r5,zero,508423c <___svfprintf_internal_r+0x166c>
 5083d40:	00ffdfc4 	movi	r3,-129
 5083d44:	d8802d15 	stw	r2,180(sp)
 5083d48:	90e4703a 	and	r18,r18,r3
 5083d4c:	a03d2b26 	beq	r20,zero,50831fc <__alt_data_end+0xfffb4ffc>
 5083d50:	0039883a 	mov	fp,zero
 5083d54:	003d2e06 	br	5083210 <__alt_data_end+0xfffb5010>
 5083d58:	dc402617 	ldw	r17,152(sp)
 5083d5c:	0441830e 	bge	zero,r17,508436c <___svfprintf_internal_r+0x179c>
 5083d60:	dc403217 	ldw	r17,200(sp)
 5083d64:	d8803317 	ldw	r2,204(sp)
 5083d68:	1440010e 	bge	r2,r17,5083d70 <___svfprintf_internal_r+0x11a0>
 5083d6c:	1023883a 	mov	r17,r2
 5083d70:	04400a0e 	bge	zero,r17,5083d9c <___svfprintf_internal_r+0x11cc>
 5083d74:	d8801f17 	ldw	r2,124(sp)
 5083d78:	1c47883a 	add	r3,r3,r17
 5083d7c:	44000015 	stw	r16,0(r8)
 5083d80:	10800044 	addi	r2,r2,1
 5083d84:	44400115 	stw	r17,4(r8)
 5083d88:	d8c02015 	stw	r3,128(sp)
 5083d8c:	d8801f15 	stw	r2,124(sp)
 5083d90:	010001c4 	movi	r4,7
 5083d94:	20827516 	blt	r4,r2,508476c <___svfprintf_internal_r+0x1b9c>
 5083d98:	42000204 	addi	r8,r8,8
 5083d9c:	88027b16 	blt	r17,zero,508478c <___svfprintf_internal_r+0x1bbc>
 5083da0:	d9003217 	ldw	r4,200(sp)
 5083da4:	2463c83a 	sub	r17,r4,r17
 5083da8:	0440990e 	bge	zero,r17,5084010 <___svfprintf_internal_r+0x1440>
 5083dac:	05800404 	movi	r22,16
 5083db0:	d8801f17 	ldw	r2,124(sp)
 5083db4:	b441530e 	bge	r22,r17,5084304 <___svfprintf_internal_r+0x1734>
 5083db8:	01014274 	movhi	r4,1289
 5083dbc:	2117b484 	addi	r4,r4,24274
 5083dc0:	d9002b15 	stw	r4,172(sp)
 5083dc4:	070001c4 	movi	fp,7
 5083dc8:	dd002c17 	ldw	r20,176(sp)
 5083dcc:	00000306 	br	5083ddc <___svfprintf_internal_r+0x120c>
 5083dd0:	42000204 	addi	r8,r8,8
 5083dd4:	8c7ffc04 	addi	r17,r17,-16
 5083dd8:	b4414d0e 	bge	r22,r17,5084310 <___svfprintf_internal_r+0x1740>
 5083ddc:	18c00404 	addi	r3,r3,16
 5083de0:	10800044 	addi	r2,r2,1
 5083de4:	45400015 	stw	r21,0(r8)
 5083de8:	45800115 	stw	r22,4(r8)
 5083dec:	d8c02015 	stw	r3,128(sp)
 5083df0:	d8801f15 	stw	r2,124(sp)
 5083df4:	e0bff60e 	bge	fp,r2,5083dd0 <__alt_data_end+0xfffb5bd0>
 5083df8:	d9801e04 	addi	r6,sp,120
 5083dfc:	a00b883a 	mov	r5,r20
 5083e00:	9809883a 	mov	r4,r19
 5083e04:	508c3cc0 	call	508c3cc <__ssprint_r>
 5083e08:	103c561e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 5083e0c:	d8c02017 	ldw	r3,128(sp)
 5083e10:	d8801f17 	ldw	r2,124(sp)
 5083e14:	da000404 	addi	r8,sp,16
 5083e18:	003fee06 	br	5083dd4 <__alt_data_end+0xfffb5bd4>
 5083e1c:	d9402c17 	ldw	r5,176(sp)
 5083e20:	d9801e04 	addi	r6,sp,120
 5083e24:	9809883a 	mov	r4,r19
 5083e28:	508c3cc0 	call	508c3cc <__ssprint_r>
 5083e2c:	103c4d1e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 5083e30:	d8c02017 	ldw	r3,128(sp)
 5083e34:	df002787 	ldb	fp,158(sp)
 5083e38:	da000404 	addi	r8,sp,16
 5083e3c:	003d5a06 	br	50833a8 <__alt_data_end+0xfffb51a8>
 5083e40:	9080040c 	andi	r2,r18,16
 5083e44:	10005c26 	beq	r2,zero,5083fb8 <___svfprintf_internal_r+0x13e8>
 5083e48:	d9402d17 	ldw	r5,180(sp)
 5083e4c:	d8c02917 	ldw	r3,164(sp)
 5083e50:	d8002785 	stb	zero,158(sp)
 5083e54:	28800104 	addi	r2,r5,4
 5083e58:	2d000017 	ldw	r20,0(r5)
 5083e5c:	002d883a 	mov	r22,zero
 5083e60:	18005e16 	blt	r3,zero,5083fdc <___svfprintf_internal_r+0x140c>
 5083e64:	00ffdfc4 	movi	r3,-129
 5083e68:	d8802d15 	stw	r2,180(sp)
 5083e6c:	90e4703a 	and	r18,r18,r3
 5083e70:	0039883a 	mov	fp,zero
 5083e74:	a03dfe26 	beq	r20,zero,5083670 <__alt_data_end+0xfffb5470>
 5083e78:	00800244 	movi	r2,9
 5083e7c:	153cb336 	bltu	r2,r20,508314c <__alt_data_end+0xfffb4f4c>
 5083e80:	a5000c04 	addi	r20,r20,48
 5083e84:	dc001dc4 	addi	r16,sp,119
 5083e88:	dd001dc5 	stb	r20,119(sp)
 5083e8c:	d8c02817 	ldw	r3,160(sp)
 5083e90:	1c07c83a 	sub	r3,r3,r16
 5083e94:	d8c02e15 	stw	r3,184(sp)
 5083e98:	003cf506 	br	5083270 <__alt_data_end+0xfffb5070>
 5083e9c:	d8803317 	ldw	r2,204(sp)
 5083ea0:	143fffc4 	addi	r16,r2,-1
 5083ea4:	043f560e 	bge	zero,r16,5083c00 <__alt_data_end+0xfffb5a00>
 5083ea8:	07000404 	movi	fp,16
 5083eac:	e403530e 	bge	fp,r16,5084bfc <___svfprintf_internal_r+0x202c>
 5083eb0:	01414274 	movhi	r5,1289
 5083eb4:	2957b484 	addi	r5,r5,24274
 5083eb8:	d9402b15 	stw	r5,172(sp)
 5083ebc:	01c001c4 	movi	r7,7
 5083ec0:	dd002c17 	ldw	r20,176(sp)
 5083ec4:	00000306 	br	5083ed4 <___svfprintf_internal_r+0x1304>
 5083ec8:	843ffc04 	addi	r16,r16,-16
 5083ecc:	b5800204 	addi	r22,r22,8
 5083ed0:	e400130e 	bge	fp,r16,5083f20 <___svfprintf_internal_r+0x1350>
 5083ed4:	18c00404 	addi	r3,r3,16
 5083ed8:	8c400044 	addi	r17,r17,1
 5083edc:	b5400015 	stw	r21,0(r22)
 5083ee0:	b7000115 	stw	fp,4(r22)
 5083ee4:	d8c02015 	stw	r3,128(sp)
 5083ee8:	dc401f15 	stw	r17,124(sp)
 5083eec:	3c7ff60e 	bge	r7,r17,5083ec8 <__alt_data_end+0xfffb5cc8>
 5083ef0:	d9801e04 	addi	r6,sp,120
 5083ef4:	a00b883a 	mov	r5,r20
 5083ef8:	9809883a 	mov	r4,r19
 5083efc:	d9c03d15 	stw	r7,244(sp)
 5083f00:	508c3cc0 	call	508c3cc <__ssprint_r>
 5083f04:	d9c03d17 	ldw	r7,244(sp)
 5083f08:	103c161e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 5083f0c:	843ffc04 	addi	r16,r16,-16
 5083f10:	d8c02017 	ldw	r3,128(sp)
 5083f14:	dc401f17 	ldw	r17,124(sp)
 5083f18:	dd800404 	addi	r22,sp,16
 5083f1c:	e43fed16 	blt	fp,r16,5083ed4 <__alt_data_end+0xfffb5cd4>
 5083f20:	d8802b17 	ldw	r2,172(sp)
 5083f24:	1c07883a 	add	r3,r3,r16
 5083f28:	8c400044 	addi	r17,r17,1
 5083f2c:	b0800015 	stw	r2,0(r22)
 5083f30:	b4000115 	stw	r16,4(r22)
 5083f34:	d8c02015 	stw	r3,128(sp)
 5083f38:	dc401f15 	stw	r17,124(sp)
 5083f3c:	008001c4 	movi	r2,7
 5083f40:	147f2e0e 	bge	r2,r17,5083bfc <__alt_data_end+0xfffb59fc>
 5083f44:	d9402c17 	ldw	r5,176(sp)
 5083f48:	d9801e04 	addi	r6,sp,120
 5083f4c:	9809883a 	mov	r4,r19
 5083f50:	508c3cc0 	call	508c3cc <__ssprint_r>
 5083f54:	103c031e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 5083f58:	d8c02017 	ldw	r3,128(sp)
 5083f5c:	dc401f17 	ldw	r17,124(sp)
 5083f60:	dd800404 	addi	r22,sp,16
 5083f64:	003f2606 	br	5083c00 <__alt_data_end+0xfffb5a00>
 5083f68:	9080040c 	andi	r2,r18,16
 5083f6c:	1000c326 	beq	r2,zero,508427c <___svfprintf_internal_r+0x16ac>
 5083f70:	d8802d17 	ldw	r2,180(sp)
 5083f74:	15000017 	ldw	r20,0(r2)
 5083f78:	10800104 	addi	r2,r2,4
 5083f7c:	d8802d15 	stw	r2,180(sp)
 5083f80:	a02dd7fa 	srai	r22,r20,31
 5083f84:	b005883a 	mov	r2,r22
 5083f88:	103c680e 	bge	r2,zero,508312c <__alt_data_end+0xfffb4f2c>
 5083f8c:	0529c83a 	sub	r20,zero,r20
 5083f90:	a004c03a 	cmpne	r2,r20,zero
 5083f94:	05adc83a 	sub	r22,zero,r22
 5083f98:	b0adc83a 	sub	r22,r22,r2
 5083f9c:	d8802917 	ldw	r2,164(sp)
 5083fa0:	07000b44 	movi	fp,45
 5083fa4:	df002785 	stb	fp,158(sp)
 5083fa8:	10022e16 	blt	r2,zero,5084864 <___svfprintf_internal_r+0x1c94>
 5083fac:	00bfdfc4 	movi	r2,-129
 5083fb0:	90a4703a 	and	r18,r18,r2
 5083fb4:	003c6406 	br	5083148 <__alt_data_end+0xfffb4f48>
 5083fb8:	9080100c 	andi	r2,r18,64
 5083fbc:	d8002785 	stb	zero,158(sp)
 5083fc0:	10012526 	beq	r2,zero,5084458 <___svfprintf_internal_r+0x1888>
 5083fc4:	d9002d17 	ldw	r4,180(sp)
 5083fc8:	d9402917 	ldw	r5,164(sp)
 5083fcc:	002d883a 	mov	r22,zero
 5083fd0:	20800104 	addi	r2,r4,4
 5083fd4:	2500000b 	ldhu	r20,0(r4)
 5083fd8:	283fa20e 	bge	r5,zero,5083e64 <__alt_data_end+0xfffb5c64>
 5083fdc:	d8802d15 	stw	r2,180(sp)
 5083fe0:	0039883a 	mov	fp,zero
 5083fe4:	a584b03a 	or	r2,r20,r22
 5083fe8:	103c571e 	bne	r2,zero,5083148 <__alt_data_end+0xfffb4f48>
 5083fec:	00800044 	movi	r2,1
 5083ff0:	003e5006 	br	5083934 <__alt_data_end+0xfffb5734>
 5083ff4:	d9402c17 	ldw	r5,176(sp)
 5083ff8:	d9801e04 	addi	r6,sp,120
 5083ffc:	9809883a 	mov	r4,r19
 5084000:	508c3cc0 	call	508c3cc <__ssprint_r>
 5084004:	103bd71e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 5084008:	d8c02017 	ldw	r3,128(sp)
 508400c:	da000404 	addi	r8,sp,16
 5084010:	d9003217 	ldw	r4,200(sp)
 5084014:	d8802617 	ldw	r2,152(sp)
 5084018:	d9403317 	ldw	r5,204(sp)
 508401c:	8123883a 	add	r17,r16,r4
 5084020:	11400216 	blt	r2,r5,508402c <___svfprintf_internal_r+0x145c>
 5084024:	9100004c 	andi	r4,r18,1
 5084028:	20000d26 	beq	r4,zero,5084060 <___svfprintf_internal_r+0x1490>
 508402c:	d9003817 	ldw	r4,224(sp)
 5084030:	d9403417 	ldw	r5,208(sp)
 5084034:	1907883a 	add	r3,r3,r4
 5084038:	d9001f17 	ldw	r4,124(sp)
 508403c:	41400015 	stw	r5,0(r8)
 5084040:	d9403817 	ldw	r5,224(sp)
 5084044:	21000044 	addi	r4,r4,1
 5084048:	d8c02015 	stw	r3,128(sp)
 508404c:	41400115 	stw	r5,4(r8)
 5084050:	d9001f15 	stw	r4,124(sp)
 5084054:	014001c4 	movi	r5,7
 5084058:	2901dc16 	blt	r5,r4,50847cc <___svfprintf_internal_r+0x1bfc>
 508405c:	42000204 	addi	r8,r8,8
 5084060:	d9003317 	ldw	r4,204(sp)
 5084064:	8121883a 	add	r16,r16,r4
 5084068:	2085c83a 	sub	r2,r4,r2
 508406c:	8461c83a 	sub	r16,r16,r17
 5084070:	1400010e 	bge	r2,r16,5084078 <___svfprintf_internal_r+0x14a8>
 5084074:	1021883a 	mov	r16,r2
 5084078:	04000a0e 	bge	zero,r16,50840a4 <___svfprintf_internal_r+0x14d4>
 508407c:	d9001f17 	ldw	r4,124(sp)
 5084080:	1c07883a 	add	r3,r3,r16
 5084084:	44400015 	stw	r17,0(r8)
 5084088:	21000044 	addi	r4,r4,1
 508408c:	44000115 	stw	r16,4(r8)
 5084090:	d8c02015 	stw	r3,128(sp)
 5084094:	d9001f15 	stw	r4,124(sp)
 5084098:	014001c4 	movi	r5,7
 508409c:	2901e616 	blt	r5,r4,5084838 <___svfprintf_internal_r+0x1c68>
 50840a0:	42000204 	addi	r8,r8,8
 50840a4:	8001f616 	blt	r16,zero,5084880 <___svfprintf_internal_r+0x1cb0>
 50840a8:	1421c83a 	sub	r16,r2,r16
 50840ac:	043d1c0e 	bge	zero,r16,5083520 <__alt_data_end+0xfffb5320>
 50840b0:	04400404 	movi	r17,16
 50840b4:	d8801f17 	ldw	r2,124(sp)
 50840b8:	8c3edd0e 	bge	r17,r16,5083c30 <__alt_data_end+0xfffb5a30>
 50840bc:	01414274 	movhi	r5,1289
 50840c0:	2957b484 	addi	r5,r5,24274
 50840c4:	d9402b15 	stw	r5,172(sp)
 50840c8:	058001c4 	movi	r22,7
 50840cc:	dd002c17 	ldw	r20,176(sp)
 50840d0:	00000306 	br	50840e0 <___svfprintf_internal_r+0x1510>
 50840d4:	42000204 	addi	r8,r8,8
 50840d8:	843ffc04 	addi	r16,r16,-16
 50840dc:	8c3ed70e 	bge	r17,r16,5083c3c <__alt_data_end+0xfffb5a3c>
 50840e0:	18c00404 	addi	r3,r3,16
 50840e4:	10800044 	addi	r2,r2,1
 50840e8:	45400015 	stw	r21,0(r8)
 50840ec:	44400115 	stw	r17,4(r8)
 50840f0:	d8c02015 	stw	r3,128(sp)
 50840f4:	d8801f15 	stw	r2,124(sp)
 50840f8:	b0bff60e 	bge	r22,r2,50840d4 <__alt_data_end+0xfffb5ed4>
 50840fc:	d9801e04 	addi	r6,sp,120
 5084100:	a00b883a 	mov	r5,r20
 5084104:	9809883a 	mov	r4,r19
 5084108:	508c3cc0 	call	508c3cc <__ssprint_r>
 508410c:	103b951e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 5084110:	d8c02017 	ldw	r3,128(sp)
 5084114:	d8801f17 	ldw	r2,124(sp)
 5084118:	da000404 	addi	r8,sp,16
 508411c:	003fee06 	br	50840d8 <__alt_data_end+0xfffb5ed8>
 5084120:	9088703a 	and	r4,r18,r2
 5084124:	203e8d1e 	bne	r4,zero,5083b5c <__alt_data_end+0xfffb595c>
 5084128:	dc401f17 	ldw	r17,124(sp)
 508412c:	40800115 	stw	r2,4(r8)
 5084130:	44000015 	stw	r16,0(r8)
 5084134:	8c400044 	addi	r17,r17,1
 5084138:	d8c02015 	stw	r3,128(sp)
 508413c:	dc401f15 	stw	r17,124(sp)
 5084140:	008001c4 	movi	r2,7
 5084144:	147f7f16 	blt	r2,r17,5083f44 <__alt_data_end+0xfffb5d44>
 5084148:	45800204 	addi	r22,r8,8
 508414c:	003eac06 	br	5083c00 <__alt_data_end+0xfffb5a00>
 5084150:	d9402c17 	ldw	r5,176(sp)
 5084154:	d9801e04 	addi	r6,sp,120
 5084158:	9809883a 	mov	r4,r19
 508415c:	508c3cc0 	call	508c3cc <__ssprint_r>
 5084160:	103b801e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 5084164:	d8c02017 	ldw	r3,128(sp)
 5084168:	dc401f17 	ldw	r17,124(sp)
 508416c:	da000404 	addi	r8,sp,16
 5084170:	003e8406 	br	5083b84 <__alt_data_end+0xfffb5984>
 5084174:	d9402c17 	ldw	r5,176(sp)
 5084178:	d9801e04 	addi	r6,sp,120
 508417c:	9809883a 	mov	r4,r19
 5084180:	508c3cc0 	call	508c3cc <__ssprint_r>
 5084184:	103b771e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 5084188:	d8c02017 	ldw	r3,128(sp)
 508418c:	dc401f17 	ldw	r17,124(sp)
 5084190:	dd800404 	addi	r22,sp,16
 5084194:	003e8606 	br	5083bb0 <__alt_data_end+0xfffb59b0>
 5084198:	0029883a 	mov	r20,zero
 508419c:	a5000c04 	addi	r20,r20,48
 50841a0:	dc001dc4 	addi	r16,sp,119
 50841a4:	dd001dc5 	stb	r20,119(sp)
 50841a8:	003f3806 	br	5083e8c <__alt_data_end+0xfffb5c8c>
 50841ac:	d9402c17 	ldw	r5,176(sp)
 50841b0:	d9801e04 	addi	r6,sp,120
 50841b4:	9809883a 	mov	r4,r19
 50841b8:	508c3cc0 	call	508c3cc <__ssprint_r>
 50841bc:	103b691e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 50841c0:	d8c02017 	ldw	r3,128(sp)
 50841c4:	da000404 	addi	r8,sp,16
 50841c8:	003c9506 	br	5083420 <__alt_data_end+0xfffb5220>
 50841cc:	d9003617 	ldw	r4,216(sp)
 50841d0:	d9403717 	ldw	r5,220(sp)
 50841d4:	da003e15 	stw	r8,248(sp)
 50841d8:	508c0ec0 	call	508c0ec <__fpclassifyd>
 50841dc:	da003e17 	ldw	r8,248(sp)
 50841e0:	1000bd1e 	bne	r2,zero,50844d8 <___svfprintf_internal_r+0x1908>
 50841e4:	008011c4 	movi	r2,71
 50841e8:	14411e0e 	bge	r2,r17,5084664 <___svfprintf_internal_r+0x1a94>
 50841ec:	04014274 	movhi	r16,1289
 50841f0:	8417a704 	addi	r16,r16,24220
 50841f4:	00c000c4 	movi	r3,3
 50841f8:	00bfdfc4 	movi	r2,-129
 50841fc:	d8c02a15 	stw	r3,168(sp)
 5084200:	90a4703a 	and	r18,r18,r2
 5084204:	df002783 	ldbu	fp,158(sp)
 5084208:	d8c02e15 	stw	r3,184(sp)
 508420c:	d8002915 	stw	zero,164(sp)
 5084210:	d8003215 	stw	zero,200(sp)
 5084214:	003c1c06 	br	5083288 <__alt_data_end+0xfffb5088>
 5084218:	9080100c 	andi	r2,r18,64
 508421c:	d8002785 	stb	zero,158(sp)
 5084220:	10009426 	beq	r2,zero,5084474 <___svfprintf_internal_r+0x18a4>
 5084224:	d8c02d17 	ldw	r3,180(sp)
 5084228:	d9002917 	ldw	r4,164(sp)
 508422c:	002d883a 	mov	r22,zero
 5084230:	18800104 	addi	r2,r3,4
 5084234:	1d00000b 	ldhu	r20,0(r3)
 5084238:	203ec10e 	bge	r4,zero,5083d40 <__alt_data_end+0xfffb5b40>
 508423c:	a586b03a 	or	r3,r20,r22
 5084240:	d8802d15 	stw	r2,180(sp)
 5084244:	183ec21e 	bne	r3,zero,5083d50 <__alt_data_end+0xfffb5b50>
 5084248:	0039883a 	mov	fp,zero
 508424c:	0005883a 	mov	r2,zero
 5084250:	003db806 	br	5083934 <__alt_data_end+0xfffb5734>
 5084254:	d8802d17 	ldw	r2,180(sp)
 5084258:	d8c02d17 	ldw	r3,180(sp)
 508425c:	d9002d17 	ldw	r4,180(sp)
 5084260:	10800017 	ldw	r2,0(r2)
 5084264:	18c00117 	ldw	r3,4(r3)
 5084268:	21000204 	addi	r4,r4,8
 508426c:	d8803615 	stw	r2,216(sp)
 5084270:	d8c03715 	stw	r3,220(sp)
 5084274:	d9002d15 	stw	r4,180(sp)
 5084278:	003b8206 	br	5083084 <__alt_data_end+0xfffb4e84>
 508427c:	9080100c 	andi	r2,r18,64
 5084280:	10010726 	beq	r2,zero,50846a0 <___svfprintf_internal_r+0x1ad0>
 5084284:	d8c02d17 	ldw	r3,180(sp)
 5084288:	1d00000f 	ldh	r20,0(r3)
 508428c:	18c00104 	addi	r3,r3,4
 5084290:	d8c02d15 	stw	r3,180(sp)
 5084294:	a02dd7fa 	srai	r22,r20,31
 5084298:	b005883a 	mov	r2,r22
 508429c:	003ba206 	br	5083128 <__alt_data_end+0xfffb4f28>
 50842a0:	9080100c 	andi	r2,r18,64
 50842a4:	10010526 	beq	r2,zero,50846bc <___svfprintf_internal_r+0x1aec>
 50842a8:	d9002d17 	ldw	r4,180(sp)
 50842ac:	002d883a 	mov	r22,zero
 50842b0:	2500000b 	ldhu	r20,0(r4)
 50842b4:	21000104 	addi	r4,r4,4
 50842b8:	d9002d15 	stw	r4,180(sp)
 50842bc:	003cfe06 	br	50836b8 <__alt_data_end+0xfffb54b8>
 50842c0:	bc400007 	ldb	r17,0(r23)
 50842c4:	003a9606 	br	5082d20 <__alt_data_end+0xfffb4b20>
 50842c8:	9080040c 	andi	r2,r18,16
 50842cc:	10010126 	beq	r2,zero,50846d4 <___svfprintf_internal_r+0x1b04>
 50842d0:	d9402d17 	ldw	r5,180(sp)
 50842d4:	d8c02f17 	ldw	r3,188(sp)
 50842d8:	28800017 	ldw	r2,0(r5)
 50842dc:	29400104 	addi	r5,r5,4
 50842e0:	d9402d15 	stw	r5,180(sp)
 50842e4:	10c00015 	stw	r3,0(r2)
 50842e8:	003a6406 	br	5082c7c <__alt_data_end+0xfffb4a7c>
 50842ec:	d9002917 	ldw	r4,164(sp)
 50842f0:	d8002785 	stb	zero,158(sp)
 50842f4:	203d8d16 	blt	r4,zero,508392c <__alt_data_end+0xfffb572c>
 50842f8:	00bfdfc4 	movi	r2,-129
 50842fc:	90a4703a 	and	r18,r18,r2
 5084300:	003b0506 	br	5082f18 <__alt_data_end+0xfffb4d18>
 5084304:	01414274 	movhi	r5,1289
 5084308:	2957b484 	addi	r5,r5,24274
 508430c:	d9402b15 	stw	r5,172(sp)
 5084310:	d9402b17 	ldw	r5,172(sp)
 5084314:	1c47883a 	add	r3,r3,r17
 5084318:	10800044 	addi	r2,r2,1
 508431c:	41400015 	stw	r5,0(r8)
 5084320:	44400115 	stw	r17,4(r8)
 5084324:	d8c02015 	stw	r3,128(sp)
 5084328:	d8801f15 	stw	r2,124(sp)
 508432c:	010001c4 	movi	r4,7
 5084330:	20bf3016 	blt	r4,r2,5083ff4 <__alt_data_end+0xfffb5df4>
 5084334:	42000204 	addi	r8,r8,8
 5084338:	003f3506 	br	5084010 <__alt_data_end+0xfffb5e10>
 508433c:	01014274 	movhi	r4,1289
 5084340:	2117b484 	addi	r4,r4,24274
 5084344:	d9002b15 	stw	r4,172(sp)
 5084348:	003c5e06 	br	50834c4 <__alt_data_end+0xfffb52c4>
 508434c:	d9402c17 	ldw	r5,176(sp)
 5084350:	d9801e04 	addi	r6,sp,120
 5084354:	9809883a 	mov	r4,r19
 5084358:	508c3cc0 	call	508c3cc <__ssprint_r>
 508435c:	103b011e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 5084360:	d8c02017 	ldw	r3,128(sp)
 5084364:	da000404 	addi	r8,sp,16
 5084368:	003d9306 	br	50839b8 <__alt_data_end+0xfffb57b8>
 508436c:	d8801f17 	ldw	r2,124(sp)
 5084370:	01414274 	movhi	r5,1289
 5084374:	01000044 	movi	r4,1
 5084378:	18c00044 	addi	r3,r3,1
 508437c:	10800044 	addi	r2,r2,1
 5084380:	2957b404 	addi	r5,r5,24272
 5084384:	41000115 	stw	r4,4(r8)
 5084388:	41400015 	stw	r5,0(r8)
 508438c:	d8c02015 	stw	r3,128(sp)
 5084390:	d8801f15 	stw	r2,124(sp)
 5084394:	010001c4 	movi	r4,7
 5084398:	2080b516 	blt	r4,r2,5084670 <___svfprintf_internal_r+0x1aa0>
 508439c:	42000204 	addi	r8,r8,8
 50843a0:	8800041e 	bne	r17,zero,50843b4 <___svfprintf_internal_r+0x17e4>
 50843a4:	d8803317 	ldw	r2,204(sp)
 50843a8:	1000021e 	bne	r2,zero,50843b4 <___svfprintf_internal_r+0x17e4>
 50843ac:	9080004c 	andi	r2,r18,1
 50843b0:	103c5b26 	beq	r2,zero,5083520 <__alt_data_end+0xfffb5320>
 50843b4:	d9003817 	ldw	r4,224(sp)
 50843b8:	d8801f17 	ldw	r2,124(sp)
 50843bc:	d9403417 	ldw	r5,208(sp)
 50843c0:	20c7883a 	add	r3,r4,r3
 50843c4:	10800044 	addi	r2,r2,1
 50843c8:	41000115 	stw	r4,4(r8)
 50843cc:	41400015 	stw	r5,0(r8)
 50843d0:	d8c02015 	stw	r3,128(sp)
 50843d4:	d8801f15 	stw	r2,124(sp)
 50843d8:	010001c4 	movi	r4,7
 50843dc:	20818016 	blt	r4,r2,50849e0 <___svfprintf_internal_r+0x1e10>
 50843e0:	42000204 	addi	r8,r8,8
 50843e4:	0463c83a 	sub	r17,zero,r17
 50843e8:	0440cb0e 	bge	zero,r17,5084718 <___svfprintf_internal_r+0x1b48>
 50843ec:	05800404 	movi	r22,16
 50843f0:	b440e80e 	bge	r22,r17,5084794 <___svfprintf_internal_r+0x1bc4>
 50843f4:	01414274 	movhi	r5,1289
 50843f8:	2957b484 	addi	r5,r5,24274
 50843fc:	d9402b15 	stw	r5,172(sp)
 5084400:	070001c4 	movi	fp,7
 5084404:	dd002c17 	ldw	r20,176(sp)
 5084408:	00000306 	br	5084418 <___svfprintf_internal_r+0x1848>
 508440c:	42000204 	addi	r8,r8,8
 5084410:	8c7ffc04 	addi	r17,r17,-16
 5084414:	b440e20e 	bge	r22,r17,50847a0 <___svfprintf_internal_r+0x1bd0>
 5084418:	18c00404 	addi	r3,r3,16
 508441c:	10800044 	addi	r2,r2,1
 5084420:	45400015 	stw	r21,0(r8)
 5084424:	45800115 	stw	r22,4(r8)
 5084428:	d8c02015 	stw	r3,128(sp)
 508442c:	d8801f15 	stw	r2,124(sp)
 5084430:	e0bff60e 	bge	fp,r2,508440c <__alt_data_end+0xfffb620c>
 5084434:	d9801e04 	addi	r6,sp,120
 5084438:	a00b883a 	mov	r5,r20
 508443c:	9809883a 	mov	r4,r19
 5084440:	508c3cc0 	call	508c3cc <__ssprint_r>
 5084444:	103ac71e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 5084448:	d8c02017 	ldw	r3,128(sp)
 508444c:	d8801f17 	ldw	r2,124(sp)
 5084450:	da000404 	addi	r8,sp,16
 5084454:	003fee06 	br	5084410 <__alt_data_end+0xfffb6210>
 5084458:	d8c02d17 	ldw	r3,180(sp)
 508445c:	d9002917 	ldw	r4,164(sp)
 5084460:	002d883a 	mov	r22,zero
 5084464:	18800104 	addi	r2,r3,4
 5084468:	1d000017 	ldw	r20,0(r3)
 508446c:	203e7d0e 	bge	r4,zero,5083e64 <__alt_data_end+0xfffb5c64>
 5084470:	003eda06 	br	5083fdc <__alt_data_end+0xfffb5ddc>
 5084474:	d9402d17 	ldw	r5,180(sp)
 5084478:	d8c02917 	ldw	r3,164(sp)
 508447c:	002d883a 	mov	r22,zero
 5084480:	28800104 	addi	r2,r5,4
 5084484:	2d000017 	ldw	r20,0(r5)
 5084488:	183e2d0e 	bge	r3,zero,5083d40 <__alt_data_end+0xfffb5b40>
 508448c:	003f6b06 	br	508423c <__alt_data_end+0xfffb603c>
 5084490:	d8c02d15 	stw	r3,180(sp)
 5084494:	0039883a 	mov	fp,zero
 5084498:	003ed206 	br	5083fe4 <__alt_data_end+0xfffb5de4>
 508449c:	bc400043 	ldbu	r17,1(r23)
 50844a0:	94800814 	ori	r18,r18,32
 50844a4:	bdc00044 	addi	r23,r23,1
 50844a8:	8c403fcc 	andi	r17,r17,255
 50844ac:	8c40201c 	xori	r17,r17,128
 50844b0:	8c7fe004 	addi	r17,r17,-128
 50844b4:	003a1a06 	br	5082d20 <__alt_data_end+0xfffb4b20>
 50844b8:	d9402c17 	ldw	r5,176(sp)
 50844bc:	d9801e04 	addi	r6,sp,120
 50844c0:	9809883a 	mov	r4,r19
 50844c4:	508c3cc0 	call	508c3cc <__ssprint_r>
 50844c8:	103aa61e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 50844cc:	d8c02017 	ldw	r3,128(sp)
 50844d0:	da000404 	addi	r8,sp,16
 50844d4:	003d4a06 	br	5083a00 <__alt_data_end+0xfffb5800>
 50844d8:	d9002917 	ldw	r4,164(sp)
 50844dc:	05bff7c4 	movi	r22,-33
 50844e0:	00bfffc4 	movi	r2,-1
 50844e4:	8dac703a 	and	r22,r17,r22
 50844e8:	20806a26 	beq	r4,r2,5084694 <___svfprintf_internal_r+0x1ac4>
 50844ec:	008011c4 	movi	r2,71
 50844f0:	b0813726 	beq	r22,r2,50849d0 <___svfprintf_internal_r+0x1e00>
 50844f4:	d9003717 	ldw	r4,220(sp)
 50844f8:	90c04014 	ori	r3,r18,256
 50844fc:	d8c02b15 	stw	r3,172(sp)
 5084500:	20015d16 	blt	r4,zero,5084a78 <___svfprintf_internal_r+0x1ea8>
 5084504:	dd003717 	ldw	r20,220(sp)
 5084508:	d8002a05 	stb	zero,168(sp)
 508450c:	00801984 	movi	r2,102
 5084510:	88814026 	beq	r17,r2,5084a14 <___svfprintf_internal_r+0x1e44>
 5084514:	00801184 	movi	r2,70
 5084518:	88817126 	beq	r17,r2,5084ae0 <___svfprintf_internal_r+0x1f10>
 508451c:	00801144 	movi	r2,69
 5084520:	b0816226 	beq	r22,r2,5084aac <___svfprintf_internal_r+0x1edc>
 5084524:	d8c02917 	ldw	r3,164(sp)
 5084528:	d8802104 	addi	r2,sp,132
 508452c:	d8800315 	stw	r2,12(sp)
 5084530:	d9403617 	ldw	r5,216(sp)
 5084534:	d8802504 	addi	r2,sp,148
 5084538:	d8800215 	stw	r2,8(sp)
 508453c:	d8802604 	addi	r2,sp,152
 5084540:	d8c00015 	stw	r3,0(sp)
 5084544:	d8800115 	stw	r2,4(sp)
 5084548:	01c00084 	movi	r7,2
 508454c:	a00d883a 	mov	r6,r20
 5084550:	9809883a 	mov	r4,r19
 5084554:	d8c03d15 	stw	r3,244(sp)
 5084558:	da003e15 	stw	r8,248(sp)
 508455c:	50874f00 	call	50874f0 <_dtoa_r>
 5084560:	1021883a 	mov	r16,r2
 5084564:	008019c4 	movi	r2,103
 5084568:	d8c03d17 	ldw	r3,244(sp)
 508456c:	da003e17 	ldw	r8,248(sp)
 5084570:	8880e726 	beq	r17,r2,5084910 <___svfprintf_internal_r+0x1d40>
 5084574:	008011c4 	movi	r2,71
 5084578:	8880d426 	beq	r17,r2,50848cc <___svfprintf_internal_r+0x1cfc>
 508457c:	80f9883a 	add	fp,r16,r3
 5084580:	d9003617 	ldw	r4,216(sp)
 5084584:	000d883a 	mov	r6,zero
 5084588:	000f883a 	mov	r7,zero
 508458c:	a00b883a 	mov	r5,r20
 5084590:	da003e15 	stw	r8,248(sp)
 5084594:	50913980 	call	5091398 <__eqdf2>
 5084598:	da003e17 	ldw	r8,248(sp)
 508459c:	1000e426 	beq	r2,zero,5084930 <___svfprintf_internal_r+0x1d60>
 50845a0:	d8802117 	ldw	r2,132(sp)
 50845a4:	1700062e 	bgeu	r2,fp,50845c0 <___svfprintf_internal_r+0x19f0>
 50845a8:	01000c04 	movi	r4,48
 50845ac:	10c00044 	addi	r3,r2,1
 50845b0:	d8c02115 	stw	r3,132(sp)
 50845b4:	11000005 	stb	r4,0(r2)
 50845b8:	d8802117 	ldw	r2,132(sp)
 50845bc:	173ffb36 	bltu	r2,fp,50845ac <__alt_data_end+0xfffb63ac>
 50845c0:	1405c83a 	sub	r2,r2,r16
 50845c4:	d8803315 	stw	r2,204(sp)
 50845c8:	008011c4 	movi	r2,71
 50845cc:	b080c526 	beq	r22,r2,50848e4 <___svfprintf_internal_r+0x1d14>
 50845d0:	00801944 	movi	r2,101
 50845d4:	1441d90e 	bge	r2,r17,5084d3c <___svfprintf_internal_r+0x216c>
 50845d8:	d8c02617 	ldw	r3,152(sp)
 50845dc:	00801984 	movi	r2,102
 50845e0:	d8c03215 	stw	r3,200(sp)
 50845e4:	88813426 	beq	r17,r2,5084ab8 <___svfprintf_internal_r+0x1ee8>
 50845e8:	d8c03217 	ldw	r3,200(sp)
 50845ec:	d9003317 	ldw	r4,204(sp)
 50845f0:	19012516 	blt	r3,r4,5084a88 <___svfprintf_internal_r+0x1eb8>
 50845f4:	9480004c 	andi	r18,r18,1
 50845f8:	9001841e 	bne	r18,zero,5084c0c <___svfprintf_internal_r+0x203c>
 50845fc:	1805883a 	mov	r2,r3
 5084600:	1801cc16 	blt	r3,zero,5084d34 <___svfprintf_internal_r+0x2164>
 5084604:	d8c03217 	ldw	r3,200(sp)
 5084608:	044019c4 	movi	r17,103
 508460c:	d8c02e15 	stw	r3,184(sp)
 5084610:	df002a07 	ldb	fp,168(sp)
 5084614:	e000a61e 	bne	fp,zero,50848b0 <___svfprintf_internal_r+0x1ce0>
 5084618:	df002783 	ldbu	fp,158(sp)
 508461c:	d8802a15 	stw	r2,168(sp)
 5084620:	dc802b17 	ldw	r18,172(sp)
 5084624:	d8002915 	stw	zero,164(sp)
 5084628:	003b1706 	br	5083288 <__alt_data_end+0xfffb5088>
 508462c:	04014274 	movhi	r16,1289
 5084630:	8417a404 	addi	r16,r16,24208
 5084634:	003aa606 	br	50830d0 <__alt_data_end+0xfffb4ed0>
 5084638:	d9003917 	ldw	r4,228(sp)
 508463c:	04001004 	movi	r16,64
 5084640:	800b883a 	mov	r5,r16
 5084644:	5089ed00 	call	5089ed0 <_malloc_r>
 5084648:	d9002c17 	ldw	r4,176(sp)
 508464c:	20800015 	stw	r2,0(r4)
 5084650:	20800415 	stw	r2,16(r4)
 5084654:	1001cb26 	beq	r2,zero,5084d84 <___svfprintf_internal_r+0x21b4>
 5084658:	d8802c17 	ldw	r2,176(sp)
 508465c:	14000515 	stw	r16,20(r2)
 5084660:	00397606 	br	5082c3c <__alt_data_end+0xfffb4a3c>
 5084664:	04014274 	movhi	r16,1289
 5084668:	8417a604 	addi	r16,r16,24216
 508466c:	003ee106 	br	50841f4 <__alt_data_end+0xfffb5ff4>
 5084670:	d9402c17 	ldw	r5,176(sp)
 5084674:	d9801e04 	addi	r6,sp,120
 5084678:	9809883a 	mov	r4,r19
 508467c:	508c3cc0 	call	508c3cc <__ssprint_r>
 5084680:	103a381e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 5084684:	dc402617 	ldw	r17,152(sp)
 5084688:	d8c02017 	ldw	r3,128(sp)
 508468c:	da000404 	addi	r8,sp,16
 5084690:	003f4306 	br	50843a0 <__alt_data_end+0xfffb61a0>
 5084694:	01400184 	movi	r5,6
 5084698:	d9402915 	stw	r5,164(sp)
 508469c:	003f9506 	br	50844f4 <__alt_data_end+0xfffb62f4>
 50846a0:	d9002d17 	ldw	r4,180(sp)
 50846a4:	25000017 	ldw	r20,0(r4)
 50846a8:	21000104 	addi	r4,r4,4
 50846ac:	d9002d15 	stw	r4,180(sp)
 50846b0:	a02dd7fa 	srai	r22,r20,31
 50846b4:	b005883a 	mov	r2,r22
 50846b8:	003a9b06 	br	5083128 <__alt_data_end+0xfffb4f28>
 50846bc:	d9402d17 	ldw	r5,180(sp)
 50846c0:	002d883a 	mov	r22,zero
 50846c4:	2d000017 	ldw	r20,0(r5)
 50846c8:	29400104 	addi	r5,r5,4
 50846cc:	d9402d15 	stw	r5,180(sp)
 50846d0:	003bf906 	br	50836b8 <__alt_data_end+0xfffb54b8>
 50846d4:	9480100c 	andi	r18,r18,64
 50846d8:	90006e26 	beq	r18,zero,5084894 <___svfprintf_internal_r+0x1cc4>
 50846dc:	d9002d17 	ldw	r4,180(sp)
 50846e0:	d9402f17 	ldw	r5,188(sp)
 50846e4:	20800017 	ldw	r2,0(r4)
 50846e8:	21000104 	addi	r4,r4,4
 50846ec:	d9002d15 	stw	r4,180(sp)
 50846f0:	1140000d 	sth	r5,0(r2)
 50846f4:	00396106 	br	5082c7c <__alt_data_end+0xfffb4a7c>
 50846f8:	d9402c17 	ldw	r5,176(sp)
 50846fc:	d9801e04 	addi	r6,sp,120
 5084700:	9809883a 	mov	r4,r19
 5084704:	508c3cc0 	call	508c3cc <__ssprint_r>
 5084708:	103a161e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 508470c:	d8c02017 	ldw	r3,128(sp)
 5084710:	d8801f17 	ldw	r2,124(sp)
 5084714:	da000404 	addi	r8,sp,16
 5084718:	d9403317 	ldw	r5,204(sp)
 508471c:	10800044 	addi	r2,r2,1
 5084720:	44000015 	stw	r16,0(r8)
 5084724:	28c7883a 	add	r3,r5,r3
 5084728:	003b7706 	br	5083508 <__alt_data_end+0xfffb5308>
 508472c:	8009883a 	mov	r4,r16
 5084730:	da003e15 	stw	r8,248(sp)
 5084734:	5082b380 	call	5082b38 <strlen>
 5084738:	d8802e15 	stw	r2,184(sp)
 508473c:	da003e17 	ldw	r8,248(sp)
 5084740:	103c280e 	bge	r2,zero,50837e4 <__alt_data_end+0xfffb55e4>
 5084744:	0005883a 	mov	r2,zero
 5084748:	003c2606 	br	50837e4 <__alt_data_end+0xfffb55e4>
 508474c:	00bfffc4 	movi	r2,-1
 5084750:	003a0906 	br	5082f78 <__alt_data_end+0xfffb4d78>
 5084754:	01014274 	movhi	r4,1289
 5084758:	2117b884 	addi	r4,r4,24290
 508475c:	d9003515 	stw	r4,212(sp)
 5084760:	003b0606 	br	508337c <__alt_data_end+0xfffb517c>
 5084764:	013fffc4 	movi	r4,-1
 5084768:	003a2706 	br	5083008 <__alt_data_end+0xfffb4e08>
 508476c:	d9402c17 	ldw	r5,176(sp)
 5084770:	d9801e04 	addi	r6,sp,120
 5084774:	9809883a 	mov	r4,r19
 5084778:	508c3cc0 	call	508c3cc <__ssprint_r>
 508477c:	1039f91e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 5084780:	d8c02017 	ldw	r3,128(sp)
 5084784:	da000404 	addi	r8,sp,16
 5084788:	003d8406 	br	5083d9c <__alt_data_end+0xfffb5b9c>
 508478c:	0023883a 	mov	r17,zero
 5084790:	003d8306 	br	5083da0 <__alt_data_end+0xfffb5ba0>
 5084794:	01014274 	movhi	r4,1289
 5084798:	2117b484 	addi	r4,r4,24274
 508479c:	d9002b15 	stw	r4,172(sp)
 50847a0:	d9002b17 	ldw	r4,172(sp)
 50847a4:	1c47883a 	add	r3,r3,r17
 50847a8:	10800044 	addi	r2,r2,1
 50847ac:	41000015 	stw	r4,0(r8)
 50847b0:	44400115 	stw	r17,4(r8)
 50847b4:	d8c02015 	stw	r3,128(sp)
 50847b8:	d8801f15 	stw	r2,124(sp)
 50847bc:	010001c4 	movi	r4,7
 50847c0:	20bfcd16 	blt	r4,r2,50846f8 <__alt_data_end+0xfffb64f8>
 50847c4:	42000204 	addi	r8,r8,8
 50847c8:	003fd306 	br	5084718 <__alt_data_end+0xfffb6518>
 50847cc:	d9402c17 	ldw	r5,176(sp)
 50847d0:	d9801e04 	addi	r6,sp,120
 50847d4:	9809883a 	mov	r4,r19
 50847d8:	508c3cc0 	call	508c3cc <__ssprint_r>
 50847dc:	1039e11e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 50847e0:	d8802617 	ldw	r2,152(sp)
 50847e4:	d8c02017 	ldw	r3,128(sp)
 50847e8:	da000404 	addi	r8,sp,16
 50847ec:	003e1c06 	br	5084060 <__alt_data_end+0xfffb5e60>
 50847f0:	d8802917 	ldw	r2,164(sp)
 50847f4:	00c00184 	movi	r3,6
 50847f8:	1880012e 	bgeu	r3,r2,5084800 <___svfprintf_internal_r+0x1c30>
 50847fc:	1805883a 	mov	r2,r3
 5084800:	d8802e15 	stw	r2,184(sp)
 5084804:	1000f316 	blt	r2,zero,5084bd4 <___svfprintf_internal_r+0x2004>
 5084808:	04014274 	movhi	r16,1289
 508480c:	d8802a15 	stw	r2,168(sp)
 5084810:	dd002d15 	stw	r20,180(sp)
 5084814:	d8002915 	stw	zero,164(sp)
 5084818:	d8003215 	stw	zero,200(sp)
 508481c:	8417b204 	addi	r16,r16,24264
 5084820:	0039883a 	mov	fp,zero
 5084824:	003a9f06 	br	50832a4 <__alt_data_end+0xfffb50a4>
 5084828:	01014274 	movhi	r4,1289
 508482c:	2117b884 	addi	r4,r4,24290
 5084830:	d9003515 	stw	r4,212(sp)
 5084834:	003b5f06 	br	50835b4 <__alt_data_end+0xfffb53b4>
 5084838:	d9402c17 	ldw	r5,176(sp)
 508483c:	d9801e04 	addi	r6,sp,120
 5084840:	9809883a 	mov	r4,r19
 5084844:	508c3cc0 	call	508c3cc <__ssprint_r>
 5084848:	1039c61e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 508484c:	d8802617 	ldw	r2,152(sp)
 5084850:	d9403317 	ldw	r5,204(sp)
 5084854:	d8c02017 	ldw	r3,128(sp)
 5084858:	da000404 	addi	r8,sp,16
 508485c:	2885c83a 	sub	r2,r5,r2
 5084860:	003e1006 	br	50840a4 <__alt_data_end+0xfffb5ea4>
 5084864:	00800044 	movi	r2,1
 5084868:	10803fcc 	andi	r2,r2,255
 508486c:	00c00044 	movi	r3,1
 5084870:	10fa3526 	beq	r2,r3,5083148 <__alt_data_end+0xfffb4f48>
 5084874:	00c00084 	movi	r3,2
 5084878:	10fb9e26 	beq	r2,r3,50836f4 <__alt_data_end+0xfffb54f4>
 508487c:	003a6406 	br	5083210 <__alt_data_end+0xfffb5010>
 5084880:	0021883a 	mov	r16,zero
 5084884:	003e0806 	br	50840a8 <__alt_data_end+0xfffb5ea8>
 5084888:	07000b44 	movi	fp,45
 508488c:	df002785 	stb	fp,158(sp)
 5084890:	003a0b06 	br	50830c0 <__alt_data_end+0xfffb4ec0>
 5084894:	d8c02d17 	ldw	r3,180(sp)
 5084898:	d9002f17 	ldw	r4,188(sp)
 508489c:	18800017 	ldw	r2,0(r3)
 50848a0:	18c00104 	addi	r3,r3,4
 50848a4:	d8c02d15 	stw	r3,180(sp)
 50848a8:	11000015 	stw	r4,0(r2)
 50848ac:	0038f306 	br	5082c7c <__alt_data_end+0xfffb4a7c>
 50848b0:	00c00b44 	movi	r3,45
 50848b4:	d8c02785 	stb	r3,158(sp)
 50848b8:	d8802a15 	stw	r2,168(sp)
 50848bc:	dc802b17 	ldw	r18,172(sp)
 50848c0:	d8002915 	stw	zero,164(sp)
 50848c4:	07000b44 	movi	fp,45
 50848c8:	003a7306 	br	5083298 <__alt_data_end+0xfffb5098>
 50848cc:	9080004c 	andi	r2,r18,1
 50848d0:	1000941e 	bne	r2,zero,5084b24 <___svfprintf_internal_r+0x1f54>
 50848d4:	d8802117 	ldw	r2,132(sp)
 50848d8:	1405c83a 	sub	r2,r2,r16
 50848dc:	d8803315 	stw	r2,204(sp)
 50848e0:	b441161e 	bne	r22,r17,5084d3c <___svfprintf_internal_r+0x216c>
 50848e4:	dd802617 	ldw	r22,152(sp)
 50848e8:	00bfff44 	movi	r2,-3
 50848ec:	b0801a16 	blt	r22,r2,5084958 <___svfprintf_internal_r+0x1d88>
 50848f0:	d9402917 	ldw	r5,164(sp)
 50848f4:	2d801816 	blt	r5,r22,5084958 <___svfprintf_internal_r+0x1d88>
 50848f8:	dd803215 	stw	r22,200(sp)
 50848fc:	003f3a06 	br	50845e8 <__alt_data_end+0xfffb63e8>
 5084900:	1025883a 	mov	r18,r2
 5084904:	0039883a 	mov	fp,zero
 5084908:	00800084 	movi	r2,2
 508490c:	003fd606 	br	5084868 <__alt_data_end+0xfffb6668>
 5084910:	9080004c 	andi	r2,r18,1
 5084914:	103f191e 	bne	r2,zero,508457c <__alt_data_end+0xfffb637c>
 5084918:	d8802117 	ldw	r2,132(sp)
 508491c:	003f2806 	br	50845c0 <__alt_data_end+0xfffb63c0>
 5084920:	01014274 	movhi	r4,1289
 5084924:	2117b484 	addi	r4,r4,24274
 5084928:	d9002b15 	stw	r4,172(sp)
 508492c:	003c7c06 	br	5083b20 <__alt_data_end+0xfffb5920>
 5084930:	e005883a 	mov	r2,fp
 5084934:	003f2206 	br	50845c0 <__alt_data_end+0xfffb63c0>
 5084938:	d9402917 	ldw	r5,164(sp)
 508493c:	df002783 	ldbu	fp,158(sp)
 5084940:	dd002d15 	stw	r20,180(sp)
 5084944:	d9402a15 	stw	r5,168(sp)
 5084948:	d9402e15 	stw	r5,184(sp)
 508494c:	d8002915 	stw	zero,164(sp)
 5084950:	d8003215 	stw	zero,200(sp)
 5084954:	003a4c06 	br	5083288 <__alt_data_end+0xfffb5088>
 5084958:	8c7fff84 	addi	r17,r17,-2
 508495c:	b5bfffc4 	addi	r22,r22,-1
 5084960:	dd802615 	stw	r22,152(sp)
 5084964:	dc4022c5 	stb	r17,139(sp)
 5084968:	b000c316 	blt	r22,zero,5084c78 <___svfprintf_internal_r+0x20a8>
 508496c:	00800ac4 	movi	r2,43
 5084970:	d8802305 	stb	r2,140(sp)
 5084974:	00800244 	movi	r2,9
 5084978:	15806e16 	blt	r2,r22,5084b34 <___svfprintf_internal_r+0x1f64>
 508497c:	00800c04 	movi	r2,48
 5084980:	b5800c04 	addi	r22,r22,48
 5084984:	d8802345 	stb	r2,141(sp)
 5084988:	dd802385 	stb	r22,142(sp)
 508498c:	d88023c4 	addi	r2,sp,143
 5084990:	df0022c4 	addi	fp,sp,139
 5084994:	d8c03317 	ldw	r3,204(sp)
 5084998:	1739c83a 	sub	fp,r2,fp
 508499c:	d9003317 	ldw	r4,204(sp)
 50849a0:	e0c7883a 	add	r3,fp,r3
 50849a4:	df003b15 	stw	fp,236(sp)
 50849a8:	d8c02e15 	stw	r3,184(sp)
 50849ac:	00800044 	movi	r2,1
 50849b0:	1100b70e 	bge	r2,r4,5084c90 <___svfprintf_internal_r+0x20c0>
 50849b4:	d8c02e17 	ldw	r3,184(sp)
 50849b8:	18c00044 	addi	r3,r3,1
 50849bc:	d8c02e15 	stw	r3,184(sp)
 50849c0:	1805883a 	mov	r2,r3
 50849c4:	1800b016 	blt	r3,zero,5084c88 <___svfprintf_internal_r+0x20b8>
 50849c8:	d8003215 	stw	zero,200(sp)
 50849cc:	003f1006 	br	5084610 <__alt_data_end+0xfffb6410>
 50849d0:	d8802917 	ldw	r2,164(sp)
 50849d4:	103ec71e 	bne	r2,zero,50844f4 <__alt_data_end+0xfffb62f4>
 50849d8:	dc002915 	stw	r16,164(sp)
 50849dc:	003ec506 	br	50844f4 <__alt_data_end+0xfffb62f4>
 50849e0:	d9402c17 	ldw	r5,176(sp)
 50849e4:	d9801e04 	addi	r6,sp,120
 50849e8:	9809883a 	mov	r4,r19
 50849ec:	508c3cc0 	call	508c3cc <__ssprint_r>
 50849f0:	10395c1e 	bne	r2,zero,5082f64 <__alt_data_end+0xfffb4d64>
 50849f4:	dc402617 	ldw	r17,152(sp)
 50849f8:	d8c02017 	ldw	r3,128(sp)
 50849fc:	d8801f17 	ldw	r2,124(sp)
 5084a00:	da000404 	addi	r8,sp,16
 5084a04:	003e7706 	br	50843e4 <__alt_data_end+0xfffb61e4>
 5084a08:	582f883a 	mov	r23,r11
 5084a0c:	d8002915 	stw	zero,164(sp)
 5084a10:	0038c406 	br	5082d24 <__alt_data_end+0xfffb4b24>
 5084a14:	d8c02917 	ldw	r3,164(sp)
 5084a18:	d8802104 	addi	r2,sp,132
 5084a1c:	d8800315 	stw	r2,12(sp)
 5084a20:	d9403617 	ldw	r5,216(sp)
 5084a24:	d8802504 	addi	r2,sp,148
 5084a28:	d8800215 	stw	r2,8(sp)
 5084a2c:	d8802604 	addi	r2,sp,152
 5084a30:	d8c00015 	stw	r3,0(sp)
 5084a34:	9809883a 	mov	r4,r19
 5084a38:	d8800115 	stw	r2,4(sp)
 5084a3c:	01c000c4 	movi	r7,3
 5084a40:	a00d883a 	mov	r6,r20
 5084a44:	da003e15 	stw	r8,248(sp)
 5084a48:	50874f00 	call	50874f0 <_dtoa_r>
 5084a4c:	d9002917 	ldw	r4,164(sp)
 5084a50:	da003e17 	ldw	r8,248(sp)
 5084a54:	1021883a 	mov	r16,r2
 5084a58:	1139883a 	add	fp,r2,r4
 5084a5c:	2007883a 	mov	r3,r4
 5084a60:	81000007 	ldb	r4,0(r16)
 5084a64:	00800c04 	movi	r2,48
 5084a68:	20806f26 	beq	r4,r2,5084c28 <___svfprintf_internal_r+0x2058>
 5084a6c:	d8c02617 	ldw	r3,152(sp)
 5084a70:	e0f9883a 	add	fp,fp,r3
 5084a74:	003ec206 	br	5084580 <__alt_data_end+0xfffb6380>
 5084a78:	00c00b44 	movi	r3,45
 5084a7c:	2520003c 	xorhi	r20,r4,32768
 5084a80:	d8c02a05 	stb	r3,168(sp)
 5084a84:	003ea106 	br	508450c <__alt_data_end+0xfffb630c>
 5084a88:	d8c03217 	ldw	r3,200(sp)
 5084a8c:	00c0890e 	bge	zero,r3,5084cb4 <___svfprintf_internal_r+0x20e4>
 5084a90:	00800044 	movi	r2,1
 5084a94:	d9003317 	ldw	r4,204(sp)
 5084a98:	1105883a 	add	r2,r2,r4
 5084a9c:	d8802e15 	stw	r2,184(sp)
 5084aa0:	10005f16 	blt	r2,zero,5084c20 <___svfprintf_internal_r+0x2050>
 5084aa4:	044019c4 	movi	r17,103
 5084aa8:	003ed906 	br	5084610 <__alt_data_end+0xfffb6410>
 5084aac:	d9002917 	ldw	r4,164(sp)
 5084ab0:	20c00044 	addi	r3,r4,1
 5084ab4:	003e9c06 	br	5084528 <__alt_data_end+0xfffb6328>
 5084ab8:	d9002917 	ldw	r4,164(sp)
 5084abc:	00c0680e 	bge	zero,r3,5084c60 <___svfprintf_internal_r+0x2090>
 5084ac0:	2000461e 	bne	r4,zero,5084bdc <___svfprintf_internal_r+0x200c>
 5084ac4:	9480004c 	andi	r18,r18,1
 5084ac8:	9000441e 	bne	r18,zero,5084bdc <___svfprintf_internal_r+0x200c>
 5084acc:	1805883a 	mov	r2,r3
 5084ad0:	1800a016 	blt	r3,zero,5084d54 <___svfprintf_internal_r+0x2184>
 5084ad4:	d8c03217 	ldw	r3,200(sp)
 5084ad8:	d8c02e15 	stw	r3,184(sp)
 5084adc:	003ecc06 	br	5084610 <__alt_data_end+0xfffb6410>
 5084ae0:	d9402917 	ldw	r5,164(sp)
 5084ae4:	d8802104 	addi	r2,sp,132
 5084ae8:	d8800315 	stw	r2,12(sp)
 5084aec:	d9400015 	stw	r5,0(sp)
 5084af0:	d8802504 	addi	r2,sp,148
 5084af4:	d9403617 	ldw	r5,216(sp)
 5084af8:	d8800215 	stw	r2,8(sp)
 5084afc:	d8802604 	addi	r2,sp,152
 5084b00:	d8800115 	stw	r2,4(sp)
 5084b04:	01c000c4 	movi	r7,3
 5084b08:	a00d883a 	mov	r6,r20
 5084b0c:	9809883a 	mov	r4,r19
 5084b10:	da003e15 	stw	r8,248(sp)
 5084b14:	50874f00 	call	50874f0 <_dtoa_r>
 5084b18:	d8c02917 	ldw	r3,164(sp)
 5084b1c:	da003e17 	ldw	r8,248(sp)
 5084b20:	1021883a 	mov	r16,r2
 5084b24:	00801184 	movi	r2,70
 5084b28:	80f9883a 	add	fp,r16,r3
 5084b2c:	88bfcc26 	beq	r17,r2,5084a60 <__alt_data_end+0xfffb6860>
 5084b30:	003e9306 	br	5084580 <__alt_data_end+0xfffb6380>
 5084b34:	df0022c4 	addi	fp,sp,139
 5084b38:	dc002915 	stw	r16,164(sp)
 5084b3c:	9829883a 	mov	r20,r19
 5084b40:	e021883a 	mov	r16,fp
 5084b44:	4027883a 	mov	r19,r8
 5084b48:	b009883a 	mov	r4,r22
 5084b4c:	01400284 	movi	r5,10
 5084b50:	50828040 	call	5082804 <__modsi3>
 5084b54:	10800c04 	addi	r2,r2,48
 5084b58:	843fffc4 	addi	r16,r16,-1
 5084b5c:	b009883a 	mov	r4,r22
 5084b60:	01400284 	movi	r5,10
 5084b64:	80800005 	stb	r2,0(r16)
 5084b68:	50827800 	call	5082780 <__divsi3>
 5084b6c:	102d883a 	mov	r22,r2
 5084b70:	00800244 	movi	r2,9
 5084b74:	15bff416 	blt	r2,r22,5084b48 <__alt_data_end+0xfffb6948>
 5084b78:	9811883a 	mov	r8,r19
 5084b7c:	b0800c04 	addi	r2,r22,48
 5084b80:	a027883a 	mov	r19,r20
 5084b84:	8029883a 	mov	r20,r16
 5084b88:	a17fffc4 	addi	r5,r20,-1
 5084b8c:	a0bfffc5 	stb	r2,-1(r20)
 5084b90:	dc002917 	ldw	r16,164(sp)
 5084b94:	2f00752e 	bgeu	r5,fp,5084d6c <___svfprintf_internal_r+0x219c>
 5084b98:	d9c02384 	addi	r7,sp,142
 5084b9c:	3d0fc83a 	sub	r7,r7,r20
 5084ba0:	d9002344 	addi	r4,sp,141
 5084ba4:	e1cf883a 	add	r7,fp,r7
 5084ba8:	00000106 	br	5084bb0 <___svfprintf_internal_r+0x1fe0>
 5084bac:	28800003 	ldbu	r2,0(r5)
 5084bb0:	20800005 	stb	r2,0(r4)
 5084bb4:	21000044 	addi	r4,r4,1
 5084bb8:	29400044 	addi	r5,r5,1
 5084bbc:	21fffb1e 	bne	r4,r7,5084bac <__alt_data_end+0xfffb69ac>
 5084bc0:	d8802304 	addi	r2,sp,140
 5084bc4:	1505c83a 	sub	r2,r2,r20
 5084bc8:	d8c02344 	addi	r3,sp,141
 5084bcc:	1885883a 	add	r2,r3,r2
 5084bd0:	003f7006 	br	5084994 <__alt_data_end+0xfffb6794>
 5084bd4:	0005883a 	mov	r2,zero
 5084bd8:	003f0b06 	br	5084808 <__alt_data_end+0xfffb6608>
 5084bdc:	d9002917 	ldw	r4,164(sp)
 5084be0:	d8c03217 	ldw	r3,200(sp)
 5084be4:	20800044 	addi	r2,r4,1
 5084be8:	1885883a 	add	r2,r3,r2
 5084bec:	d8802e15 	stw	r2,184(sp)
 5084bf0:	103e870e 	bge	r2,zero,5084610 <__alt_data_end+0xfffb6410>
 5084bf4:	0005883a 	mov	r2,zero
 5084bf8:	003e8506 	br	5084610 <__alt_data_end+0xfffb6410>
 5084bfc:	01014274 	movhi	r4,1289
 5084c00:	2117b484 	addi	r4,r4,24274
 5084c04:	d9002b15 	stw	r4,172(sp)
 5084c08:	003cc506 	br	5083f20 <__alt_data_end+0xfffb5d20>
 5084c0c:	d8c03217 	ldw	r3,200(sp)
 5084c10:	18c00044 	addi	r3,r3,1
 5084c14:	d8c02e15 	stw	r3,184(sp)
 5084c18:	1805883a 	mov	r2,r3
 5084c1c:	183fa10e 	bge	r3,zero,5084aa4 <__alt_data_end+0xfffb68a4>
 5084c20:	0005883a 	mov	r2,zero
 5084c24:	003f9f06 	br	5084aa4 <__alt_data_end+0xfffb68a4>
 5084c28:	d9003617 	ldw	r4,216(sp)
 5084c2c:	000d883a 	mov	r6,zero
 5084c30:	000f883a 	mov	r7,zero
 5084c34:	a00b883a 	mov	r5,r20
 5084c38:	d8c03d15 	stw	r3,244(sp)
 5084c3c:	da003e15 	stw	r8,248(sp)
 5084c40:	50913980 	call	5091398 <__eqdf2>
 5084c44:	d8c03d17 	ldw	r3,244(sp)
 5084c48:	da003e17 	ldw	r8,248(sp)
 5084c4c:	103f8726 	beq	r2,zero,5084a6c <__alt_data_end+0xfffb686c>
 5084c50:	00800044 	movi	r2,1
 5084c54:	10c7c83a 	sub	r3,r2,r3
 5084c58:	d8c02615 	stw	r3,152(sp)
 5084c5c:	003f8406 	br	5084a70 <__alt_data_end+0xfffb6870>
 5084c60:	20000e1e 	bne	r4,zero,5084c9c <___svfprintf_internal_r+0x20cc>
 5084c64:	9480004c 	andi	r18,r18,1
 5084c68:	90000c1e 	bne	r18,zero,5084c9c <___svfprintf_internal_r+0x20cc>
 5084c6c:	00800044 	movi	r2,1
 5084c70:	d8802e15 	stw	r2,184(sp)
 5084c74:	003e6606 	br	5084610 <__alt_data_end+0xfffb6410>
 5084c78:	00800b44 	movi	r2,45
 5084c7c:	05adc83a 	sub	r22,zero,r22
 5084c80:	d8802305 	stb	r2,140(sp)
 5084c84:	003f3b06 	br	5084974 <__alt_data_end+0xfffb6774>
 5084c88:	0005883a 	mov	r2,zero
 5084c8c:	003f4e06 	br	50849c8 <__alt_data_end+0xfffb67c8>
 5084c90:	90a4703a 	and	r18,r18,r2
 5084c94:	903f4a26 	beq	r18,zero,50849c0 <__alt_data_end+0xfffb67c0>
 5084c98:	003f4606 	br	50849b4 <__alt_data_end+0xfffb67b4>
 5084c9c:	d8c02917 	ldw	r3,164(sp)
 5084ca0:	18c00084 	addi	r3,r3,2
 5084ca4:	d8c02e15 	stw	r3,184(sp)
 5084ca8:	1805883a 	mov	r2,r3
 5084cac:	183e580e 	bge	r3,zero,5084610 <__alt_data_end+0xfffb6410>
 5084cb0:	003fd006 	br	5084bf4 <__alt_data_end+0xfffb69f4>
 5084cb4:	00800084 	movi	r2,2
 5084cb8:	10c5c83a 	sub	r2,r2,r3
 5084cbc:	003f7506 	br	5084a94 <__alt_data_end+0xfffb6894>
 5084cc0:	d8802d17 	ldw	r2,180(sp)
 5084cc4:	d9002d17 	ldw	r4,180(sp)
 5084cc8:	bc400043 	ldbu	r17,1(r23)
 5084ccc:	10800017 	ldw	r2,0(r2)
 5084cd0:	582f883a 	mov	r23,r11
 5084cd4:	d8802915 	stw	r2,164(sp)
 5084cd8:	20800104 	addi	r2,r4,4
 5084cdc:	d9002917 	ldw	r4,164(sp)
 5084ce0:	d8802d15 	stw	r2,180(sp)
 5084ce4:	203df00e 	bge	r4,zero,50844a8 <__alt_data_end+0xfffb62a8>
 5084ce8:	8c403fcc 	andi	r17,r17,255
 5084cec:	00bfffc4 	movi	r2,-1
 5084cf0:	8c40201c 	xori	r17,r17,128
 5084cf4:	d8802915 	stw	r2,164(sp)
 5084cf8:	8c7fe004 	addi	r17,r17,-128
 5084cfc:	00380806 	br	5082d20 <__alt_data_end+0xfffb4b20>
 5084d00:	9080004c 	andi	r2,r18,1
 5084d04:	0039883a 	mov	fp,zero
 5084d08:	10000726 	beq	r2,zero,5084d28 <___svfprintf_internal_r+0x2158>
 5084d0c:	d8c02817 	ldw	r3,160(sp)
 5084d10:	dc001dc4 	addi	r16,sp,119
 5084d14:	00800c04 	movi	r2,48
 5084d18:	1c07c83a 	sub	r3,r3,r16
 5084d1c:	d8801dc5 	stb	r2,119(sp)
 5084d20:	d8c02e15 	stw	r3,184(sp)
 5084d24:	00395206 	br	5083270 <__alt_data_end+0xfffb5070>
 5084d28:	d8002e15 	stw	zero,184(sp)
 5084d2c:	dc001e04 	addi	r16,sp,120
 5084d30:	00394f06 	br	5083270 <__alt_data_end+0xfffb5070>
 5084d34:	0005883a 	mov	r2,zero
 5084d38:	003e3206 	br	5084604 <__alt_data_end+0xfffb6404>
 5084d3c:	dd802617 	ldw	r22,152(sp)
 5084d40:	003f0606 	br	508495c <__alt_data_end+0xfffb675c>
 5084d44:	d9c02785 	stb	r7,158(sp)
 5084d48:	003a5106 	br	5083690 <__alt_data_end+0xfffb5490>
 5084d4c:	d9c02785 	stb	r7,158(sp)
 5084d50:	003a3706 	br	5083630 <__alt_data_end+0xfffb5430>
 5084d54:	0005883a 	mov	r2,zero
 5084d58:	003f5e06 	br	5084ad4 <__alt_data_end+0xfffb68d4>
 5084d5c:	d9c02785 	stb	r7,158(sp)
 5084d60:	00391706 	br	50831c0 <__alt_data_end+0xfffb4fc0>
 5084d64:	d9c02785 	stb	r7,158(sp)
 5084d68:	0038e606 	br	5083104 <__alt_data_end+0xfffb4f04>
 5084d6c:	d8802344 	addi	r2,sp,141
 5084d70:	003f0806 	br	5084994 <__alt_data_end+0xfffb6794>
 5084d74:	d9c02785 	stb	r7,158(sp)
 5084d78:	0038b706 	br	5083058 <__alt_data_end+0xfffb4e58>
 5084d7c:	d9c02785 	stb	r7,158(sp)
 5084d80:	003adc06 	br	50838f4 <__alt_data_end+0xfffb56f4>
 5084d84:	d9403917 	ldw	r5,228(sp)
 5084d88:	00800304 	movi	r2,12
 5084d8c:	28800015 	stw	r2,0(r5)
 5084d90:	00bfffc4 	movi	r2,-1
 5084d94:	00387806 	br	5082f78 <__alt_data_end+0xfffb4d78>
 5084d98:	d9c02785 	stb	r7,158(sp)
 5084d9c:	003abf06 	br	508389c <__alt_data_end+0xfffb569c>
 5084da0:	d9c02785 	stb	r7,158(sp)
 5084da4:	003a9b06 	br	5083814 <__alt_data_end+0xfffb5614>

05084da8 <___vfprintf_internal_r>:
 5084da8:	deffb804 	addi	sp,sp,-288
 5084dac:	dfc04715 	stw	ra,284(sp)
 5084db0:	ddc04515 	stw	r23,276(sp)
 5084db4:	dd404315 	stw	r21,268(sp)
 5084db8:	d9002c15 	stw	r4,176(sp)
 5084dbc:	282f883a 	mov	r23,r5
 5084dc0:	302b883a 	mov	r21,r6
 5084dc4:	d9c02d15 	stw	r7,180(sp)
 5084dc8:	df004615 	stw	fp,280(sp)
 5084dcc:	dd804415 	stw	r22,272(sp)
 5084dd0:	dd004215 	stw	r20,264(sp)
 5084dd4:	dcc04115 	stw	r19,260(sp)
 5084dd8:	dc804015 	stw	r18,256(sp)
 5084ddc:	dc403f15 	stw	r17,252(sp)
 5084de0:	dc003e15 	stw	r16,248(sp)
 5084de4:	5089ce40 	call	5089ce4 <_localeconv_r>
 5084de8:	10800017 	ldw	r2,0(r2)
 5084dec:	1009883a 	mov	r4,r2
 5084df0:	d8803415 	stw	r2,208(sp)
 5084df4:	5082b380 	call	5082b38 <strlen>
 5084df8:	d8803715 	stw	r2,220(sp)
 5084dfc:	d8802c17 	ldw	r2,176(sp)
 5084e00:	10000226 	beq	r2,zero,5084e0c <___vfprintf_internal_r+0x64>
 5084e04:	10800e17 	ldw	r2,56(r2)
 5084e08:	1000f926 	beq	r2,zero,50851f0 <___vfprintf_internal_r+0x448>
 5084e0c:	b880030b 	ldhu	r2,12(r23)
 5084e10:	10c8000c 	andi	r3,r2,8192
 5084e14:	1800061e 	bne	r3,zero,5084e30 <___vfprintf_internal_r+0x88>
 5084e18:	b9001917 	ldw	r4,100(r23)
 5084e1c:	00f7ffc4 	movi	r3,-8193
 5084e20:	10880014 	ori	r2,r2,8192
 5084e24:	20c6703a 	and	r3,r4,r3
 5084e28:	b880030d 	sth	r2,12(r23)
 5084e2c:	b8c01915 	stw	r3,100(r23)
 5084e30:	10c0020c 	andi	r3,r2,8
 5084e34:	1800c126 	beq	r3,zero,508513c <___vfprintf_internal_r+0x394>
 5084e38:	b8c00417 	ldw	r3,16(r23)
 5084e3c:	1800bf26 	beq	r3,zero,508513c <___vfprintf_internal_r+0x394>
 5084e40:	1080068c 	andi	r2,r2,26
 5084e44:	00c00284 	movi	r3,10
 5084e48:	10c0c426 	beq	r2,r3,508515c <___vfprintf_internal_r+0x3b4>
 5084e4c:	d8c00404 	addi	r3,sp,16
 5084e50:	05014274 	movhi	r20,1289
 5084e54:	d9001e04 	addi	r4,sp,120
 5084e58:	a517bc84 	addi	r20,r20,24306
 5084e5c:	d8c01e15 	stw	r3,120(sp)
 5084e60:	d8002015 	stw	zero,128(sp)
 5084e64:	d8001f15 	stw	zero,124(sp)
 5084e68:	d8003315 	stw	zero,204(sp)
 5084e6c:	d8003615 	stw	zero,216(sp)
 5084e70:	d8003815 	stw	zero,224(sp)
 5084e74:	1811883a 	mov	r8,r3
 5084e78:	d8003915 	stw	zero,228(sp)
 5084e7c:	d8003a15 	stw	zero,232(sp)
 5084e80:	d8002f15 	stw	zero,188(sp)
 5084e84:	d9002815 	stw	r4,160(sp)
 5084e88:	a8800007 	ldb	r2,0(r21)
 5084e8c:	10027b26 	beq	r2,zero,508587c <___vfprintf_internal_r+0xad4>
 5084e90:	00c00944 	movi	r3,37
 5084e94:	a821883a 	mov	r16,r21
 5084e98:	10c0021e 	bne	r2,r3,5084ea4 <___vfprintf_internal_r+0xfc>
 5084e9c:	00001406 	br	5084ef0 <___vfprintf_internal_r+0x148>
 5084ea0:	10c00326 	beq	r2,r3,5084eb0 <___vfprintf_internal_r+0x108>
 5084ea4:	84000044 	addi	r16,r16,1
 5084ea8:	80800007 	ldb	r2,0(r16)
 5084eac:	103ffc1e 	bne	r2,zero,5084ea0 <__alt_data_end+0xfffb6ca0>
 5084eb0:	8563c83a 	sub	r17,r16,r21
 5084eb4:	88000e26 	beq	r17,zero,5084ef0 <___vfprintf_internal_r+0x148>
 5084eb8:	d8c02017 	ldw	r3,128(sp)
 5084ebc:	d8801f17 	ldw	r2,124(sp)
 5084ec0:	45400015 	stw	r21,0(r8)
 5084ec4:	1c47883a 	add	r3,r3,r17
 5084ec8:	10800044 	addi	r2,r2,1
 5084ecc:	d8c02015 	stw	r3,128(sp)
 5084ed0:	44400115 	stw	r17,4(r8)
 5084ed4:	d8801f15 	stw	r2,124(sp)
 5084ed8:	00c001c4 	movi	r3,7
 5084edc:	1880a716 	blt	r3,r2,508517c <___vfprintf_internal_r+0x3d4>
 5084ee0:	42000204 	addi	r8,r8,8
 5084ee4:	d9402f17 	ldw	r5,188(sp)
 5084ee8:	2c4b883a 	add	r5,r5,r17
 5084eec:	d9402f15 	stw	r5,188(sp)
 5084ef0:	80800007 	ldb	r2,0(r16)
 5084ef4:	1000a826 	beq	r2,zero,5085198 <___vfprintf_internal_r+0x3f0>
 5084ef8:	84400047 	ldb	r17,1(r16)
 5084efc:	00bfffc4 	movi	r2,-1
 5084f00:	85400044 	addi	r21,r16,1
 5084f04:	d8002785 	stb	zero,158(sp)
 5084f08:	0007883a 	mov	r3,zero
 5084f0c:	000f883a 	mov	r7,zero
 5084f10:	d8802915 	stw	r2,164(sp)
 5084f14:	d8003115 	stw	zero,196(sp)
 5084f18:	0025883a 	mov	r18,zero
 5084f1c:	01401604 	movi	r5,88
 5084f20:	01800244 	movi	r6,9
 5084f24:	02800a84 	movi	r10,42
 5084f28:	02401b04 	movi	r9,108
 5084f2c:	ad400044 	addi	r21,r21,1
 5084f30:	88bff804 	addi	r2,r17,-32
 5084f34:	28830436 	bltu	r5,r2,5085b48 <___vfprintf_internal_r+0xda0>
 5084f38:	100490ba 	slli	r2,r2,2
 5084f3c:	01014234 	movhi	r4,1288
 5084f40:	2113d404 	addi	r4,r4,20304
 5084f44:	1105883a 	add	r2,r2,r4
 5084f48:	10800017 	ldw	r2,0(r2)
 5084f4c:	1000683a 	jmp	r2
 5084f50:	05085a68 	cmpgeui	r20,zero,8553
 5084f54:	05085b48 	cmpgei	r20,zero,8557
 5084f58:	05085b48 	cmpgei	r20,zero,8557
 5084f5c:	05085a88 	cmpgei	r20,zero,8554
 5084f60:	05085b48 	cmpgei	r20,zero,8557
 5084f64:	05085b48 	cmpgei	r20,zero,8557
 5084f68:	05085b48 	cmpgei	r20,zero,8557
 5084f6c:	05085b48 	cmpgei	r20,zero,8557
 5084f70:	05085b48 	cmpgei	r20,zero,8557
 5084f74:	05085b48 	cmpgei	r20,zero,8557
 5084f78:	050851fc 	xorhi	r20,zero,8519
 5084f7c:	050859a4 	muli	r20,zero,8550
 5084f80:	05085b48 	cmpgei	r20,zero,8557
 5084f84:	050850c4 	movi	r20,8515
 5084f88:	05085224 	muli	r20,zero,8520
 5084f8c:	05085b48 	cmpgei	r20,zero,8557
 5084f90:	05085264 	muli	r20,zero,8521
 5084f94:	05085270 	cmpltui	r20,zero,8521
 5084f98:	05085270 	cmpltui	r20,zero,8521
 5084f9c:	05085270 	cmpltui	r20,zero,8521
 5084fa0:	05085270 	cmpltui	r20,zero,8521
 5084fa4:	05085270 	cmpltui	r20,zero,8521
 5084fa8:	05085270 	cmpltui	r20,zero,8521
 5084fac:	05085270 	cmpltui	r20,zero,8521
 5084fb0:	05085270 	cmpltui	r20,zero,8521
 5084fb4:	05085270 	cmpltui	r20,zero,8521
 5084fb8:	05085b48 	cmpgei	r20,zero,8557
 5084fbc:	05085b48 	cmpgei	r20,zero,8557
 5084fc0:	05085b48 	cmpgei	r20,zero,8557
 5084fc4:	05085b48 	cmpgei	r20,zero,8557
 5084fc8:	05085b48 	cmpgei	r20,zero,8557
 5084fcc:	05085b48 	cmpgei	r20,zero,8557
 5084fd0:	05085b48 	cmpgei	r20,zero,8557
 5084fd4:	05085b48 	cmpgei	r20,zero,8557
 5084fd8:	05085b48 	cmpgei	r20,zero,8557
 5084fdc:	05085b48 	cmpgei	r20,zero,8557
 5084fe0:	050852a4 	muli	r20,zero,8522
 5084fe4:	05085360 	cmpeqi	r20,zero,8525
 5084fe8:	05085b48 	cmpgei	r20,zero,8557
 5084fec:	05085360 	cmpeqi	r20,zero,8525
 5084ff0:	05085b48 	cmpgei	r20,zero,8557
 5084ff4:	05085b48 	cmpgei	r20,zero,8557
 5084ff8:	05085b48 	cmpgei	r20,zero,8557
 5084ffc:	05085b48 	cmpgei	r20,zero,8557
 5085000:	05085400 	call	508540 <__alt_mem_sdram+0x508540>
 5085004:	05085b48 	cmpgei	r20,zero,8557
 5085008:	05085b48 	cmpgei	r20,zero,8557
 508500c:	0508540c 	andi	r20,zero,8528
 5085010:	05085b48 	cmpgei	r20,zero,8557
 5085014:	05085b48 	cmpgei	r20,zero,8557
 5085018:	05085b48 	cmpgei	r20,zero,8557
 508501c:	05085b48 	cmpgei	r20,zero,8557
 5085020:	05085b48 	cmpgei	r20,zero,8557
 5085024:	05085884 	movi	r20,8546
 5085028:	05085b48 	cmpgei	r20,zero,8557
 508502c:	05085b48 	cmpgei	r20,zero,8557
 5085030:	050858e4 	muli	r20,zero,8547
 5085034:	05085b48 	cmpgei	r20,zero,8557
 5085038:	05085b48 	cmpgei	r20,zero,8557
 508503c:	05085b48 	cmpgei	r20,zero,8557
 5085040:	05085b48 	cmpgei	r20,zero,8557
 5085044:	05085b48 	cmpgei	r20,zero,8557
 5085048:	05085b48 	cmpgei	r20,zero,8557
 508504c:	05085b48 	cmpgei	r20,zero,8557
 5085050:	05085b48 	cmpgei	r20,zero,8557
 5085054:	05085b48 	cmpgei	r20,zero,8557
 5085058:	05085b48 	cmpgei	r20,zero,8557
 508505c:	05085af4 	movhi	r20,8555
 5085060:	05085a94 	movui	r20,8554
 5085064:	05085360 	cmpeqi	r20,zero,8525
 5085068:	05085360 	cmpeqi	r20,zero,8525
 508506c:	05085360 	cmpeqi	r20,zero,8525
 5085070:	05085aa4 	muli	r20,zero,8554
 5085074:	05085a94 	movui	r20,8554
 5085078:	05085b48 	cmpgei	r20,zero,8557
 508507c:	05085b48 	cmpgei	r20,zero,8557
 5085080:	05085ab0 	cmpltui	r20,zero,8554
 5085084:	05085b48 	cmpgei	r20,zero,8557
 5085088:	05085ac0 	call	5085ac <__alt_mem_sdram+0x5085ac>
 508508c:	05085994 	movui	r20,8550
 5085090:	050850d0 	cmplti	r20,zero,8515
 5085094:	050859b4 	movhi	r20,8550
 5085098:	05085b48 	cmpgei	r20,zero,8557
 508509c:	050859c0 	call	50859c <__alt_mem_sdram+0x50859c>
 50850a0:	05085b48 	cmpgei	r20,zero,8557
 50850a4:	05085a1c 	xori	r20,zero,8552
 50850a8:	05085b48 	cmpgei	r20,zero,8557
 50850ac:	05085b48 	cmpgei	r20,zero,8557
 50850b0:	05085a2c 	andhi	r20,zero,8552
 50850b4:	d9003117 	ldw	r4,196(sp)
 50850b8:	d8802d15 	stw	r2,180(sp)
 50850bc:	0109c83a 	sub	r4,zero,r4
 50850c0:	d9003115 	stw	r4,196(sp)
 50850c4:	94800114 	ori	r18,r18,4
 50850c8:	ac400007 	ldb	r17,0(r21)
 50850cc:	003f9706 	br	5084f2c <__alt_data_end+0xfffb6d2c>
 50850d0:	00800c04 	movi	r2,48
 50850d4:	d9002d17 	ldw	r4,180(sp)
 50850d8:	d9402917 	ldw	r5,164(sp)
 50850dc:	d8802705 	stb	r2,156(sp)
 50850e0:	00801e04 	movi	r2,120
 50850e4:	d8802745 	stb	r2,157(sp)
 50850e8:	d8002785 	stb	zero,158(sp)
 50850ec:	20c00104 	addi	r3,r4,4
 50850f0:	24c00017 	ldw	r19,0(r4)
 50850f4:	002d883a 	mov	r22,zero
 50850f8:	90800094 	ori	r2,r18,2
 50850fc:	28029a16 	blt	r5,zero,5085b68 <___vfprintf_internal_r+0xdc0>
 5085100:	00bfdfc4 	movi	r2,-129
 5085104:	90a4703a 	and	r18,r18,r2
 5085108:	d8c02d15 	stw	r3,180(sp)
 508510c:	94800094 	ori	r18,r18,2
 5085110:	9802871e 	bne	r19,zero,5085b30 <___vfprintf_internal_r+0xd88>
 5085114:	00814274 	movhi	r2,1289
 5085118:	1097ad04 	addi	r2,r2,24244
 508511c:	d8803915 	stw	r2,228(sp)
 5085120:	04401e04 	movi	r17,120
 5085124:	d8802917 	ldw	r2,164(sp)
 5085128:	0039883a 	mov	fp,zero
 508512c:	1001e926 	beq	r2,zero,50858d4 <___vfprintf_internal_r+0xb2c>
 5085130:	0027883a 	mov	r19,zero
 5085134:	002d883a 	mov	r22,zero
 5085138:	00020506 	br	5085950 <___vfprintf_internal_r+0xba8>
 508513c:	d9002c17 	ldw	r4,176(sp)
 5085140:	b80b883a 	mov	r5,r23
 5085144:	508719c0 	call	508719c <__swsetup_r>
 5085148:	1005ac1e 	bne	r2,zero,50867fc <___vfprintf_internal_r+0x1a54>
 508514c:	b880030b 	ldhu	r2,12(r23)
 5085150:	00c00284 	movi	r3,10
 5085154:	1080068c 	andi	r2,r2,26
 5085158:	10ff3c1e 	bne	r2,r3,5084e4c <__alt_data_end+0xfffb6c4c>
 508515c:	b880038f 	ldh	r2,14(r23)
 5085160:	103f3a16 	blt	r2,zero,5084e4c <__alt_data_end+0xfffb6c4c>
 5085164:	d9c02d17 	ldw	r7,180(sp)
 5085168:	d9002c17 	ldw	r4,176(sp)
 508516c:	a80d883a 	mov	r6,r21
 5085170:	b80b883a 	mov	r5,r23
 5085174:	5086fbc0 	call	5086fbc <__sbprintf>
 5085178:	00001106 	br	50851c0 <___vfprintf_internal_r+0x418>
 508517c:	d9002c17 	ldw	r4,176(sp)
 5085180:	d9801e04 	addi	r6,sp,120
 5085184:	b80b883a 	mov	r5,r23
 5085188:	508d8d40 	call	508d8d4 <__sprint_r>
 508518c:	1000081e 	bne	r2,zero,50851b0 <___vfprintf_internal_r+0x408>
 5085190:	da000404 	addi	r8,sp,16
 5085194:	003f5306 	br	5084ee4 <__alt_data_end+0xfffb6ce4>
 5085198:	d8802017 	ldw	r2,128(sp)
 508519c:	10000426 	beq	r2,zero,50851b0 <___vfprintf_internal_r+0x408>
 50851a0:	d9002c17 	ldw	r4,176(sp)
 50851a4:	d9801e04 	addi	r6,sp,120
 50851a8:	b80b883a 	mov	r5,r23
 50851ac:	508d8d40 	call	508d8d4 <__sprint_r>
 50851b0:	b880030b 	ldhu	r2,12(r23)
 50851b4:	1080100c 	andi	r2,r2,64
 50851b8:	1005901e 	bne	r2,zero,50867fc <___vfprintf_internal_r+0x1a54>
 50851bc:	d8802f17 	ldw	r2,188(sp)
 50851c0:	dfc04717 	ldw	ra,284(sp)
 50851c4:	df004617 	ldw	fp,280(sp)
 50851c8:	ddc04517 	ldw	r23,276(sp)
 50851cc:	dd804417 	ldw	r22,272(sp)
 50851d0:	dd404317 	ldw	r21,268(sp)
 50851d4:	dd004217 	ldw	r20,264(sp)
 50851d8:	dcc04117 	ldw	r19,260(sp)
 50851dc:	dc804017 	ldw	r18,256(sp)
 50851e0:	dc403f17 	ldw	r17,252(sp)
 50851e4:	dc003e17 	ldw	r16,248(sp)
 50851e8:	dec04804 	addi	sp,sp,288
 50851ec:	f800283a 	ret
 50851f0:	d9002c17 	ldw	r4,176(sp)
 50851f4:	50891700 	call	5089170 <__sinit>
 50851f8:	003f0406 	br	5084e0c <__alt_data_end+0xfffb6c0c>
 50851fc:	d8802d17 	ldw	r2,180(sp)
 5085200:	d9002d17 	ldw	r4,180(sp)
 5085204:	10800017 	ldw	r2,0(r2)
 5085208:	d8803115 	stw	r2,196(sp)
 508520c:	20800104 	addi	r2,r4,4
 5085210:	d9003117 	ldw	r4,196(sp)
 5085214:	203fa716 	blt	r4,zero,50850b4 <__alt_data_end+0xfffb6eb4>
 5085218:	d8802d15 	stw	r2,180(sp)
 508521c:	ac400007 	ldb	r17,0(r21)
 5085220:	003f4206 	br	5084f2c <__alt_data_end+0xfffb6d2c>
 5085224:	ac400007 	ldb	r17,0(r21)
 5085228:	aac00044 	addi	r11,r21,1
 508522c:	8a872826 	beq	r17,r10,5086ed0 <___vfprintf_internal_r+0x2128>
 5085230:	88bff404 	addi	r2,r17,-48
 5085234:	0009883a 	mov	r4,zero
 5085238:	30867d36 	bltu	r6,r2,5086c30 <___vfprintf_internal_r+0x1e88>
 508523c:	5c400007 	ldb	r17,0(r11)
 5085240:	210002a4 	muli	r4,r4,10
 5085244:	5d400044 	addi	r21,r11,1
 5085248:	a817883a 	mov	r11,r21
 508524c:	2089883a 	add	r4,r4,r2
 5085250:	88bff404 	addi	r2,r17,-48
 5085254:	30bff92e 	bgeu	r6,r2,508523c <__alt_data_end+0xfffb703c>
 5085258:	2005c916 	blt	r4,zero,5086980 <___vfprintf_internal_r+0x1bd8>
 508525c:	d9002915 	stw	r4,164(sp)
 5085260:	003f3306 	br	5084f30 <__alt_data_end+0xfffb6d30>
 5085264:	94802014 	ori	r18,r18,128
 5085268:	ac400007 	ldb	r17,0(r21)
 508526c:	003f2f06 	br	5084f2c <__alt_data_end+0xfffb6d2c>
 5085270:	a809883a 	mov	r4,r21
 5085274:	d8003115 	stw	zero,196(sp)
 5085278:	88bff404 	addi	r2,r17,-48
 508527c:	0017883a 	mov	r11,zero
 5085280:	24400007 	ldb	r17,0(r4)
 5085284:	5ac002a4 	muli	r11,r11,10
 5085288:	ad400044 	addi	r21,r21,1
 508528c:	a809883a 	mov	r4,r21
 5085290:	12d7883a 	add	r11,r2,r11
 5085294:	88bff404 	addi	r2,r17,-48
 5085298:	30bff92e 	bgeu	r6,r2,5085280 <__alt_data_end+0xfffb7080>
 508529c:	dac03115 	stw	r11,196(sp)
 50852a0:	003f2306 	br	5084f30 <__alt_data_end+0xfffb6d30>
 50852a4:	18c03fcc 	andi	r3,r3,255
 50852a8:	18072b1e 	bne	r3,zero,5086f58 <___vfprintf_internal_r+0x21b0>
 50852ac:	94800414 	ori	r18,r18,16
 50852b0:	9080080c 	andi	r2,r18,32
 50852b4:	10037b26 	beq	r2,zero,50860a4 <___vfprintf_internal_r+0x12fc>
 50852b8:	d9402d17 	ldw	r5,180(sp)
 50852bc:	28800117 	ldw	r2,4(r5)
 50852c0:	2cc00017 	ldw	r19,0(r5)
 50852c4:	29400204 	addi	r5,r5,8
 50852c8:	d9402d15 	stw	r5,180(sp)
 50852cc:	102d883a 	mov	r22,r2
 50852d0:	10044b16 	blt	r2,zero,5086400 <___vfprintf_internal_r+0x1658>
 50852d4:	d9402917 	ldw	r5,164(sp)
 50852d8:	df002783 	ldbu	fp,158(sp)
 50852dc:	2803bc16 	blt	r5,zero,50861d0 <___vfprintf_internal_r+0x1428>
 50852e0:	00ffdfc4 	movi	r3,-129
 50852e4:	9d84b03a 	or	r2,r19,r22
 50852e8:	90e4703a 	and	r18,r18,r3
 50852ec:	10017726 	beq	r2,zero,50858cc <___vfprintf_internal_r+0xb24>
 50852f0:	b0038326 	beq	r22,zero,5086100 <___vfprintf_internal_r+0x1358>
 50852f4:	dc402a15 	stw	r17,168(sp)
 50852f8:	dc001e04 	addi	r16,sp,120
 50852fc:	b023883a 	mov	r17,r22
 5085300:	402d883a 	mov	r22,r8
 5085304:	9809883a 	mov	r4,r19
 5085308:	880b883a 	mov	r5,r17
 508530c:	01800284 	movi	r6,10
 5085310:	000f883a 	mov	r7,zero
 5085314:	508fccc0 	call	508fccc <__umoddi3>
 5085318:	10800c04 	addi	r2,r2,48
 508531c:	843fffc4 	addi	r16,r16,-1
 5085320:	9809883a 	mov	r4,r19
 5085324:	880b883a 	mov	r5,r17
 5085328:	80800005 	stb	r2,0(r16)
 508532c:	01800284 	movi	r6,10
 5085330:	000f883a 	mov	r7,zero
 5085334:	508f7540 	call	508f754 <__udivdi3>
 5085338:	1027883a 	mov	r19,r2
 508533c:	10c4b03a 	or	r2,r2,r3
 5085340:	1823883a 	mov	r17,r3
 5085344:	103fef1e 	bne	r2,zero,5085304 <__alt_data_end+0xfffb7104>
 5085348:	d8c02817 	ldw	r3,160(sp)
 508534c:	dc402a17 	ldw	r17,168(sp)
 5085350:	b011883a 	mov	r8,r22
 5085354:	1c07c83a 	sub	r3,r3,r16
 5085358:	d8c02e15 	stw	r3,184(sp)
 508535c:	00005906 	br	50854c4 <___vfprintf_internal_r+0x71c>
 5085360:	18c03fcc 	andi	r3,r3,255
 5085364:	1806fa1e 	bne	r3,zero,5086f50 <___vfprintf_internal_r+0x21a8>
 5085368:	9080020c 	andi	r2,r18,8
 508536c:	10048a26 	beq	r2,zero,5086598 <___vfprintf_internal_r+0x17f0>
 5085370:	d8c02d17 	ldw	r3,180(sp)
 5085374:	d9002d17 	ldw	r4,180(sp)
 5085378:	d9402d17 	ldw	r5,180(sp)
 508537c:	18c00017 	ldw	r3,0(r3)
 5085380:	21000117 	ldw	r4,4(r4)
 5085384:	29400204 	addi	r5,r5,8
 5085388:	d8c03615 	stw	r3,216(sp)
 508538c:	d9003815 	stw	r4,224(sp)
 5085390:	d9402d15 	stw	r5,180(sp)
 5085394:	d9003617 	ldw	r4,216(sp)
 5085398:	d9403817 	ldw	r5,224(sp)
 508539c:	da003d15 	stw	r8,244(sp)
 50853a0:	04000044 	movi	r16,1
 50853a4:	508c0ec0 	call	508c0ec <__fpclassifyd>
 50853a8:	da003d17 	ldw	r8,244(sp)
 50853ac:	14041f1e 	bne	r2,r16,508642c <___vfprintf_internal_r+0x1684>
 50853b0:	d9003617 	ldw	r4,216(sp)
 50853b4:	d9403817 	ldw	r5,224(sp)
 50853b8:	000d883a 	mov	r6,zero
 50853bc:	000f883a 	mov	r7,zero
 50853c0:	50914fc0 	call	50914fc <__ledf2>
 50853c4:	da003d17 	ldw	r8,244(sp)
 50853c8:	1005be16 	blt	r2,zero,5086ac4 <___vfprintf_internal_r+0x1d1c>
 50853cc:	df002783 	ldbu	fp,158(sp)
 50853d0:	008011c4 	movi	r2,71
 50853d4:	1445330e 	bge	r2,r17,50868a4 <___vfprintf_internal_r+0x1afc>
 50853d8:	04014274 	movhi	r16,1289
 50853dc:	8417a504 	addi	r16,r16,24212
 50853e0:	00c000c4 	movi	r3,3
 50853e4:	00bfdfc4 	movi	r2,-129
 50853e8:	d8c02a15 	stw	r3,168(sp)
 50853ec:	90a4703a 	and	r18,r18,r2
 50853f0:	d8c02e15 	stw	r3,184(sp)
 50853f4:	d8002915 	stw	zero,164(sp)
 50853f8:	d8003215 	stw	zero,200(sp)
 50853fc:	00003706 	br	50854dc <___vfprintf_internal_r+0x734>
 5085400:	94800214 	ori	r18,r18,8
 5085404:	ac400007 	ldb	r17,0(r21)
 5085408:	003ec806 	br	5084f2c <__alt_data_end+0xfffb6d2c>
 508540c:	18c03fcc 	andi	r3,r3,255
 5085410:	1806db1e 	bne	r3,zero,5086f80 <___vfprintf_internal_r+0x21d8>
 5085414:	94800414 	ori	r18,r18,16
 5085418:	9080080c 	andi	r2,r18,32
 508541c:	1002d826 	beq	r2,zero,5085f80 <___vfprintf_internal_r+0x11d8>
 5085420:	d9402d17 	ldw	r5,180(sp)
 5085424:	d8c02917 	ldw	r3,164(sp)
 5085428:	d8002785 	stb	zero,158(sp)
 508542c:	28800204 	addi	r2,r5,8
 5085430:	2cc00017 	ldw	r19,0(r5)
 5085434:	2d800117 	ldw	r22,4(r5)
 5085438:	18048f16 	blt	r3,zero,5086678 <___vfprintf_internal_r+0x18d0>
 508543c:	013fdfc4 	movi	r4,-129
 5085440:	9d86b03a 	or	r3,r19,r22
 5085444:	d8802d15 	stw	r2,180(sp)
 5085448:	9124703a 	and	r18,r18,r4
 508544c:	1802d91e 	bne	r3,zero,5085fb4 <___vfprintf_internal_r+0x120c>
 5085450:	d8c02917 	ldw	r3,164(sp)
 5085454:	0039883a 	mov	fp,zero
 5085458:	1805c326 	beq	r3,zero,5086b68 <___vfprintf_internal_r+0x1dc0>
 508545c:	0027883a 	mov	r19,zero
 5085460:	002d883a 	mov	r22,zero
 5085464:	dc001e04 	addi	r16,sp,120
 5085468:	9806d0fa 	srli	r3,r19,3
 508546c:	b008977a 	slli	r4,r22,29
 5085470:	b02cd0fa 	srli	r22,r22,3
 5085474:	9cc001cc 	andi	r19,r19,7
 5085478:	98800c04 	addi	r2,r19,48
 508547c:	843fffc4 	addi	r16,r16,-1
 5085480:	20e6b03a 	or	r19,r4,r3
 5085484:	80800005 	stb	r2,0(r16)
 5085488:	9d86b03a 	or	r3,r19,r22
 508548c:	183ff61e 	bne	r3,zero,5085468 <__alt_data_end+0xfffb7268>
 5085490:	90c0004c 	andi	r3,r18,1
 5085494:	18013b26 	beq	r3,zero,5085984 <___vfprintf_internal_r+0xbdc>
 5085498:	10803fcc 	andi	r2,r2,255
 508549c:	1080201c 	xori	r2,r2,128
 50854a0:	10bfe004 	addi	r2,r2,-128
 50854a4:	00c00c04 	movi	r3,48
 50854a8:	10c13626 	beq	r2,r3,5085984 <___vfprintf_internal_r+0xbdc>
 50854ac:	80ffffc5 	stb	r3,-1(r16)
 50854b0:	d8c02817 	ldw	r3,160(sp)
 50854b4:	80bfffc4 	addi	r2,r16,-1
 50854b8:	1021883a 	mov	r16,r2
 50854bc:	1887c83a 	sub	r3,r3,r2
 50854c0:	d8c02e15 	stw	r3,184(sp)
 50854c4:	d8802e17 	ldw	r2,184(sp)
 50854c8:	d9002917 	ldw	r4,164(sp)
 50854cc:	1100010e 	bge	r2,r4,50854d4 <___vfprintf_internal_r+0x72c>
 50854d0:	2005883a 	mov	r2,r4
 50854d4:	d8802a15 	stw	r2,168(sp)
 50854d8:	d8003215 	stw	zero,200(sp)
 50854dc:	e7003fcc 	andi	fp,fp,255
 50854e0:	e700201c 	xori	fp,fp,128
 50854e4:	e73fe004 	addi	fp,fp,-128
 50854e8:	e0000326 	beq	fp,zero,50854f8 <___vfprintf_internal_r+0x750>
 50854ec:	d8c02a17 	ldw	r3,168(sp)
 50854f0:	18c00044 	addi	r3,r3,1
 50854f4:	d8c02a15 	stw	r3,168(sp)
 50854f8:	90c0008c 	andi	r3,r18,2
 50854fc:	d8c02b15 	stw	r3,172(sp)
 5085500:	18000326 	beq	r3,zero,5085510 <___vfprintf_internal_r+0x768>
 5085504:	d8c02a17 	ldw	r3,168(sp)
 5085508:	18c00084 	addi	r3,r3,2
 508550c:	d8c02a15 	stw	r3,168(sp)
 5085510:	90c0210c 	andi	r3,r18,132
 5085514:	d8c03015 	stw	r3,192(sp)
 5085518:	1801a31e 	bne	r3,zero,5085ba8 <___vfprintf_internal_r+0xe00>
 508551c:	d9003117 	ldw	r4,196(sp)
 5085520:	d8c02a17 	ldw	r3,168(sp)
 5085524:	20e7c83a 	sub	r19,r4,r3
 5085528:	04c19f0e 	bge	zero,r19,5085ba8 <___vfprintf_internal_r+0xe00>
 508552c:	02400404 	movi	r9,16
 5085530:	d8c02017 	ldw	r3,128(sp)
 5085534:	d8801f17 	ldw	r2,124(sp)
 5085538:	4cc50d0e 	bge	r9,r19,5086970 <___vfprintf_internal_r+0x1bc8>
 508553c:	01414274 	movhi	r5,1289
 5085540:	2957c084 	addi	r5,r5,24322
 5085544:	dc403b15 	stw	r17,236(sp)
 5085548:	d9403515 	stw	r5,212(sp)
 508554c:	9823883a 	mov	r17,r19
 5085550:	482d883a 	mov	r22,r9
 5085554:	9027883a 	mov	r19,r18
 5085558:	070001c4 	movi	fp,7
 508555c:	8025883a 	mov	r18,r16
 5085560:	dc002c17 	ldw	r16,176(sp)
 5085564:	00000306 	br	5085574 <___vfprintf_internal_r+0x7cc>
 5085568:	8c7ffc04 	addi	r17,r17,-16
 508556c:	42000204 	addi	r8,r8,8
 5085570:	b440130e 	bge	r22,r17,50855c0 <___vfprintf_internal_r+0x818>
 5085574:	01014274 	movhi	r4,1289
 5085578:	18c00404 	addi	r3,r3,16
 508557c:	10800044 	addi	r2,r2,1
 5085580:	2117c084 	addi	r4,r4,24322
 5085584:	41000015 	stw	r4,0(r8)
 5085588:	45800115 	stw	r22,4(r8)
 508558c:	d8c02015 	stw	r3,128(sp)
 5085590:	d8801f15 	stw	r2,124(sp)
 5085594:	e0bff40e 	bge	fp,r2,5085568 <__alt_data_end+0xfffb7368>
 5085598:	d9801e04 	addi	r6,sp,120
 508559c:	b80b883a 	mov	r5,r23
 50855a0:	8009883a 	mov	r4,r16
 50855a4:	508d8d40 	call	508d8d4 <__sprint_r>
 50855a8:	103f011e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 50855ac:	8c7ffc04 	addi	r17,r17,-16
 50855b0:	d8c02017 	ldw	r3,128(sp)
 50855b4:	d8801f17 	ldw	r2,124(sp)
 50855b8:	da000404 	addi	r8,sp,16
 50855bc:	b47fed16 	blt	r22,r17,5085574 <__alt_data_end+0xfffb7374>
 50855c0:	9021883a 	mov	r16,r18
 50855c4:	9825883a 	mov	r18,r19
 50855c8:	8827883a 	mov	r19,r17
 50855cc:	dc403b17 	ldw	r17,236(sp)
 50855d0:	d9403517 	ldw	r5,212(sp)
 50855d4:	98c7883a 	add	r3,r19,r3
 50855d8:	10800044 	addi	r2,r2,1
 50855dc:	41400015 	stw	r5,0(r8)
 50855e0:	44c00115 	stw	r19,4(r8)
 50855e4:	d8c02015 	stw	r3,128(sp)
 50855e8:	d8801f15 	stw	r2,124(sp)
 50855ec:	010001c4 	movi	r4,7
 50855f0:	2082a316 	blt	r4,r2,5086080 <___vfprintf_internal_r+0x12d8>
 50855f4:	df002787 	ldb	fp,158(sp)
 50855f8:	42000204 	addi	r8,r8,8
 50855fc:	e0000c26 	beq	fp,zero,5085630 <___vfprintf_internal_r+0x888>
 5085600:	d8801f17 	ldw	r2,124(sp)
 5085604:	d9002784 	addi	r4,sp,158
 5085608:	18c00044 	addi	r3,r3,1
 508560c:	10800044 	addi	r2,r2,1
 5085610:	41000015 	stw	r4,0(r8)
 5085614:	01000044 	movi	r4,1
 5085618:	41000115 	stw	r4,4(r8)
 508561c:	d8c02015 	stw	r3,128(sp)
 5085620:	d8801f15 	stw	r2,124(sp)
 5085624:	010001c4 	movi	r4,7
 5085628:	20823c16 	blt	r4,r2,5085f1c <___vfprintf_internal_r+0x1174>
 508562c:	42000204 	addi	r8,r8,8
 5085630:	d8802b17 	ldw	r2,172(sp)
 5085634:	10000c26 	beq	r2,zero,5085668 <___vfprintf_internal_r+0x8c0>
 5085638:	d8801f17 	ldw	r2,124(sp)
 508563c:	d9002704 	addi	r4,sp,156
 5085640:	18c00084 	addi	r3,r3,2
 5085644:	10800044 	addi	r2,r2,1
 5085648:	41000015 	stw	r4,0(r8)
 508564c:	01000084 	movi	r4,2
 5085650:	41000115 	stw	r4,4(r8)
 5085654:	d8c02015 	stw	r3,128(sp)
 5085658:	d8801f15 	stw	r2,124(sp)
 508565c:	010001c4 	movi	r4,7
 5085660:	20823616 	blt	r4,r2,5085f3c <___vfprintf_internal_r+0x1194>
 5085664:	42000204 	addi	r8,r8,8
 5085668:	d9003017 	ldw	r4,192(sp)
 508566c:	00802004 	movi	r2,128
 5085670:	20819926 	beq	r4,r2,5085cd8 <___vfprintf_internal_r+0xf30>
 5085674:	d9402917 	ldw	r5,164(sp)
 5085678:	d8802e17 	ldw	r2,184(sp)
 508567c:	28adc83a 	sub	r22,r5,r2
 5085680:	0580310e 	bge	zero,r22,5085748 <___vfprintf_internal_r+0x9a0>
 5085684:	07000404 	movi	fp,16
 5085688:	d8801f17 	ldw	r2,124(sp)
 508568c:	e584140e 	bge	fp,r22,50866e0 <___vfprintf_internal_r+0x1938>
 5085690:	01414274 	movhi	r5,1289
 5085694:	2957bc84 	addi	r5,r5,24306
 5085698:	dc402915 	stw	r17,164(sp)
 508569c:	d9402b15 	stw	r5,172(sp)
 50856a0:	b023883a 	mov	r17,r22
 50856a4:	04c001c4 	movi	r19,7
 50856a8:	a82d883a 	mov	r22,r21
 50856ac:	902b883a 	mov	r21,r18
 50856b0:	8025883a 	mov	r18,r16
 50856b4:	dc002c17 	ldw	r16,176(sp)
 50856b8:	00000306 	br	50856c8 <___vfprintf_internal_r+0x920>
 50856bc:	8c7ffc04 	addi	r17,r17,-16
 50856c0:	42000204 	addi	r8,r8,8
 50856c4:	e440110e 	bge	fp,r17,508570c <___vfprintf_internal_r+0x964>
 50856c8:	18c00404 	addi	r3,r3,16
 50856cc:	10800044 	addi	r2,r2,1
 50856d0:	45000015 	stw	r20,0(r8)
 50856d4:	47000115 	stw	fp,4(r8)
 50856d8:	d8c02015 	stw	r3,128(sp)
 50856dc:	d8801f15 	stw	r2,124(sp)
 50856e0:	98bff60e 	bge	r19,r2,50856bc <__alt_data_end+0xfffb74bc>
 50856e4:	d9801e04 	addi	r6,sp,120
 50856e8:	b80b883a 	mov	r5,r23
 50856ec:	8009883a 	mov	r4,r16
 50856f0:	508d8d40 	call	508d8d4 <__sprint_r>
 50856f4:	103eae1e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 50856f8:	8c7ffc04 	addi	r17,r17,-16
 50856fc:	d8c02017 	ldw	r3,128(sp)
 5085700:	d8801f17 	ldw	r2,124(sp)
 5085704:	da000404 	addi	r8,sp,16
 5085708:	e47fef16 	blt	fp,r17,50856c8 <__alt_data_end+0xfffb74c8>
 508570c:	9021883a 	mov	r16,r18
 5085710:	a825883a 	mov	r18,r21
 5085714:	b02b883a 	mov	r21,r22
 5085718:	882d883a 	mov	r22,r17
 508571c:	dc402917 	ldw	r17,164(sp)
 5085720:	d9002b17 	ldw	r4,172(sp)
 5085724:	1d87883a 	add	r3,r3,r22
 5085728:	10800044 	addi	r2,r2,1
 508572c:	41000015 	stw	r4,0(r8)
 5085730:	45800115 	stw	r22,4(r8)
 5085734:	d8c02015 	stw	r3,128(sp)
 5085738:	d8801f15 	stw	r2,124(sp)
 508573c:	010001c4 	movi	r4,7
 5085740:	2081ee16 	blt	r4,r2,5085efc <___vfprintf_internal_r+0x1154>
 5085744:	42000204 	addi	r8,r8,8
 5085748:	9080400c 	andi	r2,r18,256
 508574c:	1001181e 	bne	r2,zero,5085bb0 <___vfprintf_internal_r+0xe08>
 5085750:	d9402e17 	ldw	r5,184(sp)
 5085754:	d8801f17 	ldw	r2,124(sp)
 5085758:	44000015 	stw	r16,0(r8)
 508575c:	1947883a 	add	r3,r3,r5
 5085760:	10800044 	addi	r2,r2,1
 5085764:	41400115 	stw	r5,4(r8)
 5085768:	d8c02015 	stw	r3,128(sp)
 508576c:	d8801f15 	stw	r2,124(sp)
 5085770:	010001c4 	movi	r4,7
 5085774:	2081d316 	blt	r4,r2,5085ec4 <___vfprintf_internal_r+0x111c>
 5085778:	42000204 	addi	r8,r8,8
 508577c:	9480010c 	andi	r18,r18,4
 5085780:	90003226 	beq	r18,zero,508584c <___vfprintf_internal_r+0xaa4>
 5085784:	d9403117 	ldw	r5,196(sp)
 5085788:	d8802a17 	ldw	r2,168(sp)
 508578c:	28a1c83a 	sub	r16,r5,r2
 5085790:	04002e0e 	bge	zero,r16,508584c <___vfprintf_internal_r+0xaa4>
 5085794:	04400404 	movi	r17,16
 5085798:	d8801f17 	ldw	r2,124(sp)
 508579c:	8c04a20e 	bge	r17,r16,5086a28 <___vfprintf_internal_r+0x1c80>
 50857a0:	01414274 	movhi	r5,1289
 50857a4:	2957c084 	addi	r5,r5,24322
 50857a8:	d9403515 	stw	r5,212(sp)
 50857ac:	048001c4 	movi	r18,7
 50857b0:	dcc02c17 	ldw	r19,176(sp)
 50857b4:	00000306 	br	50857c4 <___vfprintf_internal_r+0xa1c>
 50857b8:	843ffc04 	addi	r16,r16,-16
 50857bc:	42000204 	addi	r8,r8,8
 50857c0:	8c00130e 	bge	r17,r16,5085810 <___vfprintf_internal_r+0xa68>
 50857c4:	01014274 	movhi	r4,1289
 50857c8:	18c00404 	addi	r3,r3,16
 50857cc:	10800044 	addi	r2,r2,1
 50857d0:	2117c084 	addi	r4,r4,24322
 50857d4:	41000015 	stw	r4,0(r8)
 50857d8:	44400115 	stw	r17,4(r8)
 50857dc:	d8c02015 	stw	r3,128(sp)
 50857e0:	d8801f15 	stw	r2,124(sp)
 50857e4:	90bff40e 	bge	r18,r2,50857b8 <__alt_data_end+0xfffb75b8>
 50857e8:	d9801e04 	addi	r6,sp,120
 50857ec:	b80b883a 	mov	r5,r23
 50857f0:	9809883a 	mov	r4,r19
 50857f4:	508d8d40 	call	508d8d4 <__sprint_r>
 50857f8:	103e6d1e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 50857fc:	843ffc04 	addi	r16,r16,-16
 5085800:	d8c02017 	ldw	r3,128(sp)
 5085804:	d8801f17 	ldw	r2,124(sp)
 5085808:	da000404 	addi	r8,sp,16
 508580c:	8c3fed16 	blt	r17,r16,50857c4 <__alt_data_end+0xfffb75c4>
 5085810:	d9403517 	ldw	r5,212(sp)
 5085814:	1c07883a 	add	r3,r3,r16
 5085818:	10800044 	addi	r2,r2,1
 508581c:	41400015 	stw	r5,0(r8)
 5085820:	44000115 	stw	r16,4(r8)
 5085824:	d8c02015 	stw	r3,128(sp)
 5085828:	d8801f15 	stw	r2,124(sp)
 508582c:	010001c4 	movi	r4,7
 5085830:	2080060e 	bge	r4,r2,508584c <___vfprintf_internal_r+0xaa4>
 5085834:	d9002c17 	ldw	r4,176(sp)
 5085838:	d9801e04 	addi	r6,sp,120
 508583c:	b80b883a 	mov	r5,r23
 5085840:	508d8d40 	call	508d8d4 <__sprint_r>
 5085844:	103e5a1e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 5085848:	d8c02017 	ldw	r3,128(sp)
 508584c:	d8803117 	ldw	r2,196(sp)
 5085850:	d9002a17 	ldw	r4,168(sp)
 5085854:	1100010e 	bge	r2,r4,508585c <___vfprintf_internal_r+0xab4>
 5085858:	2005883a 	mov	r2,r4
 508585c:	d9402f17 	ldw	r5,188(sp)
 5085860:	288b883a 	add	r5,r5,r2
 5085864:	d9402f15 	stw	r5,188(sp)
 5085868:	18019e1e 	bne	r3,zero,5085ee4 <___vfprintf_internal_r+0x113c>
 508586c:	a8800007 	ldb	r2,0(r21)
 5085870:	d8001f15 	stw	zero,124(sp)
 5085874:	da000404 	addi	r8,sp,16
 5085878:	103d851e 	bne	r2,zero,5084e90 <__alt_data_end+0xfffb6c90>
 508587c:	a821883a 	mov	r16,r21
 5085880:	003d9b06 	br	5084ef0 <__alt_data_end+0xfffb6cf0>
 5085884:	18c03fcc 	andi	r3,r3,255
 5085888:	1805c11e 	bne	r3,zero,5086f90 <___vfprintf_internal_r+0x21e8>
 508588c:	94800414 	ori	r18,r18,16
 5085890:	9080080c 	andi	r2,r18,32
 5085894:	10020c26 	beq	r2,zero,50860c8 <___vfprintf_internal_r+0x1320>
 5085898:	d8802d17 	ldw	r2,180(sp)
 508589c:	d9002917 	ldw	r4,164(sp)
 50858a0:	d8002785 	stb	zero,158(sp)
 50858a4:	10c00204 	addi	r3,r2,8
 50858a8:	14c00017 	ldw	r19,0(r2)
 50858ac:	15800117 	ldw	r22,4(r2)
 50858b0:	20040f16 	blt	r4,zero,50868f0 <___vfprintf_internal_r+0x1b48>
 50858b4:	013fdfc4 	movi	r4,-129
 50858b8:	9d84b03a 	or	r2,r19,r22
 50858bc:	d8c02d15 	stw	r3,180(sp)
 50858c0:	9124703a 	and	r18,r18,r4
 50858c4:	0039883a 	mov	fp,zero
 50858c8:	103e891e 	bne	r2,zero,50852f0 <__alt_data_end+0xfffb70f0>
 50858cc:	d9002917 	ldw	r4,164(sp)
 50858d0:	2002c11e 	bne	r4,zero,50863d8 <___vfprintf_internal_r+0x1630>
 50858d4:	d8002915 	stw	zero,164(sp)
 50858d8:	d8002e15 	stw	zero,184(sp)
 50858dc:	dc001e04 	addi	r16,sp,120
 50858e0:	003ef806 	br	50854c4 <__alt_data_end+0xfffb72c4>
 50858e4:	18c03fcc 	andi	r3,r3,255
 50858e8:	18059d1e 	bne	r3,zero,5086f60 <___vfprintf_internal_r+0x21b8>
 50858ec:	01414274 	movhi	r5,1289
 50858f0:	2957a804 	addi	r5,r5,24224
 50858f4:	d9403915 	stw	r5,228(sp)
 50858f8:	9080080c 	andi	r2,r18,32
 50858fc:	10005226 	beq	r2,zero,5085a48 <___vfprintf_internal_r+0xca0>
 5085900:	d8802d17 	ldw	r2,180(sp)
 5085904:	14c00017 	ldw	r19,0(r2)
 5085908:	15800117 	ldw	r22,4(r2)
 508590c:	10800204 	addi	r2,r2,8
 5085910:	d8802d15 	stw	r2,180(sp)
 5085914:	9080004c 	andi	r2,r18,1
 5085918:	10019026 	beq	r2,zero,5085f5c <___vfprintf_internal_r+0x11b4>
 508591c:	9d84b03a 	or	r2,r19,r22
 5085920:	10036926 	beq	r2,zero,50866c8 <___vfprintf_internal_r+0x1920>
 5085924:	d8c02917 	ldw	r3,164(sp)
 5085928:	00800c04 	movi	r2,48
 508592c:	d8802705 	stb	r2,156(sp)
 5085930:	dc402745 	stb	r17,157(sp)
 5085934:	d8002785 	stb	zero,158(sp)
 5085938:	90800094 	ori	r2,r18,2
 508593c:	18045d16 	blt	r3,zero,5086ab4 <___vfprintf_internal_r+0x1d0c>
 5085940:	00bfdfc4 	movi	r2,-129
 5085944:	90a4703a 	and	r18,r18,r2
 5085948:	94800094 	ori	r18,r18,2
 508594c:	0039883a 	mov	fp,zero
 5085950:	d9003917 	ldw	r4,228(sp)
 5085954:	dc001e04 	addi	r16,sp,120
 5085958:	988003cc 	andi	r2,r19,15
 508595c:	b006973a 	slli	r3,r22,28
 5085960:	2085883a 	add	r2,r4,r2
 5085964:	9826d13a 	srli	r19,r19,4
 5085968:	10800003 	ldbu	r2,0(r2)
 508596c:	b02cd13a 	srli	r22,r22,4
 5085970:	843fffc4 	addi	r16,r16,-1
 5085974:	1ce6b03a 	or	r19,r3,r19
 5085978:	80800005 	stb	r2,0(r16)
 508597c:	9d84b03a 	or	r2,r19,r22
 5085980:	103ff51e 	bne	r2,zero,5085958 <__alt_data_end+0xfffb7758>
 5085984:	d8c02817 	ldw	r3,160(sp)
 5085988:	1c07c83a 	sub	r3,r3,r16
 508598c:	d8c02e15 	stw	r3,184(sp)
 5085990:	003ecc06 	br	50854c4 <__alt_data_end+0xfffb72c4>
 5085994:	18c03fcc 	andi	r3,r3,255
 5085998:	183e9f26 	beq	r3,zero,5085418 <__alt_data_end+0xfffb7218>
 508599c:	d9c02785 	stb	r7,158(sp)
 50859a0:	003e9d06 	br	5085418 <__alt_data_end+0xfffb7218>
 50859a4:	00c00044 	movi	r3,1
 50859a8:	01c00ac4 	movi	r7,43
 50859ac:	ac400007 	ldb	r17,0(r21)
 50859b0:	003d5e06 	br	5084f2c <__alt_data_end+0xfffb6d2c>
 50859b4:	94800814 	ori	r18,r18,32
 50859b8:	ac400007 	ldb	r17,0(r21)
 50859bc:	003d5b06 	br	5084f2c <__alt_data_end+0xfffb6d2c>
 50859c0:	d8c02d17 	ldw	r3,180(sp)
 50859c4:	d8002785 	stb	zero,158(sp)
 50859c8:	1c000017 	ldw	r16,0(r3)
 50859cc:	1cc00104 	addi	r19,r3,4
 50859d0:	80041926 	beq	r16,zero,5086a38 <___vfprintf_internal_r+0x1c90>
 50859d4:	d9002917 	ldw	r4,164(sp)
 50859d8:	2003d016 	blt	r4,zero,508691c <___vfprintf_internal_r+0x1b74>
 50859dc:	200d883a 	mov	r6,r4
 50859e0:	000b883a 	mov	r5,zero
 50859e4:	8009883a 	mov	r4,r16
 50859e8:	da003d15 	stw	r8,244(sp)
 50859ec:	508a6dc0 	call	508a6dc <memchr>
 50859f0:	da003d17 	ldw	r8,244(sp)
 50859f4:	10045426 	beq	r2,zero,5086b48 <___vfprintf_internal_r+0x1da0>
 50859f8:	1405c83a 	sub	r2,r2,r16
 50859fc:	d8802e15 	stw	r2,184(sp)
 5085a00:	1003cc16 	blt	r2,zero,5086934 <___vfprintf_internal_r+0x1b8c>
 5085a04:	df002783 	ldbu	fp,158(sp)
 5085a08:	d8802a15 	stw	r2,168(sp)
 5085a0c:	dcc02d15 	stw	r19,180(sp)
 5085a10:	d8002915 	stw	zero,164(sp)
 5085a14:	d8003215 	stw	zero,200(sp)
 5085a18:	003eb006 	br	50854dc <__alt_data_end+0xfffb72dc>
 5085a1c:	18c03fcc 	andi	r3,r3,255
 5085a20:	183f9b26 	beq	r3,zero,5085890 <__alt_data_end+0xfffb7690>
 5085a24:	d9c02785 	stb	r7,158(sp)
 5085a28:	003f9906 	br	5085890 <__alt_data_end+0xfffb7690>
 5085a2c:	18c03fcc 	andi	r3,r3,255
 5085a30:	1805551e 	bne	r3,zero,5086f88 <___vfprintf_internal_r+0x21e0>
 5085a34:	01414274 	movhi	r5,1289
 5085a38:	2957ad04 	addi	r5,r5,24244
 5085a3c:	d9403915 	stw	r5,228(sp)
 5085a40:	9080080c 	andi	r2,r18,32
 5085a44:	103fae1e 	bne	r2,zero,5085900 <__alt_data_end+0xfffb7700>
 5085a48:	9080040c 	andi	r2,r18,16
 5085a4c:	1002de26 	beq	r2,zero,50865c8 <___vfprintf_internal_r+0x1820>
 5085a50:	d8c02d17 	ldw	r3,180(sp)
 5085a54:	002d883a 	mov	r22,zero
 5085a58:	1cc00017 	ldw	r19,0(r3)
 5085a5c:	18c00104 	addi	r3,r3,4
 5085a60:	d8c02d15 	stw	r3,180(sp)
 5085a64:	003fab06 	br	5085914 <__alt_data_end+0xfffb7714>
 5085a68:	38803fcc 	andi	r2,r7,255
 5085a6c:	1080201c 	xori	r2,r2,128
 5085a70:	10bfe004 	addi	r2,r2,-128
 5085a74:	1002d21e 	bne	r2,zero,50865c0 <___vfprintf_internal_r+0x1818>
 5085a78:	00c00044 	movi	r3,1
 5085a7c:	01c00804 	movi	r7,32
 5085a80:	ac400007 	ldb	r17,0(r21)
 5085a84:	003d2906 	br	5084f2c <__alt_data_end+0xfffb6d2c>
 5085a88:	94800054 	ori	r18,r18,1
 5085a8c:	ac400007 	ldb	r17,0(r21)
 5085a90:	003d2606 	br	5084f2c <__alt_data_end+0xfffb6d2c>
 5085a94:	18c03fcc 	andi	r3,r3,255
 5085a98:	183e0526 	beq	r3,zero,50852b0 <__alt_data_end+0xfffb70b0>
 5085a9c:	d9c02785 	stb	r7,158(sp)
 5085aa0:	003e0306 	br	50852b0 <__alt_data_end+0xfffb70b0>
 5085aa4:	94801014 	ori	r18,r18,64
 5085aa8:	ac400007 	ldb	r17,0(r21)
 5085aac:	003d1f06 	br	5084f2c <__alt_data_end+0xfffb6d2c>
 5085ab0:	ac400007 	ldb	r17,0(r21)
 5085ab4:	8a438726 	beq	r17,r9,50868d4 <___vfprintf_internal_r+0x1b2c>
 5085ab8:	94800414 	ori	r18,r18,16
 5085abc:	003d1b06 	br	5084f2c <__alt_data_end+0xfffb6d2c>
 5085ac0:	18c03fcc 	andi	r3,r3,255
 5085ac4:	1805341e 	bne	r3,zero,5086f98 <___vfprintf_internal_r+0x21f0>
 5085ac8:	9080080c 	andi	r2,r18,32
 5085acc:	1002cd26 	beq	r2,zero,5086604 <___vfprintf_internal_r+0x185c>
 5085ad0:	d9402d17 	ldw	r5,180(sp)
 5085ad4:	d9002f17 	ldw	r4,188(sp)
 5085ad8:	28800017 	ldw	r2,0(r5)
 5085adc:	2007d7fa 	srai	r3,r4,31
 5085ae0:	29400104 	addi	r5,r5,4
 5085ae4:	d9402d15 	stw	r5,180(sp)
 5085ae8:	11000015 	stw	r4,0(r2)
 5085aec:	10c00115 	stw	r3,4(r2)
 5085af0:	003ce506 	br	5084e88 <__alt_data_end+0xfffb6c88>
 5085af4:	d8c02d17 	ldw	r3,180(sp)
 5085af8:	d9002d17 	ldw	r4,180(sp)
 5085afc:	d8002785 	stb	zero,158(sp)
 5085b00:	18800017 	ldw	r2,0(r3)
 5085b04:	21000104 	addi	r4,r4,4
 5085b08:	00c00044 	movi	r3,1
 5085b0c:	d8c02a15 	stw	r3,168(sp)
 5085b10:	d8801405 	stb	r2,80(sp)
 5085b14:	d9002d15 	stw	r4,180(sp)
 5085b18:	d8c02e15 	stw	r3,184(sp)
 5085b1c:	d8002915 	stw	zero,164(sp)
 5085b20:	d8003215 	stw	zero,200(sp)
 5085b24:	dc001404 	addi	r16,sp,80
 5085b28:	0039883a 	mov	fp,zero
 5085b2c:	003e7206 	br	50854f8 <__alt_data_end+0xfffb72f8>
 5085b30:	01014274 	movhi	r4,1289
 5085b34:	2117ad04 	addi	r4,r4,24244
 5085b38:	0039883a 	mov	fp,zero
 5085b3c:	d9003915 	stw	r4,228(sp)
 5085b40:	04401e04 	movi	r17,120
 5085b44:	003f8206 	br	5085950 <__alt_data_end+0xfffb7750>
 5085b48:	18c03fcc 	andi	r3,r3,255
 5085b4c:	1805061e 	bne	r3,zero,5086f68 <___vfprintf_internal_r+0x21c0>
 5085b50:	883d9126 	beq	r17,zero,5085198 <__alt_data_end+0xfffb6f98>
 5085b54:	00c00044 	movi	r3,1
 5085b58:	d8c02a15 	stw	r3,168(sp)
 5085b5c:	dc401405 	stb	r17,80(sp)
 5085b60:	d8002785 	stb	zero,158(sp)
 5085b64:	003fec06 	br	5085b18 <__alt_data_end+0xfffb7918>
 5085b68:	01414274 	movhi	r5,1289
 5085b6c:	2957ad04 	addi	r5,r5,24244
 5085b70:	d9403915 	stw	r5,228(sp)
 5085b74:	d8c02d15 	stw	r3,180(sp)
 5085b78:	1025883a 	mov	r18,r2
 5085b7c:	04401e04 	movi	r17,120
 5085b80:	9d84b03a 	or	r2,r19,r22
 5085b84:	1000fc1e 	bne	r2,zero,5085f78 <___vfprintf_internal_r+0x11d0>
 5085b88:	0039883a 	mov	fp,zero
 5085b8c:	00800084 	movi	r2,2
 5085b90:	10803fcc 	andi	r2,r2,255
 5085b94:	00c00044 	movi	r3,1
 5085b98:	10c20f26 	beq	r2,r3,50863d8 <___vfprintf_internal_r+0x1630>
 5085b9c:	00c00084 	movi	r3,2
 5085ba0:	10fd6326 	beq	r2,r3,5085130 <__alt_data_end+0xfffb6f30>
 5085ba4:	003e2d06 	br	508545c <__alt_data_end+0xfffb725c>
 5085ba8:	d8c02017 	ldw	r3,128(sp)
 5085bac:	003e9306 	br	50855fc <__alt_data_end+0xfffb73fc>
 5085bb0:	00801944 	movi	r2,101
 5085bb4:	14407e0e 	bge	r2,r17,5085db0 <___vfprintf_internal_r+0x1008>
 5085bb8:	d9003617 	ldw	r4,216(sp)
 5085bbc:	d9403817 	ldw	r5,224(sp)
 5085bc0:	000d883a 	mov	r6,zero
 5085bc4:	000f883a 	mov	r7,zero
 5085bc8:	d8c03c15 	stw	r3,240(sp)
 5085bcc:	da003d15 	stw	r8,244(sp)
 5085bd0:	50913980 	call	5091398 <__eqdf2>
 5085bd4:	d8c03c17 	ldw	r3,240(sp)
 5085bd8:	da003d17 	ldw	r8,244(sp)
 5085bdc:	1000f71e 	bne	r2,zero,5085fbc <___vfprintf_internal_r+0x1214>
 5085be0:	d8801f17 	ldw	r2,124(sp)
 5085be4:	01014274 	movhi	r4,1289
 5085be8:	2117b404 	addi	r4,r4,24272
 5085bec:	18c00044 	addi	r3,r3,1
 5085bf0:	10800044 	addi	r2,r2,1
 5085bf4:	41000015 	stw	r4,0(r8)
 5085bf8:	01000044 	movi	r4,1
 5085bfc:	41000115 	stw	r4,4(r8)
 5085c00:	d8c02015 	stw	r3,128(sp)
 5085c04:	d8801f15 	stw	r2,124(sp)
 5085c08:	010001c4 	movi	r4,7
 5085c0c:	2082b816 	blt	r4,r2,50866f0 <___vfprintf_internal_r+0x1948>
 5085c10:	42000204 	addi	r8,r8,8
 5085c14:	d8802617 	ldw	r2,152(sp)
 5085c18:	d9403317 	ldw	r5,204(sp)
 5085c1c:	11400216 	blt	r2,r5,5085c28 <___vfprintf_internal_r+0xe80>
 5085c20:	9080004c 	andi	r2,r18,1
 5085c24:	103ed526 	beq	r2,zero,508577c <__alt_data_end+0xfffb757c>
 5085c28:	d8803717 	ldw	r2,220(sp)
 5085c2c:	d9003417 	ldw	r4,208(sp)
 5085c30:	d9403717 	ldw	r5,220(sp)
 5085c34:	1887883a 	add	r3,r3,r2
 5085c38:	d8801f17 	ldw	r2,124(sp)
 5085c3c:	41000015 	stw	r4,0(r8)
 5085c40:	41400115 	stw	r5,4(r8)
 5085c44:	10800044 	addi	r2,r2,1
 5085c48:	d8c02015 	stw	r3,128(sp)
 5085c4c:	d8801f15 	stw	r2,124(sp)
 5085c50:	010001c4 	movi	r4,7
 5085c54:	20832916 	blt	r4,r2,50868fc <___vfprintf_internal_r+0x1b54>
 5085c58:	42000204 	addi	r8,r8,8
 5085c5c:	d8803317 	ldw	r2,204(sp)
 5085c60:	143fffc4 	addi	r16,r2,-1
 5085c64:	043ec50e 	bge	zero,r16,508577c <__alt_data_end+0xfffb757c>
 5085c68:	04400404 	movi	r17,16
 5085c6c:	d8801f17 	ldw	r2,124(sp)
 5085c70:	8c00880e 	bge	r17,r16,5085e94 <___vfprintf_internal_r+0x10ec>
 5085c74:	01414274 	movhi	r5,1289
 5085c78:	2957bc84 	addi	r5,r5,24306
 5085c7c:	d9402b15 	stw	r5,172(sp)
 5085c80:	058001c4 	movi	r22,7
 5085c84:	dcc02c17 	ldw	r19,176(sp)
 5085c88:	00000306 	br	5085c98 <___vfprintf_internal_r+0xef0>
 5085c8c:	42000204 	addi	r8,r8,8
 5085c90:	843ffc04 	addi	r16,r16,-16
 5085c94:	8c00820e 	bge	r17,r16,5085ea0 <___vfprintf_internal_r+0x10f8>
 5085c98:	18c00404 	addi	r3,r3,16
 5085c9c:	10800044 	addi	r2,r2,1
 5085ca0:	45000015 	stw	r20,0(r8)
 5085ca4:	44400115 	stw	r17,4(r8)
 5085ca8:	d8c02015 	stw	r3,128(sp)
 5085cac:	d8801f15 	stw	r2,124(sp)
 5085cb0:	b0bff60e 	bge	r22,r2,5085c8c <__alt_data_end+0xfffb7a8c>
 5085cb4:	d9801e04 	addi	r6,sp,120
 5085cb8:	b80b883a 	mov	r5,r23
 5085cbc:	9809883a 	mov	r4,r19
 5085cc0:	508d8d40 	call	508d8d4 <__sprint_r>
 5085cc4:	103d3a1e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 5085cc8:	d8c02017 	ldw	r3,128(sp)
 5085ccc:	d8801f17 	ldw	r2,124(sp)
 5085cd0:	da000404 	addi	r8,sp,16
 5085cd4:	003fee06 	br	5085c90 <__alt_data_end+0xfffb7a90>
 5085cd8:	d9403117 	ldw	r5,196(sp)
 5085cdc:	d8802a17 	ldw	r2,168(sp)
 5085ce0:	28adc83a 	sub	r22,r5,r2
 5085ce4:	05be630e 	bge	zero,r22,5085674 <__alt_data_end+0xfffb7474>
 5085ce8:	07000404 	movi	fp,16
 5085cec:	d8801f17 	ldw	r2,124(sp)
 5085cf0:	e5838f0e 	bge	fp,r22,5086b30 <___vfprintf_internal_r+0x1d88>
 5085cf4:	01414274 	movhi	r5,1289
 5085cf8:	2957bc84 	addi	r5,r5,24306
 5085cfc:	dc403015 	stw	r17,192(sp)
 5085d00:	d9402b15 	stw	r5,172(sp)
 5085d04:	b023883a 	mov	r17,r22
 5085d08:	04c001c4 	movi	r19,7
 5085d0c:	a82d883a 	mov	r22,r21
 5085d10:	902b883a 	mov	r21,r18
 5085d14:	8025883a 	mov	r18,r16
 5085d18:	dc002c17 	ldw	r16,176(sp)
 5085d1c:	00000306 	br	5085d2c <___vfprintf_internal_r+0xf84>
 5085d20:	8c7ffc04 	addi	r17,r17,-16
 5085d24:	42000204 	addi	r8,r8,8
 5085d28:	e440110e 	bge	fp,r17,5085d70 <___vfprintf_internal_r+0xfc8>
 5085d2c:	18c00404 	addi	r3,r3,16
 5085d30:	10800044 	addi	r2,r2,1
 5085d34:	45000015 	stw	r20,0(r8)
 5085d38:	47000115 	stw	fp,4(r8)
 5085d3c:	d8c02015 	stw	r3,128(sp)
 5085d40:	d8801f15 	stw	r2,124(sp)
 5085d44:	98bff60e 	bge	r19,r2,5085d20 <__alt_data_end+0xfffb7b20>
 5085d48:	d9801e04 	addi	r6,sp,120
 5085d4c:	b80b883a 	mov	r5,r23
 5085d50:	8009883a 	mov	r4,r16
 5085d54:	508d8d40 	call	508d8d4 <__sprint_r>
 5085d58:	103d151e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 5085d5c:	8c7ffc04 	addi	r17,r17,-16
 5085d60:	d8c02017 	ldw	r3,128(sp)
 5085d64:	d8801f17 	ldw	r2,124(sp)
 5085d68:	da000404 	addi	r8,sp,16
 5085d6c:	e47fef16 	blt	fp,r17,5085d2c <__alt_data_end+0xfffb7b2c>
 5085d70:	9021883a 	mov	r16,r18
 5085d74:	a825883a 	mov	r18,r21
 5085d78:	b02b883a 	mov	r21,r22
 5085d7c:	882d883a 	mov	r22,r17
 5085d80:	dc403017 	ldw	r17,192(sp)
 5085d84:	d9002b17 	ldw	r4,172(sp)
 5085d88:	1d87883a 	add	r3,r3,r22
 5085d8c:	10800044 	addi	r2,r2,1
 5085d90:	41000015 	stw	r4,0(r8)
 5085d94:	45800115 	stw	r22,4(r8)
 5085d98:	d8c02015 	stw	r3,128(sp)
 5085d9c:	d8801f15 	stw	r2,124(sp)
 5085da0:	010001c4 	movi	r4,7
 5085da4:	20818e16 	blt	r4,r2,50863e0 <___vfprintf_internal_r+0x1638>
 5085da8:	42000204 	addi	r8,r8,8
 5085dac:	003e3106 	br	5085674 <__alt_data_end+0xfffb7474>
 5085db0:	d9403317 	ldw	r5,204(sp)
 5085db4:	00800044 	movi	r2,1
 5085db8:	18c00044 	addi	r3,r3,1
 5085dbc:	1141530e 	bge	r2,r5,508630c <___vfprintf_internal_r+0x1564>
 5085dc0:	dc401f17 	ldw	r17,124(sp)
 5085dc4:	00800044 	movi	r2,1
 5085dc8:	40800115 	stw	r2,4(r8)
 5085dcc:	8c400044 	addi	r17,r17,1
 5085dd0:	44000015 	stw	r16,0(r8)
 5085dd4:	d8c02015 	stw	r3,128(sp)
 5085dd8:	dc401f15 	stw	r17,124(sp)
 5085ddc:	008001c4 	movi	r2,7
 5085de0:	14416b16 	blt	r2,r17,5086390 <___vfprintf_internal_r+0x15e8>
 5085de4:	42000204 	addi	r8,r8,8
 5085de8:	d8803717 	ldw	r2,220(sp)
 5085dec:	d9003417 	ldw	r4,208(sp)
 5085df0:	8c400044 	addi	r17,r17,1
 5085df4:	10c7883a 	add	r3,r2,r3
 5085df8:	40800115 	stw	r2,4(r8)
 5085dfc:	41000015 	stw	r4,0(r8)
 5085e00:	d8c02015 	stw	r3,128(sp)
 5085e04:	dc401f15 	stw	r17,124(sp)
 5085e08:	008001c4 	movi	r2,7
 5085e0c:	14416916 	blt	r2,r17,50863b4 <___vfprintf_internal_r+0x160c>
 5085e10:	45800204 	addi	r22,r8,8
 5085e14:	d9003617 	ldw	r4,216(sp)
 5085e18:	d9403817 	ldw	r5,224(sp)
 5085e1c:	000d883a 	mov	r6,zero
 5085e20:	000f883a 	mov	r7,zero
 5085e24:	d8c03c15 	stw	r3,240(sp)
 5085e28:	50913980 	call	5091398 <__eqdf2>
 5085e2c:	d8c03c17 	ldw	r3,240(sp)
 5085e30:	1000bc26 	beq	r2,zero,5086124 <___vfprintf_internal_r+0x137c>
 5085e34:	d9403317 	ldw	r5,204(sp)
 5085e38:	84000044 	addi	r16,r16,1
 5085e3c:	8c400044 	addi	r17,r17,1
 5085e40:	28bfffc4 	addi	r2,r5,-1
 5085e44:	1887883a 	add	r3,r3,r2
 5085e48:	b0800115 	stw	r2,4(r22)
 5085e4c:	b4000015 	stw	r16,0(r22)
 5085e50:	d8c02015 	stw	r3,128(sp)
 5085e54:	dc401f15 	stw	r17,124(sp)
 5085e58:	008001c4 	movi	r2,7
 5085e5c:	14414316 	blt	r2,r17,508636c <___vfprintf_internal_r+0x15c4>
 5085e60:	b5800204 	addi	r22,r22,8
 5085e64:	d9003a17 	ldw	r4,232(sp)
 5085e68:	df0022c4 	addi	fp,sp,139
 5085e6c:	8c400044 	addi	r17,r17,1
 5085e70:	20c7883a 	add	r3,r4,r3
 5085e74:	b7000015 	stw	fp,0(r22)
 5085e78:	b1000115 	stw	r4,4(r22)
 5085e7c:	d8c02015 	stw	r3,128(sp)
 5085e80:	dc401f15 	stw	r17,124(sp)
 5085e84:	008001c4 	movi	r2,7
 5085e88:	14400e16 	blt	r2,r17,5085ec4 <___vfprintf_internal_r+0x111c>
 5085e8c:	b2000204 	addi	r8,r22,8
 5085e90:	003e3a06 	br	508577c <__alt_data_end+0xfffb757c>
 5085e94:	01014274 	movhi	r4,1289
 5085e98:	2117bc84 	addi	r4,r4,24306
 5085e9c:	d9002b15 	stw	r4,172(sp)
 5085ea0:	d9002b17 	ldw	r4,172(sp)
 5085ea4:	1c07883a 	add	r3,r3,r16
 5085ea8:	44000115 	stw	r16,4(r8)
 5085eac:	41000015 	stw	r4,0(r8)
 5085eb0:	10800044 	addi	r2,r2,1
 5085eb4:	d8c02015 	stw	r3,128(sp)
 5085eb8:	d8801f15 	stw	r2,124(sp)
 5085ebc:	010001c4 	movi	r4,7
 5085ec0:	20be2d0e 	bge	r4,r2,5085778 <__alt_data_end+0xfffb7578>
 5085ec4:	d9002c17 	ldw	r4,176(sp)
 5085ec8:	d9801e04 	addi	r6,sp,120
 5085ecc:	b80b883a 	mov	r5,r23
 5085ed0:	508d8d40 	call	508d8d4 <__sprint_r>
 5085ed4:	103cb61e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 5085ed8:	d8c02017 	ldw	r3,128(sp)
 5085edc:	da000404 	addi	r8,sp,16
 5085ee0:	003e2606 	br	508577c <__alt_data_end+0xfffb757c>
 5085ee4:	d9002c17 	ldw	r4,176(sp)
 5085ee8:	d9801e04 	addi	r6,sp,120
 5085eec:	b80b883a 	mov	r5,r23
 5085ef0:	508d8d40 	call	508d8d4 <__sprint_r>
 5085ef4:	103e5d26 	beq	r2,zero,508586c <__alt_data_end+0xfffb766c>
 5085ef8:	003cad06 	br	50851b0 <__alt_data_end+0xfffb6fb0>
 5085efc:	d9002c17 	ldw	r4,176(sp)
 5085f00:	d9801e04 	addi	r6,sp,120
 5085f04:	b80b883a 	mov	r5,r23
 5085f08:	508d8d40 	call	508d8d4 <__sprint_r>
 5085f0c:	103ca81e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 5085f10:	d8c02017 	ldw	r3,128(sp)
 5085f14:	da000404 	addi	r8,sp,16
 5085f18:	003e0b06 	br	5085748 <__alt_data_end+0xfffb7548>
 5085f1c:	d9002c17 	ldw	r4,176(sp)
 5085f20:	d9801e04 	addi	r6,sp,120
 5085f24:	b80b883a 	mov	r5,r23
 5085f28:	508d8d40 	call	508d8d4 <__sprint_r>
 5085f2c:	103ca01e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 5085f30:	d8c02017 	ldw	r3,128(sp)
 5085f34:	da000404 	addi	r8,sp,16
 5085f38:	003dbd06 	br	5085630 <__alt_data_end+0xfffb7430>
 5085f3c:	d9002c17 	ldw	r4,176(sp)
 5085f40:	d9801e04 	addi	r6,sp,120
 5085f44:	b80b883a 	mov	r5,r23
 5085f48:	508d8d40 	call	508d8d4 <__sprint_r>
 5085f4c:	103c981e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 5085f50:	d8c02017 	ldw	r3,128(sp)
 5085f54:	da000404 	addi	r8,sp,16
 5085f58:	003dc306 	br	5085668 <__alt_data_end+0xfffb7468>
 5085f5c:	d8802917 	ldw	r2,164(sp)
 5085f60:	d8002785 	stb	zero,158(sp)
 5085f64:	103f0616 	blt	r2,zero,5085b80 <__alt_data_end+0xfffb7980>
 5085f68:	00ffdfc4 	movi	r3,-129
 5085f6c:	9d84b03a 	or	r2,r19,r22
 5085f70:	90e4703a 	and	r18,r18,r3
 5085f74:	103c6b26 	beq	r2,zero,5085124 <__alt_data_end+0xfffb6f24>
 5085f78:	0039883a 	mov	fp,zero
 5085f7c:	003e7406 	br	5085950 <__alt_data_end+0xfffb7750>
 5085f80:	9080040c 	andi	r2,r18,16
 5085f84:	1001b326 	beq	r2,zero,5086654 <___vfprintf_internal_r+0x18ac>
 5085f88:	d9002d17 	ldw	r4,180(sp)
 5085f8c:	d9402917 	ldw	r5,164(sp)
 5085f90:	d8002785 	stb	zero,158(sp)
 5085f94:	20800104 	addi	r2,r4,4
 5085f98:	24c00017 	ldw	r19,0(r4)
 5085f9c:	002d883a 	mov	r22,zero
 5085fa0:	2801b516 	blt	r5,zero,5086678 <___vfprintf_internal_r+0x18d0>
 5085fa4:	00ffdfc4 	movi	r3,-129
 5085fa8:	d8802d15 	stw	r2,180(sp)
 5085fac:	90e4703a 	and	r18,r18,r3
 5085fb0:	983d2726 	beq	r19,zero,5085450 <__alt_data_end+0xfffb7250>
 5085fb4:	0039883a 	mov	fp,zero
 5085fb8:	003d2a06 	br	5085464 <__alt_data_end+0xfffb7264>
 5085fbc:	dc402617 	ldw	r17,152(sp)
 5085fc0:	0441d30e 	bge	zero,r17,5086710 <___vfprintf_internal_r+0x1968>
 5085fc4:	dc403217 	ldw	r17,200(sp)
 5085fc8:	d8803317 	ldw	r2,204(sp)
 5085fcc:	1440010e 	bge	r2,r17,5085fd4 <___vfprintf_internal_r+0x122c>
 5085fd0:	1023883a 	mov	r17,r2
 5085fd4:	04400a0e 	bge	zero,r17,5086000 <___vfprintf_internal_r+0x1258>
 5085fd8:	d8801f17 	ldw	r2,124(sp)
 5085fdc:	1c47883a 	add	r3,r3,r17
 5085fe0:	44000015 	stw	r16,0(r8)
 5085fe4:	10800044 	addi	r2,r2,1
 5085fe8:	44400115 	stw	r17,4(r8)
 5085fec:	d8c02015 	stw	r3,128(sp)
 5085ff0:	d8801f15 	stw	r2,124(sp)
 5085ff4:	010001c4 	movi	r4,7
 5085ff8:	20826516 	blt	r4,r2,5086990 <___vfprintf_internal_r+0x1be8>
 5085ffc:	42000204 	addi	r8,r8,8
 5086000:	88026116 	blt	r17,zero,5086988 <___vfprintf_internal_r+0x1be0>
 5086004:	d9003217 	ldw	r4,200(sp)
 5086008:	2463c83a 	sub	r17,r4,r17
 508600c:	04407b0e 	bge	zero,r17,50861fc <___vfprintf_internal_r+0x1454>
 5086010:	05800404 	movi	r22,16
 5086014:	d8801f17 	ldw	r2,124(sp)
 5086018:	b4419d0e 	bge	r22,r17,5086690 <___vfprintf_internal_r+0x18e8>
 508601c:	01014274 	movhi	r4,1289
 5086020:	2117bc84 	addi	r4,r4,24306
 5086024:	d9002b15 	stw	r4,172(sp)
 5086028:	070001c4 	movi	fp,7
 508602c:	dcc02c17 	ldw	r19,176(sp)
 5086030:	00000306 	br	5086040 <___vfprintf_internal_r+0x1298>
 5086034:	42000204 	addi	r8,r8,8
 5086038:	8c7ffc04 	addi	r17,r17,-16
 508603c:	b441970e 	bge	r22,r17,508669c <___vfprintf_internal_r+0x18f4>
 5086040:	18c00404 	addi	r3,r3,16
 5086044:	10800044 	addi	r2,r2,1
 5086048:	45000015 	stw	r20,0(r8)
 508604c:	45800115 	stw	r22,4(r8)
 5086050:	d8c02015 	stw	r3,128(sp)
 5086054:	d8801f15 	stw	r2,124(sp)
 5086058:	e0bff60e 	bge	fp,r2,5086034 <__alt_data_end+0xfffb7e34>
 508605c:	d9801e04 	addi	r6,sp,120
 5086060:	b80b883a 	mov	r5,r23
 5086064:	9809883a 	mov	r4,r19
 5086068:	508d8d40 	call	508d8d4 <__sprint_r>
 508606c:	103c501e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 5086070:	d8c02017 	ldw	r3,128(sp)
 5086074:	d8801f17 	ldw	r2,124(sp)
 5086078:	da000404 	addi	r8,sp,16
 508607c:	003fee06 	br	5086038 <__alt_data_end+0xfffb7e38>
 5086080:	d9002c17 	ldw	r4,176(sp)
 5086084:	d9801e04 	addi	r6,sp,120
 5086088:	b80b883a 	mov	r5,r23
 508608c:	508d8d40 	call	508d8d4 <__sprint_r>
 5086090:	103c471e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 5086094:	d8c02017 	ldw	r3,128(sp)
 5086098:	df002787 	ldb	fp,158(sp)
 508609c:	da000404 	addi	r8,sp,16
 50860a0:	003d5606 	br	50855fc <__alt_data_end+0xfffb73fc>
 50860a4:	9080040c 	andi	r2,r18,16
 50860a8:	10016126 	beq	r2,zero,5086630 <___vfprintf_internal_r+0x1888>
 50860ac:	d8802d17 	ldw	r2,180(sp)
 50860b0:	14c00017 	ldw	r19,0(r2)
 50860b4:	10800104 	addi	r2,r2,4
 50860b8:	d8802d15 	stw	r2,180(sp)
 50860bc:	982dd7fa 	srai	r22,r19,31
 50860c0:	b005883a 	mov	r2,r22
 50860c4:	003c8206 	br	50852d0 <__alt_data_end+0xfffb70d0>
 50860c8:	9080040c 	andi	r2,r18,16
 50860cc:	10003526 	beq	r2,zero,50861a4 <___vfprintf_internal_r+0x13fc>
 50860d0:	d9402d17 	ldw	r5,180(sp)
 50860d4:	d8c02917 	ldw	r3,164(sp)
 50860d8:	d8002785 	stb	zero,158(sp)
 50860dc:	28800104 	addi	r2,r5,4
 50860e0:	2cc00017 	ldw	r19,0(r5)
 50860e4:	002d883a 	mov	r22,zero
 50860e8:	18003716 	blt	r3,zero,50861c8 <___vfprintf_internal_r+0x1420>
 50860ec:	00ffdfc4 	movi	r3,-129
 50860f0:	d8802d15 	stw	r2,180(sp)
 50860f4:	90e4703a 	and	r18,r18,r3
 50860f8:	0039883a 	mov	fp,zero
 50860fc:	983df326 	beq	r19,zero,50858cc <__alt_data_end+0xfffb76cc>
 5086100:	00800244 	movi	r2,9
 5086104:	14fc7b36 	bltu	r2,r19,50852f4 <__alt_data_end+0xfffb70f4>
 5086108:	d8c02817 	ldw	r3,160(sp)
 508610c:	dc001dc4 	addi	r16,sp,119
 5086110:	9cc00c04 	addi	r19,r19,48
 5086114:	1c07c83a 	sub	r3,r3,r16
 5086118:	dcc01dc5 	stb	r19,119(sp)
 508611c:	d8c02e15 	stw	r3,184(sp)
 5086120:	003ce806 	br	50854c4 <__alt_data_end+0xfffb72c4>
 5086124:	d8803317 	ldw	r2,204(sp)
 5086128:	143fffc4 	addi	r16,r2,-1
 508612c:	043f4d0e 	bge	zero,r16,5085e64 <__alt_data_end+0xfffb7c64>
 5086130:	07000404 	movi	fp,16
 5086134:	e400810e 	bge	fp,r16,508633c <___vfprintf_internal_r+0x1594>
 5086138:	01414274 	movhi	r5,1289
 508613c:	2957bc84 	addi	r5,r5,24306
 5086140:	d9402b15 	stw	r5,172(sp)
 5086144:	01c001c4 	movi	r7,7
 5086148:	dcc02c17 	ldw	r19,176(sp)
 508614c:	00000306 	br	508615c <___vfprintf_internal_r+0x13b4>
 5086150:	b5800204 	addi	r22,r22,8
 5086154:	843ffc04 	addi	r16,r16,-16
 5086158:	e4007b0e 	bge	fp,r16,5086348 <___vfprintf_internal_r+0x15a0>
 508615c:	18c00404 	addi	r3,r3,16
 5086160:	8c400044 	addi	r17,r17,1
 5086164:	b5000015 	stw	r20,0(r22)
 5086168:	b7000115 	stw	fp,4(r22)
 508616c:	d8c02015 	stw	r3,128(sp)
 5086170:	dc401f15 	stw	r17,124(sp)
 5086174:	3c7ff60e 	bge	r7,r17,5086150 <__alt_data_end+0xfffb7f50>
 5086178:	d9801e04 	addi	r6,sp,120
 508617c:	b80b883a 	mov	r5,r23
 5086180:	9809883a 	mov	r4,r19
 5086184:	d9c03c15 	stw	r7,240(sp)
 5086188:	508d8d40 	call	508d8d4 <__sprint_r>
 508618c:	d9c03c17 	ldw	r7,240(sp)
 5086190:	103c071e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 5086194:	d8c02017 	ldw	r3,128(sp)
 5086198:	dc401f17 	ldw	r17,124(sp)
 508619c:	dd800404 	addi	r22,sp,16
 50861a0:	003fec06 	br	5086154 <__alt_data_end+0xfffb7f54>
 50861a4:	9080100c 	andi	r2,r18,64
 50861a8:	d8002785 	stb	zero,158(sp)
 50861ac:	10010e26 	beq	r2,zero,50865e8 <___vfprintf_internal_r+0x1840>
 50861b0:	d9002d17 	ldw	r4,180(sp)
 50861b4:	d9402917 	ldw	r5,164(sp)
 50861b8:	002d883a 	mov	r22,zero
 50861bc:	20800104 	addi	r2,r4,4
 50861c0:	24c0000b 	ldhu	r19,0(r4)
 50861c4:	283fc90e 	bge	r5,zero,50860ec <__alt_data_end+0xfffb7eec>
 50861c8:	d8802d15 	stw	r2,180(sp)
 50861cc:	0039883a 	mov	fp,zero
 50861d0:	9d84b03a 	or	r2,r19,r22
 50861d4:	103c461e 	bne	r2,zero,50852f0 <__alt_data_end+0xfffb70f0>
 50861d8:	00800044 	movi	r2,1
 50861dc:	003e6c06 	br	5085b90 <__alt_data_end+0xfffb7990>
 50861e0:	d9002c17 	ldw	r4,176(sp)
 50861e4:	d9801e04 	addi	r6,sp,120
 50861e8:	b80b883a 	mov	r5,r23
 50861ec:	508d8d40 	call	508d8d4 <__sprint_r>
 50861f0:	103bef1e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 50861f4:	d8c02017 	ldw	r3,128(sp)
 50861f8:	da000404 	addi	r8,sp,16
 50861fc:	d9003217 	ldw	r4,200(sp)
 5086200:	d8802617 	ldw	r2,152(sp)
 5086204:	d9403317 	ldw	r5,204(sp)
 5086208:	8123883a 	add	r17,r16,r4
 508620c:	11400216 	blt	r2,r5,5086218 <___vfprintf_internal_r+0x1470>
 5086210:	9100004c 	andi	r4,r18,1
 5086214:	20000d26 	beq	r4,zero,508624c <___vfprintf_internal_r+0x14a4>
 5086218:	d9003717 	ldw	r4,220(sp)
 508621c:	d9403417 	ldw	r5,208(sp)
 5086220:	1907883a 	add	r3,r3,r4
 5086224:	d9001f17 	ldw	r4,124(sp)
 5086228:	41400015 	stw	r5,0(r8)
 508622c:	d9403717 	ldw	r5,220(sp)
 5086230:	21000044 	addi	r4,r4,1
 5086234:	d8c02015 	stw	r3,128(sp)
 5086238:	41400115 	stw	r5,4(r8)
 508623c:	d9001f15 	stw	r4,124(sp)
 5086240:	014001c4 	movi	r5,7
 5086244:	2901e816 	blt	r5,r4,50869e8 <___vfprintf_internal_r+0x1c40>
 5086248:	42000204 	addi	r8,r8,8
 508624c:	d9003317 	ldw	r4,204(sp)
 5086250:	8121883a 	add	r16,r16,r4
 5086254:	2085c83a 	sub	r2,r4,r2
 5086258:	8461c83a 	sub	r16,r16,r17
 508625c:	1400010e 	bge	r2,r16,5086264 <___vfprintf_internal_r+0x14bc>
 5086260:	1021883a 	mov	r16,r2
 5086264:	04000a0e 	bge	zero,r16,5086290 <___vfprintf_internal_r+0x14e8>
 5086268:	d9001f17 	ldw	r4,124(sp)
 508626c:	1c07883a 	add	r3,r3,r16
 5086270:	44400015 	stw	r17,0(r8)
 5086274:	21000044 	addi	r4,r4,1
 5086278:	44000115 	stw	r16,4(r8)
 508627c:	d8c02015 	stw	r3,128(sp)
 5086280:	d9001f15 	stw	r4,124(sp)
 5086284:	014001c4 	movi	r5,7
 5086288:	2901fb16 	blt	r5,r4,5086a78 <___vfprintf_internal_r+0x1cd0>
 508628c:	42000204 	addi	r8,r8,8
 5086290:	8001f716 	blt	r16,zero,5086a70 <___vfprintf_internal_r+0x1cc8>
 5086294:	1421c83a 	sub	r16,r2,r16
 5086298:	043d380e 	bge	zero,r16,508577c <__alt_data_end+0xfffb757c>
 508629c:	04400404 	movi	r17,16
 50862a0:	d8801f17 	ldw	r2,124(sp)
 50862a4:	8c3efb0e 	bge	r17,r16,5085e94 <__alt_data_end+0xfffb7c94>
 50862a8:	01414274 	movhi	r5,1289
 50862ac:	2957bc84 	addi	r5,r5,24306
 50862b0:	d9402b15 	stw	r5,172(sp)
 50862b4:	058001c4 	movi	r22,7
 50862b8:	dcc02c17 	ldw	r19,176(sp)
 50862bc:	00000306 	br	50862cc <___vfprintf_internal_r+0x1524>
 50862c0:	42000204 	addi	r8,r8,8
 50862c4:	843ffc04 	addi	r16,r16,-16
 50862c8:	8c3ef50e 	bge	r17,r16,5085ea0 <__alt_data_end+0xfffb7ca0>
 50862cc:	18c00404 	addi	r3,r3,16
 50862d0:	10800044 	addi	r2,r2,1
 50862d4:	45000015 	stw	r20,0(r8)
 50862d8:	44400115 	stw	r17,4(r8)
 50862dc:	d8c02015 	stw	r3,128(sp)
 50862e0:	d8801f15 	stw	r2,124(sp)
 50862e4:	b0bff60e 	bge	r22,r2,50862c0 <__alt_data_end+0xfffb80c0>
 50862e8:	d9801e04 	addi	r6,sp,120
 50862ec:	b80b883a 	mov	r5,r23
 50862f0:	9809883a 	mov	r4,r19
 50862f4:	508d8d40 	call	508d8d4 <__sprint_r>
 50862f8:	103bad1e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 50862fc:	d8c02017 	ldw	r3,128(sp)
 5086300:	d8801f17 	ldw	r2,124(sp)
 5086304:	da000404 	addi	r8,sp,16
 5086308:	003fee06 	br	50862c4 <__alt_data_end+0xfffb80c4>
 508630c:	9088703a 	and	r4,r18,r2
 5086310:	203eab1e 	bne	r4,zero,5085dc0 <__alt_data_end+0xfffb7bc0>
 5086314:	dc401f17 	ldw	r17,124(sp)
 5086318:	40800115 	stw	r2,4(r8)
 508631c:	44000015 	stw	r16,0(r8)
 5086320:	8c400044 	addi	r17,r17,1
 5086324:	d8c02015 	stw	r3,128(sp)
 5086328:	dc401f15 	stw	r17,124(sp)
 508632c:	008001c4 	movi	r2,7
 5086330:	14400e16 	blt	r2,r17,508636c <___vfprintf_internal_r+0x15c4>
 5086334:	45800204 	addi	r22,r8,8
 5086338:	003eca06 	br	5085e64 <__alt_data_end+0xfffb7c64>
 508633c:	01014274 	movhi	r4,1289
 5086340:	2117bc84 	addi	r4,r4,24306
 5086344:	d9002b15 	stw	r4,172(sp)
 5086348:	d8802b17 	ldw	r2,172(sp)
 508634c:	1c07883a 	add	r3,r3,r16
 5086350:	8c400044 	addi	r17,r17,1
 5086354:	b0800015 	stw	r2,0(r22)
 5086358:	b4000115 	stw	r16,4(r22)
 508635c:	d8c02015 	stw	r3,128(sp)
 5086360:	dc401f15 	stw	r17,124(sp)
 5086364:	008001c4 	movi	r2,7
 5086368:	147ebd0e 	bge	r2,r17,5085e60 <__alt_data_end+0xfffb7c60>
 508636c:	d9002c17 	ldw	r4,176(sp)
 5086370:	d9801e04 	addi	r6,sp,120
 5086374:	b80b883a 	mov	r5,r23
 5086378:	508d8d40 	call	508d8d4 <__sprint_r>
 508637c:	103b8c1e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 5086380:	d8c02017 	ldw	r3,128(sp)
 5086384:	dc401f17 	ldw	r17,124(sp)
 5086388:	dd800404 	addi	r22,sp,16
 508638c:	003eb506 	br	5085e64 <__alt_data_end+0xfffb7c64>
 5086390:	d9002c17 	ldw	r4,176(sp)
 5086394:	d9801e04 	addi	r6,sp,120
 5086398:	b80b883a 	mov	r5,r23
 508639c:	508d8d40 	call	508d8d4 <__sprint_r>
 50863a0:	103b831e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 50863a4:	d8c02017 	ldw	r3,128(sp)
 50863a8:	dc401f17 	ldw	r17,124(sp)
 50863ac:	da000404 	addi	r8,sp,16
 50863b0:	003e8d06 	br	5085de8 <__alt_data_end+0xfffb7be8>
 50863b4:	d9002c17 	ldw	r4,176(sp)
 50863b8:	d9801e04 	addi	r6,sp,120
 50863bc:	b80b883a 	mov	r5,r23
 50863c0:	508d8d40 	call	508d8d4 <__sprint_r>
 50863c4:	103b7a1e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 50863c8:	d8c02017 	ldw	r3,128(sp)
 50863cc:	dc401f17 	ldw	r17,124(sp)
 50863d0:	dd800404 	addi	r22,sp,16
 50863d4:	003e8f06 	br	5085e14 <__alt_data_end+0xfffb7c14>
 50863d8:	0027883a 	mov	r19,zero
 50863dc:	003f4a06 	br	5086108 <__alt_data_end+0xfffb7f08>
 50863e0:	d9002c17 	ldw	r4,176(sp)
 50863e4:	d9801e04 	addi	r6,sp,120
 50863e8:	b80b883a 	mov	r5,r23
 50863ec:	508d8d40 	call	508d8d4 <__sprint_r>
 50863f0:	103b6f1e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 50863f4:	d8c02017 	ldw	r3,128(sp)
 50863f8:	da000404 	addi	r8,sp,16
 50863fc:	003c9d06 	br	5085674 <__alt_data_end+0xfffb7474>
 5086400:	04e7c83a 	sub	r19,zero,r19
 5086404:	9804c03a 	cmpne	r2,r19,zero
 5086408:	05adc83a 	sub	r22,zero,r22
 508640c:	b0adc83a 	sub	r22,r22,r2
 5086410:	d8802917 	ldw	r2,164(sp)
 5086414:	07000b44 	movi	fp,45
 5086418:	df002785 	stb	fp,158(sp)
 508641c:	10017b16 	blt	r2,zero,5086a0c <___vfprintf_internal_r+0x1c64>
 5086420:	00bfdfc4 	movi	r2,-129
 5086424:	90a4703a 	and	r18,r18,r2
 5086428:	003bb106 	br	50852f0 <__alt_data_end+0xfffb70f0>
 508642c:	d9003617 	ldw	r4,216(sp)
 5086430:	d9403817 	ldw	r5,224(sp)
 5086434:	da003d15 	stw	r8,244(sp)
 5086438:	508c0ec0 	call	508c0ec <__fpclassifyd>
 508643c:	da003d17 	ldw	r8,244(sp)
 5086440:	1000f026 	beq	r2,zero,5086804 <___vfprintf_internal_r+0x1a5c>
 5086444:	d9002917 	ldw	r4,164(sp)
 5086448:	05bff7c4 	movi	r22,-33
 508644c:	00bfffc4 	movi	r2,-1
 5086450:	8dac703a 	and	r22,r17,r22
 5086454:	20820026 	beq	r4,r2,5086c58 <___vfprintf_internal_r+0x1eb0>
 5086458:	008011c4 	movi	r2,71
 508645c:	b081f726 	beq	r22,r2,5086c3c <___vfprintf_internal_r+0x1e94>
 5086460:	d9003817 	ldw	r4,224(sp)
 5086464:	90c04014 	ori	r3,r18,256
 5086468:	d8c02b15 	stw	r3,172(sp)
 508646c:	20021516 	blt	r4,zero,5086cc4 <___vfprintf_internal_r+0x1f1c>
 5086470:	dcc03817 	ldw	r19,224(sp)
 5086474:	d8002a05 	stb	zero,168(sp)
 5086478:	00801984 	movi	r2,102
 508647c:	8881f926 	beq	r17,r2,5086c64 <___vfprintf_internal_r+0x1ebc>
 5086480:	00801184 	movi	r2,70
 5086484:	88821c26 	beq	r17,r2,5086cf8 <___vfprintf_internal_r+0x1f50>
 5086488:	00801144 	movi	r2,69
 508648c:	b081ef26 	beq	r22,r2,5086c4c <___vfprintf_internal_r+0x1ea4>
 5086490:	d8c02917 	ldw	r3,164(sp)
 5086494:	d8802104 	addi	r2,sp,132
 5086498:	d8800315 	stw	r2,12(sp)
 508649c:	d9403617 	ldw	r5,216(sp)
 50864a0:	d8802504 	addi	r2,sp,148
 50864a4:	d9002c17 	ldw	r4,176(sp)
 50864a8:	d8800215 	stw	r2,8(sp)
 50864ac:	d8802604 	addi	r2,sp,152
 50864b0:	d8c00015 	stw	r3,0(sp)
 50864b4:	d8800115 	stw	r2,4(sp)
 50864b8:	01c00084 	movi	r7,2
 50864bc:	980d883a 	mov	r6,r19
 50864c0:	d8c03c15 	stw	r3,240(sp)
 50864c4:	da003d15 	stw	r8,244(sp)
 50864c8:	50874f00 	call	50874f0 <_dtoa_r>
 50864cc:	1021883a 	mov	r16,r2
 50864d0:	008019c4 	movi	r2,103
 50864d4:	d8c03c17 	ldw	r3,240(sp)
 50864d8:	da003d17 	ldw	r8,244(sp)
 50864dc:	88817126 	beq	r17,r2,5086aa4 <___vfprintf_internal_r+0x1cfc>
 50864e0:	008011c4 	movi	r2,71
 50864e4:	88829226 	beq	r17,r2,5086f30 <___vfprintf_internal_r+0x2188>
 50864e8:	80f9883a 	add	fp,r16,r3
 50864ec:	d9003617 	ldw	r4,216(sp)
 50864f0:	000d883a 	mov	r6,zero
 50864f4:	000f883a 	mov	r7,zero
 50864f8:	980b883a 	mov	r5,r19
 50864fc:	da003d15 	stw	r8,244(sp)
 5086500:	50913980 	call	5091398 <__eqdf2>
 5086504:	da003d17 	ldw	r8,244(sp)
 5086508:	10018d26 	beq	r2,zero,5086b40 <___vfprintf_internal_r+0x1d98>
 508650c:	d8802117 	ldw	r2,132(sp)
 5086510:	1700062e 	bgeu	r2,fp,508652c <___vfprintf_internal_r+0x1784>
 5086514:	01000c04 	movi	r4,48
 5086518:	10c00044 	addi	r3,r2,1
 508651c:	d8c02115 	stw	r3,132(sp)
 5086520:	11000005 	stb	r4,0(r2)
 5086524:	d8802117 	ldw	r2,132(sp)
 5086528:	173ffb36 	bltu	r2,fp,5086518 <__alt_data_end+0xfffb8318>
 508652c:	1405c83a 	sub	r2,r2,r16
 5086530:	d8803315 	stw	r2,204(sp)
 5086534:	008011c4 	movi	r2,71
 5086538:	b0817626 	beq	r22,r2,5086b14 <___vfprintf_internal_r+0x1d6c>
 508653c:	00801944 	movi	r2,101
 5086540:	1442810e 	bge	r2,r17,5086f48 <___vfprintf_internal_r+0x21a0>
 5086544:	d8c02617 	ldw	r3,152(sp)
 5086548:	00801984 	movi	r2,102
 508654c:	d8c03215 	stw	r3,200(sp)
 5086550:	8881fe26 	beq	r17,r2,5086d4c <___vfprintf_internal_r+0x1fa4>
 5086554:	d8c03217 	ldw	r3,200(sp)
 5086558:	d9003317 	ldw	r4,204(sp)
 508655c:	1901dd16 	blt	r3,r4,5086cd4 <___vfprintf_internal_r+0x1f2c>
 5086560:	9480004c 	andi	r18,r18,1
 5086564:	90022b1e 	bne	r18,zero,5086e14 <___vfprintf_internal_r+0x206c>
 5086568:	1805883a 	mov	r2,r3
 508656c:	18028016 	blt	r3,zero,5086f70 <___vfprintf_internal_r+0x21c8>
 5086570:	d8c03217 	ldw	r3,200(sp)
 5086574:	044019c4 	movi	r17,103
 5086578:	d8c02e15 	stw	r3,184(sp)
 508657c:	df002a07 	ldb	fp,168(sp)
 5086580:	e001531e 	bne	fp,zero,5086ad0 <___vfprintf_internal_r+0x1d28>
 5086584:	df002783 	ldbu	fp,158(sp)
 5086588:	d8802a15 	stw	r2,168(sp)
 508658c:	dc802b17 	ldw	r18,172(sp)
 5086590:	d8002915 	stw	zero,164(sp)
 5086594:	003bd106 	br	50854dc <__alt_data_end+0xfffb72dc>
 5086598:	d8802d17 	ldw	r2,180(sp)
 508659c:	d8c02d17 	ldw	r3,180(sp)
 50865a0:	d9002d17 	ldw	r4,180(sp)
 50865a4:	10800017 	ldw	r2,0(r2)
 50865a8:	18c00117 	ldw	r3,4(r3)
 50865ac:	21000204 	addi	r4,r4,8
 50865b0:	d8803615 	stw	r2,216(sp)
 50865b4:	d8c03815 	stw	r3,224(sp)
 50865b8:	d9002d15 	stw	r4,180(sp)
 50865bc:	003b7506 	br	5085394 <__alt_data_end+0xfffb7194>
 50865c0:	ac400007 	ldb	r17,0(r21)
 50865c4:	003a5906 	br	5084f2c <__alt_data_end+0xfffb6d2c>
 50865c8:	9080100c 	andi	r2,r18,64
 50865cc:	1000a826 	beq	r2,zero,5086870 <___vfprintf_internal_r+0x1ac8>
 50865d0:	d9002d17 	ldw	r4,180(sp)
 50865d4:	002d883a 	mov	r22,zero
 50865d8:	24c0000b 	ldhu	r19,0(r4)
 50865dc:	21000104 	addi	r4,r4,4
 50865e0:	d9002d15 	stw	r4,180(sp)
 50865e4:	003ccb06 	br	5085914 <__alt_data_end+0xfffb7714>
 50865e8:	d8c02d17 	ldw	r3,180(sp)
 50865ec:	d9002917 	ldw	r4,164(sp)
 50865f0:	002d883a 	mov	r22,zero
 50865f4:	18800104 	addi	r2,r3,4
 50865f8:	1cc00017 	ldw	r19,0(r3)
 50865fc:	203ebb0e 	bge	r4,zero,50860ec <__alt_data_end+0xfffb7eec>
 5086600:	003ef106 	br	50861c8 <__alt_data_end+0xfffb7fc8>
 5086604:	9080040c 	andi	r2,r18,16
 5086608:	1000921e 	bne	r2,zero,5086854 <___vfprintf_internal_r+0x1aac>
 508660c:	9480100c 	andi	r18,r18,64
 5086610:	90013926 	beq	r18,zero,5086af8 <___vfprintf_internal_r+0x1d50>
 5086614:	d9002d17 	ldw	r4,180(sp)
 5086618:	d9402f17 	ldw	r5,188(sp)
 508661c:	20800017 	ldw	r2,0(r4)
 5086620:	21000104 	addi	r4,r4,4
 5086624:	d9002d15 	stw	r4,180(sp)
 5086628:	1140000d 	sth	r5,0(r2)
 508662c:	003a1606 	br	5084e88 <__alt_data_end+0xfffb6c88>
 5086630:	9080100c 	andi	r2,r18,64
 5086634:	10008026 	beq	r2,zero,5086838 <___vfprintf_internal_r+0x1a90>
 5086638:	d8c02d17 	ldw	r3,180(sp)
 508663c:	1cc0000f 	ldh	r19,0(r3)
 5086640:	18c00104 	addi	r3,r3,4
 5086644:	d8c02d15 	stw	r3,180(sp)
 5086648:	982dd7fa 	srai	r22,r19,31
 508664c:	b005883a 	mov	r2,r22
 5086650:	003b1f06 	br	50852d0 <__alt_data_end+0xfffb70d0>
 5086654:	9080100c 	andi	r2,r18,64
 5086658:	d8002785 	stb	zero,158(sp)
 508665c:	10008a1e 	bne	r2,zero,5086888 <___vfprintf_internal_r+0x1ae0>
 5086660:	d9402d17 	ldw	r5,180(sp)
 5086664:	d8c02917 	ldw	r3,164(sp)
 5086668:	002d883a 	mov	r22,zero
 508666c:	28800104 	addi	r2,r5,4
 5086670:	2cc00017 	ldw	r19,0(r5)
 5086674:	183e4b0e 	bge	r3,zero,5085fa4 <__alt_data_end+0xfffb7da4>
 5086678:	9d86b03a 	or	r3,r19,r22
 508667c:	d8802d15 	stw	r2,180(sp)
 5086680:	183e4c1e 	bne	r3,zero,5085fb4 <__alt_data_end+0xfffb7db4>
 5086684:	0039883a 	mov	fp,zero
 5086688:	0005883a 	mov	r2,zero
 508668c:	003d4006 	br	5085b90 <__alt_data_end+0xfffb7990>
 5086690:	01414274 	movhi	r5,1289
 5086694:	2957bc84 	addi	r5,r5,24306
 5086698:	d9402b15 	stw	r5,172(sp)
 508669c:	d9402b17 	ldw	r5,172(sp)
 50866a0:	1c47883a 	add	r3,r3,r17
 50866a4:	10800044 	addi	r2,r2,1
 50866a8:	41400015 	stw	r5,0(r8)
 50866ac:	44400115 	stw	r17,4(r8)
 50866b0:	d8c02015 	stw	r3,128(sp)
 50866b4:	d8801f15 	stw	r2,124(sp)
 50866b8:	010001c4 	movi	r4,7
 50866bc:	20bec816 	blt	r4,r2,50861e0 <__alt_data_end+0xfffb7fe0>
 50866c0:	42000204 	addi	r8,r8,8
 50866c4:	003ecd06 	br	50861fc <__alt_data_end+0xfffb7ffc>
 50866c8:	d9002917 	ldw	r4,164(sp)
 50866cc:	d8002785 	stb	zero,158(sp)
 50866d0:	203d2d16 	blt	r4,zero,5085b88 <__alt_data_end+0xfffb7988>
 50866d4:	00bfdfc4 	movi	r2,-129
 50866d8:	90a4703a 	and	r18,r18,r2
 50866dc:	003a9106 	br	5085124 <__alt_data_end+0xfffb6f24>
 50866e0:	01014274 	movhi	r4,1289
 50866e4:	2117bc84 	addi	r4,r4,24306
 50866e8:	d9002b15 	stw	r4,172(sp)
 50866ec:	003c0c06 	br	5085720 <__alt_data_end+0xfffb7520>
 50866f0:	d9002c17 	ldw	r4,176(sp)
 50866f4:	d9801e04 	addi	r6,sp,120
 50866f8:	b80b883a 	mov	r5,r23
 50866fc:	508d8d40 	call	508d8d4 <__sprint_r>
 5086700:	103aab1e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 5086704:	d8c02017 	ldw	r3,128(sp)
 5086708:	da000404 	addi	r8,sp,16
 508670c:	003d4106 	br	5085c14 <__alt_data_end+0xfffb7a14>
 5086710:	d8801f17 	ldw	r2,124(sp)
 5086714:	01414274 	movhi	r5,1289
 5086718:	01000044 	movi	r4,1
 508671c:	18c00044 	addi	r3,r3,1
 5086720:	10800044 	addi	r2,r2,1
 5086724:	2957b404 	addi	r5,r5,24272
 5086728:	41000115 	stw	r4,4(r8)
 508672c:	41400015 	stw	r5,0(r8)
 5086730:	d8c02015 	stw	r3,128(sp)
 5086734:	d8801f15 	stw	r2,124(sp)
 5086738:	010001c4 	movi	r4,7
 508673c:	20805c16 	blt	r4,r2,50868b0 <___vfprintf_internal_r+0x1b08>
 5086740:	42000204 	addi	r8,r8,8
 5086744:	8800041e 	bne	r17,zero,5086758 <___vfprintf_internal_r+0x19b0>
 5086748:	d8803317 	ldw	r2,204(sp)
 508674c:	1000021e 	bne	r2,zero,5086758 <___vfprintf_internal_r+0x19b0>
 5086750:	9080004c 	andi	r2,r18,1
 5086754:	103c0926 	beq	r2,zero,508577c <__alt_data_end+0xfffb757c>
 5086758:	d9003717 	ldw	r4,220(sp)
 508675c:	d8801f17 	ldw	r2,124(sp)
 5086760:	d9403417 	ldw	r5,208(sp)
 5086764:	20c7883a 	add	r3,r4,r3
 5086768:	10800044 	addi	r2,r2,1
 508676c:	41000115 	stw	r4,4(r8)
 5086770:	41400015 	stw	r5,0(r8)
 5086774:	d8c02015 	stw	r3,128(sp)
 5086778:	d8801f15 	stw	r2,124(sp)
 508677c:	010001c4 	movi	r4,7
 5086780:	20812116 	blt	r4,r2,5086c08 <___vfprintf_internal_r+0x1e60>
 5086784:	42000204 	addi	r8,r8,8
 5086788:	0463c83a 	sub	r17,zero,r17
 508678c:	0440730e 	bge	zero,r17,508695c <___vfprintf_internal_r+0x1bb4>
 5086790:	05800404 	movi	r22,16
 5086794:	b440860e 	bge	r22,r17,50869b0 <___vfprintf_internal_r+0x1c08>
 5086798:	01414274 	movhi	r5,1289
 508679c:	2957bc84 	addi	r5,r5,24306
 50867a0:	d9402b15 	stw	r5,172(sp)
 50867a4:	070001c4 	movi	fp,7
 50867a8:	dcc02c17 	ldw	r19,176(sp)
 50867ac:	00000306 	br	50867bc <___vfprintf_internal_r+0x1a14>
 50867b0:	42000204 	addi	r8,r8,8
 50867b4:	8c7ffc04 	addi	r17,r17,-16
 50867b8:	b440800e 	bge	r22,r17,50869bc <___vfprintf_internal_r+0x1c14>
 50867bc:	18c00404 	addi	r3,r3,16
 50867c0:	10800044 	addi	r2,r2,1
 50867c4:	45000015 	stw	r20,0(r8)
 50867c8:	45800115 	stw	r22,4(r8)
 50867cc:	d8c02015 	stw	r3,128(sp)
 50867d0:	d8801f15 	stw	r2,124(sp)
 50867d4:	e0bff60e 	bge	fp,r2,50867b0 <__alt_data_end+0xfffb85b0>
 50867d8:	d9801e04 	addi	r6,sp,120
 50867dc:	b80b883a 	mov	r5,r23
 50867e0:	9809883a 	mov	r4,r19
 50867e4:	508d8d40 	call	508d8d4 <__sprint_r>
 50867e8:	103a711e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 50867ec:	d8c02017 	ldw	r3,128(sp)
 50867f0:	d8801f17 	ldw	r2,124(sp)
 50867f4:	da000404 	addi	r8,sp,16
 50867f8:	003fee06 	br	50867b4 <__alt_data_end+0xfffb85b4>
 50867fc:	00bfffc4 	movi	r2,-1
 5086800:	003a6f06 	br	50851c0 <__alt_data_end+0xfffb6fc0>
 5086804:	008011c4 	movi	r2,71
 5086808:	1440b816 	blt	r2,r17,5086aec <___vfprintf_internal_r+0x1d44>
 508680c:	04014274 	movhi	r16,1289
 5086810:	8417a604 	addi	r16,r16,24216
 5086814:	00c000c4 	movi	r3,3
 5086818:	00bfdfc4 	movi	r2,-129
 508681c:	d8c02a15 	stw	r3,168(sp)
 5086820:	90a4703a 	and	r18,r18,r2
 5086824:	df002783 	ldbu	fp,158(sp)
 5086828:	d8c02e15 	stw	r3,184(sp)
 508682c:	d8002915 	stw	zero,164(sp)
 5086830:	d8003215 	stw	zero,200(sp)
 5086834:	003b2906 	br	50854dc <__alt_data_end+0xfffb72dc>
 5086838:	d9002d17 	ldw	r4,180(sp)
 508683c:	24c00017 	ldw	r19,0(r4)
 5086840:	21000104 	addi	r4,r4,4
 5086844:	d9002d15 	stw	r4,180(sp)
 5086848:	982dd7fa 	srai	r22,r19,31
 508684c:	b005883a 	mov	r2,r22
 5086850:	003a9f06 	br	50852d0 <__alt_data_end+0xfffb70d0>
 5086854:	d9402d17 	ldw	r5,180(sp)
 5086858:	d8c02f17 	ldw	r3,188(sp)
 508685c:	28800017 	ldw	r2,0(r5)
 5086860:	29400104 	addi	r5,r5,4
 5086864:	d9402d15 	stw	r5,180(sp)
 5086868:	10c00015 	stw	r3,0(r2)
 508686c:	00398606 	br	5084e88 <__alt_data_end+0xfffb6c88>
 5086870:	d9402d17 	ldw	r5,180(sp)
 5086874:	002d883a 	mov	r22,zero
 5086878:	2cc00017 	ldw	r19,0(r5)
 508687c:	29400104 	addi	r5,r5,4
 5086880:	d9402d15 	stw	r5,180(sp)
 5086884:	003c2306 	br	5085914 <__alt_data_end+0xfffb7714>
 5086888:	d8c02d17 	ldw	r3,180(sp)
 508688c:	d9002917 	ldw	r4,164(sp)
 5086890:	002d883a 	mov	r22,zero
 5086894:	18800104 	addi	r2,r3,4
 5086898:	1cc0000b 	ldhu	r19,0(r3)
 508689c:	203dc10e 	bge	r4,zero,5085fa4 <__alt_data_end+0xfffb7da4>
 50868a0:	003f7506 	br	5086678 <__alt_data_end+0xfffb8478>
 50868a4:	04014274 	movhi	r16,1289
 50868a8:	8417a404 	addi	r16,r16,24208
 50868ac:	003acc06 	br	50853e0 <__alt_data_end+0xfffb71e0>
 50868b0:	d9002c17 	ldw	r4,176(sp)
 50868b4:	d9801e04 	addi	r6,sp,120
 50868b8:	b80b883a 	mov	r5,r23
 50868bc:	508d8d40 	call	508d8d4 <__sprint_r>
 50868c0:	103a3b1e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 50868c4:	dc402617 	ldw	r17,152(sp)
 50868c8:	d8c02017 	ldw	r3,128(sp)
 50868cc:	da000404 	addi	r8,sp,16
 50868d0:	003f9c06 	br	5086744 <__alt_data_end+0xfffb8544>
 50868d4:	ac400043 	ldbu	r17,1(r21)
 50868d8:	94800814 	ori	r18,r18,32
 50868dc:	ad400044 	addi	r21,r21,1
 50868e0:	8c403fcc 	andi	r17,r17,255
 50868e4:	8c40201c 	xori	r17,r17,128
 50868e8:	8c7fe004 	addi	r17,r17,-128
 50868ec:	00398f06 	br	5084f2c <__alt_data_end+0xfffb6d2c>
 50868f0:	d8c02d15 	stw	r3,180(sp)
 50868f4:	0039883a 	mov	fp,zero
 50868f8:	003e3506 	br	50861d0 <__alt_data_end+0xfffb7fd0>
 50868fc:	d9002c17 	ldw	r4,176(sp)
 5086900:	d9801e04 	addi	r6,sp,120
 5086904:	b80b883a 	mov	r5,r23
 5086908:	508d8d40 	call	508d8d4 <__sprint_r>
 508690c:	103a281e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 5086910:	d8c02017 	ldw	r3,128(sp)
 5086914:	da000404 	addi	r8,sp,16
 5086918:	003cd006 	br	5085c5c <__alt_data_end+0xfffb7a5c>
 508691c:	8009883a 	mov	r4,r16
 5086920:	da003d15 	stw	r8,244(sp)
 5086924:	5082b380 	call	5082b38 <strlen>
 5086928:	d8802e15 	stw	r2,184(sp)
 508692c:	da003d17 	ldw	r8,244(sp)
 5086930:	103c340e 	bge	r2,zero,5085a04 <__alt_data_end+0xfffb7804>
 5086934:	0005883a 	mov	r2,zero
 5086938:	003c3206 	br	5085a04 <__alt_data_end+0xfffb7804>
 508693c:	d9002c17 	ldw	r4,176(sp)
 5086940:	d9801e04 	addi	r6,sp,120
 5086944:	b80b883a 	mov	r5,r23
 5086948:	508d8d40 	call	508d8d4 <__sprint_r>
 508694c:	103a181e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 5086950:	d8c02017 	ldw	r3,128(sp)
 5086954:	d8801f17 	ldw	r2,124(sp)
 5086958:	da000404 	addi	r8,sp,16
 508695c:	d9403317 	ldw	r5,204(sp)
 5086960:	10800044 	addi	r2,r2,1
 5086964:	44000015 	stw	r16,0(r8)
 5086968:	28c7883a 	add	r3,r5,r3
 508696c:	003b7d06 	br	5085764 <__alt_data_end+0xfffb7564>
 5086970:	01014274 	movhi	r4,1289
 5086974:	2117c084 	addi	r4,r4,24322
 5086978:	d9003515 	stw	r4,212(sp)
 508697c:	003b1406 	br	50855d0 <__alt_data_end+0xfffb73d0>
 5086980:	013fffc4 	movi	r4,-1
 5086984:	003a3506 	br	508525c <__alt_data_end+0xfffb705c>
 5086988:	0023883a 	mov	r17,zero
 508698c:	003d9d06 	br	5086004 <__alt_data_end+0xfffb7e04>
 5086990:	d9002c17 	ldw	r4,176(sp)
 5086994:	d9801e04 	addi	r6,sp,120
 5086998:	b80b883a 	mov	r5,r23
 508699c:	508d8d40 	call	508d8d4 <__sprint_r>
 50869a0:	103a031e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 50869a4:	d8c02017 	ldw	r3,128(sp)
 50869a8:	da000404 	addi	r8,sp,16
 50869ac:	003d9406 	br	5086000 <__alt_data_end+0xfffb7e00>
 50869b0:	01014274 	movhi	r4,1289
 50869b4:	2117bc84 	addi	r4,r4,24306
 50869b8:	d9002b15 	stw	r4,172(sp)
 50869bc:	d9002b17 	ldw	r4,172(sp)
 50869c0:	1c47883a 	add	r3,r3,r17
 50869c4:	10800044 	addi	r2,r2,1
 50869c8:	41000015 	stw	r4,0(r8)
 50869cc:	44400115 	stw	r17,4(r8)
 50869d0:	d8c02015 	stw	r3,128(sp)
 50869d4:	d8801f15 	stw	r2,124(sp)
 50869d8:	010001c4 	movi	r4,7
 50869dc:	20bfd716 	blt	r4,r2,508693c <__alt_data_end+0xfffb873c>
 50869e0:	42000204 	addi	r8,r8,8
 50869e4:	003fdd06 	br	508695c <__alt_data_end+0xfffb875c>
 50869e8:	d9002c17 	ldw	r4,176(sp)
 50869ec:	d9801e04 	addi	r6,sp,120
 50869f0:	b80b883a 	mov	r5,r23
 50869f4:	508d8d40 	call	508d8d4 <__sprint_r>
 50869f8:	1039ed1e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 50869fc:	d8802617 	ldw	r2,152(sp)
 5086a00:	d8c02017 	ldw	r3,128(sp)
 5086a04:	da000404 	addi	r8,sp,16
 5086a08:	003e1006 	br	508624c <__alt_data_end+0xfffb804c>
 5086a0c:	00800044 	movi	r2,1
 5086a10:	10803fcc 	andi	r2,r2,255
 5086a14:	00c00044 	movi	r3,1
 5086a18:	10fa3526 	beq	r2,r3,50852f0 <__alt_data_end+0xfffb70f0>
 5086a1c:	00c00084 	movi	r3,2
 5086a20:	10fbcb26 	beq	r2,r3,5085950 <__alt_data_end+0xfffb7750>
 5086a24:	003a8f06 	br	5085464 <__alt_data_end+0xfffb7264>
 5086a28:	01014274 	movhi	r4,1289
 5086a2c:	2117c084 	addi	r4,r4,24322
 5086a30:	d9003515 	stw	r4,212(sp)
 5086a34:	003b7606 	br	5085810 <__alt_data_end+0xfffb7610>
 5086a38:	d8802917 	ldw	r2,164(sp)
 5086a3c:	00c00184 	movi	r3,6
 5086a40:	1880012e 	bgeu	r3,r2,5086a48 <___vfprintf_internal_r+0x1ca0>
 5086a44:	1805883a 	mov	r2,r3
 5086a48:	d8802e15 	stw	r2,184(sp)
 5086a4c:	1000ef16 	blt	r2,zero,5086e0c <___vfprintf_internal_r+0x2064>
 5086a50:	04014274 	movhi	r16,1289
 5086a54:	d8802a15 	stw	r2,168(sp)
 5086a58:	dcc02d15 	stw	r19,180(sp)
 5086a5c:	d8002915 	stw	zero,164(sp)
 5086a60:	d8003215 	stw	zero,200(sp)
 5086a64:	8417b204 	addi	r16,r16,24264
 5086a68:	0039883a 	mov	fp,zero
 5086a6c:	003aa206 	br	50854f8 <__alt_data_end+0xfffb72f8>
 5086a70:	0021883a 	mov	r16,zero
 5086a74:	003e0706 	br	5086294 <__alt_data_end+0xfffb8094>
 5086a78:	d9002c17 	ldw	r4,176(sp)
 5086a7c:	d9801e04 	addi	r6,sp,120
 5086a80:	b80b883a 	mov	r5,r23
 5086a84:	508d8d40 	call	508d8d4 <__sprint_r>
 5086a88:	1039c91e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 5086a8c:	d8802617 	ldw	r2,152(sp)
 5086a90:	d9403317 	ldw	r5,204(sp)
 5086a94:	d8c02017 	ldw	r3,128(sp)
 5086a98:	da000404 	addi	r8,sp,16
 5086a9c:	2885c83a 	sub	r2,r5,r2
 5086aa0:	003dfb06 	br	5086290 <__alt_data_end+0xfffb8090>
 5086aa4:	9080004c 	andi	r2,r18,1
 5086aa8:	103e8f1e 	bne	r2,zero,50864e8 <__alt_data_end+0xfffb82e8>
 5086aac:	d8802117 	ldw	r2,132(sp)
 5086ab0:	003e9e06 	br	508652c <__alt_data_end+0xfffb832c>
 5086ab4:	1025883a 	mov	r18,r2
 5086ab8:	0039883a 	mov	fp,zero
 5086abc:	00800084 	movi	r2,2
 5086ac0:	003fd306 	br	5086a10 <__alt_data_end+0xfffb8810>
 5086ac4:	07000b44 	movi	fp,45
 5086ac8:	df002785 	stb	fp,158(sp)
 5086acc:	003a4006 	br	50853d0 <__alt_data_end+0xfffb71d0>
 5086ad0:	00c00b44 	movi	r3,45
 5086ad4:	d8c02785 	stb	r3,158(sp)
 5086ad8:	d8802a15 	stw	r2,168(sp)
 5086adc:	dc802b17 	ldw	r18,172(sp)
 5086ae0:	d8002915 	stw	zero,164(sp)
 5086ae4:	07000b44 	movi	fp,45
 5086ae8:	003a8006 	br	50854ec <__alt_data_end+0xfffb72ec>
 5086aec:	04014274 	movhi	r16,1289
 5086af0:	8417a704 	addi	r16,r16,24220
 5086af4:	003f4706 	br	5086814 <__alt_data_end+0xfffb8614>
 5086af8:	d8c02d17 	ldw	r3,180(sp)
 5086afc:	d9002f17 	ldw	r4,188(sp)
 5086b00:	18800017 	ldw	r2,0(r3)
 5086b04:	18c00104 	addi	r3,r3,4
 5086b08:	d8c02d15 	stw	r3,180(sp)
 5086b0c:	11000015 	stw	r4,0(r2)
 5086b10:	0038dd06 	br	5084e88 <__alt_data_end+0xfffb6c88>
 5086b14:	dd802617 	ldw	r22,152(sp)
 5086b18:	00bfff44 	movi	r2,-3
 5086b1c:	b0801c16 	blt	r22,r2,5086b90 <___vfprintf_internal_r+0x1de8>
 5086b20:	d9402917 	ldw	r5,164(sp)
 5086b24:	2d801a16 	blt	r5,r22,5086b90 <___vfprintf_internal_r+0x1de8>
 5086b28:	dd803215 	stw	r22,200(sp)
 5086b2c:	003e8906 	br	5086554 <__alt_data_end+0xfffb8354>
 5086b30:	01014274 	movhi	r4,1289
 5086b34:	2117bc84 	addi	r4,r4,24306
 5086b38:	d9002b15 	stw	r4,172(sp)
 5086b3c:	003c9106 	br	5085d84 <__alt_data_end+0xfffb7b84>
 5086b40:	e005883a 	mov	r2,fp
 5086b44:	003e7906 	br	508652c <__alt_data_end+0xfffb832c>
 5086b48:	d9402917 	ldw	r5,164(sp)
 5086b4c:	df002783 	ldbu	fp,158(sp)
 5086b50:	dcc02d15 	stw	r19,180(sp)
 5086b54:	d9402a15 	stw	r5,168(sp)
 5086b58:	d9402e15 	stw	r5,184(sp)
 5086b5c:	d8002915 	stw	zero,164(sp)
 5086b60:	d8003215 	stw	zero,200(sp)
 5086b64:	003a5d06 	br	50854dc <__alt_data_end+0xfffb72dc>
 5086b68:	9080004c 	andi	r2,r18,1
 5086b6c:	0039883a 	mov	fp,zero
 5086b70:	10000426 	beq	r2,zero,5086b84 <___vfprintf_internal_r+0x1ddc>
 5086b74:	00800c04 	movi	r2,48
 5086b78:	dc001dc4 	addi	r16,sp,119
 5086b7c:	d8801dc5 	stb	r2,119(sp)
 5086b80:	003b8006 	br	5085984 <__alt_data_end+0xfffb7784>
 5086b84:	d8002e15 	stw	zero,184(sp)
 5086b88:	dc001e04 	addi	r16,sp,120
 5086b8c:	003a4d06 	br	50854c4 <__alt_data_end+0xfffb72c4>
 5086b90:	8c7fff84 	addi	r17,r17,-2
 5086b94:	b5bfffc4 	addi	r22,r22,-1
 5086b98:	dd802615 	stw	r22,152(sp)
 5086b9c:	dc4022c5 	stb	r17,139(sp)
 5086ba0:	b000bf16 	blt	r22,zero,5086ea0 <___vfprintf_internal_r+0x20f8>
 5086ba4:	00800ac4 	movi	r2,43
 5086ba8:	d8802305 	stb	r2,140(sp)
 5086bac:	00800244 	movi	r2,9
 5086bb0:	15807016 	blt	r2,r22,5086d74 <___vfprintf_internal_r+0x1fcc>
 5086bb4:	00800c04 	movi	r2,48
 5086bb8:	b5800c04 	addi	r22,r22,48
 5086bbc:	d8802345 	stb	r2,141(sp)
 5086bc0:	dd802385 	stb	r22,142(sp)
 5086bc4:	d88023c4 	addi	r2,sp,143
 5086bc8:	df0022c4 	addi	fp,sp,139
 5086bcc:	d8c03317 	ldw	r3,204(sp)
 5086bd0:	1739c83a 	sub	fp,r2,fp
 5086bd4:	d9003317 	ldw	r4,204(sp)
 5086bd8:	e0c7883a 	add	r3,fp,r3
 5086bdc:	df003a15 	stw	fp,232(sp)
 5086be0:	d8c02e15 	stw	r3,184(sp)
 5086be4:	00800044 	movi	r2,1
 5086be8:	1100b30e 	bge	r2,r4,5086eb8 <___vfprintf_internal_r+0x2110>
 5086bec:	d8c02e17 	ldw	r3,184(sp)
 5086bf0:	18c00044 	addi	r3,r3,1
 5086bf4:	d8c02e15 	stw	r3,184(sp)
 5086bf8:	1805883a 	mov	r2,r3
 5086bfc:	1800ac16 	blt	r3,zero,5086eb0 <___vfprintf_internal_r+0x2108>
 5086c00:	d8003215 	stw	zero,200(sp)
 5086c04:	003e5d06 	br	508657c <__alt_data_end+0xfffb837c>
 5086c08:	d9002c17 	ldw	r4,176(sp)
 5086c0c:	d9801e04 	addi	r6,sp,120
 5086c10:	b80b883a 	mov	r5,r23
 5086c14:	508d8d40 	call	508d8d4 <__sprint_r>
 5086c18:	1039651e 	bne	r2,zero,50851b0 <__alt_data_end+0xfffb6fb0>
 5086c1c:	dc402617 	ldw	r17,152(sp)
 5086c20:	d8c02017 	ldw	r3,128(sp)
 5086c24:	d8801f17 	ldw	r2,124(sp)
 5086c28:	da000404 	addi	r8,sp,16
 5086c2c:	003ed606 	br	5086788 <__alt_data_end+0xfffb8588>
 5086c30:	582b883a 	mov	r21,r11
 5086c34:	d8002915 	stw	zero,164(sp)
 5086c38:	0038bd06 	br	5084f30 <__alt_data_end+0xfffb6d30>
 5086c3c:	d8802917 	ldw	r2,164(sp)
 5086c40:	103e071e 	bne	r2,zero,5086460 <__alt_data_end+0xfffb8260>
 5086c44:	dc002915 	stw	r16,164(sp)
 5086c48:	003e0506 	br	5086460 <__alt_data_end+0xfffb8260>
 5086c4c:	d9002917 	ldw	r4,164(sp)
 5086c50:	20c00044 	addi	r3,r4,1
 5086c54:	003e0f06 	br	5086494 <__alt_data_end+0xfffb8294>
 5086c58:	01400184 	movi	r5,6
 5086c5c:	d9402915 	stw	r5,164(sp)
 5086c60:	003dff06 	br	5086460 <__alt_data_end+0xfffb8260>
 5086c64:	d8802104 	addi	r2,sp,132
 5086c68:	d8800315 	stw	r2,12(sp)
 5086c6c:	d8802504 	addi	r2,sp,148
 5086c70:	d8800215 	stw	r2,8(sp)
 5086c74:	d8802604 	addi	r2,sp,152
 5086c78:	d8800115 	stw	r2,4(sp)
 5086c7c:	d8802917 	ldw	r2,164(sp)
 5086c80:	d9403617 	ldw	r5,216(sp)
 5086c84:	d9002c17 	ldw	r4,176(sp)
 5086c88:	d8800015 	stw	r2,0(sp)
 5086c8c:	01c000c4 	movi	r7,3
 5086c90:	980d883a 	mov	r6,r19
 5086c94:	da003d15 	stw	r8,244(sp)
 5086c98:	50874f00 	call	50874f0 <_dtoa_r>
 5086c9c:	d8c02917 	ldw	r3,164(sp)
 5086ca0:	da003d17 	ldw	r8,244(sp)
 5086ca4:	1021883a 	mov	r16,r2
 5086ca8:	10f9883a 	add	fp,r2,r3
 5086cac:	81000007 	ldb	r4,0(r16)
 5086cb0:	00800c04 	movi	r2,48
 5086cb4:	20805e26 	beq	r4,r2,5086e30 <___vfprintf_internal_r+0x2088>
 5086cb8:	d8c02617 	ldw	r3,152(sp)
 5086cbc:	e0f9883a 	add	fp,fp,r3
 5086cc0:	003e0a06 	br	50864ec <__alt_data_end+0xfffb82ec>
 5086cc4:	00c00b44 	movi	r3,45
 5086cc8:	24e0003c 	xorhi	r19,r4,32768
 5086ccc:	d8c02a05 	stb	r3,168(sp)
 5086cd0:	003de906 	br	5086478 <__alt_data_end+0xfffb8278>
 5086cd4:	d8c03217 	ldw	r3,200(sp)
 5086cd8:	00c07a0e 	bge	zero,r3,5086ec4 <___vfprintf_internal_r+0x211c>
 5086cdc:	00800044 	movi	r2,1
 5086ce0:	d9003317 	ldw	r4,204(sp)
 5086ce4:	1105883a 	add	r2,r2,r4
 5086ce8:	d8802e15 	stw	r2,184(sp)
 5086cec:	10004e16 	blt	r2,zero,5086e28 <___vfprintf_internal_r+0x2080>
 5086cf0:	044019c4 	movi	r17,103
 5086cf4:	003e2106 	br	508657c <__alt_data_end+0xfffb837c>
 5086cf8:	d9002917 	ldw	r4,164(sp)
 5086cfc:	d8802104 	addi	r2,sp,132
 5086d00:	d8800315 	stw	r2,12(sp)
 5086d04:	d9000015 	stw	r4,0(sp)
 5086d08:	d8802504 	addi	r2,sp,148
 5086d0c:	d9403617 	ldw	r5,216(sp)
 5086d10:	d9002c17 	ldw	r4,176(sp)
 5086d14:	d8800215 	stw	r2,8(sp)
 5086d18:	d8802604 	addi	r2,sp,152
 5086d1c:	d8800115 	stw	r2,4(sp)
 5086d20:	01c000c4 	movi	r7,3
 5086d24:	980d883a 	mov	r6,r19
 5086d28:	da003d15 	stw	r8,244(sp)
 5086d2c:	50874f00 	call	50874f0 <_dtoa_r>
 5086d30:	d8c02917 	ldw	r3,164(sp)
 5086d34:	da003d17 	ldw	r8,244(sp)
 5086d38:	1021883a 	mov	r16,r2
 5086d3c:	00801184 	movi	r2,70
 5086d40:	80f9883a 	add	fp,r16,r3
 5086d44:	88bfd926 	beq	r17,r2,5086cac <__alt_data_end+0xfffb8aac>
 5086d48:	003de806 	br	50864ec <__alt_data_end+0xfffb82ec>
 5086d4c:	d9002917 	ldw	r4,164(sp)
 5086d50:	00c04d0e 	bge	zero,r3,5086e88 <___vfprintf_internal_r+0x20e0>
 5086d54:	2000441e 	bne	r4,zero,5086e68 <___vfprintf_internal_r+0x20c0>
 5086d58:	9480004c 	andi	r18,r18,1
 5086d5c:	9000421e 	bne	r18,zero,5086e68 <___vfprintf_internal_r+0x20c0>
 5086d60:	1805883a 	mov	r2,r3
 5086d64:	18007016 	blt	r3,zero,5086f28 <___vfprintf_internal_r+0x2180>
 5086d68:	d8c03217 	ldw	r3,200(sp)
 5086d6c:	d8c02e15 	stw	r3,184(sp)
 5086d70:	003e0206 	br	508657c <__alt_data_end+0xfffb837c>
 5086d74:	df0022c4 	addi	fp,sp,139
 5086d78:	dc002915 	stw	r16,164(sp)
 5086d7c:	4027883a 	mov	r19,r8
 5086d80:	e021883a 	mov	r16,fp
 5086d84:	b009883a 	mov	r4,r22
 5086d88:	01400284 	movi	r5,10
 5086d8c:	50828040 	call	5082804 <__modsi3>
 5086d90:	10800c04 	addi	r2,r2,48
 5086d94:	843fffc4 	addi	r16,r16,-1
 5086d98:	b009883a 	mov	r4,r22
 5086d9c:	01400284 	movi	r5,10
 5086da0:	80800005 	stb	r2,0(r16)
 5086da4:	50827800 	call	5082780 <__divsi3>
 5086da8:	102d883a 	mov	r22,r2
 5086dac:	00800244 	movi	r2,9
 5086db0:	15bff416 	blt	r2,r22,5086d84 <__alt_data_end+0xfffb8b84>
 5086db4:	9811883a 	mov	r8,r19
 5086db8:	b0800c04 	addi	r2,r22,48
 5086dbc:	8027883a 	mov	r19,r16
 5086dc0:	997fffc4 	addi	r5,r19,-1
 5086dc4:	98bfffc5 	stb	r2,-1(r19)
 5086dc8:	dc002917 	ldw	r16,164(sp)
 5086dcc:	2f006a2e 	bgeu	r5,fp,5086f78 <___vfprintf_internal_r+0x21d0>
 5086dd0:	d9c02384 	addi	r7,sp,142
 5086dd4:	3ccfc83a 	sub	r7,r7,r19
 5086dd8:	d9002344 	addi	r4,sp,141
 5086ddc:	e1cf883a 	add	r7,fp,r7
 5086de0:	00000106 	br	5086de8 <___vfprintf_internal_r+0x2040>
 5086de4:	28800003 	ldbu	r2,0(r5)
 5086de8:	20800005 	stb	r2,0(r4)
 5086dec:	21000044 	addi	r4,r4,1
 5086df0:	29400044 	addi	r5,r5,1
 5086df4:	393ffb1e 	bne	r7,r4,5086de4 <__alt_data_end+0xfffb8be4>
 5086df8:	d8802304 	addi	r2,sp,140
 5086dfc:	14c5c83a 	sub	r2,r2,r19
 5086e00:	d8c02344 	addi	r3,sp,141
 5086e04:	1885883a 	add	r2,r3,r2
 5086e08:	003f7006 	br	5086bcc <__alt_data_end+0xfffb89cc>
 5086e0c:	0005883a 	mov	r2,zero
 5086e10:	003f0f06 	br	5086a50 <__alt_data_end+0xfffb8850>
 5086e14:	d8c03217 	ldw	r3,200(sp)
 5086e18:	18c00044 	addi	r3,r3,1
 5086e1c:	d8c02e15 	stw	r3,184(sp)
 5086e20:	1805883a 	mov	r2,r3
 5086e24:	183fb20e 	bge	r3,zero,5086cf0 <__alt_data_end+0xfffb8af0>
 5086e28:	0005883a 	mov	r2,zero
 5086e2c:	003fb006 	br	5086cf0 <__alt_data_end+0xfffb8af0>
 5086e30:	d9003617 	ldw	r4,216(sp)
 5086e34:	000d883a 	mov	r6,zero
 5086e38:	000f883a 	mov	r7,zero
 5086e3c:	980b883a 	mov	r5,r19
 5086e40:	d8c03c15 	stw	r3,240(sp)
 5086e44:	da003d15 	stw	r8,244(sp)
 5086e48:	50913980 	call	5091398 <__eqdf2>
 5086e4c:	d8c03c17 	ldw	r3,240(sp)
 5086e50:	da003d17 	ldw	r8,244(sp)
 5086e54:	103f9826 	beq	r2,zero,5086cb8 <__alt_data_end+0xfffb8ab8>
 5086e58:	00800044 	movi	r2,1
 5086e5c:	10c7c83a 	sub	r3,r2,r3
 5086e60:	d8c02615 	stw	r3,152(sp)
 5086e64:	003f9506 	br	5086cbc <__alt_data_end+0xfffb8abc>
 5086e68:	d9002917 	ldw	r4,164(sp)
 5086e6c:	d8c03217 	ldw	r3,200(sp)
 5086e70:	20800044 	addi	r2,r4,1
 5086e74:	1885883a 	add	r2,r3,r2
 5086e78:	d8802e15 	stw	r2,184(sp)
 5086e7c:	103dbf0e 	bge	r2,zero,508657c <__alt_data_end+0xfffb837c>
 5086e80:	0005883a 	mov	r2,zero
 5086e84:	003dbd06 	br	508657c <__alt_data_end+0xfffb837c>
 5086e88:	2000211e 	bne	r4,zero,5086f10 <___vfprintf_internal_r+0x2168>
 5086e8c:	9480004c 	andi	r18,r18,1
 5086e90:	90001f1e 	bne	r18,zero,5086f10 <___vfprintf_internal_r+0x2168>
 5086e94:	00800044 	movi	r2,1
 5086e98:	d8802e15 	stw	r2,184(sp)
 5086e9c:	003db706 	br	508657c <__alt_data_end+0xfffb837c>
 5086ea0:	00800b44 	movi	r2,45
 5086ea4:	05adc83a 	sub	r22,zero,r22
 5086ea8:	d8802305 	stb	r2,140(sp)
 5086eac:	003f3f06 	br	5086bac <__alt_data_end+0xfffb89ac>
 5086eb0:	0005883a 	mov	r2,zero
 5086eb4:	003f5206 	br	5086c00 <__alt_data_end+0xfffb8a00>
 5086eb8:	90a4703a 	and	r18,r18,r2
 5086ebc:	903f4e26 	beq	r18,zero,5086bf8 <__alt_data_end+0xfffb89f8>
 5086ec0:	003f4a06 	br	5086bec <__alt_data_end+0xfffb89ec>
 5086ec4:	00800084 	movi	r2,2
 5086ec8:	10c5c83a 	sub	r2,r2,r3
 5086ecc:	003f8406 	br	5086ce0 <__alt_data_end+0xfffb8ae0>
 5086ed0:	d8802d17 	ldw	r2,180(sp)
 5086ed4:	d9002d17 	ldw	r4,180(sp)
 5086ed8:	ac400043 	ldbu	r17,1(r21)
 5086edc:	10800017 	ldw	r2,0(r2)
 5086ee0:	582b883a 	mov	r21,r11
 5086ee4:	d8802915 	stw	r2,164(sp)
 5086ee8:	20800104 	addi	r2,r4,4
 5086eec:	d9002917 	ldw	r4,164(sp)
 5086ef0:	d8802d15 	stw	r2,180(sp)
 5086ef4:	203e7a0e 	bge	r4,zero,50868e0 <__alt_data_end+0xfffb86e0>
 5086ef8:	8c403fcc 	andi	r17,r17,255
 5086efc:	00bfffc4 	movi	r2,-1
 5086f00:	8c40201c 	xori	r17,r17,128
 5086f04:	d8802915 	stw	r2,164(sp)
 5086f08:	8c7fe004 	addi	r17,r17,-128
 5086f0c:	00380706 	br	5084f2c <__alt_data_end+0xfffb6d2c>
 5086f10:	d8c02917 	ldw	r3,164(sp)
 5086f14:	18c00084 	addi	r3,r3,2
 5086f18:	d8c02e15 	stw	r3,184(sp)
 5086f1c:	1805883a 	mov	r2,r3
 5086f20:	183d960e 	bge	r3,zero,508657c <__alt_data_end+0xfffb837c>
 5086f24:	003fd606 	br	5086e80 <__alt_data_end+0xfffb8c80>
 5086f28:	0005883a 	mov	r2,zero
 5086f2c:	003f8e06 	br	5086d68 <__alt_data_end+0xfffb8b68>
 5086f30:	9080004c 	andi	r2,r18,1
 5086f34:	103f811e 	bne	r2,zero,5086d3c <__alt_data_end+0xfffb8b3c>
 5086f38:	d8802117 	ldw	r2,132(sp)
 5086f3c:	1405c83a 	sub	r2,r2,r16
 5086f40:	d8803315 	stw	r2,204(sp)
 5086f44:	b47ef326 	beq	r22,r17,5086b14 <__alt_data_end+0xfffb8914>
 5086f48:	dd802617 	ldw	r22,152(sp)
 5086f4c:	003f1106 	br	5086b94 <__alt_data_end+0xfffb8994>
 5086f50:	d9c02785 	stb	r7,158(sp)
 5086f54:	00390406 	br	5085368 <__alt_data_end+0xfffb7168>
 5086f58:	d9c02785 	stb	r7,158(sp)
 5086f5c:	0038d306 	br	50852ac <__alt_data_end+0xfffb70ac>
 5086f60:	d9c02785 	stb	r7,158(sp)
 5086f64:	003a6106 	br	50858ec <__alt_data_end+0xfffb76ec>
 5086f68:	d9c02785 	stb	r7,158(sp)
 5086f6c:	003af806 	br	5085b50 <__alt_data_end+0xfffb7950>
 5086f70:	0005883a 	mov	r2,zero
 5086f74:	003d7e06 	br	5086570 <__alt_data_end+0xfffb8370>
 5086f78:	d8802344 	addi	r2,sp,141
 5086f7c:	003f1306 	br	5086bcc <__alt_data_end+0xfffb89cc>
 5086f80:	d9c02785 	stb	r7,158(sp)
 5086f84:	00392306 	br	5085414 <__alt_data_end+0xfffb7214>
 5086f88:	d9c02785 	stb	r7,158(sp)
 5086f8c:	003aa906 	br	5085a34 <__alt_data_end+0xfffb7834>
 5086f90:	d9c02785 	stb	r7,158(sp)
 5086f94:	003a3d06 	br	508588c <__alt_data_end+0xfffb768c>
 5086f98:	d9c02785 	stb	r7,158(sp)
 5086f9c:	003aca06 	br	5085ac8 <__alt_data_end+0xfffb78c8>

05086fa0 <__vfprintf_internal>:
 5086fa0:	00814274 	movhi	r2,1289
 5086fa4:	109f2104 	addi	r2,r2,31876
 5086fa8:	300f883a 	mov	r7,r6
 5086fac:	280d883a 	mov	r6,r5
 5086fb0:	200b883a 	mov	r5,r4
 5086fb4:	11000017 	ldw	r4,0(r2)
 5086fb8:	5084da81 	jmpi	5084da8 <___vfprintf_internal_r>

05086fbc <__sbprintf>:
 5086fbc:	2880030b 	ldhu	r2,12(r5)
 5086fc0:	2ac01917 	ldw	r11,100(r5)
 5086fc4:	2a80038b 	ldhu	r10,14(r5)
 5086fc8:	2a400717 	ldw	r9,28(r5)
 5086fcc:	2a000917 	ldw	r8,36(r5)
 5086fd0:	defee204 	addi	sp,sp,-1144
 5086fd4:	00c10004 	movi	r3,1024
 5086fd8:	dc011a15 	stw	r16,1128(sp)
 5086fdc:	10bfff4c 	andi	r2,r2,65533
 5086fe0:	2821883a 	mov	r16,r5
 5086fe4:	d8cb883a 	add	r5,sp,r3
 5086fe8:	dc811c15 	stw	r18,1136(sp)
 5086fec:	dc411b15 	stw	r17,1132(sp)
 5086ff0:	dfc11d15 	stw	ra,1140(sp)
 5086ff4:	2025883a 	mov	r18,r4
 5086ff8:	d881030d 	sth	r2,1036(sp)
 5086ffc:	dac11915 	stw	r11,1124(sp)
 5087000:	da81038d 	sth	r10,1038(sp)
 5087004:	da410715 	stw	r9,1052(sp)
 5087008:	da010915 	stw	r8,1060(sp)
 508700c:	dec10015 	stw	sp,1024(sp)
 5087010:	dec10415 	stw	sp,1040(sp)
 5087014:	d8c10215 	stw	r3,1032(sp)
 5087018:	d8c10515 	stw	r3,1044(sp)
 508701c:	d8010615 	stw	zero,1048(sp)
 5087020:	5084da80 	call	5084da8 <___vfprintf_internal_r>
 5087024:	1023883a 	mov	r17,r2
 5087028:	10000416 	blt	r2,zero,508703c <__sbprintf+0x80>
 508702c:	d9410004 	addi	r5,sp,1024
 5087030:	9009883a 	mov	r4,r18
 5087034:	5088d940 	call	5088d94 <_fflush_r>
 5087038:	10000d1e 	bne	r2,zero,5087070 <__sbprintf+0xb4>
 508703c:	d881030b 	ldhu	r2,1036(sp)
 5087040:	1080100c 	andi	r2,r2,64
 5087044:	10000326 	beq	r2,zero,5087054 <__sbprintf+0x98>
 5087048:	8080030b 	ldhu	r2,12(r16)
 508704c:	10801014 	ori	r2,r2,64
 5087050:	8080030d 	sth	r2,12(r16)
 5087054:	8805883a 	mov	r2,r17
 5087058:	dfc11d17 	ldw	ra,1140(sp)
 508705c:	dc811c17 	ldw	r18,1136(sp)
 5087060:	dc411b17 	ldw	r17,1132(sp)
 5087064:	dc011a17 	ldw	r16,1128(sp)
 5087068:	dec11e04 	addi	sp,sp,1144
 508706c:	f800283a 	ret
 5087070:	047fffc4 	movi	r17,-1
 5087074:	003ff106 	br	508703c <__alt_data_end+0xfffb8e3c>

05087078 <_vsnprintf_r>:
 5087078:	30003716 	blt	r6,zero,5087158 <_vsnprintf_r+0xe0>
 508707c:	deffe404 	addi	sp,sp,-112
 5087080:	00c08204 	movi	r3,520
 5087084:	dc001a15 	stw	r16,104(sp)
 5087088:	3005883a 	mov	r2,r6
 508708c:	dfc01b15 	stw	ra,108(sp)
 5087090:	d8c0030d 	sth	r3,12(sp)
 5087094:	d9400015 	stw	r5,0(sp)
 5087098:	d9400415 	stw	r5,16(sp)
 508709c:	380d883a 	mov	r6,r7
 50870a0:	2021883a 	mov	r16,r4
 50870a4:	10001326 	beq	r2,zero,50870f4 <_vsnprintf_r+0x7c>
 50870a8:	00c14274 	movhi	r3,1289
 50870ac:	18df2104 	addi	r3,r3,31876
 50870b0:	19000017 	ldw	r4,0(r3)
 50870b4:	d9c01c17 	ldw	r7,112(sp)
 50870b8:	10bfffc4 	addi	r2,r2,-1
 50870bc:	d8800215 	stw	r2,8(sp)
 50870c0:	d8800515 	stw	r2,20(sp)
 50870c4:	d80b883a 	mov	r5,sp
 50870c8:	00bfffc4 	movi	r2,-1
 50870cc:	d880038d 	sth	r2,14(sp)
 50870d0:	5082bd00 	call	5082bd0 <___svfprintf_internal_r>
 50870d4:	00ffffc4 	movi	r3,-1
 50870d8:	10c01616 	blt	r2,r3,5087134 <_vsnprintf_r+0xbc>
 50870dc:	d8c00017 	ldw	r3,0(sp)
 50870e0:	18000005 	stb	zero,0(r3)
 50870e4:	dfc01b17 	ldw	ra,108(sp)
 50870e8:	dc001a17 	ldw	r16,104(sp)
 50870ec:	dec01c04 	addi	sp,sp,112
 50870f0:	f800283a 	ret
 50870f4:	00814274 	movhi	r2,1289
 50870f8:	109f2104 	addi	r2,r2,31876
 50870fc:	11000017 	ldw	r4,0(r2)
 5087100:	d9c01c17 	ldw	r7,112(sp)
 5087104:	00bfffc4 	movi	r2,-1
 5087108:	d80b883a 	mov	r5,sp
 508710c:	d8000215 	stw	zero,8(sp)
 5087110:	d8000515 	stw	zero,20(sp)
 5087114:	d880038d 	sth	r2,14(sp)
 5087118:	5082bd00 	call	5082bd0 <___svfprintf_internal_r>
 508711c:	00ffffc4 	movi	r3,-1
 5087120:	10c00716 	blt	r2,r3,5087140 <_vsnprintf_r+0xc8>
 5087124:	dfc01b17 	ldw	ra,108(sp)
 5087128:	dc001a17 	ldw	r16,104(sp)
 508712c:	dec01c04 	addi	sp,sp,112
 5087130:	f800283a 	ret
 5087134:	00c022c4 	movi	r3,139
 5087138:	80c00015 	stw	r3,0(r16)
 508713c:	003fe706 	br	50870dc <__alt_data_end+0xfffb8edc>
 5087140:	00c022c4 	movi	r3,139
 5087144:	80c00015 	stw	r3,0(r16)
 5087148:	dfc01b17 	ldw	ra,108(sp)
 508714c:	dc001a17 	ldw	r16,104(sp)
 5087150:	dec01c04 	addi	sp,sp,112
 5087154:	f800283a 	ret
 5087158:	008022c4 	movi	r2,139
 508715c:	20800015 	stw	r2,0(r4)
 5087160:	00bfffc4 	movi	r2,-1
 5087164:	f800283a 	ret

05087168 <vsnprintf>:
 5087168:	defffe04 	addi	sp,sp,-8
 508716c:	00814274 	movhi	r2,1289
 5087170:	d9c00015 	stw	r7,0(sp)
 5087174:	109f2104 	addi	r2,r2,31876
 5087178:	300f883a 	mov	r7,r6
 508717c:	280d883a 	mov	r6,r5
 5087180:	200b883a 	mov	r5,r4
 5087184:	11000017 	ldw	r4,0(r2)
 5087188:	dfc00115 	stw	ra,4(sp)
 508718c:	50870780 	call	5087078 <_vsnprintf_r>
 5087190:	dfc00117 	ldw	ra,4(sp)
 5087194:	dec00204 	addi	sp,sp,8
 5087198:	f800283a 	ret

0508719c <__swsetup_r>:
 508719c:	00814274 	movhi	r2,1289
 50871a0:	defffd04 	addi	sp,sp,-12
 50871a4:	109f2104 	addi	r2,r2,31876
 50871a8:	dc400115 	stw	r17,4(sp)
 50871ac:	2023883a 	mov	r17,r4
 50871b0:	11000017 	ldw	r4,0(r2)
 50871b4:	dc000015 	stw	r16,0(sp)
 50871b8:	dfc00215 	stw	ra,8(sp)
 50871bc:	2821883a 	mov	r16,r5
 50871c0:	20000226 	beq	r4,zero,50871cc <__swsetup_r+0x30>
 50871c4:	20800e17 	ldw	r2,56(r4)
 50871c8:	10003126 	beq	r2,zero,5087290 <__swsetup_r+0xf4>
 50871cc:	8080030b 	ldhu	r2,12(r16)
 50871d0:	10c0020c 	andi	r3,r2,8
 50871d4:	1009883a 	mov	r4,r2
 50871d8:	18000f26 	beq	r3,zero,5087218 <__swsetup_r+0x7c>
 50871dc:	80c00417 	ldw	r3,16(r16)
 50871e0:	18001526 	beq	r3,zero,5087238 <__swsetup_r+0x9c>
 50871e4:	1100004c 	andi	r4,r2,1
 50871e8:	20001c1e 	bne	r4,zero,508725c <__swsetup_r+0xc0>
 50871ec:	1080008c 	andi	r2,r2,2
 50871f0:	1000291e 	bne	r2,zero,5087298 <__swsetup_r+0xfc>
 50871f4:	80800517 	ldw	r2,20(r16)
 50871f8:	80800215 	stw	r2,8(r16)
 50871fc:	18001c26 	beq	r3,zero,5087270 <__swsetup_r+0xd4>
 5087200:	0005883a 	mov	r2,zero
 5087204:	dfc00217 	ldw	ra,8(sp)
 5087208:	dc400117 	ldw	r17,4(sp)
 508720c:	dc000017 	ldw	r16,0(sp)
 5087210:	dec00304 	addi	sp,sp,12
 5087214:	f800283a 	ret
 5087218:	2080040c 	andi	r2,r4,16
 508721c:	10002e26 	beq	r2,zero,50872d8 <__swsetup_r+0x13c>
 5087220:	2080010c 	andi	r2,r4,4
 5087224:	10001e1e 	bne	r2,zero,50872a0 <__swsetup_r+0x104>
 5087228:	80c00417 	ldw	r3,16(r16)
 508722c:	20800214 	ori	r2,r4,8
 5087230:	8080030d 	sth	r2,12(r16)
 5087234:	183feb1e 	bne	r3,zero,50871e4 <__alt_data_end+0xfffb8fe4>
 5087238:	1100a00c 	andi	r4,r2,640
 508723c:	01408004 	movi	r5,512
 5087240:	217fe826 	beq	r4,r5,50871e4 <__alt_data_end+0xfffb8fe4>
 5087244:	800b883a 	mov	r5,r16
 5087248:	8809883a 	mov	r4,r17
 508724c:	5089d140 	call	5089d14 <__smakebuf_r>
 5087250:	8080030b 	ldhu	r2,12(r16)
 5087254:	80c00417 	ldw	r3,16(r16)
 5087258:	003fe206 	br	50871e4 <__alt_data_end+0xfffb8fe4>
 508725c:	80800517 	ldw	r2,20(r16)
 5087260:	80000215 	stw	zero,8(r16)
 5087264:	0085c83a 	sub	r2,zero,r2
 5087268:	80800615 	stw	r2,24(r16)
 508726c:	183fe41e 	bne	r3,zero,5087200 <__alt_data_end+0xfffb9000>
 5087270:	80c0030b 	ldhu	r3,12(r16)
 5087274:	0005883a 	mov	r2,zero
 5087278:	1900200c 	andi	r4,r3,128
 508727c:	203fe126 	beq	r4,zero,5087204 <__alt_data_end+0xfffb9004>
 5087280:	18c01014 	ori	r3,r3,64
 5087284:	80c0030d 	sth	r3,12(r16)
 5087288:	00bfffc4 	movi	r2,-1
 508728c:	003fdd06 	br	5087204 <__alt_data_end+0xfffb9004>
 5087290:	50891700 	call	5089170 <__sinit>
 5087294:	003fcd06 	br	50871cc <__alt_data_end+0xfffb8fcc>
 5087298:	0005883a 	mov	r2,zero
 508729c:	003fd606 	br	50871f8 <__alt_data_end+0xfffb8ff8>
 50872a0:	81400c17 	ldw	r5,48(r16)
 50872a4:	28000626 	beq	r5,zero,50872c0 <__swsetup_r+0x124>
 50872a8:	80801004 	addi	r2,r16,64
 50872ac:	28800326 	beq	r5,r2,50872bc <__swsetup_r+0x120>
 50872b0:	8809883a 	mov	r4,r17
 50872b4:	50892e40 	call	50892e4 <_free_r>
 50872b8:	8100030b 	ldhu	r4,12(r16)
 50872bc:	80000c15 	stw	zero,48(r16)
 50872c0:	80c00417 	ldw	r3,16(r16)
 50872c4:	00bff6c4 	movi	r2,-37
 50872c8:	1108703a 	and	r4,r2,r4
 50872cc:	80000115 	stw	zero,4(r16)
 50872d0:	80c00015 	stw	r3,0(r16)
 50872d4:	003fd506 	br	508722c <__alt_data_end+0xfffb902c>
 50872d8:	00800244 	movi	r2,9
 50872dc:	88800015 	stw	r2,0(r17)
 50872e0:	20801014 	ori	r2,r4,64
 50872e4:	8080030d 	sth	r2,12(r16)
 50872e8:	00bfffc4 	movi	r2,-1
 50872ec:	003fc506 	br	5087204 <__alt_data_end+0xfffb9004>

050872f0 <quorem>:
 50872f0:	defff704 	addi	sp,sp,-36
 50872f4:	dc800215 	stw	r18,8(sp)
 50872f8:	20800417 	ldw	r2,16(r4)
 50872fc:	2c800417 	ldw	r18,16(r5)
 5087300:	dfc00815 	stw	ra,32(sp)
 5087304:	ddc00715 	stw	r23,28(sp)
 5087308:	dd800615 	stw	r22,24(sp)
 508730c:	dd400515 	stw	r21,20(sp)
 5087310:	dd000415 	stw	r20,16(sp)
 5087314:	dcc00315 	stw	r19,12(sp)
 5087318:	dc400115 	stw	r17,4(sp)
 508731c:	dc000015 	stw	r16,0(sp)
 5087320:	14807116 	blt	r2,r18,50874e8 <quorem+0x1f8>
 5087324:	94bfffc4 	addi	r18,r18,-1
 5087328:	94ad883a 	add	r22,r18,r18
 508732c:	b5ad883a 	add	r22,r22,r22
 5087330:	2c400504 	addi	r17,r5,20
 5087334:	8da9883a 	add	r20,r17,r22
 5087338:	25400504 	addi	r21,r4,20
 508733c:	282f883a 	mov	r23,r5
 5087340:	adad883a 	add	r22,r21,r22
 5087344:	a1400017 	ldw	r5,0(r20)
 5087348:	2021883a 	mov	r16,r4
 508734c:	b1000017 	ldw	r4,0(r22)
 5087350:	29400044 	addi	r5,r5,1
 5087354:	50828780 	call	5082878 <__udivsi3>
 5087358:	1027883a 	mov	r19,r2
 508735c:	10002c26 	beq	r2,zero,5087410 <quorem+0x120>
 5087360:	a813883a 	mov	r9,r21
 5087364:	880b883a 	mov	r5,r17
 5087368:	0009883a 	mov	r4,zero
 508736c:	000d883a 	mov	r6,zero
 5087370:	2a000017 	ldw	r8,0(r5)
 5087374:	49c00017 	ldw	r7,0(r9)
 5087378:	29400104 	addi	r5,r5,4
 508737c:	40bfffcc 	andi	r2,r8,65535
 5087380:	14c5383a 	mul	r2,r2,r19
 5087384:	4010d43a 	srli	r8,r8,16
 5087388:	38ffffcc 	andi	r3,r7,65535
 508738c:	1105883a 	add	r2,r2,r4
 5087390:	1008d43a 	srli	r4,r2,16
 5087394:	44d1383a 	mul	r8,r8,r19
 5087398:	198d883a 	add	r6,r3,r6
 508739c:	10ffffcc 	andi	r3,r2,65535
 50873a0:	30c7c83a 	sub	r3,r6,r3
 50873a4:	380ed43a 	srli	r7,r7,16
 50873a8:	4105883a 	add	r2,r8,r4
 50873ac:	180dd43a 	srai	r6,r3,16
 50873b0:	113fffcc 	andi	r4,r2,65535
 50873b4:	390fc83a 	sub	r7,r7,r4
 50873b8:	398d883a 	add	r6,r7,r6
 50873bc:	300e943a 	slli	r7,r6,16
 50873c0:	18ffffcc 	andi	r3,r3,65535
 50873c4:	1008d43a 	srli	r4,r2,16
 50873c8:	38ceb03a 	or	r7,r7,r3
 50873cc:	49c00015 	stw	r7,0(r9)
 50873d0:	300dd43a 	srai	r6,r6,16
 50873d4:	4a400104 	addi	r9,r9,4
 50873d8:	a17fe52e 	bgeu	r20,r5,5087370 <__alt_data_end+0xfffb9170>
 50873dc:	b0800017 	ldw	r2,0(r22)
 50873e0:	10000b1e 	bne	r2,zero,5087410 <quorem+0x120>
 50873e4:	b0bfff04 	addi	r2,r22,-4
 50873e8:	a880082e 	bgeu	r21,r2,508740c <quorem+0x11c>
 50873ec:	b0ffff17 	ldw	r3,-4(r22)
 50873f0:	18000326 	beq	r3,zero,5087400 <quorem+0x110>
 50873f4:	00000506 	br	508740c <quorem+0x11c>
 50873f8:	10c00017 	ldw	r3,0(r2)
 50873fc:	1800031e 	bne	r3,zero,508740c <quorem+0x11c>
 5087400:	10bfff04 	addi	r2,r2,-4
 5087404:	94bfffc4 	addi	r18,r18,-1
 5087408:	a8bffb36 	bltu	r21,r2,50873f8 <__alt_data_end+0xfffb91f8>
 508740c:	84800415 	stw	r18,16(r16)
 5087410:	b80b883a 	mov	r5,r23
 5087414:	8009883a 	mov	r4,r16
 5087418:	508b4540 	call	508b454 <__mcmp>
 508741c:	10002616 	blt	r2,zero,50874b8 <quorem+0x1c8>
 5087420:	9cc00044 	addi	r19,r19,1
 5087424:	a805883a 	mov	r2,r21
 5087428:	000b883a 	mov	r5,zero
 508742c:	11000017 	ldw	r4,0(r2)
 5087430:	89800017 	ldw	r6,0(r17)
 5087434:	10800104 	addi	r2,r2,4
 5087438:	20ffffcc 	andi	r3,r4,65535
 508743c:	194b883a 	add	r5,r3,r5
 5087440:	30ffffcc 	andi	r3,r6,65535
 5087444:	28c7c83a 	sub	r3,r5,r3
 5087448:	300cd43a 	srli	r6,r6,16
 508744c:	2008d43a 	srli	r4,r4,16
 5087450:	180bd43a 	srai	r5,r3,16
 5087454:	18ffffcc 	andi	r3,r3,65535
 5087458:	2189c83a 	sub	r4,r4,r6
 508745c:	2149883a 	add	r4,r4,r5
 5087460:	200c943a 	slli	r6,r4,16
 5087464:	8c400104 	addi	r17,r17,4
 5087468:	200bd43a 	srai	r5,r4,16
 508746c:	30c6b03a 	or	r3,r6,r3
 5087470:	10ffff15 	stw	r3,-4(r2)
 5087474:	a47fed2e 	bgeu	r20,r17,508742c <__alt_data_end+0xfffb922c>
 5087478:	9485883a 	add	r2,r18,r18
 508747c:	1085883a 	add	r2,r2,r2
 5087480:	a887883a 	add	r3,r21,r2
 5087484:	18800017 	ldw	r2,0(r3)
 5087488:	10000b1e 	bne	r2,zero,50874b8 <quorem+0x1c8>
 508748c:	18bfff04 	addi	r2,r3,-4
 5087490:	a880082e 	bgeu	r21,r2,50874b4 <quorem+0x1c4>
 5087494:	18ffff17 	ldw	r3,-4(r3)
 5087498:	18000326 	beq	r3,zero,50874a8 <quorem+0x1b8>
 508749c:	00000506 	br	50874b4 <quorem+0x1c4>
 50874a0:	10c00017 	ldw	r3,0(r2)
 50874a4:	1800031e 	bne	r3,zero,50874b4 <quorem+0x1c4>
 50874a8:	10bfff04 	addi	r2,r2,-4
 50874ac:	94bfffc4 	addi	r18,r18,-1
 50874b0:	a8bffb36 	bltu	r21,r2,50874a0 <__alt_data_end+0xfffb92a0>
 50874b4:	84800415 	stw	r18,16(r16)
 50874b8:	9805883a 	mov	r2,r19
 50874bc:	dfc00817 	ldw	ra,32(sp)
 50874c0:	ddc00717 	ldw	r23,28(sp)
 50874c4:	dd800617 	ldw	r22,24(sp)
 50874c8:	dd400517 	ldw	r21,20(sp)
 50874cc:	dd000417 	ldw	r20,16(sp)
 50874d0:	dcc00317 	ldw	r19,12(sp)
 50874d4:	dc800217 	ldw	r18,8(sp)
 50874d8:	dc400117 	ldw	r17,4(sp)
 50874dc:	dc000017 	ldw	r16,0(sp)
 50874e0:	dec00904 	addi	sp,sp,36
 50874e4:	f800283a 	ret
 50874e8:	0005883a 	mov	r2,zero
 50874ec:	003ff306 	br	50874bc <__alt_data_end+0xfffb92bc>

050874f0 <_dtoa_r>:
 50874f0:	20801017 	ldw	r2,64(r4)
 50874f4:	deffde04 	addi	sp,sp,-136
 50874f8:	df002015 	stw	fp,128(sp)
 50874fc:	dcc01b15 	stw	r19,108(sp)
 5087500:	dc801a15 	stw	r18,104(sp)
 5087504:	dc401915 	stw	r17,100(sp)
 5087508:	dc001815 	stw	r16,96(sp)
 508750c:	dfc02115 	stw	ra,132(sp)
 5087510:	ddc01f15 	stw	r23,124(sp)
 5087514:	dd801e15 	stw	r22,120(sp)
 5087518:	dd401d15 	stw	r21,116(sp)
 508751c:	dd001c15 	stw	r20,112(sp)
 5087520:	d9c00315 	stw	r7,12(sp)
 5087524:	2039883a 	mov	fp,r4
 5087528:	3023883a 	mov	r17,r6
 508752c:	2825883a 	mov	r18,r5
 5087530:	dc002417 	ldw	r16,144(sp)
 5087534:	3027883a 	mov	r19,r6
 5087538:	10000826 	beq	r2,zero,508755c <_dtoa_r+0x6c>
 508753c:	21801117 	ldw	r6,68(r4)
 5087540:	00c00044 	movi	r3,1
 5087544:	100b883a 	mov	r5,r2
 5087548:	1986983a 	sll	r3,r3,r6
 508754c:	11800115 	stw	r6,4(r2)
 5087550:	10c00215 	stw	r3,8(r2)
 5087554:	508ac340 	call	508ac34 <_Bfree>
 5087558:	e0001015 	stw	zero,64(fp)
 508755c:	88002e16 	blt	r17,zero,5087618 <_dtoa_r+0x128>
 5087560:	80000015 	stw	zero,0(r16)
 5087564:	889ffc2c 	andhi	r2,r17,32752
 5087568:	00dffc34 	movhi	r3,32752
 508756c:	10c01c26 	beq	r2,r3,50875e0 <_dtoa_r+0xf0>
 5087570:	000d883a 	mov	r6,zero
 5087574:	000f883a 	mov	r7,zero
 5087578:	9009883a 	mov	r4,r18
 508757c:	980b883a 	mov	r5,r19
 5087580:	50913980 	call	5091398 <__eqdf2>
 5087584:	10002b1e 	bne	r2,zero,5087634 <_dtoa_r+0x144>
 5087588:	d9c02317 	ldw	r7,140(sp)
 508758c:	00800044 	movi	r2,1
 5087590:	38800015 	stw	r2,0(r7)
 5087594:	d8802517 	ldw	r2,148(sp)
 5087598:	10019e26 	beq	r2,zero,5087c14 <_dtoa_r+0x724>
 508759c:	d8c02517 	ldw	r3,148(sp)
 50875a0:	00814274 	movhi	r2,1289
 50875a4:	1097b444 	addi	r2,r2,24273
 50875a8:	18800015 	stw	r2,0(r3)
 50875ac:	10bfffc4 	addi	r2,r2,-1
 50875b0:	dfc02117 	ldw	ra,132(sp)
 50875b4:	df002017 	ldw	fp,128(sp)
 50875b8:	ddc01f17 	ldw	r23,124(sp)
 50875bc:	dd801e17 	ldw	r22,120(sp)
 50875c0:	dd401d17 	ldw	r21,116(sp)
 50875c4:	dd001c17 	ldw	r20,112(sp)
 50875c8:	dcc01b17 	ldw	r19,108(sp)
 50875cc:	dc801a17 	ldw	r18,104(sp)
 50875d0:	dc401917 	ldw	r17,100(sp)
 50875d4:	dc001817 	ldw	r16,96(sp)
 50875d8:	dec02204 	addi	sp,sp,136
 50875dc:	f800283a 	ret
 50875e0:	d8c02317 	ldw	r3,140(sp)
 50875e4:	0089c3c4 	movi	r2,9999
 50875e8:	18800015 	stw	r2,0(r3)
 50875ec:	90017726 	beq	r18,zero,5087bcc <_dtoa_r+0x6dc>
 50875f0:	00814274 	movhi	r2,1289
 50875f4:	1097c804 	addi	r2,r2,24352
 50875f8:	d9002517 	ldw	r4,148(sp)
 50875fc:	203fec26 	beq	r4,zero,50875b0 <__alt_data_end+0xfffb93b0>
 5087600:	10c000c7 	ldb	r3,3(r2)
 5087604:	1801781e 	bne	r3,zero,5087be8 <_dtoa_r+0x6f8>
 5087608:	10c000c4 	addi	r3,r2,3
 508760c:	d9802517 	ldw	r6,148(sp)
 5087610:	30c00015 	stw	r3,0(r6)
 5087614:	003fe606 	br	50875b0 <__alt_data_end+0xfffb93b0>
 5087618:	04e00034 	movhi	r19,32768
 508761c:	9cffffc4 	addi	r19,r19,-1
 5087620:	00800044 	movi	r2,1
 5087624:	8ce6703a 	and	r19,r17,r19
 5087628:	80800015 	stw	r2,0(r16)
 508762c:	9823883a 	mov	r17,r19
 5087630:	003fcc06 	br	5087564 <__alt_data_end+0xfffb9364>
 5087634:	d8800204 	addi	r2,sp,8
 5087638:	d8800015 	stw	r2,0(sp)
 508763c:	d9c00104 	addi	r7,sp,4
 5087640:	900b883a 	mov	r5,r18
 5087644:	980d883a 	mov	r6,r19
 5087648:	e009883a 	mov	r4,fp
 508764c:	8820d53a 	srli	r16,r17,20
 5087650:	508b8200 	call	508b820 <__d2b>
 5087654:	d8800915 	stw	r2,36(sp)
 5087658:	8001651e 	bne	r16,zero,5087bf0 <_dtoa_r+0x700>
 508765c:	dd800217 	ldw	r22,8(sp)
 5087660:	dc000117 	ldw	r16,4(sp)
 5087664:	00800804 	movi	r2,32
 5087668:	b421883a 	add	r16,r22,r16
 508766c:	80c10c84 	addi	r3,r16,1074
 5087670:	10c2d10e 	bge	r2,r3,50881b8 <_dtoa_r+0xcc8>
 5087674:	00801004 	movi	r2,64
 5087678:	81010484 	addi	r4,r16,1042
 508767c:	10c7c83a 	sub	r3,r2,r3
 5087680:	9108d83a 	srl	r4,r18,r4
 5087684:	88e2983a 	sll	r17,r17,r3
 5087688:	2448b03a 	or	r4,r4,r17
 508768c:	50927600 	call	5092760 <__floatunsidf>
 5087690:	017f8434 	movhi	r5,65040
 5087694:	01800044 	movi	r6,1
 5087698:	1009883a 	mov	r4,r2
 508769c:	194b883a 	add	r5,r3,r5
 50876a0:	843fffc4 	addi	r16,r16,-1
 50876a4:	d9801115 	stw	r6,68(sp)
 50876a8:	000d883a 	mov	r6,zero
 50876ac:	01cffe34 	movhi	r7,16376
 50876b0:	5091d080 	call	5091d08 <__subdf3>
 50876b4:	0198dbf4 	movhi	r6,25455
 50876b8:	01cff4f4 	movhi	r7,16339
 50876bc:	3190d844 	addi	r6,r6,17249
 50876c0:	39e1e9c4 	addi	r7,r7,-30809
 50876c4:	1009883a 	mov	r4,r2
 50876c8:	180b883a 	mov	r5,r3
 50876cc:	50915f00 	call	50915f0 <__muldf3>
 50876d0:	01a2d874 	movhi	r6,35681
 50876d4:	01cff1f4 	movhi	r7,16327
 50876d8:	31b22cc4 	addi	r6,r6,-14157
 50876dc:	39e28a04 	addi	r7,r7,-30168
 50876e0:	180b883a 	mov	r5,r3
 50876e4:	1009883a 	mov	r4,r2
 50876e8:	50902040 	call	5090204 <__adddf3>
 50876ec:	8009883a 	mov	r4,r16
 50876f0:	1029883a 	mov	r20,r2
 50876f4:	1823883a 	mov	r17,r3
 50876f8:	50926840 	call	5092684 <__floatsidf>
 50876fc:	019427f4 	movhi	r6,20639
 5087700:	01cff4f4 	movhi	r7,16339
 5087704:	319e7ec4 	addi	r6,r6,31227
 5087708:	39d104c4 	addi	r7,r7,17427
 508770c:	1009883a 	mov	r4,r2
 5087710:	180b883a 	mov	r5,r3
 5087714:	50915f00 	call	50915f0 <__muldf3>
 5087718:	100d883a 	mov	r6,r2
 508771c:	180f883a 	mov	r7,r3
 5087720:	a009883a 	mov	r4,r20
 5087724:	880b883a 	mov	r5,r17
 5087728:	50902040 	call	5090204 <__adddf3>
 508772c:	1009883a 	mov	r4,r2
 5087730:	180b883a 	mov	r5,r3
 5087734:	1029883a 	mov	r20,r2
 5087738:	1823883a 	mov	r17,r3
 508773c:	50926040 	call	5092604 <__fixdfsi>
 5087740:	000d883a 	mov	r6,zero
 5087744:	000f883a 	mov	r7,zero
 5087748:	a009883a 	mov	r4,r20
 508774c:	880b883a 	mov	r5,r17
 5087750:	d8800515 	stw	r2,20(sp)
 5087754:	50914fc0 	call	50914fc <__ledf2>
 5087758:	10028716 	blt	r2,zero,5088178 <_dtoa_r+0xc88>
 508775c:	d8c00517 	ldw	r3,20(sp)
 5087760:	00800584 	movi	r2,22
 5087764:	10c27536 	bltu	r2,r3,508813c <_dtoa_r+0xc4c>
 5087768:	180490fa 	slli	r2,r3,3
 508776c:	00c14274 	movhi	r3,1289
 5087770:	18d7e404 	addi	r3,r3,24464
 5087774:	1885883a 	add	r2,r3,r2
 5087778:	11000017 	ldw	r4,0(r2)
 508777c:	11400117 	ldw	r5,4(r2)
 5087780:	900d883a 	mov	r6,r18
 5087784:	980f883a 	mov	r7,r19
 5087788:	50914200 	call	5091420 <__gedf2>
 508778c:	00828d0e 	bge	zero,r2,50881c4 <_dtoa_r+0xcd4>
 5087790:	d9000517 	ldw	r4,20(sp)
 5087794:	d8000e15 	stw	zero,56(sp)
 5087798:	213fffc4 	addi	r4,r4,-1
 508779c:	d9000515 	stw	r4,20(sp)
 50877a0:	b42dc83a 	sub	r22,r22,r16
 50877a4:	b5bfffc4 	addi	r22,r22,-1
 50877a8:	b0026f16 	blt	r22,zero,5088168 <_dtoa_r+0xc78>
 50877ac:	d8000815 	stw	zero,32(sp)
 50877b0:	d9c00517 	ldw	r7,20(sp)
 50877b4:	38026416 	blt	r7,zero,5088148 <_dtoa_r+0xc58>
 50877b8:	b1ed883a 	add	r22,r22,r7
 50877bc:	d9c00d15 	stw	r7,52(sp)
 50877c0:	d8000a15 	stw	zero,40(sp)
 50877c4:	d9800317 	ldw	r6,12(sp)
 50877c8:	00800244 	movi	r2,9
 50877cc:	11811436 	bltu	r2,r6,5087c20 <_dtoa_r+0x730>
 50877d0:	00800144 	movi	r2,5
 50877d4:	1184e10e 	bge	r2,r6,5088b5c <_dtoa_r+0x166c>
 50877d8:	31bfff04 	addi	r6,r6,-4
 50877dc:	d9800315 	stw	r6,12(sp)
 50877e0:	0023883a 	mov	r17,zero
 50877e4:	d9800317 	ldw	r6,12(sp)
 50877e8:	008000c4 	movi	r2,3
 50877ec:	30836726 	beq	r6,r2,508858c <_dtoa_r+0x109c>
 50877f0:	1183410e 	bge	r2,r6,50884f8 <_dtoa_r+0x1008>
 50877f4:	d9c00317 	ldw	r7,12(sp)
 50877f8:	00800104 	movi	r2,4
 50877fc:	38827c26 	beq	r7,r2,50881f0 <_dtoa_r+0xd00>
 5087800:	00800144 	movi	r2,5
 5087804:	3884c41e 	bne	r7,r2,5088b18 <_dtoa_r+0x1628>
 5087808:	00800044 	movi	r2,1
 508780c:	d8800b15 	stw	r2,44(sp)
 5087810:	d8c00517 	ldw	r3,20(sp)
 5087814:	d9002217 	ldw	r4,136(sp)
 5087818:	1907883a 	add	r3,r3,r4
 508781c:	19800044 	addi	r6,r3,1
 5087820:	d8c00c15 	stw	r3,48(sp)
 5087824:	d9800615 	stw	r6,24(sp)
 5087828:	0183a40e 	bge	zero,r6,50886bc <_dtoa_r+0x11cc>
 508782c:	d9800617 	ldw	r6,24(sp)
 5087830:	3021883a 	mov	r16,r6
 5087834:	e0001115 	stw	zero,68(fp)
 5087838:	008005c4 	movi	r2,23
 508783c:	1184c92e 	bgeu	r2,r6,5088b64 <_dtoa_r+0x1674>
 5087840:	00c00044 	movi	r3,1
 5087844:	00800104 	movi	r2,4
 5087848:	1085883a 	add	r2,r2,r2
 508784c:	11000504 	addi	r4,r2,20
 5087850:	180b883a 	mov	r5,r3
 5087854:	18c00044 	addi	r3,r3,1
 5087858:	313ffb2e 	bgeu	r6,r4,5087848 <__alt_data_end+0xfffb9648>
 508785c:	e1401115 	stw	r5,68(fp)
 5087860:	e009883a 	mov	r4,fp
 5087864:	508ab8c0 	call	508ab8c <_Balloc>
 5087868:	d8800715 	stw	r2,28(sp)
 508786c:	e0801015 	stw	r2,64(fp)
 5087870:	00800384 	movi	r2,14
 5087874:	1400f736 	bltu	r2,r16,5087c54 <_dtoa_r+0x764>
 5087878:	8800f626 	beq	r17,zero,5087c54 <_dtoa_r+0x764>
 508787c:	d9c00517 	ldw	r7,20(sp)
 5087880:	01c39a0e 	bge	zero,r7,50886ec <_dtoa_r+0x11fc>
 5087884:	388003cc 	andi	r2,r7,15
 5087888:	100490fa 	slli	r2,r2,3
 508788c:	382bd13a 	srai	r21,r7,4
 5087890:	00c14274 	movhi	r3,1289
 5087894:	18d7e404 	addi	r3,r3,24464
 5087898:	1885883a 	add	r2,r3,r2
 508789c:	a8c0040c 	andi	r3,r21,16
 50878a0:	12400017 	ldw	r9,0(r2)
 50878a4:	12000117 	ldw	r8,4(r2)
 50878a8:	18037926 	beq	r3,zero,5088690 <_dtoa_r+0x11a0>
 50878ac:	00814274 	movhi	r2,1289
 50878b0:	1097da04 	addi	r2,r2,24424
 50878b4:	11800817 	ldw	r6,32(r2)
 50878b8:	11c00917 	ldw	r7,36(r2)
 50878bc:	9009883a 	mov	r4,r18
 50878c0:	980b883a 	mov	r5,r19
 50878c4:	da001715 	stw	r8,92(sp)
 50878c8:	da401615 	stw	r9,88(sp)
 50878cc:	5090ab00 	call	5090ab0 <__divdf3>
 50878d0:	da001717 	ldw	r8,92(sp)
 50878d4:	da401617 	ldw	r9,88(sp)
 50878d8:	ad4003cc 	andi	r21,r21,15
 50878dc:	040000c4 	movi	r16,3
 50878e0:	1023883a 	mov	r17,r2
 50878e4:	1829883a 	mov	r20,r3
 50878e8:	a8001126 	beq	r21,zero,5087930 <_dtoa_r+0x440>
 50878ec:	05c14274 	movhi	r23,1289
 50878f0:	bdd7da04 	addi	r23,r23,24424
 50878f4:	4805883a 	mov	r2,r9
 50878f8:	4007883a 	mov	r3,r8
 50878fc:	a980004c 	andi	r6,r21,1
 5087900:	1009883a 	mov	r4,r2
 5087904:	a82bd07a 	srai	r21,r21,1
 5087908:	180b883a 	mov	r5,r3
 508790c:	30000426 	beq	r6,zero,5087920 <_dtoa_r+0x430>
 5087910:	b9800017 	ldw	r6,0(r23)
 5087914:	b9c00117 	ldw	r7,4(r23)
 5087918:	84000044 	addi	r16,r16,1
 508791c:	50915f00 	call	50915f0 <__muldf3>
 5087920:	bdc00204 	addi	r23,r23,8
 5087924:	a83ff51e 	bne	r21,zero,50878fc <__alt_data_end+0xfffb96fc>
 5087928:	1013883a 	mov	r9,r2
 508792c:	1811883a 	mov	r8,r3
 5087930:	480d883a 	mov	r6,r9
 5087934:	400f883a 	mov	r7,r8
 5087938:	8809883a 	mov	r4,r17
 508793c:	a00b883a 	mov	r5,r20
 5087940:	5090ab00 	call	5090ab0 <__divdf3>
 5087944:	d8800f15 	stw	r2,60(sp)
 5087948:	d8c01015 	stw	r3,64(sp)
 508794c:	d8c00e17 	ldw	r3,56(sp)
 5087950:	18000626 	beq	r3,zero,508796c <_dtoa_r+0x47c>
 5087954:	d9000f17 	ldw	r4,60(sp)
 5087958:	d9401017 	ldw	r5,64(sp)
 508795c:	000d883a 	mov	r6,zero
 5087960:	01cffc34 	movhi	r7,16368
 5087964:	50914fc0 	call	50914fc <__ledf2>
 5087968:	10040b16 	blt	r2,zero,5088998 <_dtoa_r+0x14a8>
 508796c:	8009883a 	mov	r4,r16
 5087970:	50926840 	call	5092684 <__floatsidf>
 5087974:	d9800f17 	ldw	r6,60(sp)
 5087978:	d9c01017 	ldw	r7,64(sp)
 508797c:	1009883a 	mov	r4,r2
 5087980:	180b883a 	mov	r5,r3
 5087984:	50915f00 	call	50915f0 <__muldf3>
 5087988:	000d883a 	mov	r6,zero
 508798c:	01d00734 	movhi	r7,16412
 5087990:	1009883a 	mov	r4,r2
 5087994:	180b883a 	mov	r5,r3
 5087998:	50902040 	call	5090204 <__adddf3>
 508799c:	1021883a 	mov	r16,r2
 50879a0:	d8800617 	ldw	r2,24(sp)
 50879a4:	047f3034 	movhi	r17,64704
 50879a8:	1c63883a 	add	r17,r3,r17
 50879ac:	10031826 	beq	r2,zero,5088610 <_dtoa_r+0x1120>
 50879b0:	d8c00517 	ldw	r3,20(sp)
 50879b4:	db000617 	ldw	r12,24(sp)
 50879b8:	d8c01315 	stw	r3,76(sp)
 50879bc:	d9000b17 	ldw	r4,44(sp)
 50879c0:	20038f26 	beq	r4,zero,5088800 <_dtoa_r+0x1310>
 50879c4:	60bfffc4 	addi	r2,r12,-1
 50879c8:	100490fa 	slli	r2,r2,3
 50879cc:	00c14274 	movhi	r3,1289
 50879d0:	18d7e404 	addi	r3,r3,24464
 50879d4:	1885883a 	add	r2,r3,r2
 50879d8:	11800017 	ldw	r6,0(r2)
 50879dc:	11c00117 	ldw	r7,4(r2)
 50879e0:	d8800717 	ldw	r2,28(sp)
 50879e4:	0009883a 	mov	r4,zero
 50879e8:	014ff834 	movhi	r5,16352
 50879ec:	db001615 	stw	r12,88(sp)
 50879f0:	15c00044 	addi	r23,r2,1
 50879f4:	5090ab00 	call	5090ab0 <__divdf3>
 50879f8:	800d883a 	mov	r6,r16
 50879fc:	880f883a 	mov	r7,r17
 5087a00:	1009883a 	mov	r4,r2
 5087a04:	180b883a 	mov	r5,r3
 5087a08:	5091d080 	call	5091d08 <__subdf3>
 5087a0c:	d9401017 	ldw	r5,64(sp)
 5087a10:	d9000f17 	ldw	r4,60(sp)
 5087a14:	102b883a 	mov	r21,r2
 5087a18:	d8c01215 	stw	r3,72(sp)
 5087a1c:	50926040 	call	5092604 <__fixdfsi>
 5087a20:	1009883a 	mov	r4,r2
 5087a24:	1029883a 	mov	r20,r2
 5087a28:	50926840 	call	5092684 <__floatsidf>
 5087a2c:	d9000f17 	ldw	r4,60(sp)
 5087a30:	d9401017 	ldw	r5,64(sp)
 5087a34:	100d883a 	mov	r6,r2
 5087a38:	180f883a 	mov	r7,r3
 5087a3c:	5091d080 	call	5091d08 <__subdf3>
 5087a40:	1823883a 	mov	r17,r3
 5087a44:	d8c00717 	ldw	r3,28(sp)
 5087a48:	d9401217 	ldw	r5,72(sp)
 5087a4c:	a2000c04 	addi	r8,r20,48
 5087a50:	1021883a 	mov	r16,r2
 5087a54:	1a000005 	stb	r8,0(r3)
 5087a58:	800d883a 	mov	r6,r16
 5087a5c:	880f883a 	mov	r7,r17
 5087a60:	a809883a 	mov	r4,r21
 5087a64:	4029883a 	mov	r20,r8
 5087a68:	50914200 	call	5091420 <__gedf2>
 5087a6c:	00841d16 	blt	zero,r2,5088ae4 <_dtoa_r+0x15f4>
 5087a70:	800d883a 	mov	r6,r16
 5087a74:	880f883a 	mov	r7,r17
 5087a78:	0009883a 	mov	r4,zero
 5087a7c:	014ffc34 	movhi	r5,16368
 5087a80:	5091d080 	call	5091d08 <__subdf3>
 5087a84:	d9401217 	ldw	r5,72(sp)
 5087a88:	100d883a 	mov	r6,r2
 5087a8c:	180f883a 	mov	r7,r3
 5087a90:	a809883a 	mov	r4,r21
 5087a94:	50914200 	call	5091420 <__gedf2>
 5087a98:	db001617 	ldw	r12,88(sp)
 5087a9c:	00840e16 	blt	zero,r2,5088ad8 <_dtoa_r+0x15e8>
 5087aa0:	00800044 	movi	r2,1
 5087aa4:	13006b0e 	bge	r2,r12,5087c54 <_dtoa_r+0x764>
 5087aa8:	d9000717 	ldw	r4,28(sp)
 5087aac:	dd800f15 	stw	r22,60(sp)
 5087ab0:	dcc01015 	stw	r19,64(sp)
 5087ab4:	2319883a 	add	r12,r4,r12
 5087ab8:	dcc01217 	ldw	r19,72(sp)
 5087abc:	602d883a 	mov	r22,r12
 5087ac0:	dc801215 	stw	r18,72(sp)
 5087ac4:	b825883a 	mov	r18,r23
 5087ac8:	00000906 	br	5087af0 <_dtoa_r+0x600>
 5087acc:	5091d080 	call	5091d08 <__subdf3>
 5087ad0:	a80d883a 	mov	r6,r21
 5087ad4:	980f883a 	mov	r7,r19
 5087ad8:	1009883a 	mov	r4,r2
 5087adc:	180b883a 	mov	r5,r3
 5087ae0:	50914fc0 	call	50914fc <__ledf2>
 5087ae4:	1003e816 	blt	r2,zero,5088a88 <_dtoa_r+0x1598>
 5087ae8:	b825883a 	mov	r18,r23
 5087aec:	bd83e926 	beq	r23,r22,5088a94 <_dtoa_r+0x15a4>
 5087af0:	a809883a 	mov	r4,r21
 5087af4:	980b883a 	mov	r5,r19
 5087af8:	000d883a 	mov	r6,zero
 5087afc:	01d00934 	movhi	r7,16420
 5087b00:	50915f00 	call	50915f0 <__muldf3>
 5087b04:	000d883a 	mov	r6,zero
 5087b08:	01d00934 	movhi	r7,16420
 5087b0c:	8009883a 	mov	r4,r16
 5087b10:	880b883a 	mov	r5,r17
 5087b14:	102b883a 	mov	r21,r2
 5087b18:	1827883a 	mov	r19,r3
 5087b1c:	50915f00 	call	50915f0 <__muldf3>
 5087b20:	180b883a 	mov	r5,r3
 5087b24:	1009883a 	mov	r4,r2
 5087b28:	1821883a 	mov	r16,r3
 5087b2c:	1023883a 	mov	r17,r2
 5087b30:	50926040 	call	5092604 <__fixdfsi>
 5087b34:	1009883a 	mov	r4,r2
 5087b38:	1029883a 	mov	r20,r2
 5087b3c:	50926840 	call	5092684 <__floatsidf>
 5087b40:	8809883a 	mov	r4,r17
 5087b44:	800b883a 	mov	r5,r16
 5087b48:	100d883a 	mov	r6,r2
 5087b4c:	180f883a 	mov	r7,r3
 5087b50:	5091d080 	call	5091d08 <__subdf3>
 5087b54:	a5000c04 	addi	r20,r20,48
 5087b58:	a80d883a 	mov	r6,r21
 5087b5c:	980f883a 	mov	r7,r19
 5087b60:	1009883a 	mov	r4,r2
 5087b64:	180b883a 	mov	r5,r3
 5087b68:	95000005 	stb	r20,0(r18)
 5087b6c:	1021883a 	mov	r16,r2
 5087b70:	1823883a 	mov	r17,r3
 5087b74:	50914fc0 	call	50914fc <__ledf2>
 5087b78:	bdc00044 	addi	r23,r23,1
 5087b7c:	800d883a 	mov	r6,r16
 5087b80:	880f883a 	mov	r7,r17
 5087b84:	0009883a 	mov	r4,zero
 5087b88:	014ffc34 	movhi	r5,16368
 5087b8c:	103fcf0e 	bge	r2,zero,5087acc <__alt_data_end+0xfffb98cc>
 5087b90:	d8c01317 	ldw	r3,76(sp)
 5087b94:	d8c00515 	stw	r3,20(sp)
 5087b98:	d9400917 	ldw	r5,36(sp)
 5087b9c:	e009883a 	mov	r4,fp
 5087ba0:	508ac340 	call	508ac34 <_Bfree>
 5087ba4:	d9000517 	ldw	r4,20(sp)
 5087ba8:	d9802317 	ldw	r6,140(sp)
 5087bac:	d9c02517 	ldw	r7,148(sp)
 5087bb0:	b8000005 	stb	zero,0(r23)
 5087bb4:	20800044 	addi	r2,r4,1
 5087bb8:	30800015 	stw	r2,0(r6)
 5087bbc:	3802aa26 	beq	r7,zero,5088668 <_dtoa_r+0x1178>
 5087bc0:	3dc00015 	stw	r23,0(r7)
 5087bc4:	d8800717 	ldw	r2,28(sp)
 5087bc8:	003e7906 	br	50875b0 <__alt_data_end+0xfffb93b0>
 5087bcc:	00800434 	movhi	r2,16
 5087bd0:	10bfffc4 	addi	r2,r2,-1
 5087bd4:	88a2703a 	and	r17,r17,r2
 5087bd8:	883e851e 	bne	r17,zero,50875f0 <__alt_data_end+0xfffb93f0>
 5087bdc:	00814274 	movhi	r2,1289
 5087be0:	1097c504 	addi	r2,r2,24340
 5087be4:	003e8406 	br	50875f8 <__alt_data_end+0xfffb93f8>
 5087be8:	10c00204 	addi	r3,r2,8
 5087bec:	003e8706 	br	508760c <__alt_data_end+0xfffb940c>
 5087bf0:	01400434 	movhi	r5,16
 5087bf4:	297fffc4 	addi	r5,r5,-1
 5087bf8:	994a703a 	and	r5,r19,r5
 5087bfc:	9009883a 	mov	r4,r18
 5087c00:	843f0044 	addi	r16,r16,-1023
 5087c04:	294ffc34 	orhi	r5,r5,16368
 5087c08:	dd800217 	ldw	r22,8(sp)
 5087c0c:	d8001115 	stw	zero,68(sp)
 5087c10:	003ea506 	br	50876a8 <__alt_data_end+0xfffb94a8>
 5087c14:	00814274 	movhi	r2,1289
 5087c18:	1097b404 	addi	r2,r2,24272
 5087c1c:	003e6406 	br	50875b0 <__alt_data_end+0xfffb93b0>
 5087c20:	e0001115 	stw	zero,68(fp)
 5087c24:	000b883a 	mov	r5,zero
 5087c28:	e009883a 	mov	r4,fp
 5087c2c:	508ab8c0 	call	508ab8c <_Balloc>
 5087c30:	01bfffc4 	movi	r6,-1
 5087c34:	01c00044 	movi	r7,1
 5087c38:	d8800715 	stw	r2,28(sp)
 5087c3c:	d9800c15 	stw	r6,48(sp)
 5087c40:	e0801015 	stw	r2,64(fp)
 5087c44:	d8000315 	stw	zero,12(sp)
 5087c48:	d9c00b15 	stw	r7,44(sp)
 5087c4c:	d9800615 	stw	r6,24(sp)
 5087c50:	d8002215 	stw	zero,136(sp)
 5087c54:	d8800117 	ldw	r2,4(sp)
 5087c58:	10008916 	blt	r2,zero,5087e80 <_dtoa_r+0x990>
 5087c5c:	d9000517 	ldw	r4,20(sp)
 5087c60:	00c00384 	movi	r3,14
 5087c64:	19008616 	blt	r3,r4,5087e80 <_dtoa_r+0x990>
 5087c68:	200490fa 	slli	r2,r4,3
 5087c6c:	00c14274 	movhi	r3,1289
 5087c70:	d9802217 	ldw	r6,136(sp)
 5087c74:	18d7e404 	addi	r3,r3,24464
 5087c78:	1885883a 	add	r2,r3,r2
 5087c7c:	14000017 	ldw	r16,0(r2)
 5087c80:	14400117 	ldw	r17,4(r2)
 5087c84:	30016316 	blt	r6,zero,5088214 <_dtoa_r+0xd24>
 5087c88:	800d883a 	mov	r6,r16
 5087c8c:	880f883a 	mov	r7,r17
 5087c90:	9009883a 	mov	r4,r18
 5087c94:	980b883a 	mov	r5,r19
 5087c98:	5090ab00 	call	5090ab0 <__divdf3>
 5087c9c:	180b883a 	mov	r5,r3
 5087ca0:	1009883a 	mov	r4,r2
 5087ca4:	50926040 	call	5092604 <__fixdfsi>
 5087ca8:	1009883a 	mov	r4,r2
 5087cac:	102b883a 	mov	r21,r2
 5087cb0:	50926840 	call	5092684 <__floatsidf>
 5087cb4:	800d883a 	mov	r6,r16
 5087cb8:	880f883a 	mov	r7,r17
 5087cbc:	1009883a 	mov	r4,r2
 5087cc0:	180b883a 	mov	r5,r3
 5087cc4:	50915f00 	call	50915f0 <__muldf3>
 5087cc8:	100d883a 	mov	r6,r2
 5087ccc:	180f883a 	mov	r7,r3
 5087cd0:	9009883a 	mov	r4,r18
 5087cd4:	980b883a 	mov	r5,r19
 5087cd8:	5091d080 	call	5091d08 <__subdf3>
 5087cdc:	d9c00717 	ldw	r7,28(sp)
 5087ce0:	1009883a 	mov	r4,r2
 5087ce4:	a8800c04 	addi	r2,r21,48
 5087ce8:	38800005 	stb	r2,0(r7)
 5087cec:	3dc00044 	addi	r23,r7,1
 5087cf0:	d9c00617 	ldw	r7,24(sp)
 5087cf4:	01800044 	movi	r6,1
 5087cf8:	180b883a 	mov	r5,r3
 5087cfc:	2005883a 	mov	r2,r4
 5087d00:	39803826 	beq	r7,r6,5087de4 <_dtoa_r+0x8f4>
 5087d04:	000d883a 	mov	r6,zero
 5087d08:	01d00934 	movhi	r7,16420
 5087d0c:	50915f00 	call	50915f0 <__muldf3>
 5087d10:	000d883a 	mov	r6,zero
 5087d14:	000f883a 	mov	r7,zero
 5087d18:	1009883a 	mov	r4,r2
 5087d1c:	180b883a 	mov	r5,r3
 5087d20:	1025883a 	mov	r18,r2
 5087d24:	1827883a 	mov	r19,r3
 5087d28:	50913980 	call	5091398 <__eqdf2>
 5087d2c:	103f9a26 	beq	r2,zero,5087b98 <__alt_data_end+0xfffb9998>
 5087d30:	d9c00617 	ldw	r7,24(sp)
 5087d34:	d8c00717 	ldw	r3,28(sp)
 5087d38:	b829883a 	mov	r20,r23
 5087d3c:	38bfffc4 	addi	r2,r7,-1
 5087d40:	18ad883a 	add	r22,r3,r2
 5087d44:	00000a06 	br	5087d70 <_dtoa_r+0x880>
 5087d48:	50915f00 	call	50915f0 <__muldf3>
 5087d4c:	000d883a 	mov	r6,zero
 5087d50:	000f883a 	mov	r7,zero
 5087d54:	1009883a 	mov	r4,r2
 5087d58:	180b883a 	mov	r5,r3
 5087d5c:	1025883a 	mov	r18,r2
 5087d60:	1827883a 	mov	r19,r3
 5087d64:	b829883a 	mov	r20,r23
 5087d68:	50913980 	call	5091398 <__eqdf2>
 5087d6c:	103f8a26 	beq	r2,zero,5087b98 <__alt_data_end+0xfffb9998>
 5087d70:	800d883a 	mov	r6,r16
 5087d74:	880f883a 	mov	r7,r17
 5087d78:	9009883a 	mov	r4,r18
 5087d7c:	980b883a 	mov	r5,r19
 5087d80:	5090ab00 	call	5090ab0 <__divdf3>
 5087d84:	180b883a 	mov	r5,r3
 5087d88:	1009883a 	mov	r4,r2
 5087d8c:	50926040 	call	5092604 <__fixdfsi>
 5087d90:	1009883a 	mov	r4,r2
 5087d94:	102b883a 	mov	r21,r2
 5087d98:	50926840 	call	5092684 <__floatsidf>
 5087d9c:	800d883a 	mov	r6,r16
 5087da0:	880f883a 	mov	r7,r17
 5087da4:	1009883a 	mov	r4,r2
 5087da8:	180b883a 	mov	r5,r3
 5087dac:	50915f00 	call	50915f0 <__muldf3>
 5087db0:	100d883a 	mov	r6,r2
 5087db4:	180f883a 	mov	r7,r3
 5087db8:	9009883a 	mov	r4,r18
 5087dbc:	980b883a 	mov	r5,r19
 5087dc0:	5091d080 	call	5091d08 <__subdf3>
 5087dc4:	aa000c04 	addi	r8,r21,48
 5087dc8:	a2000005 	stb	r8,0(r20)
 5087dcc:	000d883a 	mov	r6,zero
 5087dd0:	01d00934 	movhi	r7,16420
 5087dd4:	1009883a 	mov	r4,r2
 5087dd8:	180b883a 	mov	r5,r3
 5087ddc:	a5c00044 	addi	r23,r20,1
 5087de0:	b53fd91e 	bne	r22,r20,5087d48 <__alt_data_end+0xfffb9b48>
 5087de4:	100d883a 	mov	r6,r2
 5087de8:	180f883a 	mov	r7,r3
 5087dec:	1009883a 	mov	r4,r2
 5087df0:	180b883a 	mov	r5,r3
 5087df4:	50902040 	call	5090204 <__adddf3>
 5087df8:	100d883a 	mov	r6,r2
 5087dfc:	180f883a 	mov	r7,r3
 5087e00:	8009883a 	mov	r4,r16
 5087e04:	880b883a 	mov	r5,r17
 5087e08:	1027883a 	mov	r19,r2
 5087e0c:	1825883a 	mov	r18,r3
 5087e10:	50914fc0 	call	50914fc <__ledf2>
 5087e14:	10000816 	blt	r2,zero,5087e38 <_dtoa_r+0x948>
 5087e18:	980d883a 	mov	r6,r19
 5087e1c:	900f883a 	mov	r7,r18
 5087e20:	8009883a 	mov	r4,r16
 5087e24:	880b883a 	mov	r5,r17
 5087e28:	50913980 	call	5091398 <__eqdf2>
 5087e2c:	103f5a1e 	bne	r2,zero,5087b98 <__alt_data_end+0xfffb9998>
 5087e30:	ad40004c 	andi	r21,r21,1
 5087e34:	a83f5826 	beq	r21,zero,5087b98 <__alt_data_end+0xfffb9998>
 5087e38:	bd3fffc3 	ldbu	r20,-1(r23)
 5087e3c:	b8bfffc4 	addi	r2,r23,-1
 5087e40:	1007883a 	mov	r3,r2
 5087e44:	01400e44 	movi	r5,57
 5087e48:	d9800717 	ldw	r6,28(sp)
 5087e4c:	00000506 	br	5087e64 <_dtoa_r+0x974>
 5087e50:	18ffffc4 	addi	r3,r3,-1
 5087e54:	11824726 	beq	r2,r6,5088774 <_dtoa_r+0x1284>
 5087e58:	1d000003 	ldbu	r20,0(r3)
 5087e5c:	102f883a 	mov	r23,r2
 5087e60:	10bfffc4 	addi	r2,r2,-1
 5087e64:	a1003fcc 	andi	r4,r20,255
 5087e68:	2100201c 	xori	r4,r4,128
 5087e6c:	213fe004 	addi	r4,r4,-128
 5087e70:	217ff726 	beq	r4,r5,5087e50 <__alt_data_end+0xfffb9c50>
 5087e74:	a2000044 	addi	r8,r20,1
 5087e78:	12000005 	stb	r8,0(r2)
 5087e7c:	003f4606 	br	5087b98 <__alt_data_end+0xfffb9998>
 5087e80:	d9000b17 	ldw	r4,44(sp)
 5087e84:	2000c826 	beq	r4,zero,50881a8 <_dtoa_r+0xcb8>
 5087e88:	d9800317 	ldw	r6,12(sp)
 5087e8c:	00c00044 	movi	r3,1
 5087e90:	1980f90e 	bge	r3,r6,5088278 <_dtoa_r+0xd88>
 5087e94:	d8800617 	ldw	r2,24(sp)
 5087e98:	d8c00a17 	ldw	r3,40(sp)
 5087e9c:	157fffc4 	addi	r21,r2,-1
 5087ea0:	1d41f316 	blt	r3,r21,5088670 <_dtoa_r+0x1180>
 5087ea4:	1d6bc83a 	sub	r21,r3,r21
 5087ea8:	d9c00617 	ldw	r7,24(sp)
 5087eac:	3802aa16 	blt	r7,zero,5088958 <_dtoa_r+0x1468>
 5087eb0:	dd000817 	ldw	r20,32(sp)
 5087eb4:	d8800617 	ldw	r2,24(sp)
 5087eb8:	d8c00817 	ldw	r3,32(sp)
 5087ebc:	01400044 	movi	r5,1
 5087ec0:	e009883a 	mov	r4,fp
 5087ec4:	1887883a 	add	r3,r3,r2
 5087ec8:	d8c00815 	stw	r3,32(sp)
 5087ecc:	b0ad883a 	add	r22,r22,r2
 5087ed0:	508af980 	call	508af98 <__i2b>
 5087ed4:	1023883a 	mov	r17,r2
 5087ed8:	a0000826 	beq	r20,zero,5087efc <_dtoa_r+0xa0c>
 5087edc:	0580070e 	bge	zero,r22,5087efc <_dtoa_r+0xa0c>
 5087ee0:	a005883a 	mov	r2,r20
 5087ee4:	b500b916 	blt	r22,r20,50881cc <_dtoa_r+0xcdc>
 5087ee8:	d9000817 	ldw	r4,32(sp)
 5087eec:	a0a9c83a 	sub	r20,r20,r2
 5087ef0:	b0adc83a 	sub	r22,r22,r2
 5087ef4:	2089c83a 	sub	r4,r4,r2
 5087ef8:	d9000815 	stw	r4,32(sp)
 5087efc:	d9800a17 	ldw	r6,40(sp)
 5087f00:	0181810e 	bge	zero,r6,5088508 <_dtoa_r+0x1018>
 5087f04:	d9c00b17 	ldw	r7,44(sp)
 5087f08:	3800b326 	beq	r7,zero,50881d8 <_dtoa_r+0xce8>
 5087f0c:	a800b226 	beq	r21,zero,50881d8 <_dtoa_r+0xce8>
 5087f10:	880b883a 	mov	r5,r17
 5087f14:	a80d883a 	mov	r6,r21
 5087f18:	e009883a 	mov	r4,fp
 5087f1c:	508b1cc0 	call	508b1cc <__pow5mult>
 5087f20:	d9800917 	ldw	r6,36(sp)
 5087f24:	100b883a 	mov	r5,r2
 5087f28:	e009883a 	mov	r4,fp
 5087f2c:	1023883a 	mov	r17,r2
 5087f30:	508afd40 	call	508afd4 <__multiply>
 5087f34:	1021883a 	mov	r16,r2
 5087f38:	d8800a17 	ldw	r2,40(sp)
 5087f3c:	d9400917 	ldw	r5,36(sp)
 5087f40:	e009883a 	mov	r4,fp
 5087f44:	1545c83a 	sub	r2,r2,r21
 5087f48:	d8800a15 	stw	r2,40(sp)
 5087f4c:	508ac340 	call	508ac34 <_Bfree>
 5087f50:	d8c00a17 	ldw	r3,40(sp)
 5087f54:	18009f1e 	bne	r3,zero,50881d4 <_dtoa_r+0xce4>
 5087f58:	05c00044 	movi	r23,1
 5087f5c:	e009883a 	mov	r4,fp
 5087f60:	b80b883a 	mov	r5,r23
 5087f64:	508af980 	call	508af98 <__i2b>
 5087f68:	d9000d17 	ldw	r4,52(sp)
 5087f6c:	102b883a 	mov	r21,r2
 5087f70:	2000ce26 	beq	r4,zero,50882ac <_dtoa_r+0xdbc>
 5087f74:	200d883a 	mov	r6,r4
 5087f78:	100b883a 	mov	r5,r2
 5087f7c:	e009883a 	mov	r4,fp
 5087f80:	508b1cc0 	call	508b1cc <__pow5mult>
 5087f84:	d9800317 	ldw	r6,12(sp)
 5087f88:	102b883a 	mov	r21,r2
 5087f8c:	b981810e 	bge	r23,r6,5088594 <_dtoa_r+0x10a4>
 5087f90:	0027883a 	mov	r19,zero
 5087f94:	a8800417 	ldw	r2,16(r21)
 5087f98:	05c00804 	movi	r23,32
 5087f9c:	10800104 	addi	r2,r2,4
 5087fa0:	1085883a 	add	r2,r2,r2
 5087fa4:	1085883a 	add	r2,r2,r2
 5087fa8:	a885883a 	add	r2,r21,r2
 5087fac:	11000017 	ldw	r4,0(r2)
 5087fb0:	508ae800 	call	508ae80 <__hi0bits>
 5087fb4:	b885c83a 	sub	r2,r23,r2
 5087fb8:	1585883a 	add	r2,r2,r22
 5087fbc:	108007cc 	andi	r2,r2,31
 5087fc0:	1000b326 	beq	r2,zero,5088290 <_dtoa_r+0xda0>
 5087fc4:	00c00804 	movi	r3,32
 5087fc8:	1887c83a 	sub	r3,r3,r2
 5087fcc:	01000104 	movi	r4,4
 5087fd0:	20c2cd0e 	bge	r4,r3,5088b08 <_dtoa_r+0x1618>
 5087fd4:	00c00704 	movi	r3,28
 5087fd8:	1885c83a 	sub	r2,r3,r2
 5087fdc:	d8c00817 	ldw	r3,32(sp)
 5087fe0:	a0a9883a 	add	r20,r20,r2
 5087fe4:	b0ad883a 	add	r22,r22,r2
 5087fe8:	1887883a 	add	r3,r3,r2
 5087fec:	d8c00815 	stw	r3,32(sp)
 5087ff0:	d9800817 	ldw	r6,32(sp)
 5087ff4:	0180040e 	bge	zero,r6,5088008 <_dtoa_r+0xb18>
 5087ff8:	800b883a 	mov	r5,r16
 5087ffc:	e009883a 	mov	r4,fp
 5088000:	508b30c0 	call	508b30c <__lshift>
 5088004:	1021883a 	mov	r16,r2
 5088008:	0580050e 	bge	zero,r22,5088020 <_dtoa_r+0xb30>
 508800c:	a80b883a 	mov	r5,r21
 5088010:	b00d883a 	mov	r6,r22
 5088014:	e009883a 	mov	r4,fp
 5088018:	508b30c0 	call	508b30c <__lshift>
 508801c:	102b883a 	mov	r21,r2
 5088020:	d9c00e17 	ldw	r7,56(sp)
 5088024:	3801211e 	bne	r7,zero,50884ac <_dtoa_r+0xfbc>
 5088028:	d9800617 	ldw	r6,24(sp)
 508802c:	0181380e 	bge	zero,r6,5088510 <_dtoa_r+0x1020>
 5088030:	d8c00b17 	ldw	r3,44(sp)
 5088034:	1800ab1e 	bne	r3,zero,50882e4 <_dtoa_r+0xdf4>
 5088038:	dc800717 	ldw	r18,28(sp)
 508803c:	dcc00617 	ldw	r19,24(sp)
 5088040:	9029883a 	mov	r20,r18
 5088044:	00000206 	br	5088050 <_dtoa_r+0xb60>
 5088048:	508ac5c0 	call	508ac5c <__multadd>
 508804c:	1021883a 	mov	r16,r2
 5088050:	a80b883a 	mov	r5,r21
 5088054:	8009883a 	mov	r4,r16
 5088058:	50872f00 	call	50872f0 <quorem>
 508805c:	10800c04 	addi	r2,r2,48
 5088060:	90800005 	stb	r2,0(r18)
 5088064:	94800044 	addi	r18,r18,1
 5088068:	9507c83a 	sub	r3,r18,r20
 508806c:	000f883a 	mov	r7,zero
 5088070:	01800284 	movi	r6,10
 5088074:	800b883a 	mov	r5,r16
 5088078:	e009883a 	mov	r4,fp
 508807c:	1cfff216 	blt	r3,r19,5088048 <__alt_data_end+0xfffb9e48>
 5088080:	1011883a 	mov	r8,r2
 5088084:	d8800617 	ldw	r2,24(sp)
 5088088:	0082370e 	bge	zero,r2,5088968 <_dtoa_r+0x1478>
 508808c:	d9000717 	ldw	r4,28(sp)
 5088090:	0025883a 	mov	r18,zero
 5088094:	20af883a 	add	r23,r4,r2
 5088098:	01800044 	movi	r6,1
 508809c:	800b883a 	mov	r5,r16
 50880a0:	e009883a 	mov	r4,fp
 50880a4:	da001715 	stw	r8,92(sp)
 50880a8:	508b30c0 	call	508b30c <__lshift>
 50880ac:	a80b883a 	mov	r5,r21
 50880b0:	1009883a 	mov	r4,r2
 50880b4:	d8800915 	stw	r2,36(sp)
 50880b8:	508b4540 	call	508b454 <__mcmp>
 50880bc:	da001717 	ldw	r8,92(sp)
 50880c0:	0081800e 	bge	zero,r2,50886c4 <_dtoa_r+0x11d4>
 50880c4:	b93fffc3 	ldbu	r4,-1(r23)
 50880c8:	b8bfffc4 	addi	r2,r23,-1
 50880cc:	1007883a 	mov	r3,r2
 50880d0:	01800e44 	movi	r6,57
 50880d4:	d9c00717 	ldw	r7,28(sp)
 50880d8:	00000506 	br	50880f0 <_dtoa_r+0xc00>
 50880dc:	18ffffc4 	addi	r3,r3,-1
 50880e0:	11c12326 	beq	r2,r7,5088570 <_dtoa_r+0x1080>
 50880e4:	19000003 	ldbu	r4,0(r3)
 50880e8:	102f883a 	mov	r23,r2
 50880ec:	10bfffc4 	addi	r2,r2,-1
 50880f0:	21403fcc 	andi	r5,r4,255
 50880f4:	2940201c 	xori	r5,r5,128
 50880f8:	297fe004 	addi	r5,r5,-128
 50880fc:	29bff726 	beq	r5,r6,50880dc <__alt_data_end+0xfffb9edc>
 5088100:	21000044 	addi	r4,r4,1
 5088104:	11000005 	stb	r4,0(r2)
 5088108:	a80b883a 	mov	r5,r21
 508810c:	e009883a 	mov	r4,fp
 5088110:	508ac340 	call	508ac34 <_Bfree>
 5088114:	883ea026 	beq	r17,zero,5087b98 <__alt_data_end+0xfffb9998>
 5088118:	90000426 	beq	r18,zero,508812c <_dtoa_r+0xc3c>
 508811c:	94400326 	beq	r18,r17,508812c <_dtoa_r+0xc3c>
 5088120:	900b883a 	mov	r5,r18
 5088124:	e009883a 	mov	r4,fp
 5088128:	508ac340 	call	508ac34 <_Bfree>
 508812c:	880b883a 	mov	r5,r17
 5088130:	e009883a 	mov	r4,fp
 5088134:	508ac340 	call	508ac34 <_Bfree>
 5088138:	003e9706 	br	5087b98 <__alt_data_end+0xfffb9998>
 508813c:	01800044 	movi	r6,1
 5088140:	d9800e15 	stw	r6,56(sp)
 5088144:	003d9606 	br	50877a0 <__alt_data_end+0xfffb95a0>
 5088148:	d8800817 	ldw	r2,32(sp)
 508814c:	d8c00517 	ldw	r3,20(sp)
 5088150:	d8000d15 	stw	zero,52(sp)
 5088154:	10c5c83a 	sub	r2,r2,r3
 5088158:	00c9c83a 	sub	r4,zero,r3
 508815c:	d8800815 	stw	r2,32(sp)
 5088160:	d9000a15 	stw	r4,40(sp)
 5088164:	003d9706 	br	50877c4 <__alt_data_end+0xfffb95c4>
 5088168:	05adc83a 	sub	r22,zero,r22
 508816c:	dd800815 	stw	r22,32(sp)
 5088170:	002d883a 	mov	r22,zero
 5088174:	003d8e06 	br	50877b0 <__alt_data_end+0xfffb95b0>
 5088178:	d9000517 	ldw	r4,20(sp)
 508817c:	50926840 	call	5092684 <__floatsidf>
 5088180:	100d883a 	mov	r6,r2
 5088184:	180f883a 	mov	r7,r3
 5088188:	a009883a 	mov	r4,r20
 508818c:	880b883a 	mov	r5,r17
 5088190:	50913980 	call	5091398 <__eqdf2>
 5088194:	103d7126 	beq	r2,zero,508775c <__alt_data_end+0xfffb955c>
 5088198:	d9c00517 	ldw	r7,20(sp)
 508819c:	39ffffc4 	addi	r7,r7,-1
 50881a0:	d9c00515 	stw	r7,20(sp)
 50881a4:	003d6d06 	br	508775c <__alt_data_end+0xfffb955c>
 50881a8:	dd400a17 	ldw	r21,40(sp)
 50881ac:	dd000817 	ldw	r20,32(sp)
 50881b0:	0023883a 	mov	r17,zero
 50881b4:	003f4806 	br	5087ed8 <__alt_data_end+0xfffb9cd8>
 50881b8:	10e3c83a 	sub	r17,r2,r3
 50881bc:	9448983a 	sll	r4,r18,r17
 50881c0:	003d3206 	br	508768c <__alt_data_end+0xfffb948c>
 50881c4:	d8000e15 	stw	zero,56(sp)
 50881c8:	003d7506 	br	50877a0 <__alt_data_end+0xfffb95a0>
 50881cc:	b005883a 	mov	r2,r22
 50881d0:	003f4506 	br	5087ee8 <__alt_data_end+0xfffb9ce8>
 50881d4:	dc000915 	stw	r16,36(sp)
 50881d8:	d9800a17 	ldw	r6,40(sp)
 50881dc:	d9400917 	ldw	r5,36(sp)
 50881e0:	e009883a 	mov	r4,fp
 50881e4:	508b1cc0 	call	508b1cc <__pow5mult>
 50881e8:	1021883a 	mov	r16,r2
 50881ec:	003f5a06 	br	5087f58 <__alt_data_end+0xfffb9d58>
 50881f0:	01c00044 	movi	r7,1
 50881f4:	d9c00b15 	stw	r7,44(sp)
 50881f8:	d8802217 	ldw	r2,136(sp)
 50881fc:	0081280e 	bge	zero,r2,50886a0 <_dtoa_r+0x11b0>
 5088200:	100d883a 	mov	r6,r2
 5088204:	1021883a 	mov	r16,r2
 5088208:	d8800c15 	stw	r2,48(sp)
 508820c:	d8800615 	stw	r2,24(sp)
 5088210:	003d8806 	br	5087834 <__alt_data_end+0xfffb9634>
 5088214:	d8800617 	ldw	r2,24(sp)
 5088218:	00be9b16 	blt	zero,r2,5087c88 <__alt_data_end+0xfffb9a88>
 508821c:	10010f1e 	bne	r2,zero,508865c <_dtoa_r+0x116c>
 5088220:	880b883a 	mov	r5,r17
 5088224:	000d883a 	mov	r6,zero
 5088228:	01d00534 	movhi	r7,16404
 508822c:	8009883a 	mov	r4,r16
 5088230:	50915f00 	call	50915f0 <__muldf3>
 5088234:	900d883a 	mov	r6,r18
 5088238:	980f883a 	mov	r7,r19
 508823c:	1009883a 	mov	r4,r2
 5088240:	180b883a 	mov	r5,r3
 5088244:	50914200 	call	5091420 <__gedf2>
 5088248:	002b883a 	mov	r21,zero
 508824c:	0023883a 	mov	r17,zero
 5088250:	1000bf16 	blt	r2,zero,5088550 <_dtoa_r+0x1060>
 5088254:	d9802217 	ldw	r6,136(sp)
 5088258:	ddc00717 	ldw	r23,28(sp)
 508825c:	018c303a 	nor	r6,zero,r6
 5088260:	d9800515 	stw	r6,20(sp)
 5088264:	a80b883a 	mov	r5,r21
 5088268:	e009883a 	mov	r4,fp
 508826c:	508ac340 	call	508ac34 <_Bfree>
 5088270:	883e4926 	beq	r17,zero,5087b98 <__alt_data_end+0xfffb9998>
 5088274:	003fad06 	br	508812c <__alt_data_end+0xfffb9f2c>
 5088278:	d9c01117 	ldw	r7,68(sp)
 508827c:	3801bc26 	beq	r7,zero,5088970 <_dtoa_r+0x1480>
 5088280:	10810cc4 	addi	r2,r2,1075
 5088284:	dd400a17 	ldw	r21,40(sp)
 5088288:	dd000817 	ldw	r20,32(sp)
 508828c:	003f0a06 	br	5087eb8 <__alt_data_end+0xfffb9cb8>
 5088290:	00800704 	movi	r2,28
 5088294:	d9000817 	ldw	r4,32(sp)
 5088298:	a0a9883a 	add	r20,r20,r2
 508829c:	b0ad883a 	add	r22,r22,r2
 50882a0:	2089883a 	add	r4,r4,r2
 50882a4:	d9000815 	stw	r4,32(sp)
 50882a8:	003f5106 	br	5087ff0 <__alt_data_end+0xfffb9df0>
 50882ac:	d8c00317 	ldw	r3,12(sp)
 50882b0:	b8c1fc0e 	bge	r23,r3,5088aa4 <_dtoa_r+0x15b4>
 50882b4:	0027883a 	mov	r19,zero
 50882b8:	b805883a 	mov	r2,r23
 50882bc:	003f3e06 	br	5087fb8 <__alt_data_end+0xfffb9db8>
 50882c0:	880b883a 	mov	r5,r17
 50882c4:	e009883a 	mov	r4,fp
 50882c8:	000f883a 	mov	r7,zero
 50882cc:	01800284 	movi	r6,10
 50882d0:	508ac5c0 	call	508ac5c <__multadd>
 50882d4:	d9000c17 	ldw	r4,48(sp)
 50882d8:	1023883a 	mov	r17,r2
 50882dc:	0102040e 	bge	zero,r4,5088af0 <_dtoa_r+0x1600>
 50882e0:	d9000615 	stw	r4,24(sp)
 50882e4:	0500050e 	bge	zero,r20,50882fc <_dtoa_r+0xe0c>
 50882e8:	880b883a 	mov	r5,r17
 50882ec:	a00d883a 	mov	r6,r20
 50882f0:	e009883a 	mov	r4,fp
 50882f4:	508b30c0 	call	508b30c <__lshift>
 50882f8:	1023883a 	mov	r17,r2
 50882fc:	9801241e 	bne	r19,zero,5088790 <_dtoa_r+0x12a0>
 5088300:	8829883a 	mov	r20,r17
 5088304:	d9000617 	ldw	r4,24(sp)
 5088308:	dcc00717 	ldw	r19,28(sp)
 508830c:	9480004c 	andi	r18,r18,1
 5088310:	20bfffc4 	addi	r2,r4,-1
 5088314:	9885883a 	add	r2,r19,r2
 5088318:	d8800415 	stw	r2,16(sp)
 508831c:	dc800615 	stw	r18,24(sp)
 5088320:	a80b883a 	mov	r5,r21
 5088324:	8009883a 	mov	r4,r16
 5088328:	50872f00 	call	50872f0 <quorem>
 508832c:	880b883a 	mov	r5,r17
 5088330:	8009883a 	mov	r4,r16
 5088334:	102f883a 	mov	r23,r2
 5088338:	508b4540 	call	508b454 <__mcmp>
 508833c:	a80b883a 	mov	r5,r21
 5088340:	a00d883a 	mov	r6,r20
 5088344:	e009883a 	mov	r4,fp
 5088348:	102d883a 	mov	r22,r2
 508834c:	508b4b40 	call	508b4b4 <__mdiff>
 5088350:	1007883a 	mov	r3,r2
 5088354:	10800317 	ldw	r2,12(r2)
 5088358:	bc800c04 	addi	r18,r23,48
 508835c:	180b883a 	mov	r5,r3
 5088360:	10004e1e 	bne	r2,zero,508849c <_dtoa_r+0xfac>
 5088364:	8009883a 	mov	r4,r16
 5088368:	d8c01615 	stw	r3,88(sp)
 508836c:	508b4540 	call	508b454 <__mcmp>
 5088370:	d8c01617 	ldw	r3,88(sp)
 5088374:	e009883a 	mov	r4,fp
 5088378:	d8801615 	stw	r2,88(sp)
 508837c:	180b883a 	mov	r5,r3
 5088380:	508ac340 	call	508ac34 <_Bfree>
 5088384:	d8801617 	ldw	r2,88(sp)
 5088388:	1000041e 	bne	r2,zero,508839c <_dtoa_r+0xeac>
 508838c:	d9800317 	ldw	r6,12(sp)
 5088390:	3000021e 	bne	r6,zero,508839c <_dtoa_r+0xeac>
 5088394:	d8c00617 	ldw	r3,24(sp)
 5088398:	18003726 	beq	r3,zero,5088478 <_dtoa_r+0xf88>
 508839c:	b0002016 	blt	r22,zero,5088420 <_dtoa_r+0xf30>
 50883a0:	b000041e 	bne	r22,zero,50883b4 <_dtoa_r+0xec4>
 50883a4:	d9000317 	ldw	r4,12(sp)
 50883a8:	2000021e 	bne	r4,zero,50883b4 <_dtoa_r+0xec4>
 50883ac:	d8c00617 	ldw	r3,24(sp)
 50883b0:	18001b26 	beq	r3,zero,5088420 <_dtoa_r+0xf30>
 50883b4:	00810716 	blt	zero,r2,50887d4 <_dtoa_r+0x12e4>
 50883b8:	d8c00417 	ldw	r3,16(sp)
 50883bc:	9d800044 	addi	r22,r19,1
 50883c0:	9c800005 	stb	r18,0(r19)
 50883c4:	b02f883a 	mov	r23,r22
 50883c8:	98c10626 	beq	r19,r3,50887e4 <_dtoa_r+0x12f4>
 50883cc:	800b883a 	mov	r5,r16
 50883d0:	000f883a 	mov	r7,zero
 50883d4:	01800284 	movi	r6,10
 50883d8:	e009883a 	mov	r4,fp
 50883dc:	508ac5c0 	call	508ac5c <__multadd>
 50883e0:	1021883a 	mov	r16,r2
 50883e4:	000f883a 	mov	r7,zero
 50883e8:	01800284 	movi	r6,10
 50883ec:	880b883a 	mov	r5,r17
 50883f0:	e009883a 	mov	r4,fp
 50883f4:	8d002526 	beq	r17,r20,508848c <_dtoa_r+0xf9c>
 50883f8:	508ac5c0 	call	508ac5c <__multadd>
 50883fc:	a00b883a 	mov	r5,r20
 5088400:	000f883a 	mov	r7,zero
 5088404:	01800284 	movi	r6,10
 5088408:	e009883a 	mov	r4,fp
 508840c:	1023883a 	mov	r17,r2
 5088410:	508ac5c0 	call	508ac5c <__multadd>
 5088414:	1029883a 	mov	r20,r2
 5088418:	b027883a 	mov	r19,r22
 508841c:	003fc006 	br	5088320 <__alt_data_end+0xfffba120>
 5088420:	9011883a 	mov	r8,r18
 5088424:	00800e0e 	bge	zero,r2,5088460 <_dtoa_r+0xf70>
 5088428:	800b883a 	mov	r5,r16
 508842c:	01800044 	movi	r6,1
 5088430:	e009883a 	mov	r4,fp
 5088434:	da001715 	stw	r8,92(sp)
 5088438:	508b30c0 	call	508b30c <__lshift>
 508843c:	a80b883a 	mov	r5,r21
 5088440:	1009883a 	mov	r4,r2
 5088444:	1021883a 	mov	r16,r2
 5088448:	508b4540 	call	508b454 <__mcmp>
 508844c:	da001717 	ldw	r8,92(sp)
 5088450:	0081960e 	bge	zero,r2,5088aac <_dtoa_r+0x15bc>
 5088454:	00800e44 	movi	r2,57
 5088458:	40817026 	beq	r8,r2,5088a1c <_dtoa_r+0x152c>
 508845c:	ba000c44 	addi	r8,r23,49
 5088460:	8825883a 	mov	r18,r17
 5088464:	9dc00044 	addi	r23,r19,1
 5088468:	9a000005 	stb	r8,0(r19)
 508846c:	a023883a 	mov	r17,r20
 5088470:	dc000915 	stw	r16,36(sp)
 5088474:	003f2406 	br	5088108 <__alt_data_end+0xfffb9f08>
 5088478:	00800e44 	movi	r2,57
 508847c:	9011883a 	mov	r8,r18
 5088480:	90816626 	beq	r18,r2,5088a1c <_dtoa_r+0x152c>
 5088484:	05bff516 	blt	zero,r22,508845c <__alt_data_end+0xfffba25c>
 5088488:	003ff506 	br	5088460 <__alt_data_end+0xfffba260>
 508848c:	508ac5c0 	call	508ac5c <__multadd>
 5088490:	1023883a 	mov	r17,r2
 5088494:	1029883a 	mov	r20,r2
 5088498:	003fdf06 	br	5088418 <__alt_data_end+0xfffba218>
 508849c:	e009883a 	mov	r4,fp
 50884a0:	508ac340 	call	508ac34 <_Bfree>
 50884a4:	00800044 	movi	r2,1
 50884a8:	003fbc06 	br	508839c <__alt_data_end+0xfffba19c>
 50884ac:	a80b883a 	mov	r5,r21
 50884b0:	8009883a 	mov	r4,r16
 50884b4:	508b4540 	call	508b454 <__mcmp>
 50884b8:	103edb0e 	bge	r2,zero,5088028 <__alt_data_end+0xfffb9e28>
 50884bc:	800b883a 	mov	r5,r16
 50884c0:	000f883a 	mov	r7,zero
 50884c4:	01800284 	movi	r6,10
 50884c8:	e009883a 	mov	r4,fp
 50884cc:	508ac5c0 	call	508ac5c <__multadd>
 50884d0:	1021883a 	mov	r16,r2
 50884d4:	d8800517 	ldw	r2,20(sp)
 50884d8:	d8c00b17 	ldw	r3,44(sp)
 50884dc:	10bfffc4 	addi	r2,r2,-1
 50884e0:	d8800515 	stw	r2,20(sp)
 50884e4:	183f761e 	bne	r3,zero,50882c0 <__alt_data_end+0xfffba0c0>
 50884e8:	d9000c17 	ldw	r4,48(sp)
 50884ec:	0101730e 	bge	zero,r4,5088abc <_dtoa_r+0x15cc>
 50884f0:	d9000615 	stw	r4,24(sp)
 50884f4:	003ed006 	br	5088038 <__alt_data_end+0xfffb9e38>
 50884f8:	00800084 	movi	r2,2
 50884fc:	3081861e 	bne	r6,r2,5088b18 <_dtoa_r+0x1628>
 5088500:	d8000b15 	stw	zero,44(sp)
 5088504:	003f3c06 	br	50881f8 <__alt_data_end+0xfffb9ff8>
 5088508:	dc000917 	ldw	r16,36(sp)
 508850c:	003e9206 	br	5087f58 <__alt_data_end+0xfffb9d58>
 5088510:	d9c00317 	ldw	r7,12(sp)
 5088514:	00800084 	movi	r2,2
 5088518:	11fec50e 	bge	r2,r7,5088030 <__alt_data_end+0xfffb9e30>
 508851c:	d9000617 	ldw	r4,24(sp)
 5088520:	20013c1e 	bne	r4,zero,5088a14 <_dtoa_r+0x1524>
 5088524:	a80b883a 	mov	r5,r21
 5088528:	000f883a 	mov	r7,zero
 508852c:	01800144 	movi	r6,5
 5088530:	e009883a 	mov	r4,fp
 5088534:	508ac5c0 	call	508ac5c <__multadd>
 5088538:	100b883a 	mov	r5,r2
 508853c:	8009883a 	mov	r4,r16
 5088540:	102b883a 	mov	r21,r2
 5088544:	508b4540 	call	508b454 <__mcmp>
 5088548:	dc000915 	stw	r16,36(sp)
 508854c:	00bf410e 	bge	zero,r2,5088254 <__alt_data_end+0xfffba054>
 5088550:	d9c00717 	ldw	r7,28(sp)
 5088554:	00800c44 	movi	r2,49
 5088558:	38800005 	stb	r2,0(r7)
 508855c:	d8800517 	ldw	r2,20(sp)
 5088560:	3dc00044 	addi	r23,r7,1
 5088564:	10800044 	addi	r2,r2,1
 5088568:	d8800515 	stw	r2,20(sp)
 508856c:	003f3d06 	br	5088264 <__alt_data_end+0xfffba064>
 5088570:	d9800517 	ldw	r6,20(sp)
 5088574:	d9c00717 	ldw	r7,28(sp)
 5088578:	00800c44 	movi	r2,49
 508857c:	31800044 	addi	r6,r6,1
 5088580:	d9800515 	stw	r6,20(sp)
 5088584:	38800005 	stb	r2,0(r7)
 5088588:	003edf06 	br	5088108 <__alt_data_end+0xfffb9f08>
 508858c:	d8000b15 	stw	zero,44(sp)
 5088590:	003c9f06 	br	5087810 <__alt_data_end+0xfffb9610>
 5088594:	903e7e1e 	bne	r18,zero,5087f90 <__alt_data_end+0xfffb9d90>
 5088598:	00800434 	movhi	r2,16
 508859c:	10bfffc4 	addi	r2,r2,-1
 50885a0:	9884703a 	and	r2,r19,r2
 50885a4:	1000ea1e 	bne	r2,zero,5088950 <_dtoa_r+0x1460>
 50885a8:	9cdffc2c 	andhi	r19,r19,32752
 50885ac:	9800e826 	beq	r19,zero,5088950 <_dtoa_r+0x1460>
 50885b0:	d9c00817 	ldw	r7,32(sp)
 50885b4:	b5800044 	addi	r22,r22,1
 50885b8:	04c00044 	movi	r19,1
 50885bc:	39c00044 	addi	r7,r7,1
 50885c0:	d9c00815 	stw	r7,32(sp)
 50885c4:	d8800d17 	ldw	r2,52(sp)
 50885c8:	103e721e 	bne	r2,zero,5087f94 <__alt_data_end+0xfffb9d94>
 50885cc:	00800044 	movi	r2,1
 50885d0:	003e7906 	br	5087fb8 <__alt_data_end+0xfffb9db8>
 50885d4:	8009883a 	mov	r4,r16
 50885d8:	50926840 	call	5092684 <__floatsidf>
 50885dc:	d9800f17 	ldw	r6,60(sp)
 50885e0:	d9c01017 	ldw	r7,64(sp)
 50885e4:	1009883a 	mov	r4,r2
 50885e8:	180b883a 	mov	r5,r3
 50885ec:	50915f00 	call	50915f0 <__muldf3>
 50885f0:	000d883a 	mov	r6,zero
 50885f4:	01d00734 	movhi	r7,16412
 50885f8:	1009883a 	mov	r4,r2
 50885fc:	180b883a 	mov	r5,r3
 5088600:	50902040 	call	5090204 <__adddf3>
 5088604:	047f3034 	movhi	r17,64704
 5088608:	1021883a 	mov	r16,r2
 508860c:	1c63883a 	add	r17,r3,r17
 5088610:	d9000f17 	ldw	r4,60(sp)
 5088614:	d9401017 	ldw	r5,64(sp)
 5088618:	000d883a 	mov	r6,zero
 508861c:	01d00534 	movhi	r7,16404
 5088620:	5091d080 	call	5091d08 <__subdf3>
 5088624:	800d883a 	mov	r6,r16
 5088628:	880f883a 	mov	r7,r17
 508862c:	1009883a 	mov	r4,r2
 5088630:	180b883a 	mov	r5,r3
 5088634:	102b883a 	mov	r21,r2
 5088638:	1829883a 	mov	r20,r3
 508863c:	50914200 	call	5091420 <__gedf2>
 5088640:	00806c16 	blt	zero,r2,50887f4 <_dtoa_r+0x1304>
 5088644:	89e0003c 	xorhi	r7,r17,32768
 5088648:	800d883a 	mov	r6,r16
 508864c:	a809883a 	mov	r4,r21
 5088650:	a00b883a 	mov	r5,r20
 5088654:	50914fc0 	call	50914fc <__ledf2>
 5088658:	103d7e0e 	bge	r2,zero,5087c54 <__alt_data_end+0xfffb9a54>
 508865c:	002b883a 	mov	r21,zero
 5088660:	0023883a 	mov	r17,zero
 5088664:	003efb06 	br	5088254 <__alt_data_end+0xfffba054>
 5088668:	d8800717 	ldw	r2,28(sp)
 508866c:	003bd006 	br	50875b0 <__alt_data_end+0xfffb93b0>
 5088670:	d9000a17 	ldw	r4,40(sp)
 5088674:	d9800d17 	ldw	r6,52(sp)
 5088678:	dd400a15 	stw	r21,40(sp)
 508867c:	a905c83a 	sub	r2,r21,r4
 5088680:	308d883a 	add	r6,r6,r2
 5088684:	d9800d15 	stw	r6,52(sp)
 5088688:	002b883a 	mov	r21,zero
 508868c:	003e0606 	br	5087ea8 <__alt_data_end+0xfffb9ca8>
 5088690:	9023883a 	mov	r17,r18
 5088694:	9829883a 	mov	r20,r19
 5088698:	04000084 	movi	r16,2
 508869c:	003c9206 	br	50878e8 <__alt_data_end+0xfffb96e8>
 50886a0:	04000044 	movi	r16,1
 50886a4:	dc000c15 	stw	r16,48(sp)
 50886a8:	dc000615 	stw	r16,24(sp)
 50886ac:	dc002215 	stw	r16,136(sp)
 50886b0:	e0001115 	stw	zero,68(fp)
 50886b4:	000b883a 	mov	r5,zero
 50886b8:	003c6906 	br	5087860 <__alt_data_end+0xfffb9660>
 50886bc:	3021883a 	mov	r16,r6
 50886c0:	003ffb06 	br	50886b0 <__alt_data_end+0xfffba4b0>
 50886c4:	1000021e 	bne	r2,zero,50886d0 <_dtoa_r+0x11e0>
 50886c8:	4200004c 	andi	r8,r8,1
 50886cc:	403e7d1e 	bne	r8,zero,50880c4 <__alt_data_end+0xfffb9ec4>
 50886d0:	01000c04 	movi	r4,48
 50886d4:	00000106 	br	50886dc <_dtoa_r+0x11ec>
 50886d8:	102f883a 	mov	r23,r2
 50886dc:	b8bfffc4 	addi	r2,r23,-1
 50886e0:	10c00007 	ldb	r3,0(r2)
 50886e4:	193ffc26 	beq	r3,r4,50886d8 <__alt_data_end+0xfffba4d8>
 50886e8:	003e8706 	br	5088108 <__alt_data_end+0xfffb9f08>
 50886ec:	d8800517 	ldw	r2,20(sp)
 50886f0:	00a3c83a 	sub	r17,zero,r2
 50886f4:	8800a426 	beq	r17,zero,5088988 <_dtoa_r+0x1498>
 50886f8:	888003cc 	andi	r2,r17,15
 50886fc:	100490fa 	slli	r2,r2,3
 5088700:	00c14274 	movhi	r3,1289
 5088704:	18d7e404 	addi	r3,r3,24464
 5088708:	1885883a 	add	r2,r3,r2
 508870c:	11800017 	ldw	r6,0(r2)
 5088710:	11c00117 	ldw	r7,4(r2)
 5088714:	9009883a 	mov	r4,r18
 5088718:	980b883a 	mov	r5,r19
 508871c:	8823d13a 	srai	r17,r17,4
 5088720:	50915f00 	call	50915f0 <__muldf3>
 5088724:	d8800f15 	stw	r2,60(sp)
 5088728:	d8c01015 	stw	r3,64(sp)
 508872c:	8800e826 	beq	r17,zero,5088ad0 <_dtoa_r+0x15e0>
 5088730:	05014274 	movhi	r20,1289
 5088734:	a517da04 	addi	r20,r20,24424
 5088738:	04000084 	movi	r16,2
 508873c:	8980004c 	andi	r6,r17,1
 5088740:	1009883a 	mov	r4,r2
 5088744:	8823d07a 	srai	r17,r17,1
 5088748:	180b883a 	mov	r5,r3
 508874c:	30000426 	beq	r6,zero,5088760 <_dtoa_r+0x1270>
 5088750:	a1800017 	ldw	r6,0(r20)
 5088754:	a1c00117 	ldw	r7,4(r20)
 5088758:	84000044 	addi	r16,r16,1
 508875c:	50915f00 	call	50915f0 <__muldf3>
 5088760:	a5000204 	addi	r20,r20,8
 5088764:	883ff51e 	bne	r17,zero,508873c <__alt_data_end+0xfffba53c>
 5088768:	d8800f15 	stw	r2,60(sp)
 508876c:	d8c01015 	stw	r3,64(sp)
 5088770:	003c7606 	br	508794c <__alt_data_end+0xfffb974c>
 5088774:	00c00c04 	movi	r3,48
 5088778:	10c00005 	stb	r3,0(r2)
 508877c:	d8c00517 	ldw	r3,20(sp)
 5088780:	bd3fffc3 	ldbu	r20,-1(r23)
 5088784:	18c00044 	addi	r3,r3,1
 5088788:	d8c00515 	stw	r3,20(sp)
 508878c:	003db906 	br	5087e74 <__alt_data_end+0xfffb9c74>
 5088790:	89400117 	ldw	r5,4(r17)
 5088794:	e009883a 	mov	r4,fp
 5088798:	508ab8c0 	call	508ab8c <_Balloc>
 508879c:	89800417 	ldw	r6,16(r17)
 50887a0:	89400304 	addi	r5,r17,12
 50887a4:	11000304 	addi	r4,r2,12
 50887a8:	31800084 	addi	r6,r6,2
 50887ac:	318d883a 	add	r6,r6,r6
 50887b0:	318d883a 	add	r6,r6,r6
 50887b4:	1027883a 	mov	r19,r2
 50887b8:	508a7c00 	call	508a7c0 <memcpy>
 50887bc:	01800044 	movi	r6,1
 50887c0:	980b883a 	mov	r5,r19
 50887c4:	e009883a 	mov	r4,fp
 50887c8:	508b30c0 	call	508b30c <__lshift>
 50887cc:	1029883a 	mov	r20,r2
 50887d0:	003ecc06 	br	5088304 <__alt_data_end+0xfffba104>
 50887d4:	00800e44 	movi	r2,57
 50887d8:	90809026 	beq	r18,r2,5088a1c <_dtoa_r+0x152c>
 50887dc:	92000044 	addi	r8,r18,1
 50887e0:	003f1f06 	br	5088460 <__alt_data_end+0xfffba260>
 50887e4:	9011883a 	mov	r8,r18
 50887e8:	8825883a 	mov	r18,r17
 50887ec:	a023883a 	mov	r17,r20
 50887f0:	003e2906 	br	5088098 <__alt_data_end+0xfffb9e98>
 50887f4:	002b883a 	mov	r21,zero
 50887f8:	0023883a 	mov	r17,zero
 50887fc:	003f5406 	br	5088550 <__alt_data_end+0xfffba350>
 5088800:	61bfffc4 	addi	r6,r12,-1
 5088804:	300490fa 	slli	r2,r6,3
 5088808:	00c14274 	movhi	r3,1289
 508880c:	18d7e404 	addi	r3,r3,24464
 5088810:	1885883a 	add	r2,r3,r2
 5088814:	11000017 	ldw	r4,0(r2)
 5088818:	11400117 	ldw	r5,4(r2)
 508881c:	d8800717 	ldw	r2,28(sp)
 5088820:	880f883a 	mov	r7,r17
 5088824:	d9801215 	stw	r6,72(sp)
 5088828:	800d883a 	mov	r6,r16
 508882c:	db001615 	stw	r12,88(sp)
 5088830:	15c00044 	addi	r23,r2,1
 5088834:	50915f00 	call	50915f0 <__muldf3>
 5088838:	d9401017 	ldw	r5,64(sp)
 508883c:	d9000f17 	ldw	r4,60(sp)
 5088840:	d8c01515 	stw	r3,84(sp)
 5088844:	d8801415 	stw	r2,80(sp)
 5088848:	50926040 	call	5092604 <__fixdfsi>
 508884c:	1009883a 	mov	r4,r2
 5088850:	1021883a 	mov	r16,r2
 5088854:	50926840 	call	5092684 <__floatsidf>
 5088858:	d9000f17 	ldw	r4,60(sp)
 508885c:	d9401017 	ldw	r5,64(sp)
 5088860:	100d883a 	mov	r6,r2
 5088864:	180f883a 	mov	r7,r3
 5088868:	5091d080 	call	5091d08 <__subdf3>
 508886c:	1829883a 	mov	r20,r3
 5088870:	d8c00717 	ldw	r3,28(sp)
 5088874:	84000c04 	addi	r16,r16,48
 5088878:	1023883a 	mov	r17,r2
 508887c:	1c000005 	stb	r16,0(r3)
 5088880:	db001617 	ldw	r12,88(sp)
 5088884:	00800044 	movi	r2,1
 5088888:	60802226 	beq	r12,r2,5088914 <_dtoa_r+0x1424>
 508888c:	d9c00717 	ldw	r7,28(sp)
 5088890:	8805883a 	mov	r2,r17
 5088894:	b82b883a 	mov	r21,r23
 5088898:	3b19883a 	add	r12,r7,r12
 508889c:	6023883a 	mov	r17,r12
 50888a0:	a007883a 	mov	r3,r20
 50888a4:	dc800f15 	stw	r18,60(sp)
 50888a8:	000d883a 	mov	r6,zero
 50888ac:	01d00934 	movhi	r7,16420
 50888b0:	1009883a 	mov	r4,r2
 50888b4:	180b883a 	mov	r5,r3
 50888b8:	50915f00 	call	50915f0 <__muldf3>
 50888bc:	180b883a 	mov	r5,r3
 50888c0:	1009883a 	mov	r4,r2
 50888c4:	1829883a 	mov	r20,r3
 50888c8:	1025883a 	mov	r18,r2
 50888cc:	50926040 	call	5092604 <__fixdfsi>
 50888d0:	1009883a 	mov	r4,r2
 50888d4:	1021883a 	mov	r16,r2
 50888d8:	50926840 	call	5092684 <__floatsidf>
 50888dc:	100d883a 	mov	r6,r2
 50888e0:	180f883a 	mov	r7,r3
 50888e4:	9009883a 	mov	r4,r18
 50888e8:	a00b883a 	mov	r5,r20
 50888ec:	84000c04 	addi	r16,r16,48
 50888f0:	5091d080 	call	5091d08 <__subdf3>
 50888f4:	ad400044 	addi	r21,r21,1
 50888f8:	ac3fffc5 	stb	r16,-1(r21)
 50888fc:	ac7fea1e 	bne	r21,r17,50888a8 <__alt_data_end+0xfffba6a8>
 5088900:	1023883a 	mov	r17,r2
 5088904:	d8801217 	ldw	r2,72(sp)
 5088908:	dc800f17 	ldw	r18,60(sp)
 508890c:	1829883a 	mov	r20,r3
 5088910:	b8af883a 	add	r23,r23,r2
 5088914:	d9001417 	ldw	r4,80(sp)
 5088918:	d9401517 	ldw	r5,84(sp)
 508891c:	000d883a 	mov	r6,zero
 5088920:	01cff834 	movhi	r7,16352
 5088924:	50902040 	call	5090204 <__adddf3>
 5088928:	880d883a 	mov	r6,r17
 508892c:	a00f883a 	mov	r7,r20
 5088930:	1009883a 	mov	r4,r2
 5088934:	180b883a 	mov	r5,r3
 5088938:	50914fc0 	call	50914fc <__ledf2>
 508893c:	10003e0e 	bge	r2,zero,5088a38 <_dtoa_r+0x1548>
 5088940:	d9001317 	ldw	r4,76(sp)
 5088944:	bd3fffc3 	ldbu	r20,-1(r23)
 5088948:	d9000515 	stw	r4,20(sp)
 508894c:	003d3b06 	br	5087e3c <__alt_data_end+0xfffb9c3c>
 5088950:	0027883a 	mov	r19,zero
 5088954:	003f1b06 	br	50885c4 <__alt_data_end+0xfffba3c4>
 5088958:	d8800817 	ldw	r2,32(sp)
 508895c:	11e9c83a 	sub	r20,r2,r7
 5088960:	0005883a 	mov	r2,zero
 5088964:	003d5406 	br	5087eb8 <__alt_data_end+0xfffb9cb8>
 5088968:	00800044 	movi	r2,1
 508896c:	003dc706 	br	508808c <__alt_data_end+0xfffb9e8c>
 5088970:	d8c00217 	ldw	r3,8(sp)
 5088974:	00800d84 	movi	r2,54
 5088978:	dd400a17 	ldw	r21,40(sp)
 508897c:	10c5c83a 	sub	r2,r2,r3
 5088980:	dd000817 	ldw	r20,32(sp)
 5088984:	003d4c06 	br	5087eb8 <__alt_data_end+0xfffb9cb8>
 5088988:	dc800f15 	stw	r18,60(sp)
 508898c:	dcc01015 	stw	r19,64(sp)
 5088990:	04000084 	movi	r16,2
 5088994:	003bed06 	br	508794c <__alt_data_end+0xfffb974c>
 5088998:	d9000617 	ldw	r4,24(sp)
 508899c:	203f0d26 	beq	r4,zero,50885d4 <__alt_data_end+0xfffba3d4>
 50889a0:	d9800c17 	ldw	r6,48(sp)
 50889a4:	01bcab0e 	bge	zero,r6,5087c54 <__alt_data_end+0xfffb9a54>
 50889a8:	d9401017 	ldw	r5,64(sp)
 50889ac:	d9000f17 	ldw	r4,60(sp)
 50889b0:	000d883a 	mov	r6,zero
 50889b4:	01d00934 	movhi	r7,16420
 50889b8:	50915f00 	call	50915f0 <__muldf3>
 50889bc:	81000044 	addi	r4,r16,1
 50889c0:	d8800f15 	stw	r2,60(sp)
 50889c4:	d8c01015 	stw	r3,64(sp)
 50889c8:	50926840 	call	5092684 <__floatsidf>
 50889cc:	d9800f17 	ldw	r6,60(sp)
 50889d0:	d9c01017 	ldw	r7,64(sp)
 50889d4:	1009883a 	mov	r4,r2
 50889d8:	180b883a 	mov	r5,r3
 50889dc:	50915f00 	call	50915f0 <__muldf3>
 50889e0:	01d00734 	movhi	r7,16412
 50889e4:	000d883a 	mov	r6,zero
 50889e8:	1009883a 	mov	r4,r2
 50889ec:	180b883a 	mov	r5,r3
 50889f0:	50902040 	call	5090204 <__adddf3>
 50889f4:	d9c00517 	ldw	r7,20(sp)
 50889f8:	047f3034 	movhi	r17,64704
 50889fc:	1021883a 	mov	r16,r2
 5088a00:	39ffffc4 	addi	r7,r7,-1
 5088a04:	d9c01315 	stw	r7,76(sp)
 5088a08:	1c63883a 	add	r17,r3,r17
 5088a0c:	db000c17 	ldw	r12,48(sp)
 5088a10:	003bea06 	br	50879bc <__alt_data_end+0xfffb97bc>
 5088a14:	dc000915 	stw	r16,36(sp)
 5088a18:	003e0e06 	br	5088254 <__alt_data_end+0xfffba054>
 5088a1c:	01000e44 	movi	r4,57
 5088a20:	8825883a 	mov	r18,r17
 5088a24:	9dc00044 	addi	r23,r19,1
 5088a28:	99000005 	stb	r4,0(r19)
 5088a2c:	a023883a 	mov	r17,r20
 5088a30:	dc000915 	stw	r16,36(sp)
 5088a34:	003da406 	br	50880c8 <__alt_data_end+0xfffb9ec8>
 5088a38:	d9801417 	ldw	r6,80(sp)
 5088a3c:	d9c01517 	ldw	r7,84(sp)
 5088a40:	0009883a 	mov	r4,zero
 5088a44:	014ff834 	movhi	r5,16352
 5088a48:	5091d080 	call	5091d08 <__subdf3>
 5088a4c:	880d883a 	mov	r6,r17
 5088a50:	a00f883a 	mov	r7,r20
 5088a54:	1009883a 	mov	r4,r2
 5088a58:	180b883a 	mov	r5,r3
 5088a5c:	50914200 	call	5091420 <__gedf2>
 5088a60:	00bc7c0e 	bge	zero,r2,5087c54 <__alt_data_end+0xfffb9a54>
 5088a64:	01000c04 	movi	r4,48
 5088a68:	00000106 	br	5088a70 <_dtoa_r+0x1580>
 5088a6c:	102f883a 	mov	r23,r2
 5088a70:	b8bfffc4 	addi	r2,r23,-1
 5088a74:	10c00007 	ldb	r3,0(r2)
 5088a78:	193ffc26 	beq	r3,r4,5088a6c <__alt_data_end+0xfffba86c>
 5088a7c:	d9801317 	ldw	r6,76(sp)
 5088a80:	d9800515 	stw	r6,20(sp)
 5088a84:	003c4406 	br	5087b98 <__alt_data_end+0xfffb9998>
 5088a88:	d9801317 	ldw	r6,76(sp)
 5088a8c:	d9800515 	stw	r6,20(sp)
 5088a90:	003cea06 	br	5087e3c <__alt_data_end+0xfffb9c3c>
 5088a94:	dd800f17 	ldw	r22,60(sp)
 5088a98:	dcc01017 	ldw	r19,64(sp)
 5088a9c:	dc801217 	ldw	r18,72(sp)
 5088aa0:	003c6c06 	br	5087c54 <__alt_data_end+0xfffb9a54>
 5088aa4:	903e031e 	bne	r18,zero,50882b4 <__alt_data_end+0xfffba0b4>
 5088aa8:	003ebb06 	br	5088598 <__alt_data_end+0xfffba398>
 5088aac:	103e6c1e 	bne	r2,zero,5088460 <__alt_data_end+0xfffba260>
 5088ab0:	4080004c 	andi	r2,r8,1
 5088ab4:	103e6a26 	beq	r2,zero,5088460 <__alt_data_end+0xfffba260>
 5088ab8:	003e6606 	br	5088454 <__alt_data_end+0xfffba254>
 5088abc:	d8c00317 	ldw	r3,12(sp)
 5088ac0:	00800084 	movi	r2,2
 5088ac4:	10c02916 	blt	r2,r3,5088b6c <_dtoa_r+0x167c>
 5088ac8:	d9000c17 	ldw	r4,48(sp)
 5088acc:	003e8806 	br	50884f0 <__alt_data_end+0xfffba2f0>
 5088ad0:	04000084 	movi	r16,2
 5088ad4:	003b9d06 	br	508794c <__alt_data_end+0xfffb974c>
 5088ad8:	d9001317 	ldw	r4,76(sp)
 5088adc:	d9000515 	stw	r4,20(sp)
 5088ae0:	003cd606 	br	5087e3c <__alt_data_end+0xfffb9c3c>
 5088ae4:	d8801317 	ldw	r2,76(sp)
 5088ae8:	d8800515 	stw	r2,20(sp)
 5088aec:	003c2a06 	br	5087b98 <__alt_data_end+0xfffb9998>
 5088af0:	d9800317 	ldw	r6,12(sp)
 5088af4:	00800084 	movi	r2,2
 5088af8:	11801516 	blt	r2,r6,5088b50 <_dtoa_r+0x1660>
 5088afc:	d9c00c17 	ldw	r7,48(sp)
 5088b00:	d9c00615 	stw	r7,24(sp)
 5088b04:	003df706 	br	50882e4 <__alt_data_end+0xfffba0e4>
 5088b08:	193d3926 	beq	r3,r4,5087ff0 <__alt_data_end+0xfffb9df0>
 5088b0c:	00c00f04 	movi	r3,60
 5088b10:	1885c83a 	sub	r2,r3,r2
 5088b14:	003ddf06 	br	5088294 <__alt_data_end+0xfffba094>
 5088b18:	e009883a 	mov	r4,fp
 5088b1c:	e0001115 	stw	zero,68(fp)
 5088b20:	000b883a 	mov	r5,zero
 5088b24:	508ab8c0 	call	508ab8c <_Balloc>
 5088b28:	d8800715 	stw	r2,28(sp)
 5088b2c:	d8c00717 	ldw	r3,28(sp)
 5088b30:	00bfffc4 	movi	r2,-1
 5088b34:	01000044 	movi	r4,1
 5088b38:	d8800c15 	stw	r2,48(sp)
 5088b3c:	e0c01015 	stw	r3,64(fp)
 5088b40:	d9000b15 	stw	r4,44(sp)
 5088b44:	d8800615 	stw	r2,24(sp)
 5088b48:	d8002215 	stw	zero,136(sp)
 5088b4c:	003c4106 	br	5087c54 <__alt_data_end+0xfffb9a54>
 5088b50:	d8c00c17 	ldw	r3,48(sp)
 5088b54:	d8c00615 	stw	r3,24(sp)
 5088b58:	003e7006 	br	508851c <__alt_data_end+0xfffba31c>
 5088b5c:	04400044 	movi	r17,1
 5088b60:	003b2006 	br	50877e4 <__alt_data_end+0xfffb95e4>
 5088b64:	000b883a 	mov	r5,zero
 5088b68:	003b3d06 	br	5087860 <__alt_data_end+0xfffb9660>
 5088b6c:	d8800c17 	ldw	r2,48(sp)
 5088b70:	d8800615 	stw	r2,24(sp)
 5088b74:	003e6906 	br	508851c <__alt_data_end+0xfffba31c>

05088b78 <__sflush_r>:
 5088b78:	2880030b 	ldhu	r2,12(r5)
 5088b7c:	defffb04 	addi	sp,sp,-20
 5088b80:	dcc00315 	stw	r19,12(sp)
 5088b84:	dc400115 	stw	r17,4(sp)
 5088b88:	dfc00415 	stw	ra,16(sp)
 5088b8c:	dc800215 	stw	r18,8(sp)
 5088b90:	dc000015 	stw	r16,0(sp)
 5088b94:	10c0020c 	andi	r3,r2,8
 5088b98:	2823883a 	mov	r17,r5
 5088b9c:	2027883a 	mov	r19,r4
 5088ba0:	1800311e 	bne	r3,zero,5088c68 <__sflush_r+0xf0>
 5088ba4:	28c00117 	ldw	r3,4(r5)
 5088ba8:	10820014 	ori	r2,r2,2048
 5088bac:	2880030d 	sth	r2,12(r5)
 5088bb0:	00c04b0e 	bge	zero,r3,5088ce0 <__sflush_r+0x168>
 5088bb4:	8a000a17 	ldw	r8,40(r17)
 5088bb8:	40002326 	beq	r8,zero,5088c48 <__sflush_r+0xd0>
 5088bbc:	9c000017 	ldw	r16,0(r19)
 5088bc0:	10c4000c 	andi	r3,r2,4096
 5088bc4:	98000015 	stw	zero,0(r19)
 5088bc8:	18004826 	beq	r3,zero,5088cec <__sflush_r+0x174>
 5088bcc:	89801417 	ldw	r6,80(r17)
 5088bd0:	10c0010c 	andi	r3,r2,4
 5088bd4:	18000626 	beq	r3,zero,5088bf0 <__sflush_r+0x78>
 5088bd8:	88c00117 	ldw	r3,4(r17)
 5088bdc:	88800c17 	ldw	r2,48(r17)
 5088be0:	30cdc83a 	sub	r6,r6,r3
 5088be4:	10000226 	beq	r2,zero,5088bf0 <__sflush_r+0x78>
 5088be8:	88800f17 	ldw	r2,60(r17)
 5088bec:	308dc83a 	sub	r6,r6,r2
 5088bf0:	89400717 	ldw	r5,28(r17)
 5088bf4:	000f883a 	mov	r7,zero
 5088bf8:	9809883a 	mov	r4,r19
 5088bfc:	403ee83a 	callr	r8
 5088c00:	00ffffc4 	movi	r3,-1
 5088c04:	10c04426 	beq	r2,r3,5088d18 <__sflush_r+0x1a0>
 5088c08:	88c0030b 	ldhu	r3,12(r17)
 5088c0c:	89000417 	ldw	r4,16(r17)
 5088c10:	88000115 	stw	zero,4(r17)
 5088c14:	197dffcc 	andi	r5,r3,63487
 5088c18:	8940030d 	sth	r5,12(r17)
 5088c1c:	89000015 	stw	r4,0(r17)
 5088c20:	18c4000c 	andi	r3,r3,4096
 5088c24:	18002c1e 	bne	r3,zero,5088cd8 <__sflush_r+0x160>
 5088c28:	89400c17 	ldw	r5,48(r17)
 5088c2c:	9c000015 	stw	r16,0(r19)
 5088c30:	28000526 	beq	r5,zero,5088c48 <__sflush_r+0xd0>
 5088c34:	88801004 	addi	r2,r17,64
 5088c38:	28800226 	beq	r5,r2,5088c44 <__sflush_r+0xcc>
 5088c3c:	9809883a 	mov	r4,r19
 5088c40:	50892e40 	call	50892e4 <_free_r>
 5088c44:	88000c15 	stw	zero,48(r17)
 5088c48:	0005883a 	mov	r2,zero
 5088c4c:	dfc00417 	ldw	ra,16(sp)
 5088c50:	dcc00317 	ldw	r19,12(sp)
 5088c54:	dc800217 	ldw	r18,8(sp)
 5088c58:	dc400117 	ldw	r17,4(sp)
 5088c5c:	dc000017 	ldw	r16,0(sp)
 5088c60:	dec00504 	addi	sp,sp,20
 5088c64:	f800283a 	ret
 5088c68:	2c800417 	ldw	r18,16(r5)
 5088c6c:	903ff626 	beq	r18,zero,5088c48 <__alt_data_end+0xfffbaa48>
 5088c70:	2c000017 	ldw	r16,0(r5)
 5088c74:	108000cc 	andi	r2,r2,3
 5088c78:	2c800015 	stw	r18,0(r5)
 5088c7c:	84a1c83a 	sub	r16,r16,r18
 5088c80:	1000131e 	bne	r2,zero,5088cd0 <__sflush_r+0x158>
 5088c84:	28800517 	ldw	r2,20(r5)
 5088c88:	88800215 	stw	r2,8(r17)
 5088c8c:	04000316 	blt	zero,r16,5088c9c <__sflush_r+0x124>
 5088c90:	003fed06 	br	5088c48 <__alt_data_end+0xfffbaa48>
 5088c94:	90a5883a 	add	r18,r18,r2
 5088c98:	043feb0e 	bge	zero,r16,5088c48 <__alt_data_end+0xfffbaa48>
 5088c9c:	88800917 	ldw	r2,36(r17)
 5088ca0:	89400717 	ldw	r5,28(r17)
 5088ca4:	800f883a 	mov	r7,r16
 5088ca8:	900d883a 	mov	r6,r18
 5088cac:	9809883a 	mov	r4,r19
 5088cb0:	103ee83a 	callr	r2
 5088cb4:	80a1c83a 	sub	r16,r16,r2
 5088cb8:	00bff616 	blt	zero,r2,5088c94 <__alt_data_end+0xfffbaa94>
 5088cbc:	88c0030b 	ldhu	r3,12(r17)
 5088cc0:	00bfffc4 	movi	r2,-1
 5088cc4:	18c01014 	ori	r3,r3,64
 5088cc8:	88c0030d 	sth	r3,12(r17)
 5088ccc:	003fdf06 	br	5088c4c <__alt_data_end+0xfffbaa4c>
 5088cd0:	0005883a 	mov	r2,zero
 5088cd4:	003fec06 	br	5088c88 <__alt_data_end+0xfffbaa88>
 5088cd8:	88801415 	stw	r2,80(r17)
 5088cdc:	003fd206 	br	5088c28 <__alt_data_end+0xfffbaa28>
 5088ce0:	28c00f17 	ldw	r3,60(r5)
 5088ce4:	00ffb316 	blt	zero,r3,5088bb4 <__alt_data_end+0xfffba9b4>
 5088ce8:	003fd706 	br	5088c48 <__alt_data_end+0xfffbaa48>
 5088cec:	89400717 	ldw	r5,28(r17)
 5088cf0:	000d883a 	mov	r6,zero
 5088cf4:	01c00044 	movi	r7,1
 5088cf8:	9809883a 	mov	r4,r19
 5088cfc:	403ee83a 	callr	r8
 5088d00:	100d883a 	mov	r6,r2
 5088d04:	00bfffc4 	movi	r2,-1
 5088d08:	30801426 	beq	r6,r2,5088d5c <__sflush_r+0x1e4>
 5088d0c:	8880030b 	ldhu	r2,12(r17)
 5088d10:	8a000a17 	ldw	r8,40(r17)
 5088d14:	003fae06 	br	5088bd0 <__alt_data_end+0xfffba9d0>
 5088d18:	98c00017 	ldw	r3,0(r19)
 5088d1c:	183fba26 	beq	r3,zero,5088c08 <__alt_data_end+0xfffbaa08>
 5088d20:	01000744 	movi	r4,29
 5088d24:	19000626 	beq	r3,r4,5088d40 <__sflush_r+0x1c8>
 5088d28:	01000584 	movi	r4,22
 5088d2c:	19000426 	beq	r3,r4,5088d40 <__sflush_r+0x1c8>
 5088d30:	88c0030b 	ldhu	r3,12(r17)
 5088d34:	18c01014 	ori	r3,r3,64
 5088d38:	88c0030d 	sth	r3,12(r17)
 5088d3c:	003fc306 	br	5088c4c <__alt_data_end+0xfffbaa4c>
 5088d40:	8880030b 	ldhu	r2,12(r17)
 5088d44:	88c00417 	ldw	r3,16(r17)
 5088d48:	88000115 	stw	zero,4(r17)
 5088d4c:	10bdffcc 	andi	r2,r2,63487
 5088d50:	8880030d 	sth	r2,12(r17)
 5088d54:	88c00015 	stw	r3,0(r17)
 5088d58:	003fb306 	br	5088c28 <__alt_data_end+0xfffbaa28>
 5088d5c:	98800017 	ldw	r2,0(r19)
 5088d60:	103fea26 	beq	r2,zero,5088d0c <__alt_data_end+0xfffbab0c>
 5088d64:	00c00744 	movi	r3,29
 5088d68:	10c00226 	beq	r2,r3,5088d74 <__sflush_r+0x1fc>
 5088d6c:	00c00584 	movi	r3,22
 5088d70:	10c0031e 	bne	r2,r3,5088d80 <__sflush_r+0x208>
 5088d74:	9c000015 	stw	r16,0(r19)
 5088d78:	0005883a 	mov	r2,zero
 5088d7c:	003fb306 	br	5088c4c <__alt_data_end+0xfffbaa4c>
 5088d80:	88c0030b 	ldhu	r3,12(r17)
 5088d84:	3005883a 	mov	r2,r6
 5088d88:	18c01014 	ori	r3,r3,64
 5088d8c:	88c0030d 	sth	r3,12(r17)
 5088d90:	003fae06 	br	5088c4c <__alt_data_end+0xfffbaa4c>

05088d94 <_fflush_r>:
 5088d94:	defffd04 	addi	sp,sp,-12
 5088d98:	dc000115 	stw	r16,4(sp)
 5088d9c:	dfc00215 	stw	ra,8(sp)
 5088da0:	2021883a 	mov	r16,r4
 5088da4:	20000226 	beq	r4,zero,5088db0 <_fflush_r+0x1c>
 5088da8:	20800e17 	ldw	r2,56(r4)
 5088dac:	10000c26 	beq	r2,zero,5088de0 <_fflush_r+0x4c>
 5088db0:	2880030f 	ldh	r2,12(r5)
 5088db4:	1000051e 	bne	r2,zero,5088dcc <_fflush_r+0x38>
 5088db8:	0005883a 	mov	r2,zero
 5088dbc:	dfc00217 	ldw	ra,8(sp)
 5088dc0:	dc000117 	ldw	r16,4(sp)
 5088dc4:	dec00304 	addi	sp,sp,12
 5088dc8:	f800283a 	ret
 5088dcc:	8009883a 	mov	r4,r16
 5088dd0:	dfc00217 	ldw	ra,8(sp)
 5088dd4:	dc000117 	ldw	r16,4(sp)
 5088dd8:	dec00304 	addi	sp,sp,12
 5088ddc:	5088b781 	jmpi	5088b78 <__sflush_r>
 5088de0:	d9400015 	stw	r5,0(sp)
 5088de4:	50891700 	call	5089170 <__sinit>
 5088de8:	d9400017 	ldw	r5,0(sp)
 5088dec:	003ff006 	br	5088db0 <__alt_data_end+0xfffbabb0>

05088df0 <fflush>:
 5088df0:	20000526 	beq	r4,zero,5088e08 <fflush+0x18>
 5088df4:	00814274 	movhi	r2,1289
 5088df8:	109f2104 	addi	r2,r2,31876
 5088dfc:	200b883a 	mov	r5,r4
 5088e00:	11000017 	ldw	r4,0(r2)
 5088e04:	5088d941 	jmpi	5088d94 <_fflush_r>
 5088e08:	00814274 	movhi	r2,1289
 5088e0c:	109f2004 	addi	r2,r2,31872
 5088e10:	11000017 	ldw	r4,0(r2)
 5088e14:	01414274 	movhi	r5,1289
 5088e18:	29636504 	addi	r5,r5,-29292
 5088e1c:	5089b741 	jmpi	5089b74 <_fwalk_reent>

05088e20 <__fp_unlock>:
 5088e20:	0005883a 	mov	r2,zero
 5088e24:	f800283a 	ret

05088e28 <_cleanup_r>:
 5088e28:	01414274 	movhi	r5,1289
 5088e2c:	297be604 	addi	r5,r5,-4200
 5088e30:	5089b741 	jmpi	5089b74 <_fwalk_reent>

05088e34 <__sinit.part.1>:
 5088e34:	defff704 	addi	sp,sp,-36
 5088e38:	00c14274 	movhi	r3,1289
 5088e3c:	dfc00815 	stw	ra,32(sp)
 5088e40:	ddc00715 	stw	r23,28(sp)
 5088e44:	dd800615 	stw	r22,24(sp)
 5088e48:	dd400515 	stw	r21,20(sp)
 5088e4c:	dd000415 	stw	r20,16(sp)
 5088e50:	dcc00315 	stw	r19,12(sp)
 5088e54:	dc800215 	stw	r18,8(sp)
 5088e58:	dc400115 	stw	r17,4(sp)
 5088e5c:	dc000015 	stw	r16,0(sp)
 5088e60:	18e38a04 	addi	r3,r3,-29144
 5088e64:	24000117 	ldw	r16,4(r4)
 5088e68:	20c00f15 	stw	r3,60(r4)
 5088e6c:	2080bb04 	addi	r2,r4,748
 5088e70:	00c000c4 	movi	r3,3
 5088e74:	20c0b915 	stw	r3,740(r4)
 5088e78:	2080ba15 	stw	r2,744(r4)
 5088e7c:	2000b815 	stw	zero,736(r4)
 5088e80:	05c00204 	movi	r23,8
 5088e84:	00800104 	movi	r2,4
 5088e88:	2025883a 	mov	r18,r4
 5088e8c:	b80d883a 	mov	r6,r23
 5088e90:	81001704 	addi	r4,r16,92
 5088e94:	000b883a 	mov	r5,zero
 5088e98:	80000015 	stw	zero,0(r16)
 5088e9c:	80000115 	stw	zero,4(r16)
 5088ea0:	80000215 	stw	zero,8(r16)
 5088ea4:	8080030d 	sth	r2,12(r16)
 5088ea8:	80001915 	stw	zero,100(r16)
 5088eac:	8000038d 	sth	zero,14(r16)
 5088eb0:	80000415 	stw	zero,16(r16)
 5088eb4:	80000515 	stw	zero,20(r16)
 5088eb8:	80000615 	stw	zero,24(r16)
 5088ebc:	508aa640 	call	508aa64 <memset>
 5088ec0:	05814274 	movhi	r22,1289
 5088ec4:	94400217 	ldw	r17,8(r18)
 5088ec8:	05414274 	movhi	r21,1289
 5088ecc:	05014274 	movhi	r20,1289
 5088ed0:	04c14274 	movhi	r19,1289
 5088ed4:	b5b06d04 	addi	r22,r22,-15948
 5088ed8:	ad708404 	addi	r21,r21,-15856
 5088edc:	a530a304 	addi	r20,r20,-15732
 5088ee0:	9cf0ba04 	addi	r19,r19,-15640
 5088ee4:	85800815 	stw	r22,32(r16)
 5088ee8:	85400915 	stw	r21,36(r16)
 5088eec:	85000a15 	stw	r20,40(r16)
 5088ef0:	84c00b15 	stw	r19,44(r16)
 5088ef4:	84000715 	stw	r16,28(r16)
 5088ef8:	00800284 	movi	r2,10
 5088efc:	8880030d 	sth	r2,12(r17)
 5088f00:	00800044 	movi	r2,1
 5088f04:	b80d883a 	mov	r6,r23
 5088f08:	89001704 	addi	r4,r17,92
 5088f0c:	000b883a 	mov	r5,zero
 5088f10:	88000015 	stw	zero,0(r17)
 5088f14:	88000115 	stw	zero,4(r17)
 5088f18:	88000215 	stw	zero,8(r17)
 5088f1c:	88001915 	stw	zero,100(r17)
 5088f20:	8880038d 	sth	r2,14(r17)
 5088f24:	88000415 	stw	zero,16(r17)
 5088f28:	88000515 	stw	zero,20(r17)
 5088f2c:	88000615 	stw	zero,24(r17)
 5088f30:	508aa640 	call	508aa64 <memset>
 5088f34:	94000317 	ldw	r16,12(r18)
 5088f38:	00800484 	movi	r2,18
 5088f3c:	8c400715 	stw	r17,28(r17)
 5088f40:	8d800815 	stw	r22,32(r17)
 5088f44:	8d400915 	stw	r21,36(r17)
 5088f48:	8d000a15 	stw	r20,40(r17)
 5088f4c:	8cc00b15 	stw	r19,44(r17)
 5088f50:	8080030d 	sth	r2,12(r16)
 5088f54:	00800084 	movi	r2,2
 5088f58:	80000015 	stw	zero,0(r16)
 5088f5c:	80000115 	stw	zero,4(r16)
 5088f60:	80000215 	stw	zero,8(r16)
 5088f64:	80001915 	stw	zero,100(r16)
 5088f68:	8080038d 	sth	r2,14(r16)
 5088f6c:	80000415 	stw	zero,16(r16)
 5088f70:	80000515 	stw	zero,20(r16)
 5088f74:	80000615 	stw	zero,24(r16)
 5088f78:	b80d883a 	mov	r6,r23
 5088f7c:	000b883a 	mov	r5,zero
 5088f80:	81001704 	addi	r4,r16,92
 5088f84:	508aa640 	call	508aa64 <memset>
 5088f88:	00800044 	movi	r2,1
 5088f8c:	84000715 	stw	r16,28(r16)
 5088f90:	85800815 	stw	r22,32(r16)
 5088f94:	85400915 	stw	r21,36(r16)
 5088f98:	85000a15 	stw	r20,40(r16)
 5088f9c:	84c00b15 	stw	r19,44(r16)
 5088fa0:	90800e15 	stw	r2,56(r18)
 5088fa4:	dfc00817 	ldw	ra,32(sp)
 5088fa8:	ddc00717 	ldw	r23,28(sp)
 5088fac:	dd800617 	ldw	r22,24(sp)
 5088fb0:	dd400517 	ldw	r21,20(sp)
 5088fb4:	dd000417 	ldw	r20,16(sp)
 5088fb8:	dcc00317 	ldw	r19,12(sp)
 5088fbc:	dc800217 	ldw	r18,8(sp)
 5088fc0:	dc400117 	ldw	r17,4(sp)
 5088fc4:	dc000017 	ldw	r16,0(sp)
 5088fc8:	dec00904 	addi	sp,sp,36
 5088fcc:	f800283a 	ret

05088fd0 <__fp_lock>:
 5088fd0:	0005883a 	mov	r2,zero
 5088fd4:	f800283a 	ret

05088fd8 <__sfmoreglue>:
 5088fd8:	defffc04 	addi	sp,sp,-16
 5088fdc:	dc400115 	stw	r17,4(sp)
 5088fe0:	2c7fffc4 	addi	r17,r5,-1
 5088fe4:	8c401a24 	muli	r17,r17,104
 5088fe8:	dc800215 	stw	r18,8(sp)
 5088fec:	2825883a 	mov	r18,r5
 5088ff0:	89401d04 	addi	r5,r17,116
 5088ff4:	dc000015 	stw	r16,0(sp)
 5088ff8:	dfc00315 	stw	ra,12(sp)
 5088ffc:	5089ed00 	call	5089ed0 <_malloc_r>
 5089000:	1021883a 	mov	r16,r2
 5089004:	10000726 	beq	r2,zero,5089024 <__sfmoreglue+0x4c>
 5089008:	11000304 	addi	r4,r2,12
 508900c:	10000015 	stw	zero,0(r2)
 5089010:	14800115 	stw	r18,4(r2)
 5089014:	11000215 	stw	r4,8(r2)
 5089018:	89801a04 	addi	r6,r17,104
 508901c:	000b883a 	mov	r5,zero
 5089020:	508aa640 	call	508aa64 <memset>
 5089024:	8005883a 	mov	r2,r16
 5089028:	dfc00317 	ldw	ra,12(sp)
 508902c:	dc800217 	ldw	r18,8(sp)
 5089030:	dc400117 	ldw	r17,4(sp)
 5089034:	dc000017 	ldw	r16,0(sp)
 5089038:	dec00404 	addi	sp,sp,16
 508903c:	f800283a 	ret

05089040 <__sfp>:
 5089040:	defffb04 	addi	sp,sp,-20
 5089044:	dc000015 	stw	r16,0(sp)
 5089048:	04014274 	movhi	r16,1289
 508904c:	841f2004 	addi	r16,r16,31872
 5089050:	dcc00315 	stw	r19,12(sp)
 5089054:	2027883a 	mov	r19,r4
 5089058:	81000017 	ldw	r4,0(r16)
 508905c:	dfc00415 	stw	ra,16(sp)
 5089060:	dc800215 	stw	r18,8(sp)
 5089064:	20800e17 	ldw	r2,56(r4)
 5089068:	dc400115 	stw	r17,4(sp)
 508906c:	1000021e 	bne	r2,zero,5089078 <__sfp+0x38>
 5089070:	5088e340 	call	5088e34 <__sinit.part.1>
 5089074:	81000017 	ldw	r4,0(r16)
 5089078:	2480b804 	addi	r18,r4,736
 508907c:	047fffc4 	movi	r17,-1
 5089080:	91000117 	ldw	r4,4(r18)
 5089084:	94000217 	ldw	r16,8(r18)
 5089088:	213fffc4 	addi	r4,r4,-1
 508908c:	20000a16 	blt	r4,zero,50890b8 <__sfp+0x78>
 5089090:	8080030f 	ldh	r2,12(r16)
 5089094:	10000c26 	beq	r2,zero,50890c8 <__sfp+0x88>
 5089098:	80c01d04 	addi	r3,r16,116
 508909c:	00000206 	br	50890a8 <__sfp+0x68>
 50890a0:	18bfe60f 	ldh	r2,-104(r3)
 50890a4:	10000826 	beq	r2,zero,50890c8 <__sfp+0x88>
 50890a8:	213fffc4 	addi	r4,r4,-1
 50890ac:	1c3ffd04 	addi	r16,r3,-12
 50890b0:	18c01a04 	addi	r3,r3,104
 50890b4:	247ffa1e 	bne	r4,r17,50890a0 <__alt_data_end+0xfffbaea0>
 50890b8:	90800017 	ldw	r2,0(r18)
 50890bc:	10001d26 	beq	r2,zero,5089134 <__sfp+0xf4>
 50890c0:	1025883a 	mov	r18,r2
 50890c4:	003fee06 	br	5089080 <__alt_data_end+0xfffbae80>
 50890c8:	00bfffc4 	movi	r2,-1
 50890cc:	8080038d 	sth	r2,14(r16)
 50890d0:	00800044 	movi	r2,1
 50890d4:	8080030d 	sth	r2,12(r16)
 50890d8:	80001915 	stw	zero,100(r16)
 50890dc:	80000015 	stw	zero,0(r16)
 50890e0:	80000215 	stw	zero,8(r16)
 50890e4:	80000115 	stw	zero,4(r16)
 50890e8:	80000415 	stw	zero,16(r16)
 50890ec:	80000515 	stw	zero,20(r16)
 50890f0:	80000615 	stw	zero,24(r16)
 50890f4:	01800204 	movi	r6,8
 50890f8:	000b883a 	mov	r5,zero
 50890fc:	81001704 	addi	r4,r16,92
 5089100:	508aa640 	call	508aa64 <memset>
 5089104:	8005883a 	mov	r2,r16
 5089108:	80000c15 	stw	zero,48(r16)
 508910c:	80000d15 	stw	zero,52(r16)
 5089110:	80001115 	stw	zero,68(r16)
 5089114:	80001215 	stw	zero,72(r16)
 5089118:	dfc00417 	ldw	ra,16(sp)
 508911c:	dcc00317 	ldw	r19,12(sp)
 5089120:	dc800217 	ldw	r18,8(sp)
 5089124:	dc400117 	ldw	r17,4(sp)
 5089128:	dc000017 	ldw	r16,0(sp)
 508912c:	dec00504 	addi	sp,sp,20
 5089130:	f800283a 	ret
 5089134:	01400104 	movi	r5,4
 5089138:	9809883a 	mov	r4,r19
 508913c:	5088fd80 	call	5088fd8 <__sfmoreglue>
 5089140:	90800015 	stw	r2,0(r18)
 5089144:	103fde1e 	bne	r2,zero,50890c0 <__alt_data_end+0xfffbaec0>
 5089148:	00800304 	movi	r2,12
 508914c:	98800015 	stw	r2,0(r19)
 5089150:	0005883a 	mov	r2,zero
 5089154:	003ff006 	br	5089118 <__alt_data_end+0xfffbaf18>

05089158 <_cleanup>:
 5089158:	00814274 	movhi	r2,1289
 508915c:	109f2004 	addi	r2,r2,31872
 5089160:	11000017 	ldw	r4,0(r2)
 5089164:	01414274 	movhi	r5,1289
 5089168:	297be604 	addi	r5,r5,-4200
 508916c:	5089b741 	jmpi	5089b74 <_fwalk_reent>

05089170 <__sinit>:
 5089170:	20800e17 	ldw	r2,56(r4)
 5089174:	10000126 	beq	r2,zero,508917c <__sinit+0xc>
 5089178:	f800283a 	ret
 508917c:	5088e341 	jmpi	5088e34 <__sinit.part.1>

05089180 <__sfp_lock_acquire>:
 5089180:	f800283a 	ret

05089184 <__sfp_lock_release>:
 5089184:	f800283a 	ret

05089188 <__sinit_lock_acquire>:
 5089188:	f800283a 	ret

0508918c <__sinit_lock_release>:
 508918c:	f800283a 	ret

05089190 <__fp_lock_all>:
 5089190:	00814274 	movhi	r2,1289
 5089194:	109f2104 	addi	r2,r2,31876
 5089198:	11000017 	ldw	r4,0(r2)
 508919c:	01414274 	movhi	r5,1289
 50891a0:	2963f404 	addi	r5,r5,-28720
 50891a4:	5089ab01 	jmpi	5089ab0 <_fwalk>

050891a8 <__fp_unlock_all>:
 50891a8:	00814274 	movhi	r2,1289
 50891ac:	109f2104 	addi	r2,r2,31876
 50891b0:	11000017 	ldw	r4,0(r2)
 50891b4:	01414274 	movhi	r5,1289
 50891b8:	29638804 	addi	r5,r5,-29152
 50891bc:	5089ab01 	jmpi	5089ab0 <_fwalk>

050891c0 <_malloc_trim_r>:
 50891c0:	defffb04 	addi	sp,sp,-20
 50891c4:	dcc00315 	stw	r19,12(sp)
 50891c8:	04c14274 	movhi	r19,1289
 50891cc:	dc800215 	stw	r18,8(sp)
 50891d0:	dc400115 	stw	r17,4(sp)
 50891d4:	dc000015 	stw	r16,0(sp)
 50891d8:	dfc00415 	stw	ra,16(sp)
 50891dc:	2821883a 	mov	r16,r5
 50891e0:	9cd99c04 	addi	r19,r19,26224
 50891e4:	2025883a 	mov	r18,r4
 50891e8:	5092fe80 	call	5092fe8 <__malloc_lock>
 50891ec:	98800217 	ldw	r2,8(r19)
 50891f0:	14400117 	ldw	r17,4(r2)
 50891f4:	00bfff04 	movi	r2,-4
 50891f8:	88a2703a 	and	r17,r17,r2
 50891fc:	8c21c83a 	sub	r16,r17,r16
 5089200:	8403fbc4 	addi	r16,r16,4079
 5089204:	8020d33a 	srli	r16,r16,12
 5089208:	0083ffc4 	movi	r2,4095
 508920c:	843fffc4 	addi	r16,r16,-1
 5089210:	8020933a 	slli	r16,r16,12
 5089214:	1400060e 	bge	r2,r16,5089230 <_malloc_trim_r+0x70>
 5089218:	000b883a 	mov	r5,zero
 508921c:	9009883a 	mov	r4,r18
 5089220:	508c1600 	call	508c160 <_sbrk_r>
 5089224:	98c00217 	ldw	r3,8(r19)
 5089228:	1c47883a 	add	r3,r3,r17
 508922c:	10c00a26 	beq	r2,r3,5089258 <_malloc_trim_r+0x98>
 5089230:	9009883a 	mov	r4,r18
 5089234:	509300c0 	call	509300c <__malloc_unlock>
 5089238:	0005883a 	mov	r2,zero
 508923c:	dfc00417 	ldw	ra,16(sp)
 5089240:	dcc00317 	ldw	r19,12(sp)
 5089244:	dc800217 	ldw	r18,8(sp)
 5089248:	dc400117 	ldw	r17,4(sp)
 508924c:	dc000017 	ldw	r16,0(sp)
 5089250:	dec00504 	addi	sp,sp,20
 5089254:	f800283a 	ret
 5089258:	040bc83a 	sub	r5,zero,r16
 508925c:	9009883a 	mov	r4,r18
 5089260:	508c1600 	call	508c160 <_sbrk_r>
 5089264:	00ffffc4 	movi	r3,-1
 5089268:	10c00d26 	beq	r2,r3,50892a0 <_malloc_trim_r+0xe0>
 508926c:	00c142b4 	movhi	r3,1290
 5089270:	18e60904 	addi	r3,r3,-26588
 5089274:	18800017 	ldw	r2,0(r3)
 5089278:	99000217 	ldw	r4,8(r19)
 508927c:	8c23c83a 	sub	r17,r17,r16
 5089280:	8c400054 	ori	r17,r17,1
 5089284:	1421c83a 	sub	r16,r2,r16
 5089288:	24400115 	stw	r17,4(r4)
 508928c:	9009883a 	mov	r4,r18
 5089290:	1c000015 	stw	r16,0(r3)
 5089294:	509300c0 	call	509300c <__malloc_unlock>
 5089298:	00800044 	movi	r2,1
 508929c:	003fe706 	br	508923c <__alt_data_end+0xfffbb03c>
 50892a0:	000b883a 	mov	r5,zero
 50892a4:	9009883a 	mov	r4,r18
 50892a8:	508c1600 	call	508c160 <_sbrk_r>
 50892ac:	99000217 	ldw	r4,8(r19)
 50892b0:	014003c4 	movi	r5,15
 50892b4:	1107c83a 	sub	r3,r2,r4
 50892b8:	28ffdd0e 	bge	r5,r3,5089230 <__alt_data_end+0xfffbb030>
 50892bc:	01414274 	movhi	r5,1289
 50892c0:	295f2304 	addi	r5,r5,31884
 50892c4:	29400017 	ldw	r5,0(r5)
 50892c8:	18c00054 	ori	r3,r3,1
 50892cc:	20c00115 	stw	r3,4(r4)
 50892d0:	00c142b4 	movhi	r3,1290
 50892d4:	1145c83a 	sub	r2,r2,r5
 50892d8:	18e60904 	addi	r3,r3,-26588
 50892dc:	18800015 	stw	r2,0(r3)
 50892e0:	003fd306 	br	5089230 <__alt_data_end+0xfffbb030>

050892e4 <_free_r>:
 50892e4:	28004126 	beq	r5,zero,50893ec <_free_r+0x108>
 50892e8:	defffd04 	addi	sp,sp,-12
 50892ec:	dc400115 	stw	r17,4(sp)
 50892f0:	dc000015 	stw	r16,0(sp)
 50892f4:	2023883a 	mov	r17,r4
 50892f8:	2821883a 	mov	r16,r5
 50892fc:	dfc00215 	stw	ra,8(sp)
 5089300:	5092fe80 	call	5092fe8 <__malloc_lock>
 5089304:	81ffff17 	ldw	r7,-4(r16)
 5089308:	00bfff84 	movi	r2,-2
 508930c:	01014274 	movhi	r4,1289
 5089310:	81bffe04 	addi	r6,r16,-8
 5089314:	3884703a 	and	r2,r7,r2
 5089318:	21199c04 	addi	r4,r4,26224
 508931c:	308b883a 	add	r5,r6,r2
 5089320:	2a400117 	ldw	r9,4(r5)
 5089324:	22000217 	ldw	r8,8(r4)
 5089328:	00ffff04 	movi	r3,-4
 508932c:	48c6703a 	and	r3,r9,r3
 5089330:	2a005726 	beq	r5,r8,5089490 <_free_r+0x1ac>
 5089334:	28c00115 	stw	r3,4(r5)
 5089338:	39c0004c 	andi	r7,r7,1
 508933c:	3800091e 	bne	r7,zero,5089364 <_free_r+0x80>
 5089340:	823ffe17 	ldw	r8,-8(r16)
 5089344:	22400204 	addi	r9,r4,8
 5089348:	320dc83a 	sub	r6,r6,r8
 508934c:	31c00217 	ldw	r7,8(r6)
 5089350:	1205883a 	add	r2,r2,r8
 5089354:	3a406526 	beq	r7,r9,50894ec <_free_r+0x208>
 5089358:	32000317 	ldw	r8,12(r6)
 508935c:	3a000315 	stw	r8,12(r7)
 5089360:	41c00215 	stw	r7,8(r8)
 5089364:	28cf883a 	add	r7,r5,r3
 5089368:	39c00117 	ldw	r7,4(r7)
 508936c:	39c0004c 	andi	r7,r7,1
 5089370:	38003a26 	beq	r7,zero,508945c <_free_r+0x178>
 5089374:	10c00054 	ori	r3,r2,1
 5089378:	30c00115 	stw	r3,4(r6)
 508937c:	3087883a 	add	r3,r6,r2
 5089380:	18800015 	stw	r2,0(r3)
 5089384:	00c07fc4 	movi	r3,511
 5089388:	18801936 	bltu	r3,r2,50893f0 <_free_r+0x10c>
 508938c:	1004d0fa 	srli	r2,r2,3
 5089390:	01c00044 	movi	r7,1
 5089394:	21400117 	ldw	r5,4(r4)
 5089398:	10c00044 	addi	r3,r2,1
 508939c:	18c7883a 	add	r3,r3,r3
 50893a0:	1005d0ba 	srai	r2,r2,2
 50893a4:	18c7883a 	add	r3,r3,r3
 50893a8:	18c7883a 	add	r3,r3,r3
 50893ac:	1907883a 	add	r3,r3,r4
 50893b0:	3884983a 	sll	r2,r7,r2
 50893b4:	19c00017 	ldw	r7,0(r3)
 50893b8:	1a3ffe04 	addi	r8,r3,-8
 50893bc:	1144b03a 	or	r2,r2,r5
 50893c0:	32000315 	stw	r8,12(r6)
 50893c4:	31c00215 	stw	r7,8(r6)
 50893c8:	20800115 	stw	r2,4(r4)
 50893cc:	19800015 	stw	r6,0(r3)
 50893d0:	39800315 	stw	r6,12(r7)
 50893d4:	8809883a 	mov	r4,r17
 50893d8:	dfc00217 	ldw	ra,8(sp)
 50893dc:	dc400117 	ldw	r17,4(sp)
 50893e0:	dc000017 	ldw	r16,0(sp)
 50893e4:	dec00304 	addi	sp,sp,12
 50893e8:	509300c1 	jmpi	509300c <__malloc_unlock>
 50893ec:	f800283a 	ret
 50893f0:	100ad27a 	srli	r5,r2,9
 50893f4:	00c00104 	movi	r3,4
 50893f8:	19404a36 	bltu	r3,r5,5089524 <_free_r+0x240>
 50893fc:	100ad1ba 	srli	r5,r2,6
 5089400:	28c00e44 	addi	r3,r5,57
 5089404:	18c7883a 	add	r3,r3,r3
 5089408:	29400e04 	addi	r5,r5,56
 508940c:	18c7883a 	add	r3,r3,r3
 5089410:	18c7883a 	add	r3,r3,r3
 5089414:	1909883a 	add	r4,r3,r4
 5089418:	20c00017 	ldw	r3,0(r4)
 508941c:	01c14274 	movhi	r7,1289
 5089420:	213ffe04 	addi	r4,r4,-8
 5089424:	39d99c04 	addi	r7,r7,26224
 5089428:	20c04426 	beq	r4,r3,508953c <_free_r+0x258>
 508942c:	01ffff04 	movi	r7,-4
 5089430:	19400117 	ldw	r5,4(r3)
 5089434:	29ca703a 	and	r5,r5,r7
 5089438:	1140022e 	bgeu	r2,r5,5089444 <_free_r+0x160>
 508943c:	18c00217 	ldw	r3,8(r3)
 5089440:	20fffb1e 	bne	r4,r3,5089430 <__alt_data_end+0xfffbb230>
 5089444:	19000317 	ldw	r4,12(r3)
 5089448:	31000315 	stw	r4,12(r6)
 508944c:	30c00215 	stw	r3,8(r6)
 5089450:	21800215 	stw	r6,8(r4)
 5089454:	19800315 	stw	r6,12(r3)
 5089458:	003fde06 	br	50893d4 <__alt_data_end+0xfffbb1d4>
 508945c:	29c00217 	ldw	r7,8(r5)
 5089460:	10c5883a 	add	r2,r2,r3
 5089464:	00c14274 	movhi	r3,1289
 5089468:	18d99e04 	addi	r3,r3,26232
 508946c:	38c03b26 	beq	r7,r3,508955c <_free_r+0x278>
 5089470:	2a000317 	ldw	r8,12(r5)
 5089474:	11400054 	ori	r5,r2,1
 5089478:	3087883a 	add	r3,r6,r2
 508947c:	3a000315 	stw	r8,12(r7)
 5089480:	41c00215 	stw	r7,8(r8)
 5089484:	31400115 	stw	r5,4(r6)
 5089488:	18800015 	stw	r2,0(r3)
 508948c:	003fbd06 	br	5089384 <__alt_data_end+0xfffbb184>
 5089490:	39c0004c 	andi	r7,r7,1
 5089494:	10c5883a 	add	r2,r2,r3
 5089498:	3800071e 	bne	r7,zero,50894b8 <_free_r+0x1d4>
 508949c:	81fffe17 	ldw	r7,-8(r16)
 50894a0:	31cdc83a 	sub	r6,r6,r7
 50894a4:	30c00317 	ldw	r3,12(r6)
 50894a8:	31400217 	ldw	r5,8(r6)
 50894ac:	11c5883a 	add	r2,r2,r7
 50894b0:	28c00315 	stw	r3,12(r5)
 50894b4:	19400215 	stw	r5,8(r3)
 50894b8:	10c00054 	ori	r3,r2,1
 50894bc:	30c00115 	stw	r3,4(r6)
 50894c0:	00c14274 	movhi	r3,1289
 50894c4:	18df2404 	addi	r3,r3,31888
 50894c8:	18c00017 	ldw	r3,0(r3)
 50894cc:	21800215 	stw	r6,8(r4)
 50894d0:	10ffc036 	bltu	r2,r3,50893d4 <__alt_data_end+0xfffbb1d4>
 50894d4:	008142b4 	movhi	r2,1290
 50894d8:	10a5f704 	addi	r2,r2,-26660
 50894dc:	11400017 	ldw	r5,0(r2)
 50894e0:	8809883a 	mov	r4,r17
 50894e4:	50891c00 	call	50891c0 <_malloc_trim_r>
 50894e8:	003fba06 	br	50893d4 <__alt_data_end+0xfffbb1d4>
 50894ec:	28c9883a 	add	r4,r5,r3
 50894f0:	21000117 	ldw	r4,4(r4)
 50894f4:	2100004c 	andi	r4,r4,1
 50894f8:	2000391e 	bne	r4,zero,50895e0 <_free_r+0x2fc>
 50894fc:	29c00217 	ldw	r7,8(r5)
 5089500:	29000317 	ldw	r4,12(r5)
 5089504:	1885883a 	add	r2,r3,r2
 5089508:	10c00054 	ori	r3,r2,1
 508950c:	39000315 	stw	r4,12(r7)
 5089510:	21c00215 	stw	r7,8(r4)
 5089514:	30c00115 	stw	r3,4(r6)
 5089518:	308d883a 	add	r6,r6,r2
 508951c:	30800015 	stw	r2,0(r6)
 5089520:	003fac06 	br	50893d4 <__alt_data_end+0xfffbb1d4>
 5089524:	00c00504 	movi	r3,20
 5089528:	19401536 	bltu	r3,r5,5089580 <_free_r+0x29c>
 508952c:	28c01704 	addi	r3,r5,92
 5089530:	18c7883a 	add	r3,r3,r3
 5089534:	294016c4 	addi	r5,r5,91
 5089538:	003fb406 	br	508940c <__alt_data_end+0xfffbb20c>
 508953c:	280bd0ba 	srai	r5,r5,2
 5089540:	00c00044 	movi	r3,1
 5089544:	38800117 	ldw	r2,4(r7)
 5089548:	194a983a 	sll	r5,r3,r5
 508954c:	2007883a 	mov	r3,r4
 5089550:	2884b03a 	or	r2,r5,r2
 5089554:	38800115 	stw	r2,4(r7)
 5089558:	003fbb06 	br	5089448 <__alt_data_end+0xfffbb248>
 508955c:	21800515 	stw	r6,20(r4)
 5089560:	21800415 	stw	r6,16(r4)
 5089564:	10c00054 	ori	r3,r2,1
 5089568:	31c00315 	stw	r7,12(r6)
 508956c:	31c00215 	stw	r7,8(r6)
 5089570:	30c00115 	stw	r3,4(r6)
 5089574:	308d883a 	add	r6,r6,r2
 5089578:	30800015 	stw	r2,0(r6)
 508957c:	003f9506 	br	50893d4 <__alt_data_end+0xfffbb1d4>
 5089580:	00c01504 	movi	r3,84
 5089584:	19400536 	bltu	r3,r5,508959c <_free_r+0x2b8>
 5089588:	100ad33a 	srli	r5,r2,12
 508958c:	28c01bc4 	addi	r3,r5,111
 5089590:	18c7883a 	add	r3,r3,r3
 5089594:	29401b84 	addi	r5,r5,110
 5089598:	003f9c06 	br	508940c <__alt_data_end+0xfffbb20c>
 508959c:	00c05504 	movi	r3,340
 50895a0:	19400536 	bltu	r3,r5,50895b8 <_free_r+0x2d4>
 50895a4:	100ad3fa 	srli	r5,r2,15
 50895a8:	28c01e04 	addi	r3,r5,120
 50895ac:	18c7883a 	add	r3,r3,r3
 50895b0:	29401dc4 	addi	r5,r5,119
 50895b4:	003f9506 	br	508940c <__alt_data_end+0xfffbb20c>
 50895b8:	00c15504 	movi	r3,1364
 50895bc:	19400536 	bltu	r3,r5,50895d4 <_free_r+0x2f0>
 50895c0:	100ad4ba 	srli	r5,r2,18
 50895c4:	28c01f44 	addi	r3,r5,125
 50895c8:	18c7883a 	add	r3,r3,r3
 50895cc:	29401f04 	addi	r5,r5,124
 50895d0:	003f8e06 	br	508940c <__alt_data_end+0xfffbb20c>
 50895d4:	00c03f84 	movi	r3,254
 50895d8:	01401f84 	movi	r5,126
 50895dc:	003f8b06 	br	508940c <__alt_data_end+0xfffbb20c>
 50895e0:	10c00054 	ori	r3,r2,1
 50895e4:	30c00115 	stw	r3,4(r6)
 50895e8:	308d883a 	add	r6,r6,r2
 50895ec:	30800015 	stw	r2,0(r6)
 50895f0:	003f7806 	br	50893d4 <__alt_data_end+0xfffbb1d4>

050895f4 <__sfvwrite_r>:
 50895f4:	30800217 	ldw	r2,8(r6)
 50895f8:	10006726 	beq	r2,zero,5089798 <__sfvwrite_r+0x1a4>
 50895fc:	28c0030b 	ldhu	r3,12(r5)
 5089600:	defff404 	addi	sp,sp,-48
 5089604:	dd400715 	stw	r21,28(sp)
 5089608:	dd000615 	stw	r20,24(sp)
 508960c:	dc000215 	stw	r16,8(sp)
 5089610:	dfc00b15 	stw	ra,44(sp)
 5089614:	df000a15 	stw	fp,40(sp)
 5089618:	ddc00915 	stw	r23,36(sp)
 508961c:	dd800815 	stw	r22,32(sp)
 5089620:	dcc00515 	stw	r19,20(sp)
 5089624:	dc800415 	stw	r18,16(sp)
 5089628:	dc400315 	stw	r17,12(sp)
 508962c:	1880020c 	andi	r2,r3,8
 5089630:	2821883a 	mov	r16,r5
 5089634:	202b883a 	mov	r21,r4
 5089638:	3029883a 	mov	r20,r6
 508963c:	10002726 	beq	r2,zero,50896dc <__sfvwrite_r+0xe8>
 5089640:	28800417 	ldw	r2,16(r5)
 5089644:	10002526 	beq	r2,zero,50896dc <__sfvwrite_r+0xe8>
 5089648:	1880008c 	andi	r2,r3,2
 508964c:	a4400017 	ldw	r17,0(r20)
 5089650:	10002a26 	beq	r2,zero,50896fc <__sfvwrite_r+0x108>
 5089654:	05a00034 	movhi	r22,32768
 5089658:	0027883a 	mov	r19,zero
 508965c:	0025883a 	mov	r18,zero
 5089660:	b5bf0004 	addi	r22,r22,-1024
 5089664:	980d883a 	mov	r6,r19
 5089668:	a809883a 	mov	r4,r21
 508966c:	90004626 	beq	r18,zero,5089788 <__sfvwrite_r+0x194>
 5089670:	900f883a 	mov	r7,r18
 5089674:	b480022e 	bgeu	r22,r18,5089680 <__sfvwrite_r+0x8c>
 5089678:	01e00034 	movhi	r7,32768
 508967c:	39ff0004 	addi	r7,r7,-1024
 5089680:	80800917 	ldw	r2,36(r16)
 5089684:	81400717 	ldw	r5,28(r16)
 5089688:	103ee83a 	callr	r2
 508968c:	0080570e 	bge	zero,r2,50897ec <__sfvwrite_r+0x1f8>
 5089690:	a0c00217 	ldw	r3,8(r20)
 5089694:	98a7883a 	add	r19,r19,r2
 5089698:	90a5c83a 	sub	r18,r18,r2
 508969c:	1885c83a 	sub	r2,r3,r2
 50896a0:	a0800215 	stw	r2,8(r20)
 50896a4:	103fef1e 	bne	r2,zero,5089664 <__alt_data_end+0xfffbb464>
 50896a8:	0005883a 	mov	r2,zero
 50896ac:	dfc00b17 	ldw	ra,44(sp)
 50896b0:	df000a17 	ldw	fp,40(sp)
 50896b4:	ddc00917 	ldw	r23,36(sp)
 50896b8:	dd800817 	ldw	r22,32(sp)
 50896bc:	dd400717 	ldw	r21,28(sp)
 50896c0:	dd000617 	ldw	r20,24(sp)
 50896c4:	dcc00517 	ldw	r19,20(sp)
 50896c8:	dc800417 	ldw	r18,16(sp)
 50896cc:	dc400317 	ldw	r17,12(sp)
 50896d0:	dc000217 	ldw	r16,8(sp)
 50896d4:	dec00c04 	addi	sp,sp,48
 50896d8:	f800283a 	ret
 50896dc:	800b883a 	mov	r5,r16
 50896e0:	a809883a 	mov	r4,r21
 50896e4:	508719c0 	call	508719c <__swsetup_r>
 50896e8:	1000eb1e 	bne	r2,zero,5089a98 <__sfvwrite_r+0x4a4>
 50896ec:	80c0030b 	ldhu	r3,12(r16)
 50896f0:	a4400017 	ldw	r17,0(r20)
 50896f4:	1880008c 	andi	r2,r3,2
 50896f8:	103fd61e 	bne	r2,zero,5089654 <__alt_data_end+0xfffbb454>
 50896fc:	1880004c 	andi	r2,r3,1
 5089700:	10003f1e 	bne	r2,zero,5089800 <__sfvwrite_r+0x20c>
 5089704:	0039883a 	mov	fp,zero
 5089708:	0025883a 	mov	r18,zero
 508970c:	90001a26 	beq	r18,zero,5089778 <__sfvwrite_r+0x184>
 5089710:	1880800c 	andi	r2,r3,512
 5089714:	84c00217 	ldw	r19,8(r16)
 5089718:	10002126 	beq	r2,zero,50897a0 <__sfvwrite_r+0x1ac>
 508971c:	982f883a 	mov	r23,r19
 5089720:	94c09336 	bltu	r18,r19,5089970 <__sfvwrite_r+0x37c>
 5089724:	1881200c 	andi	r2,r3,1152
 5089728:	10009e1e 	bne	r2,zero,50899a4 <__sfvwrite_r+0x3b0>
 508972c:	81000017 	ldw	r4,0(r16)
 5089730:	b80d883a 	mov	r6,r23
 5089734:	e00b883a 	mov	r5,fp
 5089738:	508a9080 	call	508a908 <memmove>
 508973c:	80c00217 	ldw	r3,8(r16)
 5089740:	81000017 	ldw	r4,0(r16)
 5089744:	9005883a 	mov	r2,r18
 5089748:	1ce7c83a 	sub	r19,r3,r19
 508974c:	25cf883a 	add	r7,r4,r23
 5089750:	84c00215 	stw	r19,8(r16)
 5089754:	81c00015 	stw	r7,0(r16)
 5089758:	a0c00217 	ldw	r3,8(r20)
 508975c:	e0b9883a 	add	fp,fp,r2
 5089760:	90a5c83a 	sub	r18,r18,r2
 5089764:	18a7c83a 	sub	r19,r3,r2
 5089768:	a4c00215 	stw	r19,8(r20)
 508976c:	983fce26 	beq	r19,zero,50896a8 <__alt_data_end+0xfffbb4a8>
 5089770:	80c0030b 	ldhu	r3,12(r16)
 5089774:	903fe61e 	bne	r18,zero,5089710 <__alt_data_end+0xfffbb510>
 5089778:	8f000017 	ldw	fp,0(r17)
 508977c:	8c800117 	ldw	r18,4(r17)
 5089780:	8c400204 	addi	r17,r17,8
 5089784:	003fe106 	br	508970c <__alt_data_end+0xfffbb50c>
 5089788:	8cc00017 	ldw	r19,0(r17)
 508978c:	8c800117 	ldw	r18,4(r17)
 5089790:	8c400204 	addi	r17,r17,8
 5089794:	003fb306 	br	5089664 <__alt_data_end+0xfffbb464>
 5089798:	0005883a 	mov	r2,zero
 508979c:	f800283a 	ret
 50897a0:	81000017 	ldw	r4,0(r16)
 50897a4:	80800417 	ldw	r2,16(r16)
 50897a8:	11005736 	bltu	r2,r4,5089908 <__sfvwrite_r+0x314>
 50897ac:	85c00517 	ldw	r23,20(r16)
 50897b0:	95c05536 	bltu	r18,r23,5089908 <__sfvwrite_r+0x314>
 50897b4:	00a00034 	movhi	r2,32768
 50897b8:	10bfffc4 	addi	r2,r2,-1
 50897bc:	9009883a 	mov	r4,r18
 50897c0:	1480012e 	bgeu	r2,r18,50897c8 <__sfvwrite_r+0x1d4>
 50897c4:	1009883a 	mov	r4,r2
 50897c8:	b80b883a 	mov	r5,r23
 50897cc:	50827800 	call	5082780 <__divsi3>
 50897d0:	15cf383a 	mul	r7,r2,r23
 50897d4:	81400717 	ldw	r5,28(r16)
 50897d8:	80800917 	ldw	r2,36(r16)
 50897dc:	e00d883a 	mov	r6,fp
 50897e0:	a809883a 	mov	r4,r21
 50897e4:	103ee83a 	callr	r2
 50897e8:	00bfdb16 	blt	zero,r2,5089758 <__alt_data_end+0xfffbb558>
 50897ec:	8080030b 	ldhu	r2,12(r16)
 50897f0:	10801014 	ori	r2,r2,64
 50897f4:	8080030d 	sth	r2,12(r16)
 50897f8:	00bfffc4 	movi	r2,-1
 50897fc:	003fab06 	br	50896ac <__alt_data_end+0xfffbb4ac>
 5089800:	0027883a 	mov	r19,zero
 5089804:	0011883a 	mov	r8,zero
 5089808:	0039883a 	mov	fp,zero
 508980c:	0025883a 	mov	r18,zero
 5089810:	90001f26 	beq	r18,zero,5089890 <__sfvwrite_r+0x29c>
 5089814:	40005a26 	beq	r8,zero,5089980 <__sfvwrite_r+0x38c>
 5089818:	982d883a 	mov	r22,r19
 508981c:	94c0012e 	bgeu	r18,r19,5089824 <__sfvwrite_r+0x230>
 5089820:	902d883a 	mov	r22,r18
 5089824:	81000017 	ldw	r4,0(r16)
 5089828:	80800417 	ldw	r2,16(r16)
 508982c:	b02f883a 	mov	r23,r22
 5089830:	81c00517 	ldw	r7,20(r16)
 5089834:	1100032e 	bgeu	r2,r4,5089844 <__sfvwrite_r+0x250>
 5089838:	80c00217 	ldw	r3,8(r16)
 508983c:	38c7883a 	add	r3,r7,r3
 5089840:	1d801816 	blt	r3,r22,50898a4 <__sfvwrite_r+0x2b0>
 5089844:	b1c03e16 	blt	r22,r7,5089940 <__sfvwrite_r+0x34c>
 5089848:	80800917 	ldw	r2,36(r16)
 508984c:	81400717 	ldw	r5,28(r16)
 5089850:	e00d883a 	mov	r6,fp
 5089854:	da000115 	stw	r8,4(sp)
 5089858:	a809883a 	mov	r4,r21
 508985c:	103ee83a 	callr	r2
 5089860:	102f883a 	mov	r23,r2
 5089864:	da000117 	ldw	r8,4(sp)
 5089868:	00bfe00e 	bge	zero,r2,50897ec <__alt_data_end+0xfffbb5ec>
 508986c:	9de7c83a 	sub	r19,r19,r23
 5089870:	98001f26 	beq	r19,zero,50898f0 <__sfvwrite_r+0x2fc>
 5089874:	a0800217 	ldw	r2,8(r20)
 5089878:	e5f9883a 	add	fp,fp,r23
 508987c:	95e5c83a 	sub	r18,r18,r23
 5089880:	15efc83a 	sub	r23,r2,r23
 5089884:	a5c00215 	stw	r23,8(r20)
 5089888:	b83f8726 	beq	r23,zero,50896a8 <__alt_data_end+0xfffbb4a8>
 508988c:	903fe11e 	bne	r18,zero,5089814 <__alt_data_end+0xfffbb614>
 5089890:	8f000017 	ldw	fp,0(r17)
 5089894:	8c800117 	ldw	r18,4(r17)
 5089898:	0011883a 	mov	r8,zero
 508989c:	8c400204 	addi	r17,r17,8
 50898a0:	003fdb06 	br	5089810 <__alt_data_end+0xfffbb610>
 50898a4:	180d883a 	mov	r6,r3
 50898a8:	e00b883a 	mov	r5,fp
 50898ac:	da000115 	stw	r8,4(sp)
 50898b0:	d8c00015 	stw	r3,0(sp)
 50898b4:	508a9080 	call	508a908 <memmove>
 50898b8:	d8c00017 	ldw	r3,0(sp)
 50898bc:	80800017 	ldw	r2,0(r16)
 50898c0:	800b883a 	mov	r5,r16
 50898c4:	a809883a 	mov	r4,r21
 50898c8:	10c5883a 	add	r2,r2,r3
 50898cc:	80800015 	stw	r2,0(r16)
 50898d0:	d8c00015 	stw	r3,0(sp)
 50898d4:	5088d940 	call	5088d94 <_fflush_r>
 50898d8:	d8c00017 	ldw	r3,0(sp)
 50898dc:	da000117 	ldw	r8,4(sp)
 50898e0:	103fc21e 	bne	r2,zero,50897ec <__alt_data_end+0xfffbb5ec>
 50898e4:	182f883a 	mov	r23,r3
 50898e8:	9de7c83a 	sub	r19,r19,r23
 50898ec:	983fe11e 	bne	r19,zero,5089874 <__alt_data_end+0xfffbb674>
 50898f0:	800b883a 	mov	r5,r16
 50898f4:	a809883a 	mov	r4,r21
 50898f8:	5088d940 	call	5088d94 <_fflush_r>
 50898fc:	103fbb1e 	bne	r2,zero,50897ec <__alt_data_end+0xfffbb5ec>
 5089900:	0011883a 	mov	r8,zero
 5089904:	003fdb06 	br	5089874 <__alt_data_end+0xfffbb674>
 5089908:	94c0012e 	bgeu	r18,r19,5089910 <__sfvwrite_r+0x31c>
 508990c:	9027883a 	mov	r19,r18
 5089910:	980d883a 	mov	r6,r19
 5089914:	e00b883a 	mov	r5,fp
 5089918:	508a9080 	call	508a908 <memmove>
 508991c:	80800217 	ldw	r2,8(r16)
 5089920:	80c00017 	ldw	r3,0(r16)
 5089924:	14c5c83a 	sub	r2,r2,r19
 5089928:	1cc7883a 	add	r3,r3,r19
 508992c:	80800215 	stw	r2,8(r16)
 5089930:	80c00015 	stw	r3,0(r16)
 5089934:	10004326 	beq	r2,zero,5089a44 <__sfvwrite_r+0x450>
 5089938:	9805883a 	mov	r2,r19
 508993c:	003f8606 	br	5089758 <__alt_data_end+0xfffbb558>
 5089940:	b00d883a 	mov	r6,r22
 5089944:	e00b883a 	mov	r5,fp
 5089948:	da000115 	stw	r8,4(sp)
 508994c:	508a9080 	call	508a908 <memmove>
 5089950:	80800217 	ldw	r2,8(r16)
 5089954:	80c00017 	ldw	r3,0(r16)
 5089958:	da000117 	ldw	r8,4(sp)
 508995c:	1585c83a 	sub	r2,r2,r22
 5089960:	1dad883a 	add	r22,r3,r22
 5089964:	80800215 	stw	r2,8(r16)
 5089968:	85800015 	stw	r22,0(r16)
 508996c:	003fbf06 	br	508986c <__alt_data_end+0xfffbb66c>
 5089970:	81000017 	ldw	r4,0(r16)
 5089974:	9027883a 	mov	r19,r18
 5089978:	902f883a 	mov	r23,r18
 508997c:	003f6c06 	br	5089730 <__alt_data_end+0xfffbb530>
 5089980:	900d883a 	mov	r6,r18
 5089984:	01400284 	movi	r5,10
 5089988:	e009883a 	mov	r4,fp
 508998c:	508a6dc0 	call	508a6dc <memchr>
 5089990:	10003e26 	beq	r2,zero,5089a8c <__sfvwrite_r+0x498>
 5089994:	10800044 	addi	r2,r2,1
 5089998:	1727c83a 	sub	r19,r2,fp
 508999c:	02000044 	movi	r8,1
 50899a0:	003f9d06 	br	5089818 <__alt_data_end+0xfffbb618>
 50899a4:	80800517 	ldw	r2,20(r16)
 50899a8:	81400417 	ldw	r5,16(r16)
 50899ac:	81c00017 	ldw	r7,0(r16)
 50899b0:	10a7883a 	add	r19,r2,r2
 50899b4:	9885883a 	add	r2,r19,r2
 50899b8:	1026d7fa 	srli	r19,r2,31
 50899bc:	396dc83a 	sub	r22,r7,r5
 50899c0:	b1000044 	addi	r4,r22,1
 50899c4:	9885883a 	add	r2,r19,r2
 50899c8:	1027d07a 	srai	r19,r2,1
 50899cc:	2485883a 	add	r2,r4,r18
 50899d0:	980d883a 	mov	r6,r19
 50899d4:	9880022e 	bgeu	r19,r2,50899e0 <__sfvwrite_r+0x3ec>
 50899d8:	1027883a 	mov	r19,r2
 50899dc:	100d883a 	mov	r6,r2
 50899e0:	18c1000c 	andi	r3,r3,1024
 50899e4:	18001c26 	beq	r3,zero,5089a58 <__sfvwrite_r+0x464>
 50899e8:	300b883a 	mov	r5,r6
 50899ec:	a809883a 	mov	r4,r21
 50899f0:	5089ed00 	call	5089ed0 <_malloc_r>
 50899f4:	102f883a 	mov	r23,r2
 50899f8:	10002926 	beq	r2,zero,5089aa0 <__sfvwrite_r+0x4ac>
 50899fc:	81400417 	ldw	r5,16(r16)
 5089a00:	b00d883a 	mov	r6,r22
 5089a04:	1009883a 	mov	r4,r2
 5089a08:	508a7c00 	call	508a7c0 <memcpy>
 5089a0c:	8080030b 	ldhu	r2,12(r16)
 5089a10:	00fedfc4 	movi	r3,-1153
 5089a14:	10c4703a 	and	r2,r2,r3
 5089a18:	10802014 	ori	r2,r2,128
 5089a1c:	8080030d 	sth	r2,12(r16)
 5089a20:	bd89883a 	add	r4,r23,r22
 5089a24:	9d8fc83a 	sub	r7,r19,r22
 5089a28:	85c00415 	stw	r23,16(r16)
 5089a2c:	84c00515 	stw	r19,20(r16)
 5089a30:	81000015 	stw	r4,0(r16)
 5089a34:	9027883a 	mov	r19,r18
 5089a38:	81c00215 	stw	r7,8(r16)
 5089a3c:	902f883a 	mov	r23,r18
 5089a40:	003f3b06 	br	5089730 <__alt_data_end+0xfffbb530>
 5089a44:	800b883a 	mov	r5,r16
 5089a48:	a809883a 	mov	r4,r21
 5089a4c:	5088d940 	call	5088d94 <_fflush_r>
 5089a50:	103fb926 	beq	r2,zero,5089938 <__alt_data_end+0xfffbb738>
 5089a54:	003f6506 	br	50897ec <__alt_data_end+0xfffbb5ec>
 5089a58:	a809883a 	mov	r4,r21
 5089a5c:	508bb880 	call	508bb88 <_realloc_r>
 5089a60:	102f883a 	mov	r23,r2
 5089a64:	103fee1e 	bne	r2,zero,5089a20 <__alt_data_end+0xfffbb820>
 5089a68:	81400417 	ldw	r5,16(r16)
 5089a6c:	a809883a 	mov	r4,r21
 5089a70:	50892e40 	call	50892e4 <_free_r>
 5089a74:	8080030b 	ldhu	r2,12(r16)
 5089a78:	00ffdfc4 	movi	r3,-129
 5089a7c:	1884703a 	and	r2,r3,r2
 5089a80:	00c00304 	movi	r3,12
 5089a84:	a8c00015 	stw	r3,0(r21)
 5089a88:	003f5906 	br	50897f0 <__alt_data_end+0xfffbb5f0>
 5089a8c:	94c00044 	addi	r19,r18,1
 5089a90:	02000044 	movi	r8,1
 5089a94:	003f6006 	br	5089818 <__alt_data_end+0xfffbb618>
 5089a98:	00bfffc4 	movi	r2,-1
 5089a9c:	003f0306 	br	50896ac <__alt_data_end+0xfffbb4ac>
 5089aa0:	00800304 	movi	r2,12
 5089aa4:	a8800015 	stw	r2,0(r21)
 5089aa8:	8080030b 	ldhu	r2,12(r16)
 5089aac:	003f5006 	br	50897f0 <__alt_data_end+0xfffbb5f0>

05089ab0 <_fwalk>:
 5089ab0:	defff704 	addi	sp,sp,-36
 5089ab4:	dd000415 	stw	r20,16(sp)
 5089ab8:	dfc00815 	stw	ra,32(sp)
 5089abc:	ddc00715 	stw	r23,28(sp)
 5089ac0:	dd800615 	stw	r22,24(sp)
 5089ac4:	dd400515 	stw	r21,20(sp)
 5089ac8:	dcc00315 	stw	r19,12(sp)
 5089acc:	dc800215 	stw	r18,8(sp)
 5089ad0:	dc400115 	stw	r17,4(sp)
 5089ad4:	dc000015 	stw	r16,0(sp)
 5089ad8:	2500b804 	addi	r20,r4,736
 5089adc:	a0002326 	beq	r20,zero,5089b6c <_fwalk+0xbc>
 5089ae0:	282b883a 	mov	r21,r5
 5089ae4:	002f883a 	mov	r23,zero
 5089ae8:	05800044 	movi	r22,1
 5089aec:	04ffffc4 	movi	r19,-1
 5089af0:	a4400117 	ldw	r17,4(r20)
 5089af4:	a4800217 	ldw	r18,8(r20)
 5089af8:	8c7fffc4 	addi	r17,r17,-1
 5089afc:	88000d16 	blt	r17,zero,5089b34 <_fwalk+0x84>
 5089b00:	94000304 	addi	r16,r18,12
 5089b04:	94800384 	addi	r18,r18,14
 5089b08:	8080000b 	ldhu	r2,0(r16)
 5089b0c:	8c7fffc4 	addi	r17,r17,-1
 5089b10:	813ffd04 	addi	r4,r16,-12
 5089b14:	b080042e 	bgeu	r22,r2,5089b28 <_fwalk+0x78>
 5089b18:	9080000f 	ldh	r2,0(r18)
 5089b1c:	14c00226 	beq	r2,r19,5089b28 <_fwalk+0x78>
 5089b20:	a83ee83a 	callr	r21
 5089b24:	b8aeb03a 	or	r23,r23,r2
 5089b28:	84001a04 	addi	r16,r16,104
 5089b2c:	94801a04 	addi	r18,r18,104
 5089b30:	8cfff51e 	bne	r17,r19,5089b08 <__alt_data_end+0xfffbb908>
 5089b34:	a5000017 	ldw	r20,0(r20)
 5089b38:	a03fed1e 	bne	r20,zero,5089af0 <__alt_data_end+0xfffbb8f0>
 5089b3c:	b805883a 	mov	r2,r23
 5089b40:	dfc00817 	ldw	ra,32(sp)
 5089b44:	ddc00717 	ldw	r23,28(sp)
 5089b48:	dd800617 	ldw	r22,24(sp)
 5089b4c:	dd400517 	ldw	r21,20(sp)
 5089b50:	dd000417 	ldw	r20,16(sp)
 5089b54:	dcc00317 	ldw	r19,12(sp)
 5089b58:	dc800217 	ldw	r18,8(sp)
 5089b5c:	dc400117 	ldw	r17,4(sp)
 5089b60:	dc000017 	ldw	r16,0(sp)
 5089b64:	dec00904 	addi	sp,sp,36
 5089b68:	f800283a 	ret
 5089b6c:	002f883a 	mov	r23,zero
 5089b70:	003ff206 	br	5089b3c <__alt_data_end+0xfffbb93c>

05089b74 <_fwalk_reent>:
 5089b74:	defff704 	addi	sp,sp,-36
 5089b78:	dd000415 	stw	r20,16(sp)
 5089b7c:	dfc00815 	stw	ra,32(sp)
 5089b80:	ddc00715 	stw	r23,28(sp)
 5089b84:	dd800615 	stw	r22,24(sp)
 5089b88:	dd400515 	stw	r21,20(sp)
 5089b8c:	dcc00315 	stw	r19,12(sp)
 5089b90:	dc800215 	stw	r18,8(sp)
 5089b94:	dc400115 	stw	r17,4(sp)
 5089b98:	dc000015 	stw	r16,0(sp)
 5089b9c:	2500b804 	addi	r20,r4,736
 5089ba0:	a0002326 	beq	r20,zero,5089c30 <_fwalk_reent+0xbc>
 5089ba4:	282b883a 	mov	r21,r5
 5089ba8:	2027883a 	mov	r19,r4
 5089bac:	002f883a 	mov	r23,zero
 5089bb0:	05800044 	movi	r22,1
 5089bb4:	04bfffc4 	movi	r18,-1
 5089bb8:	a4400117 	ldw	r17,4(r20)
 5089bbc:	a4000217 	ldw	r16,8(r20)
 5089bc0:	8c7fffc4 	addi	r17,r17,-1
 5089bc4:	88000c16 	blt	r17,zero,5089bf8 <_fwalk_reent+0x84>
 5089bc8:	84000304 	addi	r16,r16,12
 5089bcc:	8080000b 	ldhu	r2,0(r16)
 5089bd0:	8c7fffc4 	addi	r17,r17,-1
 5089bd4:	817ffd04 	addi	r5,r16,-12
 5089bd8:	b080052e 	bgeu	r22,r2,5089bf0 <_fwalk_reent+0x7c>
 5089bdc:	8080008f 	ldh	r2,2(r16)
 5089be0:	9809883a 	mov	r4,r19
 5089be4:	14800226 	beq	r2,r18,5089bf0 <_fwalk_reent+0x7c>
 5089be8:	a83ee83a 	callr	r21
 5089bec:	b8aeb03a 	or	r23,r23,r2
 5089bf0:	84001a04 	addi	r16,r16,104
 5089bf4:	8cbff51e 	bne	r17,r18,5089bcc <__alt_data_end+0xfffbb9cc>
 5089bf8:	a5000017 	ldw	r20,0(r20)
 5089bfc:	a03fee1e 	bne	r20,zero,5089bb8 <__alt_data_end+0xfffbb9b8>
 5089c00:	b805883a 	mov	r2,r23
 5089c04:	dfc00817 	ldw	ra,32(sp)
 5089c08:	ddc00717 	ldw	r23,28(sp)
 5089c0c:	dd800617 	ldw	r22,24(sp)
 5089c10:	dd400517 	ldw	r21,20(sp)
 5089c14:	dd000417 	ldw	r20,16(sp)
 5089c18:	dcc00317 	ldw	r19,12(sp)
 5089c1c:	dc800217 	ldw	r18,8(sp)
 5089c20:	dc400117 	ldw	r17,4(sp)
 5089c24:	dc000017 	ldw	r16,0(sp)
 5089c28:	dec00904 	addi	sp,sp,36
 5089c2c:	f800283a 	ret
 5089c30:	002f883a 	mov	r23,zero
 5089c34:	003ff206 	br	5089c00 <__alt_data_end+0xfffbba00>

05089c38 <_setlocale_r>:
 5089c38:	30001b26 	beq	r6,zero,5089ca8 <_setlocale_r+0x70>
 5089c3c:	01414274 	movhi	r5,1289
 5089c40:	defffe04 	addi	sp,sp,-8
 5089c44:	2957ca04 	addi	r5,r5,24360
 5089c48:	3009883a 	mov	r4,r6
 5089c4c:	dc000015 	stw	r16,0(sp)
 5089c50:	dfc00115 	stw	ra,4(sp)
 5089c54:	3021883a 	mov	r16,r6
 5089c58:	508c2f00 	call	508c2f0 <strcmp>
 5089c5c:	1000061e 	bne	r2,zero,5089c78 <_setlocale_r+0x40>
 5089c60:	00814274 	movhi	r2,1289
 5089c64:	1097c904 	addi	r2,r2,24356
 5089c68:	dfc00117 	ldw	ra,4(sp)
 5089c6c:	dc000017 	ldw	r16,0(sp)
 5089c70:	dec00204 	addi	sp,sp,8
 5089c74:	f800283a 	ret
 5089c78:	01414274 	movhi	r5,1289
 5089c7c:	2957c904 	addi	r5,r5,24356
 5089c80:	8009883a 	mov	r4,r16
 5089c84:	508c2f00 	call	508c2f0 <strcmp>
 5089c88:	103ff526 	beq	r2,zero,5089c60 <__alt_data_end+0xfffbba60>
 5089c8c:	01414274 	movhi	r5,1289
 5089c90:	2957ac04 	addi	r5,r5,24240
 5089c94:	8009883a 	mov	r4,r16
 5089c98:	508c2f00 	call	508c2f0 <strcmp>
 5089c9c:	103ff026 	beq	r2,zero,5089c60 <__alt_data_end+0xfffbba60>
 5089ca0:	0005883a 	mov	r2,zero
 5089ca4:	003ff006 	br	5089c68 <__alt_data_end+0xfffbba68>
 5089ca8:	00814274 	movhi	r2,1289
 5089cac:	1097c904 	addi	r2,r2,24356
 5089cb0:	f800283a 	ret

05089cb4 <__locale_charset>:
 5089cb4:	00814274 	movhi	r2,1289
 5089cb8:	10998604 	addi	r2,r2,26136
 5089cbc:	f800283a 	ret

05089cc0 <__locale_mb_cur_max>:
 5089cc0:	00814274 	movhi	r2,1289
 5089cc4:	109f2204 	addi	r2,r2,31880
 5089cc8:	10800017 	ldw	r2,0(r2)
 5089ccc:	f800283a 	ret

05089cd0 <__locale_msgcharset>:
 5089cd0:	00814274 	movhi	r2,1289
 5089cd4:	10997e04 	addi	r2,r2,26104
 5089cd8:	f800283a 	ret

05089cdc <__locale_cjk_lang>:
 5089cdc:	0005883a 	mov	r2,zero
 5089ce0:	f800283a 	ret

05089ce4 <_localeconv_r>:
 5089ce4:	00814274 	movhi	r2,1289
 5089ce8:	10998e04 	addi	r2,r2,26168
 5089cec:	f800283a 	ret

05089cf0 <setlocale>:
 5089cf0:	00814274 	movhi	r2,1289
 5089cf4:	109f2104 	addi	r2,r2,31876
 5089cf8:	280d883a 	mov	r6,r5
 5089cfc:	200b883a 	mov	r5,r4
 5089d00:	11000017 	ldw	r4,0(r2)
 5089d04:	5089c381 	jmpi	5089c38 <_setlocale_r>

05089d08 <localeconv>:
 5089d08:	00814274 	movhi	r2,1289
 5089d0c:	10998e04 	addi	r2,r2,26168
 5089d10:	f800283a 	ret

05089d14 <__smakebuf_r>:
 5089d14:	2880030b 	ldhu	r2,12(r5)
 5089d18:	10c0008c 	andi	r3,r2,2
 5089d1c:	1800411e 	bne	r3,zero,5089e24 <__smakebuf_r+0x110>
 5089d20:	deffec04 	addi	sp,sp,-80
 5089d24:	dc000f15 	stw	r16,60(sp)
 5089d28:	2821883a 	mov	r16,r5
 5089d2c:	2940038f 	ldh	r5,14(r5)
 5089d30:	dc401015 	stw	r17,64(sp)
 5089d34:	dfc01315 	stw	ra,76(sp)
 5089d38:	dcc01215 	stw	r19,72(sp)
 5089d3c:	dc801115 	stw	r18,68(sp)
 5089d40:	2023883a 	mov	r17,r4
 5089d44:	28001c16 	blt	r5,zero,5089db8 <__smakebuf_r+0xa4>
 5089d48:	d80d883a 	mov	r6,sp
 5089d4c:	508f2a40 	call	508f2a4 <_fstat_r>
 5089d50:	10001816 	blt	r2,zero,5089db4 <__smakebuf_r+0xa0>
 5089d54:	d8800117 	ldw	r2,4(sp)
 5089d58:	00e00014 	movui	r3,32768
 5089d5c:	10bc000c 	andi	r2,r2,61440
 5089d60:	14c80020 	cmpeqi	r19,r2,8192
 5089d64:	10c03726 	beq	r2,r3,5089e44 <__smakebuf_r+0x130>
 5089d68:	80c0030b 	ldhu	r3,12(r16)
 5089d6c:	18c20014 	ori	r3,r3,2048
 5089d70:	80c0030d 	sth	r3,12(r16)
 5089d74:	00c80004 	movi	r3,8192
 5089d78:	10c0521e 	bne	r2,r3,5089ec4 <__smakebuf_r+0x1b0>
 5089d7c:	8140038f 	ldh	r5,14(r16)
 5089d80:	8809883a 	mov	r4,r17
 5089d84:	508f3000 	call	508f300 <_isatty_r>
 5089d88:	10004c26 	beq	r2,zero,5089ebc <__smakebuf_r+0x1a8>
 5089d8c:	8080030b 	ldhu	r2,12(r16)
 5089d90:	80c010c4 	addi	r3,r16,67
 5089d94:	80c00015 	stw	r3,0(r16)
 5089d98:	10800054 	ori	r2,r2,1
 5089d9c:	8080030d 	sth	r2,12(r16)
 5089da0:	00800044 	movi	r2,1
 5089da4:	80c00415 	stw	r3,16(r16)
 5089da8:	80800515 	stw	r2,20(r16)
 5089dac:	04810004 	movi	r18,1024
 5089db0:	00000706 	br	5089dd0 <__smakebuf_r+0xbc>
 5089db4:	8080030b 	ldhu	r2,12(r16)
 5089db8:	10c0200c 	andi	r3,r2,128
 5089dbc:	18001f1e 	bne	r3,zero,5089e3c <__smakebuf_r+0x128>
 5089dc0:	04810004 	movi	r18,1024
 5089dc4:	10820014 	ori	r2,r2,2048
 5089dc8:	8080030d 	sth	r2,12(r16)
 5089dcc:	0027883a 	mov	r19,zero
 5089dd0:	900b883a 	mov	r5,r18
 5089dd4:	8809883a 	mov	r4,r17
 5089dd8:	5089ed00 	call	5089ed0 <_malloc_r>
 5089ddc:	10002c26 	beq	r2,zero,5089e90 <__smakebuf_r+0x17c>
 5089de0:	80c0030b 	ldhu	r3,12(r16)
 5089de4:	01014274 	movhi	r4,1289
 5089de8:	21238a04 	addi	r4,r4,-29144
 5089dec:	89000f15 	stw	r4,60(r17)
 5089df0:	18c02014 	ori	r3,r3,128
 5089df4:	80c0030d 	sth	r3,12(r16)
 5089df8:	80800015 	stw	r2,0(r16)
 5089dfc:	80800415 	stw	r2,16(r16)
 5089e00:	84800515 	stw	r18,20(r16)
 5089e04:	98001a1e 	bne	r19,zero,5089e70 <__smakebuf_r+0x15c>
 5089e08:	dfc01317 	ldw	ra,76(sp)
 5089e0c:	dcc01217 	ldw	r19,72(sp)
 5089e10:	dc801117 	ldw	r18,68(sp)
 5089e14:	dc401017 	ldw	r17,64(sp)
 5089e18:	dc000f17 	ldw	r16,60(sp)
 5089e1c:	dec01404 	addi	sp,sp,80
 5089e20:	f800283a 	ret
 5089e24:	288010c4 	addi	r2,r5,67
 5089e28:	28800015 	stw	r2,0(r5)
 5089e2c:	28800415 	stw	r2,16(r5)
 5089e30:	00800044 	movi	r2,1
 5089e34:	28800515 	stw	r2,20(r5)
 5089e38:	f800283a 	ret
 5089e3c:	04801004 	movi	r18,64
 5089e40:	003fe006 	br	5089dc4 <__alt_data_end+0xfffbbbc4>
 5089e44:	81000a17 	ldw	r4,40(r16)
 5089e48:	00c14274 	movhi	r3,1289
 5089e4c:	18f0a304 	addi	r3,r3,-15732
 5089e50:	20ffc51e 	bne	r4,r3,5089d68 <__alt_data_end+0xfffbbb68>
 5089e54:	8080030b 	ldhu	r2,12(r16)
 5089e58:	04810004 	movi	r18,1024
 5089e5c:	84801315 	stw	r18,76(r16)
 5089e60:	1484b03a 	or	r2,r2,r18
 5089e64:	8080030d 	sth	r2,12(r16)
 5089e68:	0027883a 	mov	r19,zero
 5089e6c:	003fd806 	br	5089dd0 <__alt_data_end+0xfffbbbd0>
 5089e70:	8140038f 	ldh	r5,14(r16)
 5089e74:	8809883a 	mov	r4,r17
 5089e78:	508f3000 	call	508f300 <_isatty_r>
 5089e7c:	103fe226 	beq	r2,zero,5089e08 <__alt_data_end+0xfffbbc08>
 5089e80:	8080030b 	ldhu	r2,12(r16)
 5089e84:	10800054 	ori	r2,r2,1
 5089e88:	8080030d 	sth	r2,12(r16)
 5089e8c:	003fde06 	br	5089e08 <__alt_data_end+0xfffbbc08>
 5089e90:	8080030b 	ldhu	r2,12(r16)
 5089e94:	10c0800c 	andi	r3,r2,512
 5089e98:	183fdb1e 	bne	r3,zero,5089e08 <__alt_data_end+0xfffbbc08>
 5089e9c:	10800094 	ori	r2,r2,2
 5089ea0:	80c010c4 	addi	r3,r16,67
 5089ea4:	8080030d 	sth	r2,12(r16)
 5089ea8:	00800044 	movi	r2,1
 5089eac:	80c00015 	stw	r3,0(r16)
 5089eb0:	80c00415 	stw	r3,16(r16)
 5089eb4:	80800515 	stw	r2,20(r16)
 5089eb8:	003fd306 	br	5089e08 <__alt_data_end+0xfffbbc08>
 5089ebc:	04810004 	movi	r18,1024
 5089ec0:	003fc306 	br	5089dd0 <__alt_data_end+0xfffbbbd0>
 5089ec4:	0027883a 	mov	r19,zero
 5089ec8:	04810004 	movi	r18,1024
 5089ecc:	003fc006 	br	5089dd0 <__alt_data_end+0xfffbbbd0>

05089ed0 <_malloc_r>:
 5089ed0:	defff504 	addi	sp,sp,-44
 5089ed4:	dc800315 	stw	r18,12(sp)
 5089ed8:	dfc00a15 	stw	ra,40(sp)
 5089edc:	df000915 	stw	fp,36(sp)
 5089ee0:	ddc00815 	stw	r23,32(sp)
 5089ee4:	dd800715 	stw	r22,28(sp)
 5089ee8:	dd400615 	stw	r21,24(sp)
 5089eec:	dd000515 	stw	r20,20(sp)
 5089ef0:	dcc00415 	stw	r19,16(sp)
 5089ef4:	dc400215 	stw	r17,8(sp)
 5089ef8:	dc000115 	stw	r16,4(sp)
 5089efc:	288002c4 	addi	r2,r5,11
 5089f00:	00c00584 	movi	r3,22
 5089f04:	2025883a 	mov	r18,r4
 5089f08:	18807f2e 	bgeu	r3,r2,508a108 <_malloc_r+0x238>
 5089f0c:	047ffe04 	movi	r17,-8
 5089f10:	1462703a 	and	r17,r2,r17
 5089f14:	8800a316 	blt	r17,zero,508a1a4 <_malloc_r+0x2d4>
 5089f18:	8940a236 	bltu	r17,r5,508a1a4 <_malloc_r+0x2d4>
 5089f1c:	5092fe80 	call	5092fe8 <__malloc_lock>
 5089f20:	00807dc4 	movi	r2,503
 5089f24:	1441e92e 	bgeu	r2,r17,508a6cc <_malloc_r+0x7fc>
 5089f28:	8804d27a 	srli	r2,r17,9
 5089f2c:	1000a126 	beq	r2,zero,508a1b4 <_malloc_r+0x2e4>
 5089f30:	00c00104 	movi	r3,4
 5089f34:	18811e36 	bltu	r3,r2,508a3b0 <_malloc_r+0x4e0>
 5089f38:	8804d1ba 	srli	r2,r17,6
 5089f3c:	12000e44 	addi	r8,r2,57
 5089f40:	11c00e04 	addi	r7,r2,56
 5089f44:	4209883a 	add	r4,r8,r8
 5089f48:	04c14274 	movhi	r19,1289
 5089f4c:	2109883a 	add	r4,r4,r4
 5089f50:	9cd99c04 	addi	r19,r19,26224
 5089f54:	2109883a 	add	r4,r4,r4
 5089f58:	9909883a 	add	r4,r19,r4
 5089f5c:	24000117 	ldw	r16,4(r4)
 5089f60:	213ffe04 	addi	r4,r4,-8
 5089f64:	24009726 	beq	r4,r16,508a1c4 <_malloc_r+0x2f4>
 5089f68:	80800117 	ldw	r2,4(r16)
 5089f6c:	01bfff04 	movi	r6,-4
 5089f70:	014003c4 	movi	r5,15
 5089f74:	1184703a 	and	r2,r2,r6
 5089f78:	1447c83a 	sub	r3,r2,r17
 5089f7c:	28c00716 	blt	r5,r3,5089f9c <_malloc_r+0xcc>
 5089f80:	1800920e 	bge	r3,zero,508a1cc <_malloc_r+0x2fc>
 5089f84:	84000317 	ldw	r16,12(r16)
 5089f88:	24008e26 	beq	r4,r16,508a1c4 <_malloc_r+0x2f4>
 5089f8c:	80800117 	ldw	r2,4(r16)
 5089f90:	1184703a 	and	r2,r2,r6
 5089f94:	1447c83a 	sub	r3,r2,r17
 5089f98:	28fff90e 	bge	r5,r3,5089f80 <__alt_data_end+0xfffbbd80>
 5089f9c:	3809883a 	mov	r4,r7
 5089fa0:	01814274 	movhi	r6,1289
 5089fa4:	9c000417 	ldw	r16,16(r19)
 5089fa8:	31999c04 	addi	r6,r6,26224
 5089fac:	32000204 	addi	r8,r6,8
 5089fb0:	82013426 	beq	r16,r8,508a484 <_malloc_r+0x5b4>
 5089fb4:	80c00117 	ldw	r3,4(r16)
 5089fb8:	00bfff04 	movi	r2,-4
 5089fbc:	188e703a 	and	r7,r3,r2
 5089fc0:	3c45c83a 	sub	r2,r7,r17
 5089fc4:	00c003c4 	movi	r3,15
 5089fc8:	18811f16 	blt	r3,r2,508a448 <_malloc_r+0x578>
 5089fcc:	32000515 	stw	r8,20(r6)
 5089fd0:	32000415 	stw	r8,16(r6)
 5089fd4:	10007f0e 	bge	r2,zero,508a1d4 <_malloc_r+0x304>
 5089fd8:	00807fc4 	movi	r2,511
 5089fdc:	11c0fd36 	bltu	r2,r7,508a3d4 <_malloc_r+0x504>
 5089fe0:	3806d0fa 	srli	r3,r7,3
 5089fe4:	01c00044 	movi	r7,1
 5089fe8:	30800117 	ldw	r2,4(r6)
 5089fec:	19400044 	addi	r5,r3,1
 5089ff0:	294b883a 	add	r5,r5,r5
 5089ff4:	1807d0ba 	srai	r3,r3,2
 5089ff8:	294b883a 	add	r5,r5,r5
 5089ffc:	294b883a 	add	r5,r5,r5
 508a000:	298b883a 	add	r5,r5,r6
 508a004:	38c6983a 	sll	r3,r7,r3
 508a008:	29c00017 	ldw	r7,0(r5)
 508a00c:	2a7ffe04 	addi	r9,r5,-8
 508a010:	1886b03a 	or	r3,r3,r2
 508a014:	82400315 	stw	r9,12(r16)
 508a018:	81c00215 	stw	r7,8(r16)
 508a01c:	30c00115 	stw	r3,4(r6)
 508a020:	2c000015 	stw	r16,0(r5)
 508a024:	3c000315 	stw	r16,12(r7)
 508a028:	2005d0ba 	srai	r2,r4,2
 508a02c:	01400044 	movi	r5,1
 508a030:	288a983a 	sll	r5,r5,r2
 508a034:	19406f36 	bltu	r3,r5,508a1f4 <_malloc_r+0x324>
 508a038:	28c4703a 	and	r2,r5,r3
 508a03c:	10000a1e 	bne	r2,zero,508a068 <_malloc_r+0x198>
 508a040:	00bfff04 	movi	r2,-4
 508a044:	294b883a 	add	r5,r5,r5
 508a048:	2088703a 	and	r4,r4,r2
 508a04c:	28c4703a 	and	r2,r5,r3
 508a050:	21000104 	addi	r4,r4,4
 508a054:	1000041e 	bne	r2,zero,508a068 <_malloc_r+0x198>
 508a058:	294b883a 	add	r5,r5,r5
 508a05c:	28c4703a 	and	r2,r5,r3
 508a060:	21000104 	addi	r4,r4,4
 508a064:	103ffc26 	beq	r2,zero,508a058 <__alt_data_end+0xfffbbe58>
 508a068:	02bfff04 	movi	r10,-4
 508a06c:	024003c4 	movi	r9,15
 508a070:	21800044 	addi	r6,r4,1
 508a074:	318d883a 	add	r6,r6,r6
 508a078:	318d883a 	add	r6,r6,r6
 508a07c:	318d883a 	add	r6,r6,r6
 508a080:	998d883a 	add	r6,r19,r6
 508a084:	333ffe04 	addi	r12,r6,-8
 508a088:	2017883a 	mov	r11,r4
 508a08c:	31800104 	addi	r6,r6,4
 508a090:	34000017 	ldw	r16,0(r6)
 508a094:	31fffd04 	addi	r7,r6,-12
 508a098:	81c0041e 	bne	r16,r7,508a0ac <_malloc_r+0x1dc>
 508a09c:	0000fb06 	br	508a48c <_malloc_r+0x5bc>
 508a0a0:	1801030e 	bge	r3,zero,508a4b0 <_malloc_r+0x5e0>
 508a0a4:	84000317 	ldw	r16,12(r16)
 508a0a8:	81c0f826 	beq	r16,r7,508a48c <_malloc_r+0x5bc>
 508a0ac:	80800117 	ldw	r2,4(r16)
 508a0b0:	1284703a 	and	r2,r2,r10
 508a0b4:	1447c83a 	sub	r3,r2,r17
 508a0b8:	48fff90e 	bge	r9,r3,508a0a0 <__alt_data_end+0xfffbbea0>
 508a0bc:	80800317 	ldw	r2,12(r16)
 508a0c0:	81000217 	ldw	r4,8(r16)
 508a0c4:	89400054 	ori	r5,r17,1
 508a0c8:	81400115 	stw	r5,4(r16)
 508a0cc:	20800315 	stw	r2,12(r4)
 508a0d0:	11000215 	stw	r4,8(r2)
 508a0d4:	8463883a 	add	r17,r16,r17
 508a0d8:	9c400515 	stw	r17,20(r19)
 508a0dc:	9c400415 	stw	r17,16(r19)
 508a0e0:	18800054 	ori	r2,r3,1
 508a0e4:	88800115 	stw	r2,4(r17)
 508a0e8:	8a000315 	stw	r8,12(r17)
 508a0ec:	8a000215 	stw	r8,8(r17)
 508a0f0:	88e3883a 	add	r17,r17,r3
 508a0f4:	88c00015 	stw	r3,0(r17)
 508a0f8:	9009883a 	mov	r4,r18
 508a0fc:	509300c0 	call	509300c <__malloc_unlock>
 508a100:	80800204 	addi	r2,r16,8
 508a104:	00001b06 	br	508a174 <_malloc_r+0x2a4>
 508a108:	04400404 	movi	r17,16
 508a10c:	89402536 	bltu	r17,r5,508a1a4 <_malloc_r+0x2d4>
 508a110:	5092fe80 	call	5092fe8 <__malloc_lock>
 508a114:	00800184 	movi	r2,6
 508a118:	01000084 	movi	r4,2
 508a11c:	04c14274 	movhi	r19,1289
 508a120:	1085883a 	add	r2,r2,r2
 508a124:	9cd99c04 	addi	r19,r19,26224
 508a128:	1085883a 	add	r2,r2,r2
 508a12c:	9885883a 	add	r2,r19,r2
 508a130:	14000117 	ldw	r16,4(r2)
 508a134:	10fffe04 	addi	r3,r2,-8
 508a138:	80c0d926 	beq	r16,r3,508a4a0 <_malloc_r+0x5d0>
 508a13c:	80c00117 	ldw	r3,4(r16)
 508a140:	81000317 	ldw	r4,12(r16)
 508a144:	00bfff04 	movi	r2,-4
 508a148:	1884703a 	and	r2,r3,r2
 508a14c:	81400217 	ldw	r5,8(r16)
 508a150:	8085883a 	add	r2,r16,r2
 508a154:	10c00117 	ldw	r3,4(r2)
 508a158:	29000315 	stw	r4,12(r5)
 508a15c:	21400215 	stw	r5,8(r4)
 508a160:	18c00054 	ori	r3,r3,1
 508a164:	10c00115 	stw	r3,4(r2)
 508a168:	9009883a 	mov	r4,r18
 508a16c:	509300c0 	call	509300c <__malloc_unlock>
 508a170:	80800204 	addi	r2,r16,8
 508a174:	dfc00a17 	ldw	ra,40(sp)
 508a178:	df000917 	ldw	fp,36(sp)
 508a17c:	ddc00817 	ldw	r23,32(sp)
 508a180:	dd800717 	ldw	r22,28(sp)
 508a184:	dd400617 	ldw	r21,24(sp)
 508a188:	dd000517 	ldw	r20,20(sp)
 508a18c:	dcc00417 	ldw	r19,16(sp)
 508a190:	dc800317 	ldw	r18,12(sp)
 508a194:	dc400217 	ldw	r17,8(sp)
 508a198:	dc000117 	ldw	r16,4(sp)
 508a19c:	dec00b04 	addi	sp,sp,44
 508a1a0:	f800283a 	ret
 508a1a4:	00800304 	movi	r2,12
 508a1a8:	90800015 	stw	r2,0(r18)
 508a1ac:	0005883a 	mov	r2,zero
 508a1b0:	003ff006 	br	508a174 <__alt_data_end+0xfffbbf74>
 508a1b4:	01002004 	movi	r4,128
 508a1b8:	02001004 	movi	r8,64
 508a1bc:	01c00fc4 	movi	r7,63
 508a1c0:	003f6106 	br	5089f48 <__alt_data_end+0xfffbbd48>
 508a1c4:	4009883a 	mov	r4,r8
 508a1c8:	003f7506 	br	5089fa0 <__alt_data_end+0xfffbbda0>
 508a1cc:	81000317 	ldw	r4,12(r16)
 508a1d0:	003fde06 	br	508a14c <__alt_data_end+0xfffbbf4c>
 508a1d4:	81c5883a 	add	r2,r16,r7
 508a1d8:	11400117 	ldw	r5,4(r2)
 508a1dc:	9009883a 	mov	r4,r18
 508a1e0:	29400054 	ori	r5,r5,1
 508a1e4:	11400115 	stw	r5,4(r2)
 508a1e8:	509300c0 	call	509300c <__malloc_unlock>
 508a1ec:	80800204 	addi	r2,r16,8
 508a1f0:	003fe006 	br	508a174 <__alt_data_end+0xfffbbf74>
 508a1f4:	9c000217 	ldw	r16,8(r19)
 508a1f8:	00bfff04 	movi	r2,-4
 508a1fc:	85800117 	ldw	r22,4(r16)
 508a200:	b0ac703a 	and	r22,r22,r2
 508a204:	b4400336 	bltu	r22,r17,508a214 <_malloc_r+0x344>
 508a208:	b445c83a 	sub	r2,r22,r17
 508a20c:	00c003c4 	movi	r3,15
 508a210:	18805d16 	blt	r3,r2,508a388 <_malloc_r+0x4b8>
 508a214:	05c14274 	movhi	r23,1289
 508a218:	008142b4 	movhi	r2,1290
 508a21c:	10a5f704 	addi	r2,r2,-26660
 508a220:	bddf2304 	addi	r23,r23,31884
 508a224:	15400017 	ldw	r21,0(r2)
 508a228:	b8c00017 	ldw	r3,0(r23)
 508a22c:	00bfffc4 	movi	r2,-1
 508a230:	858d883a 	add	r6,r16,r22
 508a234:	8d6b883a 	add	r21,r17,r21
 508a238:	1880ea26 	beq	r3,r2,508a5e4 <_malloc_r+0x714>
 508a23c:	ad4403c4 	addi	r21,r21,4111
 508a240:	00bc0004 	movi	r2,-4096
 508a244:	a8aa703a 	and	r21,r21,r2
 508a248:	a80b883a 	mov	r5,r21
 508a24c:	9009883a 	mov	r4,r18
 508a250:	d9800015 	stw	r6,0(sp)
 508a254:	508c1600 	call	508c160 <_sbrk_r>
 508a258:	1029883a 	mov	r20,r2
 508a25c:	00bfffc4 	movi	r2,-1
 508a260:	d9800017 	ldw	r6,0(sp)
 508a264:	a080e826 	beq	r20,r2,508a608 <_malloc_r+0x738>
 508a268:	a180a636 	bltu	r20,r6,508a504 <_malloc_r+0x634>
 508a26c:	070142b4 	movhi	fp,1290
 508a270:	e7260904 	addi	fp,fp,-26588
 508a274:	e0800017 	ldw	r2,0(fp)
 508a278:	a887883a 	add	r3,r21,r2
 508a27c:	e0c00015 	stw	r3,0(fp)
 508a280:	3500e626 	beq	r6,r20,508a61c <_malloc_r+0x74c>
 508a284:	b9000017 	ldw	r4,0(r23)
 508a288:	00bfffc4 	movi	r2,-1
 508a28c:	2080ee26 	beq	r4,r2,508a648 <_malloc_r+0x778>
 508a290:	a185c83a 	sub	r2,r20,r6
 508a294:	10c5883a 	add	r2,r2,r3
 508a298:	e0800015 	stw	r2,0(fp)
 508a29c:	a0c001cc 	andi	r3,r20,7
 508a2a0:	1800bc26 	beq	r3,zero,508a594 <_malloc_r+0x6c4>
 508a2a4:	a0e9c83a 	sub	r20,r20,r3
 508a2a8:	00840204 	movi	r2,4104
 508a2ac:	a5000204 	addi	r20,r20,8
 508a2b0:	10c7c83a 	sub	r3,r2,r3
 508a2b4:	a545883a 	add	r2,r20,r21
 508a2b8:	1083ffcc 	andi	r2,r2,4095
 508a2bc:	18abc83a 	sub	r21,r3,r2
 508a2c0:	a80b883a 	mov	r5,r21
 508a2c4:	9009883a 	mov	r4,r18
 508a2c8:	508c1600 	call	508c160 <_sbrk_r>
 508a2cc:	00ffffc4 	movi	r3,-1
 508a2d0:	10c0e126 	beq	r2,r3,508a658 <_malloc_r+0x788>
 508a2d4:	1505c83a 	sub	r2,r2,r20
 508a2d8:	1545883a 	add	r2,r2,r21
 508a2dc:	10800054 	ori	r2,r2,1
 508a2e0:	e0c00017 	ldw	r3,0(fp)
 508a2e4:	9d000215 	stw	r20,8(r19)
 508a2e8:	a0800115 	stw	r2,4(r20)
 508a2ec:	a8c7883a 	add	r3,r21,r3
 508a2f0:	e0c00015 	stw	r3,0(fp)
 508a2f4:	84c00e26 	beq	r16,r19,508a330 <_malloc_r+0x460>
 508a2f8:	018003c4 	movi	r6,15
 508a2fc:	3580a72e 	bgeu	r6,r22,508a59c <_malloc_r+0x6cc>
 508a300:	81400117 	ldw	r5,4(r16)
 508a304:	013ffe04 	movi	r4,-8
 508a308:	b0bffd04 	addi	r2,r22,-12
 508a30c:	1104703a 	and	r2,r2,r4
 508a310:	2900004c 	andi	r4,r5,1
 508a314:	2088b03a 	or	r4,r4,r2
 508a318:	81000115 	stw	r4,4(r16)
 508a31c:	01400144 	movi	r5,5
 508a320:	8089883a 	add	r4,r16,r2
 508a324:	21400115 	stw	r5,4(r4)
 508a328:	21400215 	stw	r5,8(r4)
 508a32c:	3080cd36 	bltu	r6,r2,508a664 <_malloc_r+0x794>
 508a330:	008142b4 	movhi	r2,1290
 508a334:	10a5f604 	addi	r2,r2,-26664
 508a338:	11000017 	ldw	r4,0(r2)
 508a33c:	20c0012e 	bgeu	r4,r3,508a344 <_malloc_r+0x474>
 508a340:	10c00015 	stw	r3,0(r2)
 508a344:	008142b4 	movhi	r2,1290
 508a348:	10a5f504 	addi	r2,r2,-26668
 508a34c:	11000017 	ldw	r4,0(r2)
 508a350:	9c000217 	ldw	r16,8(r19)
 508a354:	20c0012e 	bgeu	r4,r3,508a35c <_malloc_r+0x48c>
 508a358:	10c00015 	stw	r3,0(r2)
 508a35c:	80c00117 	ldw	r3,4(r16)
 508a360:	00bfff04 	movi	r2,-4
 508a364:	1886703a 	and	r3,r3,r2
 508a368:	1c45c83a 	sub	r2,r3,r17
 508a36c:	1c400236 	bltu	r3,r17,508a378 <_malloc_r+0x4a8>
 508a370:	00c003c4 	movi	r3,15
 508a374:	18800416 	blt	r3,r2,508a388 <_malloc_r+0x4b8>
 508a378:	9009883a 	mov	r4,r18
 508a37c:	509300c0 	call	509300c <__malloc_unlock>
 508a380:	0005883a 	mov	r2,zero
 508a384:	003f7b06 	br	508a174 <__alt_data_end+0xfffbbf74>
 508a388:	88c00054 	ori	r3,r17,1
 508a38c:	80c00115 	stw	r3,4(r16)
 508a390:	8463883a 	add	r17,r16,r17
 508a394:	10800054 	ori	r2,r2,1
 508a398:	9c400215 	stw	r17,8(r19)
 508a39c:	88800115 	stw	r2,4(r17)
 508a3a0:	9009883a 	mov	r4,r18
 508a3a4:	509300c0 	call	509300c <__malloc_unlock>
 508a3a8:	80800204 	addi	r2,r16,8
 508a3ac:	003f7106 	br	508a174 <__alt_data_end+0xfffbbf74>
 508a3b0:	00c00504 	movi	r3,20
 508a3b4:	18804a2e 	bgeu	r3,r2,508a4e0 <_malloc_r+0x610>
 508a3b8:	00c01504 	movi	r3,84
 508a3bc:	18806e36 	bltu	r3,r2,508a578 <_malloc_r+0x6a8>
 508a3c0:	8804d33a 	srli	r2,r17,12
 508a3c4:	12001bc4 	addi	r8,r2,111
 508a3c8:	11c01b84 	addi	r7,r2,110
 508a3cc:	4209883a 	add	r4,r8,r8
 508a3d0:	003edd06 	br	5089f48 <__alt_data_end+0xfffbbd48>
 508a3d4:	3804d27a 	srli	r2,r7,9
 508a3d8:	00c00104 	movi	r3,4
 508a3dc:	1880442e 	bgeu	r3,r2,508a4f0 <_malloc_r+0x620>
 508a3e0:	00c00504 	movi	r3,20
 508a3e4:	18808136 	bltu	r3,r2,508a5ec <_malloc_r+0x71c>
 508a3e8:	11401704 	addi	r5,r2,92
 508a3ec:	10c016c4 	addi	r3,r2,91
 508a3f0:	294b883a 	add	r5,r5,r5
 508a3f4:	294b883a 	add	r5,r5,r5
 508a3f8:	294b883a 	add	r5,r5,r5
 508a3fc:	994b883a 	add	r5,r19,r5
 508a400:	28800017 	ldw	r2,0(r5)
 508a404:	01814274 	movhi	r6,1289
 508a408:	297ffe04 	addi	r5,r5,-8
 508a40c:	31999c04 	addi	r6,r6,26224
 508a410:	28806526 	beq	r5,r2,508a5a8 <_malloc_r+0x6d8>
 508a414:	01bfff04 	movi	r6,-4
 508a418:	10c00117 	ldw	r3,4(r2)
 508a41c:	1986703a 	and	r3,r3,r6
 508a420:	38c0022e 	bgeu	r7,r3,508a42c <_malloc_r+0x55c>
 508a424:	10800217 	ldw	r2,8(r2)
 508a428:	28bffb1e 	bne	r5,r2,508a418 <__alt_data_end+0xfffbc218>
 508a42c:	11400317 	ldw	r5,12(r2)
 508a430:	98c00117 	ldw	r3,4(r19)
 508a434:	81400315 	stw	r5,12(r16)
 508a438:	80800215 	stw	r2,8(r16)
 508a43c:	2c000215 	stw	r16,8(r5)
 508a440:	14000315 	stw	r16,12(r2)
 508a444:	003ef806 	br	508a028 <__alt_data_end+0xfffbbe28>
 508a448:	88c00054 	ori	r3,r17,1
 508a44c:	80c00115 	stw	r3,4(r16)
 508a450:	8463883a 	add	r17,r16,r17
 508a454:	34400515 	stw	r17,20(r6)
 508a458:	34400415 	stw	r17,16(r6)
 508a45c:	10c00054 	ori	r3,r2,1
 508a460:	8a000315 	stw	r8,12(r17)
 508a464:	8a000215 	stw	r8,8(r17)
 508a468:	88c00115 	stw	r3,4(r17)
 508a46c:	88a3883a 	add	r17,r17,r2
 508a470:	88800015 	stw	r2,0(r17)
 508a474:	9009883a 	mov	r4,r18
 508a478:	509300c0 	call	509300c <__malloc_unlock>
 508a47c:	80800204 	addi	r2,r16,8
 508a480:	003f3c06 	br	508a174 <__alt_data_end+0xfffbbf74>
 508a484:	30c00117 	ldw	r3,4(r6)
 508a488:	003ee706 	br	508a028 <__alt_data_end+0xfffbbe28>
 508a48c:	5ac00044 	addi	r11,r11,1
 508a490:	588000cc 	andi	r2,r11,3
 508a494:	31800204 	addi	r6,r6,8
 508a498:	103efd1e 	bne	r2,zero,508a090 <__alt_data_end+0xfffbbe90>
 508a49c:	00002406 	br	508a530 <_malloc_r+0x660>
 508a4a0:	14000317 	ldw	r16,12(r2)
 508a4a4:	143f251e 	bne	r2,r16,508a13c <__alt_data_end+0xfffbbf3c>
 508a4a8:	21000084 	addi	r4,r4,2
 508a4ac:	003ebc06 	br	5089fa0 <__alt_data_end+0xfffbbda0>
 508a4b0:	8085883a 	add	r2,r16,r2
 508a4b4:	10c00117 	ldw	r3,4(r2)
 508a4b8:	81000317 	ldw	r4,12(r16)
 508a4bc:	81400217 	ldw	r5,8(r16)
 508a4c0:	18c00054 	ori	r3,r3,1
 508a4c4:	10c00115 	stw	r3,4(r2)
 508a4c8:	29000315 	stw	r4,12(r5)
 508a4cc:	21400215 	stw	r5,8(r4)
 508a4d0:	9009883a 	mov	r4,r18
 508a4d4:	509300c0 	call	509300c <__malloc_unlock>
 508a4d8:	80800204 	addi	r2,r16,8
 508a4dc:	003f2506 	br	508a174 <__alt_data_end+0xfffbbf74>
 508a4e0:	12001704 	addi	r8,r2,92
 508a4e4:	11c016c4 	addi	r7,r2,91
 508a4e8:	4209883a 	add	r4,r8,r8
 508a4ec:	003e9606 	br	5089f48 <__alt_data_end+0xfffbbd48>
 508a4f0:	3804d1ba 	srli	r2,r7,6
 508a4f4:	11400e44 	addi	r5,r2,57
 508a4f8:	10c00e04 	addi	r3,r2,56
 508a4fc:	294b883a 	add	r5,r5,r5
 508a500:	003fbc06 	br	508a3f4 <__alt_data_end+0xfffbc1f4>
 508a504:	84ff5926 	beq	r16,r19,508a26c <__alt_data_end+0xfffbc06c>
 508a508:	00814274 	movhi	r2,1289
 508a50c:	10999c04 	addi	r2,r2,26224
 508a510:	14000217 	ldw	r16,8(r2)
 508a514:	00bfff04 	movi	r2,-4
 508a518:	80c00117 	ldw	r3,4(r16)
 508a51c:	1886703a 	and	r3,r3,r2
 508a520:	003f9106 	br	508a368 <__alt_data_end+0xfffbc168>
 508a524:	60800217 	ldw	r2,8(r12)
 508a528:	213fffc4 	addi	r4,r4,-1
 508a52c:	1300651e 	bne	r2,r12,508a6c4 <_malloc_r+0x7f4>
 508a530:	208000cc 	andi	r2,r4,3
 508a534:	633ffe04 	addi	r12,r12,-8
 508a538:	103ffa1e 	bne	r2,zero,508a524 <__alt_data_end+0xfffbc324>
 508a53c:	98800117 	ldw	r2,4(r19)
 508a540:	0146303a 	nor	r3,zero,r5
 508a544:	1884703a 	and	r2,r3,r2
 508a548:	98800115 	stw	r2,4(r19)
 508a54c:	294b883a 	add	r5,r5,r5
 508a550:	117f2836 	bltu	r2,r5,508a1f4 <__alt_data_end+0xfffbbff4>
 508a554:	283f2726 	beq	r5,zero,508a1f4 <__alt_data_end+0xfffbbff4>
 508a558:	2886703a 	and	r3,r5,r2
 508a55c:	5809883a 	mov	r4,r11
 508a560:	183ec31e 	bne	r3,zero,508a070 <__alt_data_end+0xfffbbe70>
 508a564:	294b883a 	add	r5,r5,r5
 508a568:	2886703a 	and	r3,r5,r2
 508a56c:	21000104 	addi	r4,r4,4
 508a570:	183ffc26 	beq	r3,zero,508a564 <__alt_data_end+0xfffbc364>
 508a574:	003ebe06 	br	508a070 <__alt_data_end+0xfffbbe70>
 508a578:	00c05504 	movi	r3,340
 508a57c:	18801236 	bltu	r3,r2,508a5c8 <_malloc_r+0x6f8>
 508a580:	8804d3fa 	srli	r2,r17,15
 508a584:	12001e04 	addi	r8,r2,120
 508a588:	11c01dc4 	addi	r7,r2,119
 508a58c:	4209883a 	add	r4,r8,r8
 508a590:	003e6d06 	br	5089f48 <__alt_data_end+0xfffbbd48>
 508a594:	00c40004 	movi	r3,4096
 508a598:	003f4606 	br	508a2b4 <__alt_data_end+0xfffbc0b4>
 508a59c:	00800044 	movi	r2,1
 508a5a0:	a0800115 	stw	r2,4(r20)
 508a5a4:	003f7406 	br	508a378 <__alt_data_end+0xfffbc178>
 508a5a8:	1805d0ba 	srai	r2,r3,2
 508a5ac:	01c00044 	movi	r7,1
 508a5b0:	30c00117 	ldw	r3,4(r6)
 508a5b4:	388e983a 	sll	r7,r7,r2
 508a5b8:	2805883a 	mov	r2,r5
 508a5bc:	38c6b03a 	or	r3,r7,r3
 508a5c0:	30c00115 	stw	r3,4(r6)
 508a5c4:	003f9b06 	br	508a434 <__alt_data_end+0xfffbc234>
 508a5c8:	00c15504 	movi	r3,1364
 508a5cc:	18801a36 	bltu	r3,r2,508a638 <_malloc_r+0x768>
 508a5d0:	8804d4ba 	srli	r2,r17,18
 508a5d4:	12001f44 	addi	r8,r2,125
 508a5d8:	11c01f04 	addi	r7,r2,124
 508a5dc:	4209883a 	add	r4,r8,r8
 508a5e0:	003e5906 	br	5089f48 <__alt_data_end+0xfffbbd48>
 508a5e4:	ad400404 	addi	r21,r21,16
 508a5e8:	003f1706 	br	508a248 <__alt_data_end+0xfffbc048>
 508a5ec:	00c01504 	movi	r3,84
 508a5f0:	18802336 	bltu	r3,r2,508a680 <_malloc_r+0x7b0>
 508a5f4:	3804d33a 	srli	r2,r7,12
 508a5f8:	11401bc4 	addi	r5,r2,111
 508a5fc:	10c01b84 	addi	r3,r2,110
 508a600:	294b883a 	add	r5,r5,r5
 508a604:	003f7b06 	br	508a3f4 <__alt_data_end+0xfffbc1f4>
 508a608:	9c000217 	ldw	r16,8(r19)
 508a60c:	00bfff04 	movi	r2,-4
 508a610:	80c00117 	ldw	r3,4(r16)
 508a614:	1886703a 	and	r3,r3,r2
 508a618:	003f5306 	br	508a368 <__alt_data_end+0xfffbc168>
 508a61c:	3083ffcc 	andi	r2,r6,4095
 508a620:	103f181e 	bne	r2,zero,508a284 <__alt_data_end+0xfffbc084>
 508a624:	99000217 	ldw	r4,8(r19)
 508a628:	b545883a 	add	r2,r22,r21
 508a62c:	10800054 	ori	r2,r2,1
 508a630:	20800115 	stw	r2,4(r4)
 508a634:	003f3e06 	br	508a330 <__alt_data_end+0xfffbc130>
 508a638:	01003f84 	movi	r4,254
 508a63c:	02001fc4 	movi	r8,127
 508a640:	01c01f84 	movi	r7,126
 508a644:	003e4006 	br	5089f48 <__alt_data_end+0xfffbbd48>
 508a648:	00814274 	movhi	r2,1289
 508a64c:	109f2304 	addi	r2,r2,31884
 508a650:	15000015 	stw	r20,0(r2)
 508a654:	003f1106 	br	508a29c <__alt_data_end+0xfffbc09c>
 508a658:	00800044 	movi	r2,1
 508a65c:	002b883a 	mov	r21,zero
 508a660:	003f1f06 	br	508a2e0 <__alt_data_end+0xfffbc0e0>
 508a664:	81400204 	addi	r5,r16,8
 508a668:	9009883a 	mov	r4,r18
 508a66c:	50892e40 	call	50892e4 <_free_r>
 508a670:	008142b4 	movhi	r2,1290
 508a674:	10a60904 	addi	r2,r2,-26588
 508a678:	10c00017 	ldw	r3,0(r2)
 508a67c:	003f2c06 	br	508a330 <__alt_data_end+0xfffbc130>
 508a680:	00c05504 	movi	r3,340
 508a684:	18800536 	bltu	r3,r2,508a69c <_malloc_r+0x7cc>
 508a688:	3804d3fa 	srli	r2,r7,15
 508a68c:	11401e04 	addi	r5,r2,120
 508a690:	10c01dc4 	addi	r3,r2,119
 508a694:	294b883a 	add	r5,r5,r5
 508a698:	003f5606 	br	508a3f4 <__alt_data_end+0xfffbc1f4>
 508a69c:	00c15504 	movi	r3,1364
 508a6a0:	18800536 	bltu	r3,r2,508a6b8 <_malloc_r+0x7e8>
 508a6a4:	3804d4ba 	srli	r2,r7,18
 508a6a8:	11401f44 	addi	r5,r2,125
 508a6ac:	10c01f04 	addi	r3,r2,124
 508a6b0:	294b883a 	add	r5,r5,r5
 508a6b4:	003f4f06 	br	508a3f4 <__alt_data_end+0xfffbc1f4>
 508a6b8:	01403f84 	movi	r5,254
 508a6bc:	00c01f84 	movi	r3,126
 508a6c0:	003f4c06 	br	508a3f4 <__alt_data_end+0xfffbc1f4>
 508a6c4:	98800117 	ldw	r2,4(r19)
 508a6c8:	003fa006 	br	508a54c <__alt_data_end+0xfffbc34c>
 508a6cc:	8808d0fa 	srli	r4,r17,3
 508a6d0:	20800044 	addi	r2,r4,1
 508a6d4:	1085883a 	add	r2,r2,r2
 508a6d8:	003e9006 	br	508a11c <__alt_data_end+0xfffbbf1c>

0508a6dc <memchr>:
 508a6dc:	208000cc 	andi	r2,r4,3
 508a6e0:	280f883a 	mov	r7,r5
 508a6e4:	10003426 	beq	r2,zero,508a7b8 <memchr+0xdc>
 508a6e8:	30bfffc4 	addi	r2,r6,-1
 508a6ec:	30001a26 	beq	r6,zero,508a758 <memchr+0x7c>
 508a6f0:	20c00003 	ldbu	r3,0(r4)
 508a6f4:	29803fcc 	andi	r6,r5,255
 508a6f8:	30c0051e 	bne	r6,r3,508a710 <memchr+0x34>
 508a6fc:	00001806 	br	508a760 <memchr+0x84>
 508a700:	10001526 	beq	r2,zero,508a758 <memchr+0x7c>
 508a704:	20c00003 	ldbu	r3,0(r4)
 508a708:	10bfffc4 	addi	r2,r2,-1
 508a70c:	30c01426 	beq	r6,r3,508a760 <memchr+0x84>
 508a710:	21000044 	addi	r4,r4,1
 508a714:	20c000cc 	andi	r3,r4,3
 508a718:	183ff91e 	bne	r3,zero,508a700 <__alt_data_end+0xfffbc500>
 508a71c:	020000c4 	movi	r8,3
 508a720:	40801136 	bltu	r8,r2,508a768 <memchr+0x8c>
 508a724:	10000c26 	beq	r2,zero,508a758 <memchr+0x7c>
 508a728:	20c00003 	ldbu	r3,0(r4)
 508a72c:	29403fcc 	andi	r5,r5,255
 508a730:	28c00b26 	beq	r5,r3,508a760 <memchr+0x84>
 508a734:	20c00044 	addi	r3,r4,1
 508a738:	39803fcc 	andi	r6,r7,255
 508a73c:	2089883a 	add	r4,r4,r2
 508a740:	00000306 	br	508a750 <memchr+0x74>
 508a744:	18c00044 	addi	r3,r3,1
 508a748:	197fffc3 	ldbu	r5,-1(r3)
 508a74c:	31400526 	beq	r6,r5,508a764 <memchr+0x88>
 508a750:	1805883a 	mov	r2,r3
 508a754:	20fffb1e 	bne	r4,r3,508a744 <__alt_data_end+0xfffbc544>
 508a758:	0005883a 	mov	r2,zero
 508a75c:	f800283a 	ret
 508a760:	2005883a 	mov	r2,r4
 508a764:	f800283a 	ret
 508a768:	28c03fcc 	andi	r3,r5,255
 508a76c:	1812923a 	slli	r9,r3,8
 508a770:	02ffbff4 	movhi	r11,65279
 508a774:	02a02074 	movhi	r10,32897
 508a778:	48d2b03a 	or	r9,r9,r3
 508a77c:	4806943a 	slli	r3,r9,16
 508a780:	5affbfc4 	addi	r11,r11,-257
 508a784:	52a02004 	addi	r10,r10,-32640
 508a788:	48d2b03a 	or	r9,r9,r3
 508a78c:	20c00017 	ldw	r3,0(r4)
 508a790:	48c6f03a 	xor	r3,r9,r3
 508a794:	1acd883a 	add	r6,r3,r11
 508a798:	00c6303a 	nor	r3,zero,r3
 508a79c:	30c6703a 	and	r3,r6,r3
 508a7a0:	1a86703a 	and	r3,r3,r10
 508a7a4:	183fe01e 	bne	r3,zero,508a728 <__alt_data_end+0xfffbc528>
 508a7a8:	10bfff04 	addi	r2,r2,-4
 508a7ac:	21000104 	addi	r4,r4,4
 508a7b0:	40bff636 	bltu	r8,r2,508a78c <__alt_data_end+0xfffbc58c>
 508a7b4:	003fdb06 	br	508a724 <__alt_data_end+0xfffbc524>
 508a7b8:	3005883a 	mov	r2,r6
 508a7bc:	003fd706 	br	508a71c <__alt_data_end+0xfffbc51c>

0508a7c0 <memcpy>:
 508a7c0:	defffd04 	addi	sp,sp,-12
 508a7c4:	dfc00215 	stw	ra,8(sp)
 508a7c8:	dc400115 	stw	r17,4(sp)
 508a7cc:	dc000015 	stw	r16,0(sp)
 508a7d0:	00c003c4 	movi	r3,15
 508a7d4:	2005883a 	mov	r2,r4
 508a7d8:	1980452e 	bgeu	r3,r6,508a8f0 <memcpy+0x130>
 508a7dc:	2906b03a 	or	r3,r5,r4
 508a7e0:	18c000cc 	andi	r3,r3,3
 508a7e4:	1800441e 	bne	r3,zero,508a8f8 <memcpy+0x138>
 508a7e8:	347ffc04 	addi	r17,r6,-16
 508a7ec:	8822d13a 	srli	r17,r17,4
 508a7f0:	28c00104 	addi	r3,r5,4
 508a7f4:	23400104 	addi	r13,r4,4
 508a7f8:	8820913a 	slli	r16,r17,4
 508a7fc:	2b000204 	addi	r12,r5,8
 508a800:	22c00204 	addi	r11,r4,8
 508a804:	84000504 	addi	r16,r16,20
 508a808:	2a800304 	addi	r10,r5,12
 508a80c:	22400304 	addi	r9,r4,12
 508a810:	2c21883a 	add	r16,r5,r16
 508a814:	2811883a 	mov	r8,r5
 508a818:	200f883a 	mov	r7,r4
 508a81c:	41000017 	ldw	r4,0(r8)
 508a820:	1fc00017 	ldw	ra,0(r3)
 508a824:	63c00017 	ldw	r15,0(r12)
 508a828:	39000015 	stw	r4,0(r7)
 508a82c:	53800017 	ldw	r14,0(r10)
 508a830:	6fc00015 	stw	ra,0(r13)
 508a834:	5bc00015 	stw	r15,0(r11)
 508a838:	4b800015 	stw	r14,0(r9)
 508a83c:	18c00404 	addi	r3,r3,16
 508a840:	39c00404 	addi	r7,r7,16
 508a844:	42000404 	addi	r8,r8,16
 508a848:	6b400404 	addi	r13,r13,16
 508a84c:	63000404 	addi	r12,r12,16
 508a850:	5ac00404 	addi	r11,r11,16
 508a854:	52800404 	addi	r10,r10,16
 508a858:	4a400404 	addi	r9,r9,16
 508a85c:	1c3fef1e 	bne	r3,r16,508a81c <__alt_data_end+0xfffbc61c>
 508a860:	89c00044 	addi	r7,r17,1
 508a864:	380e913a 	slli	r7,r7,4
 508a868:	310003cc 	andi	r4,r6,15
 508a86c:	02c000c4 	movi	r11,3
 508a870:	11c7883a 	add	r3,r2,r7
 508a874:	29cb883a 	add	r5,r5,r7
 508a878:	5900212e 	bgeu	r11,r4,508a900 <memcpy+0x140>
 508a87c:	1813883a 	mov	r9,r3
 508a880:	2811883a 	mov	r8,r5
 508a884:	200f883a 	mov	r7,r4
 508a888:	42800017 	ldw	r10,0(r8)
 508a88c:	4a400104 	addi	r9,r9,4
 508a890:	39ffff04 	addi	r7,r7,-4
 508a894:	4abfff15 	stw	r10,-4(r9)
 508a898:	42000104 	addi	r8,r8,4
 508a89c:	59fffa36 	bltu	r11,r7,508a888 <__alt_data_end+0xfffbc688>
 508a8a0:	213fff04 	addi	r4,r4,-4
 508a8a4:	2008d0ba 	srli	r4,r4,2
 508a8a8:	318000cc 	andi	r6,r6,3
 508a8ac:	21000044 	addi	r4,r4,1
 508a8b0:	2109883a 	add	r4,r4,r4
 508a8b4:	2109883a 	add	r4,r4,r4
 508a8b8:	1907883a 	add	r3,r3,r4
 508a8bc:	290b883a 	add	r5,r5,r4
 508a8c0:	30000626 	beq	r6,zero,508a8dc <memcpy+0x11c>
 508a8c4:	198d883a 	add	r6,r3,r6
 508a8c8:	29c00003 	ldbu	r7,0(r5)
 508a8cc:	18c00044 	addi	r3,r3,1
 508a8d0:	29400044 	addi	r5,r5,1
 508a8d4:	19ffffc5 	stb	r7,-1(r3)
 508a8d8:	19bffb1e 	bne	r3,r6,508a8c8 <__alt_data_end+0xfffbc6c8>
 508a8dc:	dfc00217 	ldw	ra,8(sp)
 508a8e0:	dc400117 	ldw	r17,4(sp)
 508a8e4:	dc000017 	ldw	r16,0(sp)
 508a8e8:	dec00304 	addi	sp,sp,12
 508a8ec:	f800283a 	ret
 508a8f0:	2007883a 	mov	r3,r4
 508a8f4:	003ff206 	br	508a8c0 <__alt_data_end+0xfffbc6c0>
 508a8f8:	2007883a 	mov	r3,r4
 508a8fc:	003ff106 	br	508a8c4 <__alt_data_end+0xfffbc6c4>
 508a900:	200d883a 	mov	r6,r4
 508a904:	003fee06 	br	508a8c0 <__alt_data_end+0xfffbc6c0>

0508a908 <memmove>:
 508a908:	2005883a 	mov	r2,r4
 508a90c:	29000b2e 	bgeu	r5,r4,508a93c <memmove+0x34>
 508a910:	298f883a 	add	r7,r5,r6
 508a914:	21c0092e 	bgeu	r4,r7,508a93c <memmove+0x34>
 508a918:	2187883a 	add	r3,r4,r6
 508a91c:	198bc83a 	sub	r5,r3,r6
 508a920:	30004826 	beq	r6,zero,508aa44 <memmove+0x13c>
 508a924:	39ffffc4 	addi	r7,r7,-1
 508a928:	39000003 	ldbu	r4,0(r7)
 508a92c:	18ffffc4 	addi	r3,r3,-1
 508a930:	19000005 	stb	r4,0(r3)
 508a934:	28fffb1e 	bne	r5,r3,508a924 <__alt_data_end+0xfffbc724>
 508a938:	f800283a 	ret
 508a93c:	00c003c4 	movi	r3,15
 508a940:	1980412e 	bgeu	r3,r6,508aa48 <memmove+0x140>
 508a944:	2886b03a 	or	r3,r5,r2
 508a948:	18c000cc 	andi	r3,r3,3
 508a94c:	1800401e 	bne	r3,zero,508aa50 <memmove+0x148>
 508a950:	33fffc04 	addi	r15,r6,-16
 508a954:	781ed13a 	srli	r15,r15,4
 508a958:	28c00104 	addi	r3,r5,4
 508a95c:	13400104 	addi	r13,r2,4
 508a960:	781c913a 	slli	r14,r15,4
 508a964:	2b000204 	addi	r12,r5,8
 508a968:	12c00204 	addi	r11,r2,8
 508a96c:	73800504 	addi	r14,r14,20
 508a970:	2a800304 	addi	r10,r5,12
 508a974:	12400304 	addi	r9,r2,12
 508a978:	2b9d883a 	add	r14,r5,r14
 508a97c:	2811883a 	mov	r8,r5
 508a980:	100f883a 	mov	r7,r2
 508a984:	41000017 	ldw	r4,0(r8)
 508a988:	39c00404 	addi	r7,r7,16
 508a98c:	18c00404 	addi	r3,r3,16
 508a990:	393ffc15 	stw	r4,-16(r7)
 508a994:	193ffc17 	ldw	r4,-16(r3)
 508a998:	6b400404 	addi	r13,r13,16
 508a99c:	5ac00404 	addi	r11,r11,16
 508a9a0:	693ffc15 	stw	r4,-16(r13)
 508a9a4:	61000017 	ldw	r4,0(r12)
 508a9a8:	4a400404 	addi	r9,r9,16
 508a9ac:	42000404 	addi	r8,r8,16
 508a9b0:	593ffc15 	stw	r4,-16(r11)
 508a9b4:	51000017 	ldw	r4,0(r10)
 508a9b8:	63000404 	addi	r12,r12,16
 508a9bc:	52800404 	addi	r10,r10,16
 508a9c0:	493ffc15 	stw	r4,-16(r9)
 508a9c4:	1bbfef1e 	bne	r3,r14,508a984 <__alt_data_end+0xfffbc784>
 508a9c8:	79000044 	addi	r4,r15,1
 508a9cc:	2008913a 	slli	r4,r4,4
 508a9d0:	328003cc 	andi	r10,r6,15
 508a9d4:	02c000c4 	movi	r11,3
 508a9d8:	1107883a 	add	r3,r2,r4
 508a9dc:	290b883a 	add	r5,r5,r4
 508a9e0:	5a801e2e 	bgeu	r11,r10,508aa5c <memmove+0x154>
 508a9e4:	1813883a 	mov	r9,r3
 508a9e8:	2811883a 	mov	r8,r5
 508a9ec:	500f883a 	mov	r7,r10
 508a9f0:	41000017 	ldw	r4,0(r8)
 508a9f4:	4a400104 	addi	r9,r9,4
 508a9f8:	39ffff04 	addi	r7,r7,-4
 508a9fc:	493fff15 	stw	r4,-4(r9)
 508aa00:	42000104 	addi	r8,r8,4
 508aa04:	59fffa36 	bltu	r11,r7,508a9f0 <__alt_data_end+0xfffbc7f0>
 508aa08:	513fff04 	addi	r4,r10,-4
 508aa0c:	2008d0ba 	srli	r4,r4,2
 508aa10:	318000cc 	andi	r6,r6,3
 508aa14:	21000044 	addi	r4,r4,1
 508aa18:	2109883a 	add	r4,r4,r4
 508aa1c:	2109883a 	add	r4,r4,r4
 508aa20:	1907883a 	add	r3,r3,r4
 508aa24:	290b883a 	add	r5,r5,r4
 508aa28:	30000b26 	beq	r6,zero,508aa58 <memmove+0x150>
 508aa2c:	198d883a 	add	r6,r3,r6
 508aa30:	29c00003 	ldbu	r7,0(r5)
 508aa34:	18c00044 	addi	r3,r3,1
 508aa38:	29400044 	addi	r5,r5,1
 508aa3c:	19ffffc5 	stb	r7,-1(r3)
 508aa40:	19bffb1e 	bne	r3,r6,508aa30 <__alt_data_end+0xfffbc830>
 508aa44:	f800283a 	ret
 508aa48:	1007883a 	mov	r3,r2
 508aa4c:	003ff606 	br	508aa28 <__alt_data_end+0xfffbc828>
 508aa50:	1007883a 	mov	r3,r2
 508aa54:	003ff506 	br	508aa2c <__alt_data_end+0xfffbc82c>
 508aa58:	f800283a 	ret
 508aa5c:	500d883a 	mov	r6,r10
 508aa60:	003ff106 	br	508aa28 <__alt_data_end+0xfffbc828>

0508aa64 <memset>:
 508aa64:	20c000cc 	andi	r3,r4,3
 508aa68:	2005883a 	mov	r2,r4
 508aa6c:	18004426 	beq	r3,zero,508ab80 <memset+0x11c>
 508aa70:	31ffffc4 	addi	r7,r6,-1
 508aa74:	30004026 	beq	r6,zero,508ab78 <memset+0x114>
 508aa78:	2813883a 	mov	r9,r5
 508aa7c:	200d883a 	mov	r6,r4
 508aa80:	2007883a 	mov	r3,r4
 508aa84:	00000406 	br	508aa98 <memset+0x34>
 508aa88:	3a3fffc4 	addi	r8,r7,-1
 508aa8c:	31800044 	addi	r6,r6,1
 508aa90:	38003926 	beq	r7,zero,508ab78 <memset+0x114>
 508aa94:	400f883a 	mov	r7,r8
 508aa98:	18c00044 	addi	r3,r3,1
 508aa9c:	32400005 	stb	r9,0(r6)
 508aaa0:	1a0000cc 	andi	r8,r3,3
 508aaa4:	403ff81e 	bne	r8,zero,508aa88 <__alt_data_end+0xfffbc888>
 508aaa8:	010000c4 	movi	r4,3
 508aaac:	21c02d2e 	bgeu	r4,r7,508ab64 <memset+0x100>
 508aab0:	29003fcc 	andi	r4,r5,255
 508aab4:	200c923a 	slli	r6,r4,8
 508aab8:	3108b03a 	or	r4,r6,r4
 508aabc:	200c943a 	slli	r6,r4,16
 508aac0:	218cb03a 	or	r6,r4,r6
 508aac4:	010003c4 	movi	r4,15
 508aac8:	21c0182e 	bgeu	r4,r7,508ab2c <memset+0xc8>
 508aacc:	3b3ffc04 	addi	r12,r7,-16
 508aad0:	6018d13a 	srli	r12,r12,4
 508aad4:	1a000104 	addi	r8,r3,4
 508aad8:	1ac00204 	addi	r11,r3,8
 508aadc:	6008913a 	slli	r4,r12,4
 508aae0:	1a800304 	addi	r10,r3,12
 508aae4:	1813883a 	mov	r9,r3
 508aae8:	21000504 	addi	r4,r4,20
 508aaec:	1909883a 	add	r4,r3,r4
 508aaf0:	49800015 	stw	r6,0(r9)
 508aaf4:	41800015 	stw	r6,0(r8)
 508aaf8:	59800015 	stw	r6,0(r11)
 508aafc:	51800015 	stw	r6,0(r10)
 508ab00:	42000404 	addi	r8,r8,16
 508ab04:	4a400404 	addi	r9,r9,16
 508ab08:	5ac00404 	addi	r11,r11,16
 508ab0c:	52800404 	addi	r10,r10,16
 508ab10:	413ff71e 	bne	r8,r4,508aaf0 <__alt_data_end+0xfffbc8f0>
 508ab14:	63000044 	addi	r12,r12,1
 508ab18:	6018913a 	slli	r12,r12,4
 508ab1c:	39c003cc 	andi	r7,r7,15
 508ab20:	010000c4 	movi	r4,3
 508ab24:	1b07883a 	add	r3,r3,r12
 508ab28:	21c00e2e 	bgeu	r4,r7,508ab64 <memset+0x100>
 508ab2c:	1813883a 	mov	r9,r3
 508ab30:	3811883a 	mov	r8,r7
 508ab34:	010000c4 	movi	r4,3
 508ab38:	49800015 	stw	r6,0(r9)
 508ab3c:	423fff04 	addi	r8,r8,-4
 508ab40:	4a400104 	addi	r9,r9,4
 508ab44:	223ffc36 	bltu	r4,r8,508ab38 <__alt_data_end+0xfffbc938>
 508ab48:	393fff04 	addi	r4,r7,-4
 508ab4c:	2008d0ba 	srli	r4,r4,2
 508ab50:	39c000cc 	andi	r7,r7,3
 508ab54:	21000044 	addi	r4,r4,1
 508ab58:	2109883a 	add	r4,r4,r4
 508ab5c:	2109883a 	add	r4,r4,r4
 508ab60:	1907883a 	add	r3,r3,r4
 508ab64:	38000526 	beq	r7,zero,508ab7c <memset+0x118>
 508ab68:	19cf883a 	add	r7,r3,r7
 508ab6c:	19400005 	stb	r5,0(r3)
 508ab70:	18c00044 	addi	r3,r3,1
 508ab74:	38fffd1e 	bne	r7,r3,508ab6c <__alt_data_end+0xfffbc96c>
 508ab78:	f800283a 	ret
 508ab7c:	f800283a 	ret
 508ab80:	2007883a 	mov	r3,r4
 508ab84:	300f883a 	mov	r7,r6
 508ab88:	003fc706 	br	508aaa8 <__alt_data_end+0xfffbc8a8>

0508ab8c <_Balloc>:
 508ab8c:	20801317 	ldw	r2,76(r4)
 508ab90:	defffc04 	addi	sp,sp,-16
 508ab94:	dc400115 	stw	r17,4(sp)
 508ab98:	dc000015 	stw	r16,0(sp)
 508ab9c:	dfc00315 	stw	ra,12(sp)
 508aba0:	dc800215 	stw	r18,8(sp)
 508aba4:	2023883a 	mov	r17,r4
 508aba8:	2821883a 	mov	r16,r5
 508abac:	10000f26 	beq	r2,zero,508abec <_Balloc+0x60>
 508abb0:	8407883a 	add	r3,r16,r16
 508abb4:	18c7883a 	add	r3,r3,r3
 508abb8:	10c7883a 	add	r3,r2,r3
 508abbc:	18800017 	ldw	r2,0(r3)
 508abc0:	10001126 	beq	r2,zero,508ac08 <_Balloc+0x7c>
 508abc4:	11000017 	ldw	r4,0(r2)
 508abc8:	19000015 	stw	r4,0(r3)
 508abcc:	10000415 	stw	zero,16(r2)
 508abd0:	10000315 	stw	zero,12(r2)
 508abd4:	dfc00317 	ldw	ra,12(sp)
 508abd8:	dc800217 	ldw	r18,8(sp)
 508abdc:	dc400117 	ldw	r17,4(sp)
 508abe0:	dc000017 	ldw	r16,0(sp)
 508abe4:	dec00404 	addi	sp,sp,16
 508abe8:	f800283a 	ret
 508abec:	01800844 	movi	r6,33
 508abf0:	01400104 	movi	r5,4
 508abf4:	508eed40 	call	508eed4 <_calloc_r>
 508abf8:	88801315 	stw	r2,76(r17)
 508abfc:	103fec1e 	bne	r2,zero,508abb0 <__alt_data_end+0xfffbc9b0>
 508ac00:	0005883a 	mov	r2,zero
 508ac04:	003ff306 	br	508abd4 <__alt_data_end+0xfffbc9d4>
 508ac08:	01400044 	movi	r5,1
 508ac0c:	2c24983a 	sll	r18,r5,r16
 508ac10:	8809883a 	mov	r4,r17
 508ac14:	91800144 	addi	r6,r18,5
 508ac18:	318d883a 	add	r6,r6,r6
 508ac1c:	318d883a 	add	r6,r6,r6
 508ac20:	508eed40 	call	508eed4 <_calloc_r>
 508ac24:	103ff626 	beq	r2,zero,508ac00 <__alt_data_end+0xfffbca00>
 508ac28:	14000115 	stw	r16,4(r2)
 508ac2c:	14800215 	stw	r18,8(r2)
 508ac30:	003fe606 	br	508abcc <__alt_data_end+0xfffbc9cc>

0508ac34 <_Bfree>:
 508ac34:	28000826 	beq	r5,zero,508ac58 <_Bfree+0x24>
 508ac38:	28c00117 	ldw	r3,4(r5)
 508ac3c:	20801317 	ldw	r2,76(r4)
 508ac40:	18c7883a 	add	r3,r3,r3
 508ac44:	18c7883a 	add	r3,r3,r3
 508ac48:	10c5883a 	add	r2,r2,r3
 508ac4c:	10c00017 	ldw	r3,0(r2)
 508ac50:	28c00015 	stw	r3,0(r5)
 508ac54:	11400015 	stw	r5,0(r2)
 508ac58:	f800283a 	ret

0508ac5c <__multadd>:
 508ac5c:	defffa04 	addi	sp,sp,-24
 508ac60:	dc800315 	stw	r18,12(sp)
 508ac64:	dc400215 	stw	r17,8(sp)
 508ac68:	dc000115 	stw	r16,4(sp)
 508ac6c:	2823883a 	mov	r17,r5
 508ac70:	2c000417 	ldw	r16,16(r5)
 508ac74:	dfc00515 	stw	ra,20(sp)
 508ac78:	dcc00415 	stw	r19,16(sp)
 508ac7c:	2025883a 	mov	r18,r4
 508ac80:	29400504 	addi	r5,r5,20
 508ac84:	0011883a 	mov	r8,zero
 508ac88:	28c00017 	ldw	r3,0(r5)
 508ac8c:	29400104 	addi	r5,r5,4
 508ac90:	42000044 	addi	r8,r8,1
 508ac94:	18bfffcc 	andi	r2,r3,65535
 508ac98:	1185383a 	mul	r2,r2,r6
 508ac9c:	1806d43a 	srli	r3,r3,16
 508aca0:	11cf883a 	add	r7,r2,r7
 508aca4:	3808d43a 	srli	r4,r7,16
 508aca8:	1987383a 	mul	r3,r3,r6
 508acac:	38bfffcc 	andi	r2,r7,65535
 508acb0:	1907883a 	add	r3,r3,r4
 508acb4:	1808943a 	slli	r4,r3,16
 508acb8:	180ed43a 	srli	r7,r3,16
 508acbc:	2085883a 	add	r2,r4,r2
 508acc0:	28bfff15 	stw	r2,-4(r5)
 508acc4:	443ff016 	blt	r8,r16,508ac88 <__alt_data_end+0xfffbca88>
 508acc8:	38000926 	beq	r7,zero,508acf0 <__multadd+0x94>
 508accc:	88800217 	ldw	r2,8(r17)
 508acd0:	80800f0e 	bge	r16,r2,508ad10 <__multadd+0xb4>
 508acd4:	80800144 	addi	r2,r16,5
 508acd8:	1085883a 	add	r2,r2,r2
 508acdc:	1085883a 	add	r2,r2,r2
 508ace0:	8885883a 	add	r2,r17,r2
 508ace4:	11c00015 	stw	r7,0(r2)
 508ace8:	84000044 	addi	r16,r16,1
 508acec:	8c000415 	stw	r16,16(r17)
 508acf0:	8805883a 	mov	r2,r17
 508acf4:	dfc00517 	ldw	ra,20(sp)
 508acf8:	dcc00417 	ldw	r19,16(sp)
 508acfc:	dc800317 	ldw	r18,12(sp)
 508ad00:	dc400217 	ldw	r17,8(sp)
 508ad04:	dc000117 	ldw	r16,4(sp)
 508ad08:	dec00604 	addi	sp,sp,24
 508ad0c:	f800283a 	ret
 508ad10:	89400117 	ldw	r5,4(r17)
 508ad14:	9009883a 	mov	r4,r18
 508ad18:	d9c00015 	stw	r7,0(sp)
 508ad1c:	29400044 	addi	r5,r5,1
 508ad20:	508ab8c0 	call	508ab8c <_Balloc>
 508ad24:	89800417 	ldw	r6,16(r17)
 508ad28:	89400304 	addi	r5,r17,12
 508ad2c:	11000304 	addi	r4,r2,12
 508ad30:	31800084 	addi	r6,r6,2
 508ad34:	318d883a 	add	r6,r6,r6
 508ad38:	318d883a 	add	r6,r6,r6
 508ad3c:	1027883a 	mov	r19,r2
 508ad40:	508a7c00 	call	508a7c0 <memcpy>
 508ad44:	d9c00017 	ldw	r7,0(sp)
 508ad48:	88000a26 	beq	r17,zero,508ad74 <__multadd+0x118>
 508ad4c:	88c00117 	ldw	r3,4(r17)
 508ad50:	90801317 	ldw	r2,76(r18)
 508ad54:	18c7883a 	add	r3,r3,r3
 508ad58:	18c7883a 	add	r3,r3,r3
 508ad5c:	10c5883a 	add	r2,r2,r3
 508ad60:	10c00017 	ldw	r3,0(r2)
 508ad64:	88c00015 	stw	r3,0(r17)
 508ad68:	14400015 	stw	r17,0(r2)
 508ad6c:	9823883a 	mov	r17,r19
 508ad70:	003fd806 	br	508acd4 <__alt_data_end+0xfffbcad4>
 508ad74:	9823883a 	mov	r17,r19
 508ad78:	003fd606 	br	508acd4 <__alt_data_end+0xfffbcad4>

0508ad7c <__s2b>:
 508ad7c:	defff904 	addi	sp,sp,-28
 508ad80:	dc400115 	stw	r17,4(sp)
 508ad84:	dc000015 	stw	r16,0(sp)
 508ad88:	2023883a 	mov	r17,r4
 508ad8c:	2821883a 	mov	r16,r5
 508ad90:	39000204 	addi	r4,r7,8
 508ad94:	01400244 	movi	r5,9
 508ad98:	dcc00315 	stw	r19,12(sp)
 508ad9c:	dc800215 	stw	r18,8(sp)
 508ada0:	dfc00615 	stw	ra,24(sp)
 508ada4:	dd400515 	stw	r21,20(sp)
 508ada8:	dd000415 	stw	r20,16(sp)
 508adac:	3825883a 	mov	r18,r7
 508adb0:	3027883a 	mov	r19,r6
 508adb4:	50827800 	call	5082780 <__divsi3>
 508adb8:	00c00044 	movi	r3,1
 508adbc:	000b883a 	mov	r5,zero
 508adc0:	1880030e 	bge	r3,r2,508add0 <__s2b+0x54>
 508adc4:	18c7883a 	add	r3,r3,r3
 508adc8:	29400044 	addi	r5,r5,1
 508adcc:	18bffd16 	blt	r3,r2,508adc4 <__alt_data_end+0xfffbcbc4>
 508add0:	8809883a 	mov	r4,r17
 508add4:	508ab8c0 	call	508ab8c <_Balloc>
 508add8:	d8c00717 	ldw	r3,28(sp)
 508addc:	10c00515 	stw	r3,20(r2)
 508ade0:	00c00044 	movi	r3,1
 508ade4:	10c00415 	stw	r3,16(r2)
 508ade8:	00c00244 	movi	r3,9
 508adec:	1cc0210e 	bge	r3,r19,508ae74 <__s2b+0xf8>
 508adf0:	80eb883a 	add	r21,r16,r3
 508adf4:	a829883a 	mov	r20,r21
 508adf8:	84e1883a 	add	r16,r16,r19
 508adfc:	a1c00007 	ldb	r7,0(r20)
 508ae00:	01800284 	movi	r6,10
 508ae04:	a5000044 	addi	r20,r20,1
 508ae08:	100b883a 	mov	r5,r2
 508ae0c:	39fff404 	addi	r7,r7,-48
 508ae10:	8809883a 	mov	r4,r17
 508ae14:	508ac5c0 	call	508ac5c <__multadd>
 508ae18:	a43ff81e 	bne	r20,r16,508adfc <__alt_data_end+0xfffbcbfc>
 508ae1c:	ace1883a 	add	r16,r21,r19
 508ae20:	843ffe04 	addi	r16,r16,-8
 508ae24:	9c800a0e 	bge	r19,r18,508ae50 <__s2b+0xd4>
 508ae28:	94e5c83a 	sub	r18,r18,r19
 508ae2c:	84a5883a 	add	r18,r16,r18
 508ae30:	81c00007 	ldb	r7,0(r16)
 508ae34:	01800284 	movi	r6,10
 508ae38:	84000044 	addi	r16,r16,1
 508ae3c:	100b883a 	mov	r5,r2
 508ae40:	39fff404 	addi	r7,r7,-48
 508ae44:	8809883a 	mov	r4,r17
 508ae48:	508ac5c0 	call	508ac5c <__multadd>
 508ae4c:	84bff81e 	bne	r16,r18,508ae30 <__alt_data_end+0xfffbcc30>
 508ae50:	dfc00617 	ldw	ra,24(sp)
 508ae54:	dd400517 	ldw	r21,20(sp)
 508ae58:	dd000417 	ldw	r20,16(sp)
 508ae5c:	dcc00317 	ldw	r19,12(sp)
 508ae60:	dc800217 	ldw	r18,8(sp)
 508ae64:	dc400117 	ldw	r17,4(sp)
 508ae68:	dc000017 	ldw	r16,0(sp)
 508ae6c:	dec00704 	addi	sp,sp,28
 508ae70:	f800283a 	ret
 508ae74:	84000284 	addi	r16,r16,10
 508ae78:	1827883a 	mov	r19,r3
 508ae7c:	003fe906 	br	508ae24 <__alt_data_end+0xfffbcc24>

0508ae80 <__hi0bits>:
 508ae80:	20bfffec 	andhi	r2,r4,65535
 508ae84:	1000141e 	bne	r2,zero,508aed8 <__hi0bits+0x58>
 508ae88:	2008943a 	slli	r4,r4,16
 508ae8c:	00800404 	movi	r2,16
 508ae90:	20ffc02c 	andhi	r3,r4,65280
 508ae94:	1800021e 	bne	r3,zero,508aea0 <__hi0bits+0x20>
 508ae98:	2008923a 	slli	r4,r4,8
 508ae9c:	10800204 	addi	r2,r2,8
 508aea0:	20fc002c 	andhi	r3,r4,61440
 508aea4:	1800021e 	bne	r3,zero,508aeb0 <__hi0bits+0x30>
 508aea8:	2008913a 	slli	r4,r4,4
 508aeac:	10800104 	addi	r2,r2,4
 508aeb0:	20f0002c 	andhi	r3,r4,49152
 508aeb4:	1800031e 	bne	r3,zero,508aec4 <__hi0bits+0x44>
 508aeb8:	2109883a 	add	r4,r4,r4
 508aebc:	10800084 	addi	r2,r2,2
 508aec0:	2109883a 	add	r4,r4,r4
 508aec4:	20000316 	blt	r4,zero,508aed4 <__hi0bits+0x54>
 508aec8:	2110002c 	andhi	r4,r4,16384
 508aecc:	2000041e 	bne	r4,zero,508aee0 <__hi0bits+0x60>
 508aed0:	00800804 	movi	r2,32
 508aed4:	f800283a 	ret
 508aed8:	0005883a 	mov	r2,zero
 508aedc:	003fec06 	br	508ae90 <__alt_data_end+0xfffbcc90>
 508aee0:	10800044 	addi	r2,r2,1
 508aee4:	f800283a 	ret

0508aee8 <__lo0bits>:
 508aee8:	20c00017 	ldw	r3,0(r4)
 508aeec:	188001cc 	andi	r2,r3,7
 508aef0:	10000826 	beq	r2,zero,508af14 <__lo0bits+0x2c>
 508aef4:	1880004c 	andi	r2,r3,1
 508aef8:	1000211e 	bne	r2,zero,508af80 <__lo0bits+0x98>
 508aefc:	1880008c 	andi	r2,r3,2
 508af00:	1000211e 	bne	r2,zero,508af88 <__lo0bits+0xa0>
 508af04:	1806d0ba 	srli	r3,r3,2
 508af08:	00800084 	movi	r2,2
 508af0c:	20c00015 	stw	r3,0(r4)
 508af10:	f800283a 	ret
 508af14:	18bfffcc 	andi	r2,r3,65535
 508af18:	10001326 	beq	r2,zero,508af68 <__lo0bits+0x80>
 508af1c:	0005883a 	mov	r2,zero
 508af20:	19403fcc 	andi	r5,r3,255
 508af24:	2800021e 	bne	r5,zero,508af30 <__lo0bits+0x48>
 508af28:	1806d23a 	srli	r3,r3,8
 508af2c:	10800204 	addi	r2,r2,8
 508af30:	194003cc 	andi	r5,r3,15
 508af34:	2800021e 	bne	r5,zero,508af40 <__lo0bits+0x58>
 508af38:	1806d13a 	srli	r3,r3,4
 508af3c:	10800104 	addi	r2,r2,4
 508af40:	194000cc 	andi	r5,r3,3
 508af44:	2800021e 	bne	r5,zero,508af50 <__lo0bits+0x68>
 508af48:	1806d0ba 	srli	r3,r3,2
 508af4c:	10800084 	addi	r2,r2,2
 508af50:	1940004c 	andi	r5,r3,1
 508af54:	2800081e 	bne	r5,zero,508af78 <__lo0bits+0x90>
 508af58:	1806d07a 	srli	r3,r3,1
 508af5c:	1800051e 	bne	r3,zero,508af74 <__lo0bits+0x8c>
 508af60:	00800804 	movi	r2,32
 508af64:	f800283a 	ret
 508af68:	1806d43a 	srli	r3,r3,16
 508af6c:	00800404 	movi	r2,16
 508af70:	003feb06 	br	508af20 <__alt_data_end+0xfffbcd20>
 508af74:	10800044 	addi	r2,r2,1
 508af78:	20c00015 	stw	r3,0(r4)
 508af7c:	f800283a 	ret
 508af80:	0005883a 	mov	r2,zero
 508af84:	f800283a 	ret
 508af88:	1806d07a 	srli	r3,r3,1
 508af8c:	00800044 	movi	r2,1
 508af90:	20c00015 	stw	r3,0(r4)
 508af94:	f800283a 	ret

0508af98 <__i2b>:
 508af98:	defffd04 	addi	sp,sp,-12
 508af9c:	dc000015 	stw	r16,0(sp)
 508afa0:	04000044 	movi	r16,1
 508afa4:	dc400115 	stw	r17,4(sp)
 508afa8:	2823883a 	mov	r17,r5
 508afac:	800b883a 	mov	r5,r16
 508afb0:	dfc00215 	stw	ra,8(sp)
 508afb4:	508ab8c0 	call	508ab8c <_Balloc>
 508afb8:	14400515 	stw	r17,20(r2)
 508afbc:	14000415 	stw	r16,16(r2)
 508afc0:	dfc00217 	ldw	ra,8(sp)
 508afc4:	dc400117 	ldw	r17,4(sp)
 508afc8:	dc000017 	ldw	r16,0(sp)
 508afcc:	dec00304 	addi	sp,sp,12
 508afd0:	f800283a 	ret

0508afd4 <__multiply>:
 508afd4:	defffa04 	addi	sp,sp,-24
 508afd8:	dcc00315 	stw	r19,12(sp)
 508afdc:	dc800215 	stw	r18,8(sp)
 508afe0:	34c00417 	ldw	r19,16(r6)
 508afe4:	2c800417 	ldw	r18,16(r5)
 508afe8:	dd000415 	stw	r20,16(sp)
 508afec:	dc400115 	stw	r17,4(sp)
 508aff0:	dfc00515 	stw	ra,20(sp)
 508aff4:	dc000015 	stw	r16,0(sp)
 508aff8:	2829883a 	mov	r20,r5
 508affc:	3023883a 	mov	r17,r6
 508b000:	94c0050e 	bge	r18,r19,508b018 <__multiply+0x44>
 508b004:	9007883a 	mov	r3,r18
 508b008:	3029883a 	mov	r20,r6
 508b00c:	9825883a 	mov	r18,r19
 508b010:	2823883a 	mov	r17,r5
 508b014:	1827883a 	mov	r19,r3
 508b018:	a0800217 	ldw	r2,8(r20)
 508b01c:	94e1883a 	add	r16,r18,r19
 508b020:	a1400117 	ldw	r5,4(r20)
 508b024:	1400010e 	bge	r2,r16,508b02c <__multiply+0x58>
 508b028:	29400044 	addi	r5,r5,1
 508b02c:	508ab8c0 	call	508ab8c <_Balloc>
 508b030:	8415883a 	add	r10,r16,r16
 508b034:	12c00504 	addi	r11,r2,20
 508b038:	5295883a 	add	r10,r10,r10
 508b03c:	5a95883a 	add	r10,r11,r10
 508b040:	5807883a 	mov	r3,r11
 508b044:	5a80032e 	bgeu	r11,r10,508b054 <__multiply+0x80>
 508b048:	18000015 	stw	zero,0(r3)
 508b04c:	18c00104 	addi	r3,r3,4
 508b050:	1abffd36 	bltu	r3,r10,508b048 <__alt_data_end+0xfffbce48>
 508b054:	9ce7883a 	add	r19,r19,r19
 508b058:	94a5883a 	add	r18,r18,r18
 508b05c:	89800504 	addi	r6,r17,20
 508b060:	9ce7883a 	add	r19,r19,r19
 508b064:	a3400504 	addi	r13,r20,20
 508b068:	94a5883a 	add	r18,r18,r18
 508b06c:	34d9883a 	add	r12,r6,r19
 508b070:	6c93883a 	add	r9,r13,r18
 508b074:	3300422e 	bgeu	r6,r12,508b180 <__multiply+0x1ac>
 508b078:	37c00017 	ldw	ra,0(r6)
 508b07c:	fbffffcc 	andi	r15,ra,65535
 508b080:	78001b26 	beq	r15,zero,508b0f0 <__multiply+0x11c>
 508b084:	5811883a 	mov	r8,r11
 508b088:	681d883a 	mov	r14,r13
 508b08c:	000f883a 	mov	r7,zero
 508b090:	71000017 	ldw	r4,0(r14)
 508b094:	40c00017 	ldw	r3,0(r8)
 508b098:	73800104 	addi	r14,r14,4
 508b09c:	217fffcc 	andi	r5,r4,65535
 508b0a0:	2bcb383a 	mul	r5,r5,r15
 508b0a4:	2008d43a 	srli	r4,r4,16
 508b0a8:	1c7fffcc 	andi	r17,r3,65535
 508b0ac:	2c4b883a 	add	r5,r5,r17
 508b0b0:	29cb883a 	add	r5,r5,r7
 508b0b4:	23c9383a 	mul	r4,r4,r15
 508b0b8:	1806d43a 	srli	r3,r3,16
 508b0bc:	280ed43a 	srli	r7,r5,16
 508b0c0:	297fffcc 	andi	r5,r5,65535
 508b0c4:	20c7883a 	add	r3,r4,r3
 508b0c8:	19c7883a 	add	r3,r3,r7
 508b0cc:	1808943a 	slli	r4,r3,16
 508b0d0:	4023883a 	mov	r17,r8
 508b0d4:	180ed43a 	srli	r7,r3,16
 508b0d8:	214ab03a 	or	r5,r4,r5
 508b0dc:	41400015 	stw	r5,0(r8)
 508b0e0:	42000104 	addi	r8,r8,4
 508b0e4:	727fea36 	bltu	r14,r9,508b090 <__alt_data_end+0xfffbce90>
 508b0e8:	89c00115 	stw	r7,4(r17)
 508b0ec:	37c00017 	ldw	ra,0(r6)
 508b0f0:	f83ed43a 	srli	ra,ra,16
 508b0f4:	f8001f26 	beq	ra,zero,508b174 <__multiply+0x1a0>
 508b0f8:	58c00017 	ldw	r3,0(r11)
 508b0fc:	681d883a 	mov	r14,r13
 508b100:	581f883a 	mov	r15,r11
 508b104:	1811883a 	mov	r8,r3
 508b108:	5825883a 	mov	r18,r11
 508b10c:	000f883a 	mov	r7,zero
 508b110:	00000106 	br	508b118 <__multiply+0x144>
 508b114:	8825883a 	mov	r18,r17
 508b118:	7140000b 	ldhu	r5,0(r14)
 508b11c:	4010d43a 	srli	r8,r8,16
 508b120:	193fffcc 	andi	r4,r3,65535
 508b124:	2fcb383a 	mul	r5,r5,ra
 508b128:	7bc00104 	addi	r15,r15,4
 508b12c:	73800104 	addi	r14,r14,4
 508b130:	2a0b883a 	add	r5,r5,r8
 508b134:	29cb883a 	add	r5,r5,r7
 508b138:	2806943a 	slli	r3,r5,16
 508b13c:	94400104 	addi	r17,r18,4
 508b140:	280ad43a 	srli	r5,r5,16
 508b144:	1908b03a 	or	r4,r3,r4
 508b148:	793fff15 	stw	r4,-4(r15)
 508b14c:	70ffff17 	ldw	r3,-4(r14)
 508b150:	8a000017 	ldw	r8,0(r17)
 508b154:	1806d43a 	srli	r3,r3,16
 508b158:	413fffcc 	andi	r4,r8,65535
 508b15c:	1fc7383a 	mul	r3,r3,ra
 508b160:	1907883a 	add	r3,r3,r4
 508b164:	1947883a 	add	r3,r3,r5
 508b168:	180ed43a 	srli	r7,r3,16
 508b16c:	727fe936 	bltu	r14,r9,508b114 <__alt_data_end+0xfffbcf14>
 508b170:	90c00115 	stw	r3,4(r18)
 508b174:	31800104 	addi	r6,r6,4
 508b178:	5ac00104 	addi	r11,r11,4
 508b17c:	333fbe36 	bltu	r6,r12,508b078 <__alt_data_end+0xfffbce78>
 508b180:	0400090e 	bge	zero,r16,508b1a8 <__multiply+0x1d4>
 508b184:	50ffff17 	ldw	r3,-4(r10)
 508b188:	52bfff04 	addi	r10,r10,-4
 508b18c:	18000326 	beq	r3,zero,508b19c <__multiply+0x1c8>
 508b190:	00000506 	br	508b1a8 <__multiply+0x1d4>
 508b194:	50c00017 	ldw	r3,0(r10)
 508b198:	1800031e 	bne	r3,zero,508b1a8 <__multiply+0x1d4>
 508b19c:	843fffc4 	addi	r16,r16,-1
 508b1a0:	52bfff04 	addi	r10,r10,-4
 508b1a4:	803ffb1e 	bne	r16,zero,508b194 <__alt_data_end+0xfffbcf94>
 508b1a8:	14000415 	stw	r16,16(r2)
 508b1ac:	dfc00517 	ldw	ra,20(sp)
 508b1b0:	dd000417 	ldw	r20,16(sp)
 508b1b4:	dcc00317 	ldw	r19,12(sp)
 508b1b8:	dc800217 	ldw	r18,8(sp)
 508b1bc:	dc400117 	ldw	r17,4(sp)
 508b1c0:	dc000017 	ldw	r16,0(sp)
 508b1c4:	dec00604 	addi	sp,sp,24
 508b1c8:	f800283a 	ret

0508b1cc <__pow5mult>:
 508b1cc:	defffa04 	addi	sp,sp,-24
 508b1d0:	dcc00315 	stw	r19,12(sp)
 508b1d4:	dc000015 	stw	r16,0(sp)
 508b1d8:	dfc00515 	stw	ra,20(sp)
 508b1dc:	dd000415 	stw	r20,16(sp)
 508b1e0:	dc800215 	stw	r18,8(sp)
 508b1e4:	dc400115 	stw	r17,4(sp)
 508b1e8:	308000cc 	andi	r2,r6,3
 508b1ec:	3021883a 	mov	r16,r6
 508b1f0:	2027883a 	mov	r19,r4
 508b1f4:	10002f1e 	bne	r2,zero,508b2b4 <__pow5mult+0xe8>
 508b1f8:	2825883a 	mov	r18,r5
 508b1fc:	8021d0ba 	srai	r16,r16,2
 508b200:	80001a26 	beq	r16,zero,508b26c <__pow5mult+0xa0>
 508b204:	9c401217 	ldw	r17,72(r19)
 508b208:	8800061e 	bne	r17,zero,508b224 <__pow5mult+0x58>
 508b20c:	00003406 	br	508b2e0 <__pow5mult+0x114>
 508b210:	8021d07a 	srai	r16,r16,1
 508b214:	80001526 	beq	r16,zero,508b26c <__pow5mult+0xa0>
 508b218:	88800017 	ldw	r2,0(r17)
 508b21c:	10001c26 	beq	r2,zero,508b290 <__pow5mult+0xc4>
 508b220:	1023883a 	mov	r17,r2
 508b224:	8080004c 	andi	r2,r16,1
 508b228:	103ff926 	beq	r2,zero,508b210 <__alt_data_end+0xfffbd010>
 508b22c:	880d883a 	mov	r6,r17
 508b230:	900b883a 	mov	r5,r18
 508b234:	9809883a 	mov	r4,r19
 508b238:	508afd40 	call	508afd4 <__multiply>
 508b23c:	90001b26 	beq	r18,zero,508b2ac <__pow5mult+0xe0>
 508b240:	91000117 	ldw	r4,4(r18)
 508b244:	98c01317 	ldw	r3,76(r19)
 508b248:	8021d07a 	srai	r16,r16,1
 508b24c:	2109883a 	add	r4,r4,r4
 508b250:	2109883a 	add	r4,r4,r4
 508b254:	1907883a 	add	r3,r3,r4
 508b258:	19000017 	ldw	r4,0(r3)
 508b25c:	91000015 	stw	r4,0(r18)
 508b260:	1c800015 	stw	r18,0(r3)
 508b264:	1025883a 	mov	r18,r2
 508b268:	803feb1e 	bne	r16,zero,508b218 <__alt_data_end+0xfffbd018>
 508b26c:	9005883a 	mov	r2,r18
 508b270:	dfc00517 	ldw	ra,20(sp)
 508b274:	dd000417 	ldw	r20,16(sp)
 508b278:	dcc00317 	ldw	r19,12(sp)
 508b27c:	dc800217 	ldw	r18,8(sp)
 508b280:	dc400117 	ldw	r17,4(sp)
 508b284:	dc000017 	ldw	r16,0(sp)
 508b288:	dec00604 	addi	sp,sp,24
 508b28c:	f800283a 	ret
 508b290:	880d883a 	mov	r6,r17
 508b294:	880b883a 	mov	r5,r17
 508b298:	9809883a 	mov	r4,r19
 508b29c:	508afd40 	call	508afd4 <__multiply>
 508b2a0:	88800015 	stw	r2,0(r17)
 508b2a4:	10000015 	stw	zero,0(r2)
 508b2a8:	003fdd06 	br	508b220 <__alt_data_end+0xfffbd020>
 508b2ac:	1025883a 	mov	r18,r2
 508b2b0:	003fd706 	br	508b210 <__alt_data_end+0xfffbd010>
 508b2b4:	10bfffc4 	addi	r2,r2,-1
 508b2b8:	1085883a 	add	r2,r2,r2
 508b2bc:	00c14274 	movhi	r3,1289
 508b2c0:	18d7cd04 	addi	r3,r3,24372
 508b2c4:	1085883a 	add	r2,r2,r2
 508b2c8:	1885883a 	add	r2,r3,r2
 508b2cc:	11800017 	ldw	r6,0(r2)
 508b2d0:	000f883a 	mov	r7,zero
 508b2d4:	508ac5c0 	call	508ac5c <__multadd>
 508b2d8:	1025883a 	mov	r18,r2
 508b2dc:	003fc706 	br	508b1fc <__alt_data_end+0xfffbcffc>
 508b2e0:	05000044 	movi	r20,1
 508b2e4:	a00b883a 	mov	r5,r20
 508b2e8:	9809883a 	mov	r4,r19
 508b2ec:	508ab8c0 	call	508ab8c <_Balloc>
 508b2f0:	1023883a 	mov	r17,r2
 508b2f4:	00809c44 	movi	r2,625
 508b2f8:	88800515 	stw	r2,20(r17)
 508b2fc:	8d000415 	stw	r20,16(r17)
 508b300:	9c401215 	stw	r17,72(r19)
 508b304:	88000015 	stw	zero,0(r17)
 508b308:	003fc606 	br	508b224 <__alt_data_end+0xfffbd024>

0508b30c <__lshift>:
 508b30c:	defff904 	addi	sp,sp,-28
 508b310:	dd400515 	stw	r21,20(sp)
 508b314:	dcc00315 	stw	r19,12(sp)
 508b318:	302bd17a 	srai	r21,r6,5
 508b31c:	2cc00417 	ldw	r19,16(r5)
 508b320:	28800217 	ldw	r2,8(r5)
 508b324:	dd000415 	stw	r20,16(sp)
 508b328:	ace7883a 	add	r19,r21,r19
 508b32c:	dc800215 	stw	r18,8(sp)
 508b330:	dc400115 	stw	r17,4(sp)
 508b334:	dc000015 	stw	r16,0(sp)
 508b338:	dfc00615 	stw	ra,24(sp)
 508b33c:	9c000044 	addi	r16,r19,1
 508b340:	2823883a 	mov	r17,r5
 508b344:	3029883a 	mov	r20,r6
 508b348:	2025883a 	mov	r18,r4
 508b34c:	29400117 	ldw	r5,4(r5)
 508b350:	1400030e 	bge	r2,r16,508b360 <__lshift+0x54>
 508b354:	1085883a 	add	r2,r2,r2
 508b358:	29400044 	addi	r5,r5,1
 508b35c:	143ffd16 	blt	r2,r16,508b354 <__alt_data_end+0xfffbd154>
 508b360:	9009883a 	mov	r4,r18
 508b364:	508ab8c0 	call	508ab8c <_Balloc>
 508b368:	10c00504 	addi	r3,r2,20
 508b36c:	0540070e 	bge	zero,r21,508b38c <__lshift+0x80>
 508b370:	ad6b883a 	add	r21,r21,r21
 508b374:	ad6b883a 	add	r21,r21,r21
 508b378:	1809883a 	mov	r4,r3
 508b37c:	1d47883a 	add	r3,r3,r21
 508b380:	20000015 	stw	zero,0(r4)
 508b384:	21000104 	addi	r4,r4,4
 508b388:	193ffd1e 	bne	r3,r4,508b380 <__alt_data_end+0xfffbd180>
 508b38c:	8a000417 	ldw	r8,16(r17)
 508b390:	89000504 	addi	r4,r17,20
 508b394:	a18007cc 	andi	r6,r20,31
 508b398:	4211883a 	add	r8,r8,r8
 508b39c:	4211883a 	add	r8,r8,r8
 508b3a0:	2211883a 	add	r8,r4,r8
 508b3a4:	30002326 	beq	r6,zero,508b434 <__lshift+0x128>
 508b3a8:	02400804 	movi	r9,32
 508b3ac:	4993c83a 	sub	r9,r9,r6
 508b3b0:	000b883a 	mov	r5,zero
 508b3b4:	21c00017 	ldw	r7,0(r4)
 508b3b8:	1815883a 	mov	r10,r3
 508b3bc:	18c00104 	addi	r3,r3,4
 508b3c0:	398e983a 	sll	r7,r7,r6
 508b3c4:	21000104 	addi	r4,r4,4
 508b3c8:	394ab03a 	or	r5,r7,r5
 508b3cc:	197fff15 	stw	r5,-4(r3)
 508b3d0:	217fff17 	ldw	r5,-4(r4)
 508b3d4:	2a4ad83a 	srl	r5,r5,r9
 508b3d8:	223ff636 	bltu	r4,r8,508b3b4 <__alt_data_end+0xfffbd1b4>
 508b3dc:	51400115 	stw	r5,4(r10)
 508b3e0:	28001a1e 	bne	r5,zero,508b44c <__lshift+0x140>
 508b3e4:	843fffc4 	addi	r16,r16,-1
 508b3e8:	14000415 	stw	r16,16(r2)
 508b3ec:	88000826 	beq	r17,zero,508b410 <__lshift+0x104>
 508b3f0:	89000117 	ldw	r4,4(r17)
 508b3f4:	90c01317 	ldw	r3,76(r18)
 508b3f8:	2109883a 	add	r4,r4,r4
 508b3fc:	2109883a 	add	r4,r4,r4
 508b400:	1907883a 	add	r3,r3,r4
 508b404:	19000017 	ldw	r4,0(r3)
 508b408:	89000015 	stw	r4,0(r17)
 508b40c:	1c400015 	stw	r17,0(r3)
 508b410:	dfc00617 	ldw	ra,24(sp)
 508b414:	dd400517 	ldw	r21,20(sp)
 508b418:	dd000417 	ldw	r20,16(sp)
 508b41c:	dcc00317 	ldw	r19,12(sp)
 508b420:	dc800217 	ldw	r18,8(sp)
 508b424:	dc400117 	ldw	r17,4(sp)
 508b428:	dc000017 	ldw	r16,0(sp)
 508b42c:	dec00704 	addi	sp,sp,28
 508b430:	f800283a 	ret
 508b434:	21400017 	ldw	r5,0(r4)
 508b438:	18c00104 	addi	r3,r3,4
 508b43c:	21000104 	addi	r4,r4,4
 508b440:	197fff15 	stw	r5,-4(r3)
 508b444:	223ffb36 	bltu	r4,r8,508b434 <__alt_data_end+0xfffbd234>
 508b448:	003fe606 	br	508b3e4 <__alt_data_end+0xfffbd1e4>
 508b44c:	9c000084 	addi	r16,r19,2
 508b450:	003fe406 	br	508b3e4 <__alt_data_end+0xfffbd1e4>

0508b454 <__mcmp>:
 508b454:	20800417 	ldw	r2,16(r4)
 508b458:	28c00417 	ldw	r3,16(r5)
 508b45c:	10c5c83a 	sub	r2,r2,r3
 508b460:	1000111e 	bne	r2,zero,508b4a8 <__mcmp+0x54>
 508b464:	18c7883a 	add	r3,r3,r3
 508b468:	18c7883a 	add	r3,r3,r3
 508b46c:	21000504 	addi	r4,r4,20
 508b470:	29400504 	addi	r5,r5,20
 508b474:	20c5883a 	add	r2,r4,r3
 508b478:	28cb883a 	add	r5,r5,r3
 508b47c:	00000106 	br	508b484 <__mcmp+0x30>
 508b480:	20800a2e 	bgeu	r4,r2,508b4ac <__mcmp+0x58>
 508b484:	10bfff04 	addi	r2,r2,-4
 508b488:	297fff04 	addi	r5,r5,-4
 508b48c:	11800017 	ldw	r6,0(r2)
 508b490:	28c00017 	ldw	r3,0(r5)
 508b494:	30fffa26 	beq	r6,r3,508b480 <__alt_data_end+0xfffbd280>
 508b498:	30c00236 	bltu	r6,r3,508b4a4 <__mcmp+0x50>
 508b49c:	00800044 	movi	r2,1
 508b4a0:	f800283a 	ret
 508b4a4:	00bfffc4 	movi	r2,-1
 508b4a8:	f800283a 	ret
 508b4ac:	0005883a 	mov	r2,zero
 508b4b0:	f800283a 	ret

0508b4b4 <__mdiff>:
 508b4b4:	28c00417 	ldw	r3,16(r5)
 508b4b8:	30800417 	ldw	r2,16(r6)
 508b4bc:	defffa04 	addi	sp,sp,-24
 508b4c0:	dcc00315 	stw	r19,12(sp)
 508b4c4:	dc800215 	stw	r18,8(sp)
 508b4c8:	dfc00515 	stw	ra,20(sp)
 508b4cc:	dd000415 	stw	r20,16(sp)
 508b4d0:	dc400115 	stw	r17,4(sp)
 508b4d4:	dc000015 	stw	r16,0(sp)
 508b4d8:	1887c83a 	sub	r3,r3,r2
 508b4dc:	2825883a 	mov	r18,r5
 508b4e0:	3027883a 	mov	r19,r6
 508b4e4:	1800141e 	bne	r3,zero,508b538 <__mdiff+0x84>
 508b4e8:	1085883a 	add	r2,r2,r2
 508b4ec:	1085883a 	add	r2,r2,r2
 508b4f0:	2a000504 	addi	r8,r5,20
 508b4f4:	34000504 	addi	r16,r6,20
 508b4f8:	4087883a 	add	r3,r8,r2
 508b4fc:	8085883a 	add	r2,r16,r2
 508b500:	00000106 	br	508b508 <__mdiff+0x54>
 508b504:	40c0592e 	bgeu	r8,r3,508b66c <__mdiff+0x1b8>
 508b508:	18ffff04 	addi	r3,r3,-4
 508b50c:	10bfff04 	addi	r2,r2,-4
 508b510:	19c00017 	ldw	r7,0(r3)
 508b514:	11400017 	ldw	r5,0(r2)
 508b518:	397ffa26 	beq	r7,r5,508b504 <__alt_data_end+0xfffbd304>
 508b51c:	3940592e 	bgeu	r7,r5,508b684 <__mdiff+0x1d0>
 508b520:	9005883a 	mov	r2,r18
 508b524:	4023883a 	mov	r17,r8
 508b528:	9825883a 	mov	r18,r19
 508b52c:	05000044 	movi	r20,1
 508b530:	1027883a 	mov	r19,r2
 508b534:	00000406 	br	508b548 <__mdiff+0x94>
 508b538:	18005616 	blt	r3,zero,508b694 <__mdiff+0x1e0>
 508b53c:	34400504 	addi	r17,r6,20
 508b540:	2c000504 	addi	r16,r5,20
 508b544:	0029883a 	mov	r20,zero
 508b548:	91400117 	ldw	r5,4(r18)
 508b54c:	508ab8c0 	call	508ab8c <_Balloc>
 508b550:	92400417 	ldw	r9,16(r18)
 508b554:	9b000417 	ldw	r12,16(r19)
 508b558:	12c00504 	addi	r11,r2,20
 508b55c:	4a51883a 	add	r8,r9,r9
 508b560:	6319883a 	add	r12,r12,r12
 508b564:	4211883a 	add	r8,r8,r8
 508b568:	6319883a 	add	r12,r12,r12
 508b56c:	15000315 	stw	r20,12(r2)
 508b570:	8211883a 	add	r8,r16,r8
 508b574:	8b19883a 	add	r12,r17,r12
 508b578:	0007883a 	mov	r3,zero
 508b57c:	81400017 	ldw	r5,0(r16)
 508b580:	89c00017 	ldw	r7,0(r17)
 508b584:	59800104 	addi	r6,r11,4
 508b588:	293fffcc 	andi	r4,r5,65535
 508b58c:	20c7883a 	add	r3,r4,r3
 508b590:	393fffcc 	andi	r4,r7,65535
 508b594:	1909c83a 	sub	r4,r3,r4
 508b598:	280ad43a 	srli	r5,r5,16
 508b59c:	380ed43a 	srli	r7,r7,16
 508b5a0:	2007d43a 	srai	r3,r4,16
 508b5a4:	213fffcc 	andi	r4,r4,65535
 508b5a8:	29cbc83a 	sub	r5,r5,r7
 508b5ac:	28c7883a 	add	r3,r5,r3
 508b5b0:	180a943a 	slli	r5,r3,16
 508b5b4:	8c400104 	addi	r17,r17,4
 508b5b8:	84000104 	addi	r16,r16,4
 508b5bc:	2908b03a 	or	r4,r5,r4
 508b5c0:	59000015 	stw	r4,0(r11)
 508b5c4:	1807d43a 	srai	r3,r3,16
 508b5c8:	3015883a 	mov	r10,r6
 508b5cc:	3017883a 	mov	r11,r6
 508b5d0:	8b3fea36 	bltu	r17,r12,508b57c <__alt_data_end+0xfffbd37c>
 508b5d4:	8200162e 	bgeu	r16,r8,508b630 <__mdiff+0x17c>
 508b5d8:	8017883a 	mov	r11,r16
 508b5dc:	59400017 	ldw	r5,0(r11)
 508b5e0:	31800104 	addi	r6,r6,4
 508b5e4:	5ac00104 	addi	r11,r11,4
 508b5e8:	293fffcc 	andi	r4,r5,65535
 508b5ec:	20c7883a 	add	r3,r4,r3
 508b5f0:	280ed43a 	srli	r7,r5,16
 508b5f4:	180bd43a 	srai	r5,r3,16
 508b5f8:	193fffcc 	andi	r4,r3,65535
 508b5fc:	3947883a 	add	r3,r7,r5
 508b600:	180a943a 	slli	r5,r3,16
 508b604:	1807d43a 	srai	r3,r3,16
 508b608:	2908b03a 	or	r4,r5,r4
 508b60c:	313fff15 	stw	r4,-4(r6)
 508b610:	5a3ff236 	bltu	r11,r8,508b5dc <__alt_data_end+0xfffbd3dc>
 508b614:	0406303a 	nor	r3,zero,r16
 508b618:	1a07883a 	add	r3,r3,r8
 508b61c:	1806d0ba 	srli	r3,r3,2
 508b620:	18c00044 	addi	r3,r3,1
 508b624:	18c7883a 	add	r3,r3,r3
 508b628:	18c7883a 	add	r3,r3,r3
 508b62c:	50d5883a 	add	r10,r10,r3
 508b630:	50ffff04 	addi	r3,r10,-4
 508b634:	2000041e 	bne	r4,zero,508b648 <__mdiff+0x194>
 508b638:	18ffff04 	addi	r3,r3,-4
 508b63c:	19000017 	ldw	r4,0(r3)
 508b640:	4a7fffc4 	addi	r9,r9,-1
 508b644:	203ffc26 	beq	r4,zero,508b638 <__alt_data_end+0xfffbd438>
 508b648:	12400415 	stw	r9,16(r2)
 508b64c:	dfc00517 	ldw	ra,20(sp)
 508b650:	dd000417 	ldw	r20,16(sp)
 508b654:	dcc00317 	ldw	r19,12(sp)
 508b658:	dc800217 	ldw	r18,8(sp)
 508b65c:	dc400117 	ldw	r17,4(sp)
 508b660:	dc000017 	ldw	r16,0(sp)
 508b664:	dec00604 	addi	sp,sp,24
 508b668:	f800283a 	ret
 508b66c:	000b883a 	mov	r5,zero
 508b670:	508ab8c0 	call	508ab8c <_Balloc>
 508b674:	00c00044 	movi	r3,1
 508b678:	10c00415 	stw	r3,16(r2)
 508b67c:	10000515 	stw	zero,20(r2)
 508b680:	003ff206 	br	508b64c <__alt_data_end+0xfffbd44c>
 508b684:	8023883a 	mov	r17,r16
 508b688:	0029883a 	mov	r20,zero
 508b68c:	4021883a 	mov	r16,r8
 508b690:	003fad06 	br	508b548 <__alt_data_end+0xfffbd348>
 508b694:	9005883a 	mov	r2,r18
 508b698:	94400504 	addi	r17,r18,20
 508b69c:	9c000504 	addi	r16,r19,20
 508b6a0:	9825883a 	mov	r18,r19
 508b6a4:	05000044 	movi	r20,1
 508b6a8:	1027883a 	mov	r19,r2
 508b6ac:	003fa606 	br	508b548 <__alt_data_end+0xfffbd348>

0508b6b0 <__ulp>:
 508b6b0:	295ffc2c 	andhi	r5,r5,32752
 508b6b4:	00bf3034 	movhi	r2,64704
 508b6b8:	2887883a 	add	r3,r5,r2
 508b6bc:	00c0020e 	bge	zero,r3,508b6c8 <__ulp+0x18>
 508b6c0:	0005883a 	mov	r2,zero
 508b6c4:	f800283a 	ret
 508b6c8:	00c7c83a 	sub	r3,zero,r3
 508b6cc:	1807d53a 	srai	r3,r3,20
 508b6d0:	008004c4 	movi	r2,19
 508b6d4:	10c00b0e 	bge	r2,r3,508b704 <__ulp+0x54>
 508b6d8:	18bffb04 	addi	r2,r3,-20
 508b6dc:	01000784 	movi	r4,30
 508b6e0:	0007883a 	mov	r3,zero
 508b6e4:	20800516 	blt	r4,r2,508b6fc <__ulp+0x4c>
 508b6e8:	010007c4 	movi	r4,31
 508b6ec:	2089c83a 	sub	r4,r4,r2
 508b6f0:	00800044 	movi	r2,1
 508b6f4:	1104983a 	sll	r2,r2,r4
 508b6f8:	f800283a 	ret
 508b6fc:	00800044 	movi	r2,1
 508b700:	f800283a 	ret
 508b704:	01400234 	movhi	r5,8
 508b708:	28c7d83a 	sra	r3,r5,r3
 508b70c:	0005883a 	mov	r2,zero
 508b710:	f800283a 	ret

0508b714 <__b2d>:
 508b714:	defffa04 	addi	sp,sp,-24
 508b718:	dc000015 	stw	r16,0(sp)
 508b71c:	24000417 	ldw	r16,16(r4)
 508b720:	dc400115 	stw	r17,4(sp)
 508b724:	24400504 	addi	r17,r4,20
 508b728:	8421883a 	add	r16,r16,r16
 508b72c:	8421883a 	add	r16,r16,r16
 508b730:	8c21883a 	add	r16,r17,r16
 508b734:	dc800215 	stw	r18,8(sp)
 508b738:	84bfff17 	ldw	r18,-4(r16)
 508b73c:	dd000415 	stw	r20,16(sp)
 508b740:	dcc00315 	stw	r19,12(sp)
 508b744:	9009883a 	mov	r4,r18
 508b748:	2829883a 	mov	r20,r5
 508b74c:	dfc00515 	stw	ra,20(sp)
 508b750:	508ae800 	call	508ae80 <__hi0bits>
 508b754:	00c00804 	movi	r3,32
 508b758:	1889c83a 	sub	r4,r3,r2
 508b75c:	a1000015 	stw	r4,0(r20)
 508b760:	01000284 	movi	r4,10
 508b764:	84ffff04 	addi	r19,r16,-4
 508b768:	20801216 	blt	r4,r2,508b7b4 <__b2d+0xa0>
 508b76c:	018002c4 	movi	r6,11
 508b770:	308dc83a 	sub	r6,r6,r2
 508b774:	9186d83a 	srl	r3,r18,r6
 508b778:	18cffc34 	orhi	r3,r3,16368
 508b77c:	8cc0212e 	bgeu	r17,r19,508b804 <__b2d+0xf0>
 508b780:	813ffe17 	ldw	r4,-8(r16)
 508b784:	218cd83a 	srl	r6,r4,r6
 508b788:	10800544 	addi	r2,r2,21
 508b78c:	9084983a 	sll	r2,r18,r2
 508b790:	1184b03a 	or	r2,r2,r6
 508b794:	dfc00517 	ldw	ra,20(sp)
 508b798:	dd000417 	ldw	r20,16(sp)
 508b79c:	dcc00317 	ldw	r19,12(sp)
 508b7a0:	dc800217 	ldw	r18,8(sp)
 508b7a4:	dc400117 	ldw	r17,4(sp)
 508b7a8:	dc000017 	ldw	r16,0(sp)
 508b7ac:	dec00604 	addi	sp,sp,24
 508b7b0:	f800283a 	ret
 508b7b4:	8cc00f2e 	bgeu	r17,r19,508b7f4 <__b2d+0xe0>
 508b7b8:	117ffd44 	addi	r5,r2,-11
 508b7bc:	80bffe17 	ldw	r2,-8(r16)
 508b7c0:	28000e26 	beq	r5,zero,508b7fc <__b2d+0xe8>
 508b7c4:	1949c83a 	sub	r4,r3,r5
 508b7c8:	9164983a 	sll	r18,r18,r5
 508b7cc:	1106d83a 	srl	r3,r2,r4
 508b7d0:	81bffe04 	addi	r6,r16,-8
 508b7d4:	948ffc34 	orhi	r18,r18,16368
 508b7d8:	90c6b03a 	or	r3,r18,r3
 508b7dc:	89800e2e 	bgeu	r17,r6,508b818 <__b2d+0x104>
 508b7e0:	81bffd17 	ldw	r6,-12(r16)
 508b7e4:	1144983a 	sll	r2,r2,r5
 508b7e8:	310ad83a 	srl	r5,r6,r4
 508b7ec:	2884b03a 	or	r2,r5,r2
 508b7f0:	003fe806 	br	508b794 <__alt_data_end+0xfffbd594>
 508b7f4:	10bffd44 	addi	r2,r2,-11
 508b7f8:	1000041e 	bne	r2,zero,508b80c <__b2d+0xf8>
 508b7fc:	90cffc34 	orhi	r3,r18,16368
 508b800:	003fe406 	br	508b794 <__alt_data_end+0xfffbd594>
 508b804:	000d883a 	mov	r6,zero
 508b808:	003fdf06 	br	508b788 <__alt_data_end+0xfffbd588>
 508b80c:	90a4983a 	sll	r18,r18,r2
 508b810:	0005883a 	mov	r2,zero
 508b814:	003ff906 	br	508b7fc <__alt_data_end+0xfffbd5fc>
 508b818:	1144983a 	sll	r2,r2,r5
 508b81c:	003fdd06 	br	508b794 <__alt_data_end+0xfffbd594>

0508b820 <__d2b>:
 508b820:	defff804 	addi	sp,sp,-32
 508b824:	dc000215 	stw	r16,8(sp)
 508b828:	3021883a 	mov	r16,r6
 508b82c:	dc400315 	stw	r17,12(sp)
 508b830:	8022907a 	slli	r17,r16,1
 508b834:	dd000615 	stw	r20,24(sp)
 508b838:	2829883a 	mov	r20,r5
 508b83c:	01400044 	movi	r5,1
 508b840:	dcc00515 	stw	r19,20(sp)
 508b844:	dc800415 	stw	r18,16(sp)
 508b848:	dfc00715 	stw	ra,28(sp)
 508b84c:	3825883a 	mov	r18,r7
 508b850:	8822d57a 	srli	r17,r17,21
 508b854:	508ab8c0 	call	508ab8c <_Balloc>
 508b858:	1027883a 	mov	r19,r2
 508b85c:	00800434 	movhi	r2,16
 508b860:	10bfffc4 	addi	r2,r2,-1
 508b864:	808c703a 	and	r6,r16,r2
 508b868:	88000126 	beq	r17,zero,508b870 <__d2b+0x50>
 508b86c:	31800434 	orhi	r6,r6,16
 508b870:	d9800015 	stw	r6,0(sp)
 508b874:	a0002426 	beq	r20,zero,508b908 <__d2b+0xe8>
 508b878:	d9000104 	addi	r4,sp,4
 508b87c:	dd000115 	stw	r20,4(sp)
 508b880:	508aee80 	call	508aee8 <__lo0bits>
 508b884:	d8c00017 	ldw	r3,0(sp)
 508b888:	10002f1e 	bne	r2,zero,508b948 <__d2b+0x128>
 508b88c:	d9000117 	ldw	r4,4(sp)
 508b890:	99000515 	stw	r4,20(r19)
 508b894:	1821003a 	cmpeq	r16,r3,zero
 508b898:	01000084 	movi	r4,2
 508b89c:	2421c83a 	sub	r16,r4,r16
 508b8a0:	98c00615 	stw	r3,24(r19)
 508b8a4:	9c000415 	stw	r16,16(r19)
 508b8a8:	88001f1e 	bne	r17,zero,508b928 <__d2b+0x108>
 508b8ac:	10bef384 	addi	r2,r2,-1074
 508b8b0:	90800015 	stw	r2,0(r18)
 508b8b4:	00900034 	movhi	r2,16384
 508b8b8:	10bfffc4 	addi	r2,r2,-1
 508b8bc:	8085883a 	add	r2,r16,r2
 508b8c0:	1085883a 	add	r2,r2,r2
 508b8c4:	1085883a 	add	r2,r2,r2
 508b8c8:	9885883a 	add	r2,r19,r2
 508b8cc:	11000517 	ldw	r4,20(r2)
 508b8d0:	8020917a 	slli	r16,r16,5
 508b8d4:	508ae800 	call	508ae80 <__hi0bits>
 508b8d8:	d8c00817 	ldw	r3,32(sp)
 508b8dc:	8085c83a 	sub	r2,r16,r2
 508b8e0:	18800015 	stw	r2,0(r3)
 508b8e4:	9805883a 	mov	r2,r19
 508b8e8:	dfc00717 	ldw	ra,28(sp)
 508b8ec:	dd000617 	ldw	r20,24(sp)
 508b8f0:	dcc00517 	ldw	r19,20(sp)
 508b8f4:	dc800417 	ldw	r18,16(sp)
 508b8f8:	dc400317 	ldw	r17,12(sp)
 508b8fc:	dc000217 	ldw	r16,8(sp)
 508b900:	dec00804 	addi	sp,sp,32
 508b904:	f800283a 	ret
 508b908:	d809883a 	mov	r4,sp
 508b90c:	508aee80 	call	508aee8 <__lo0bits>
 508b910:	d8c00017 	ldw	r3,0(sp)
 508b914:	04000044 	movi	r16,1
 508b918:	9c000415 	stw	r16,16(r19)
 508b91c:	98c00515 	stw	r3,20(r19)
 508b920:	10800804 	addi	r2,r2,32
 508b924:	883fe126 	beq	r17,zero,508b8ac <__alt_data_end+0xfffbd6ac>
 508b928:	00c00d44 	movi	r3,53
 508b92c:	8c7ef344 	addi	r17,r17,-1075
 508b930:	88a3883a 	add	r17,r17,r2
 508b934:	1885c83a 	sub	r2,r3,r2
 508b938:	d8c00817 	ldw	r3,32(sp)
 508b93c:	94400015 	stw	r17,0(r18)
 508b940:	18800015 	stw	r2,0(r3)
 508b944:	003fe706 	br	508b8e4 <__alt_data_end+0xfffbd6e4>
 508b948:	01000804 	movi	r4,32
 508b94c:	2089c83a 	sub	r4,r4,r2
 508b950:	1908983a 	sll	r4,r3,r4
 508b954:	d9400117 	ldw	r5,4(sp)
 508b958:	1886d83a 	srl	r3,r3,r2
 508b95c:	2148b03a 	or	r4,r4,r5
 508b960:	99000515 	stw	r4,20(r19)
 508b964:	d8c00015 	stw	r3,0(sp)
 508b968:	003fca06 	br	508b894 <__alt_data_end+0xfffbd694>

0508b96c <__ratio>:
 508b96c:	defff904 	addi	sp,sp,-28
 508b970:	dc400315 	stw	r17,12(sp)
 508b974:	2823883a 	mov	r17,r5
 508b978:	d9400104 	addi	r5,sp,4
 508b97c:	dfc00615 	stw	ra,24(sp)
 508b980:	dcc00515 	stw	r19,20(sp)
 508b984:	dc800415 	stw	r18,16(sp)
 508b988:	2027883a 	mov	r19,r4
 508b98c:	dc000215 	stw	r16,8(sp)
 508b990:	508b7140 	call	508b714 <__b2d>
 508b994:	d80b883a 	mov	r5,sp
 508b998:	8809883a 	mov	r4,r17
 508b99c:	1025883a 	mov	r18,r2
 508b9a0:	1821883a 	mov	r16,r3
 508b9a4:	508b7140 	call	508b714 <__b2d>
 508b9a8:	8a000417 	ldw	r8,16(r17)
 508b9ac:	99000417 	ldw	r4,16(r19)
 508b9b0:	d9400117 	ldw	r5,4(sp)
 508b9b4:	2209c83a 	sub	r4,r4,r8
 508b9b8:	2010917a 	slli	r8,r4,5
 508b9bc:	d9000017 	ldw	r4,0(sp)
 508b9c0:	2909c83a 	sub	r4,r5,r4
 508b9c4:	4109883a 	add	r4,r8,r4
 508b9c8:	01000e0e 	bge	zero,r4,508ba04 <__ratio+0x98>
 508b9cc:	2008953a 	slli	r4,r4,20
 508b9d0:	2421883a 	add	r16,r4,r16
 508b9d4:	100d883a 	mov	r6,r2
 508b9d8:	180f883a 	mov	r7,r3
 508b9dc:	9009883a 	mov	r4,r18
 508b9e0:	800b883a 	mov	r5,r16
 508b9e4:	5090ab00 	call	5090ab0 <__divdf3>
 508b9e8:	dfc00617 	ldw	ra,24(sp)
 508b9ec:	dcc00517 	ldw	r19,20(sp)
 508b9f0:	dc800417 	ldw	r18,16(sp)
 508b9f4:	dc400317 	ldw	r17,12(sp)
 508b9f8:	dc000217 	ldw	r16,8(sp)
 508b9fc:	dec00704 	addi	sp,sp,28
 508ba00:	f800283a 	ret
 508ba04:	2008953a 	slli	r4,r4,20
 508ba08:	1907c83a 	sub	r3,r3,r4
 508ba0c:	003ff106 	br	508b9d4 <__alt_data_end+0xfffbd7d4>

0508ba10 <_mprec_log10>:
 508ba10:	defffe04 	addi	sp,sp,-8
 508ba14:	dc000015 	stw	r16,0(sp)
 508ba18:	dfc00115 	stw	ra,4(sp)
 508ba1c:	008005c4 	movi	r2,23
 508ba20:	2021883a 	mov	r16,r4
 508ba24:	11000d0e 	bge	r2,r4,508ba5c <_mprec_log10+0x4c>
 508ba28:	0005883a 	mov	r2,zero
 508ba2c:	00cffc34 	movhi	r3,16368
 508ba30:	843fffc4 	addi	r16,r16,-1
 508ba34:	000d883a 	mov	r6,zero
 508ba38:	01d00934 	movhi	r7,16420
 508ba3c:	1009883a 	mov	r4,r2
 508ba40:	180b883a 	mov	r5,r3
 508ba44:	50915f00 	call	50915f0 <__muldf3>
 508ba48:	803ff91e 	bne	r16,zero,508ba30 <__alt_data_end+0xfffbd830>
 508ba4c:	dfc00117 	ldw	ra,4(sp)
 508ba50:	dc000017 	ldw	r16,0(sp)
 508ba54:	dec00204 	addi	sp,sp,8
 508ba58:	f800283a 	ret
 508ba5c:	202090fa 	slli	r16,r4,3
 508ba60:	00814274 	movhi	r2,1289
 508ba64:	1097e404 	addi	r2,r2,24464
 508ba68:	1421883a 	add	r16,r2,r16
 508ba6c:	80800017 	ldw	r2,0(r16)
 508ba70:	80c00117 	ldw	r3,4(r16)
 508ba74:	dfc00117 	ldw	ra,4(sp)
 508ba78:	dc000017 	ldw	r16,0(sp)
 508ba7c:	dec00204 	addi	sp,sp,8
 508ba80:	f800283a 	ret

0508ba84 <__copybits>:
 508ba84:	297fffc4 	addi	r5,r5,-1
 508ba88:	280fd17a 	srai	r7,r5,5
 508ba8c:	30c00417 	ldw	r3,16(r6)
 508ba90:	30800504 	addi	r2,r6,20
 508ba94:	39c00044 	addi	r7,r7,1
 508ba98:	18c7883a 	add	r3,r3,r3
 508ba9c:	39cf883a 	add	r7,r7,r7
 508baa0:	18c7883a 	add	r3,r3,r3
 508baa4:	39cf883a 	add	r7,r7,r7
 508baa8:	10c7883a 	add	r3,r2,r3
 508baac:	21cf883a 	add	r7,r4,r7
 508bab0:	10c00d2e 	bgeu	r2,r3,508bae8 <__copybits+0x64>
 508bab4:	200b883a 	mov	r5,r4
 508bab8:	12000017 	ldw	r8,0(r2)
 508babc:	29400104 	addi	r5,r5,4
 508bac0:	10800104 	addi	r2,r2,4
 508bac4:	2a3fff15 	stw	r8,-4(r5)
 508bac8:	10fffb36 	bltu	r2,r3,508bab8 <__alt_data_end+0xfffbd8b8>
 508bacc:	1985c83a 	sub	r2,r3,r6
 508bad0:	10bffac4 	addi	r2,r2,-21
 508bad4:	1004d0ba 	srli	r2,r2,2
 508bad8:	10800044 	addi	r2,r2,1
 508badc:	1085883a 	add	r2,r2,r2
 508bae0:	1085883a 	add	r2,r2,r2
 508bae4:	2089883a 	add	r4,r4,r2
 508bae8:	21c0032e 	bgeu	r4,r7,508baf8 <__copybits+0x74>
 508baec:	20000015 	stw	zero,0(r4)
 508baf0:	21000104 	addi	r4,r4,4
 508baf4:	21fffd36 	bltu	r4,r7,508baec <__alt_data_end+0xfffbd8ec>
 508baf8:	f800283a 	ret

0508bafc <__any_on>:
 508bafc:	20c00417 	ldw	r3,16(r4)
 508bb00:	2805d17a 	srai	r2,r5,5
 508bb04:	21000504 	addi	r4,r4,20
 508bb08:	18800d0e 	bge	r3,r2,508bb40 <__any_on+0x44>
 508bb0c:	18c7883a 	add	r3,r3,r3
 508bb10:	18c7883a 	add	r3,r3,r3
 508bb14:	20c7883a 	add	r3,r4,r3
 508bb18:	20c0192e 	bgeu	r4,r3,508bb80 <__any_on+0x84>
 508bb1c:	18bfff17 	ldw	r2,-4(r3)
 508bb20:	18ffff04 	addi	r3,r3,-4
 508bb24:	1000041e 	bne	r2,zero,508bb38 <__any_on+0x3c>
 508bb28:	20c0142e 	bgeu	r4,r3,508bb7c <__any_on+0x80>
 508bb2c:	18ffff04 	addi	r3,r3,-4
 508bb30:	19400017 	ldw	r5,0(r3)
 508bb34:	283ffc26 	beq	r5,zero,508bb28 <__alt_data_end+0xfffbd928>
 508bb38:	00800044 	movi	r2,1
 508bb3c:	f800283a 	ret
 508bb40:	10c00a0e 	bge	r2,r3,508bb6c <__any_on+0x70>
 508bb44:	1085883a 	add	r2,r2,r2
 508bb48:	1085883a 	add	r2,r2,r2
 508bb4c:	294007cc 	andi	r5,r5,31
 508bb50:	2087883a 	add	r3,r4,r2
 508bb54:	283ff026 	beq	r5,zero,508bb18 <__alt_data_end+0xfffbd918>
 508bb58:	19800017 	ldw	r6,0(r3)
 508bb5c:	3144d83a 	srl	r2,r6,r5
 508bb60:	114a983a 	sll	r5,r2,r5
 508bb64:	317ff41e 	bne	r6,r5,508bb38 <__alt_data_end+0xfffbd938>
 508bb68:	003feb06 	br	508bb18 <__alt_data_end+0xfffbd918>
 508bb6c:	1085883a 	add	r2,r2,r2
 508bb70:	1085883a 	add	r2,r2,r2
 508bb74:	2087883a 	add	r3,r4,r2
 508bb78:	003fe706 	br	508bb18 <__alt_data_end+0xfffbd918>
 508bb7c:	f800283a 	ret
 508bb80:	0005883a 	mov	r2,zero
 508bb84:	f800283a 	ret

0508bb88 <_realloc_r>:
 508bb88:	defff604 	addi	sp,sp,-40
 508bb8c:	dc800215 	stw	r18,8(sp)
 508bb90:	dfc00915 	stw	ra,36(sp)
 508bb94:	df000815 	stw	fp,32(sp)
 508bb98:	ddc00715 	stw	r23,28(sp)
 508bb9c:	dd800615 	stw	r22,24(sp)
 508bba0:	dd400515 	stw	r21,20(sp)
 508bba4:	dd000415 	stw	r20,16(sp)
 508bba8:	dcc00315 	stw	r19,12(sp)
 508bbac:	dc400115 	stw	r17,4(sp)
 508bbb0:	dc000015 	stw	r16,0(sp)
 508bbb4:	3025883a 	mov	r18,r6
 508bbb8:	2800b726 	beq	r5,zero,508be98 <_realloc_r+0x310>
 508bbbc:	282b883a 	mov	r21,r5
 508bbc0:	2029883a 	mov	r20,r4
 508bbc4:	5092fe80 	call	5092fe8 <__malloc_lock>
 508bbc8:	a8bfff17 	ldw	r2,-4(r21)
 508bbcc:	043fff04 	movi	r16,-4
 508bbd0:	90c002c4 	addi	r3,r18,11
 508bbd4:	01000584 	movi	r4,22
 508bbd8:	acfffe04 	addi	r19,r21,-8
 508bbdc:	1420703a 	and	r16,r2,r16
 508bbe0:	20c0332e 	bgeu	r4,r3,508bcb0 <_realloc_r+0x128>
 508bbe4:	047ffe04 	movi	r17,-8
 508bbe8:	1c62703a 	and	r17,r3,r17
 508bbec:	8807883a 	mov	r3,r17
 508bbf0:	88005816 	blt	r17,zero,508bd54 <_realloc_r+0x1cc>
 508bbf4:	8c805736 	bltu	r17,r18,508bd54 <_realloc_r+0x1cc>
 508bbf8:	80c0300e 	bge	r16,r3,508bcbc <_realloc_r+0x134>
 508bbfc:	07014274 	movhi	fp,1289
 508bc00:	e7199c04 	addi	fp,fp,26224
 508bc04:	e1c00217 	ldw	r7,8(fp)
 508bc08:	9c09883a 	add	r4,r19,r16
 508bc0c:	22000117 	ldw	r8,4(r4)
 508bc10:	21c06326 	beq	r4,r7,508bda0 <_realloc_r+0x218>
 508bc14:	017fff84 	movi	r5,-2
 508bc18:	414a703a 	and	r5,r8,r5
 508bc1c:	214b883a 	add	r5,r4,r5
 508bc20:	29800117 	ldw	r6,4(r5)
 508bc24:	3180004c 	andi	r6,r6,1
 508bc28:	30003f26 	beq	r6,zero,508bd28 <_realloc_r+0x1a0>
 508bc2c:	1080004c 	andi	r2,r2,1
 508bc30:	10008326 	beq	r2,zero,508be40 <_realloc_r+0x2b8>
 508bc34:	900b883a 	mov	r5,r18
 508bc38:	a009883a 	mov	r4,r20
 508bc3c:	5089ed00 	call	5089ed0 <_malloc_r>
 508bc40:	1025883a 	mov	r18,r2
 508bc44:	10011e26 	beq	r2,zero,508c0c0 <_realloc_r+0x538>
 508bc48:	a93fff17 	ldw	r4,-4(r21)
 508bc4c:	10fffe04 	addi	r3,r2,-8
 508bc50:	00bfff84 	movi	r2,-2
 508bc54:	2084703a 	and	r2,r4,r2
 508bc58:	9885883a 	add	r2,r19,r2
 508bc5c:	1880ee26 	beq	r3,r2,508c018 <_realloc_r+0x490>
 508bc60:	81bfff04 	addi	r6,r16,-4
 508bc64:	00800904 	movi	r2,36
 508bc68:	1180b836 	bltu	r2,r6,508bf4c <_realloc_r+0x3c4>
 508bc6c:	00c004c4 	movi	r3,19
 508bc70:	19809636 	bltu	r3,r6,508becc <_realloc_r+0x344>
 508bc74:	9005883a 	mov	r2,r18
 508bc78:	a807883a 	mov	r3,r21
 508bc7c:	19000017 	ldw	r4,0(r3)
 508bc80:	11000015 	stw	r4,0(r2)
 508bc84:	19000117 	ldw	r4,4(r3)
 508bc88:	11000115 	stw	r4,4(r2)
 508bc8c:	18c00217 	ldw	r3,8(r3)
 508bc90:	10c00215 	stw	r3,8(r2)
 508bc94:	a80b883a 	mov	r5,r21
 508bc98:	a009883a 	mov	r4,r20
 508bc9c:	50892e40 	call	50892e4 <_free_r>
 508bca0:	a009883a 	mov	r4,r20
 508bca4:	509300c0 	call	509300c <__malloc_unlock>
 508bca8:	9005883a 	mov	r2,r18
 508bcac:	00001206 	br	508bcf8 <_realloc_r+0x170>
 508bcb0:	00c00404 	movi	r3,16
 508bcb4:	1823883a 	mov	r17,r3
 508bcb8:	003fce06 	br	508bbf4 <__alt_data_end+0xfffbd9f4>
 508bcbc:	a825883a 	mov	r18,r21
 508bcc0:	8445c83a 	sub	r2,r16,r17
 508bcc4:	00c003c4 	movi	r3,15
 508bcc8:	18802636 	bltu	r3,r2,508bd64 <_realloc_r+0x1dc>
 508bccc:	99800117 	ldw	r6,4(r19)
 508bcd0:	9c07883a 	add	r3,r19,r16
 508bcd4:	3180004c 	andi	r6,r6,1
 508bcd8:	3420b03a 	or	r16,r6,r16
 508bcdc:	9c000115 	stw	r16,4(r19)
 508bce0:	18800117 	ldw	r2,4(r3)
 508bce4:	10800054 	ori	r2,r2,1
 508bce8:	18800115 	stw	r2,4(r3)
 508bcec:	a009883a 	mov	r4,r20
 508bcf0:	509300c0 	call	509300c <__malloc_unlock>
 508bcf4:	9005883a 	mov	r2,r18
 508bcf8:	dfc00917 	ldw	ra,36(sp)
 508bcfc:	df000817 	ldw	fp,32(sp)
 508bd00:	ddc00717 	ldw	r23,28(sp)
 508bd04:	dd800617 	ldw	r22,24(sp)
 508bd08:	dd400517 	ldw	r21,20(sp)
 508bd0c:	dd000417 	ldw	r20,16(sp)
 508bd10:	dcc00317 	ldw	r19,12(sp)
 508bd14:	dc800217 	ldw	r18,8(sp)
 508bd18:	dc400117 	ldw	r17,4(sp)
 508bd1c:	dc000017 	ldw	r16,0(sp)
 508bd20:	dec00a04 	addi	sp,sp,40
 508bd24:	f800283a 	ret
 508bd28:	017fff04 	movi	r5,-4
 508bd2c:	414a703a 	and	r5,r8,r5
 508bd30:	814d883a 	add	r6,r16,r5
 508bd34:	30c01f16 	blt	r6,r3,508bdb4 <_realloc_r+0x22c>
 508bd38:	20800317 	ldw	r2,12(r4)
 508bd3c:	20c00217 	ldw	r3,8(r4)
 508bd40:	a825883a 	mov	r18,r21
 508bd44:	3021883a 	mov	r16,r6
 508bd48:	18800315 	stw	r2,12(r3)
 508bd4c:	10c00215 	stw	r3,8(r2)
 508bd50:	003fdb06 	br	508bcc0 <__alt_data_end+0xfffbdac0>
 508bd54:	00800304 	movi	r2,12
 508bd58:	a0800015 	stw	r2,0(r20)
 508bd5c:	0005883a 	mov	r2,zero
 508bd60:	003fe506 	br	508bcf8 <__alt_data_end+0xfffbdaf8>
 508bd64:	98c00117 	ldw	r3,4(r19)
 508bd68:	9c4b883a 	add	r5,r19,r17
 508bd6c:	11000054 	ori	r4,r2,1
 508bd70:	18c0004c 	andi	r3,r3,1
 508bd74:	1c62b03a 	or	r17,r3,r17
 508bd78:	9c400115 	stw	r17,4(r19)
 508bd7c:	29000115 	stw	r4,4(r5)
 508bd80:	2885883a 	add	r2,r5,r2
 508bd84:	10c00117 	ldw	r3,4(r2)
 508bd88:	29400204 	addi	r5,r5,8
 508bd8c:	a009883a 	mov	r4,r20
 508bd90:	18c00054 	ori	r3,r3,1
 508bd94:	10c00115 	stw	r3,4(r2)
 508bd98:	50892e40 	call	50892e4 <_free_r>
 508bd9c:	003fd306 	br	508bcec <__alt_data_end+0xfffbdaec>
 508bda0:	017fff04 	movi	r5,-4
 508bda4:	414a703a 	and	r5,r8,r5
 508bda8:	89800404 	addi	r6,r17,16
 508bdac:	8151883a 	add	r8,r16,r5
 508bdb0:	4180590e 	bge	r8,r6,508bf18 <_realloc_r+0x390>
 508bdb4:	1080004c 	andi	r2,r2,1
 508bdb8:	103f9e1e 	bne	r2,zero,508bc34 <__alt_data_end+0xfffbda34>
 508bdbc:	adbffe17 	ldw	r22,-8(r21)
 508bdc0:	00bfff04 	movi	r2,-4
 508bdc4:	9dadc83a 	sub	r22,r19,r22
 508bdc8:	b1800117 	ldw	r6,4(r22)
 508bdcc:	3084703a 	and	r2,r6,r2
 508bdd0:	20002026 	beq	r4,zero,508be54 <_realloc_r+0x2cc>
 508bdd4:	80af883a 	add	r23,r16,r2
 508bdd8:	b96f883a 	add	r23,r23,r5
 508bddc:	21c05f26 	beq	r4,r7,508bf5c <_realloc_r+0x3d4>
 508bde0:	b8c01c16 	blt	r23,r3,508be54 <_realloc_r+0x2cc>
 508bde4:	20800317 	ldw	r2,12(r4)
 508bde8:	20c00217 	ldw	r3,8(r4)
 508bdec:	81bfff04 	addi	r6,r16,-4
 508bdf0:	01000904 	movi	r4,36
 508bdf4:	18800315 	stw	r2,12(r3)
 508bdf8:	10c00215 	stw	r3,8(r2)
 508bdfc:	b0c00217 	ldw	r3,8(r22)
 508be00:	b0800317 	ldw	r2,12(r22)
 508be04:	b4800204 	addi	r18,r22,8
 508be08:	18800315 	stw	r2,12(r3)
 508be0c:	10c00215 	stw	r3,8(r2)
 508be10:	21801b36 	bltu	r4,r6,508be80 <_realloc_r+0x2f8>
 508be14:	008004c4 	movi	r2,19
 508be18:	1180352e 	bgeu	r2,r6,508bef0 <_realloc_r+0x368>
 508be1c:	a8800017 	ldw	r2,0(r21)
 508be20:	b0800215 	stw	r2,8(r22)
 508be24:	a8800117 	ldw	r2,4(r21)
 508be28:	b0800315 	stw	r2,12(r22)
 508be2c:	008006c4 	movi	r2,27
 508be30:	11807f36 	bltu	r2,r6,508c030 <_realloc_r+0x4a8>
 508be34:	b0800404 	addi	r2,r22,16
 508be38:	ad400204 	addi	r21,r21,8
 508be3c:	00002d06 	br	508bef4 <_realloc_r+0x36c>
 508be40:	adbffe17 	ldw	r22,-8(r21)
 508be44:	00bfff04 	movi	r2,-4
 508be48:	9dadc83a 	sub	r22,r19,r22
 508be4c:	b1000117 	ldw	r4,4(r22)
 508be50:	2084703a 	and	r2,r4,r2
 508be54:	b03f7726 	beq	r22,zero,508bc34 <__alt_data_end+0xfffbda34>
 508be58:	80af883a 	add	r23,r16,r2
 508be5c:	b8ff7516 	blt	r23,r3,508bc34 <__alt_data_end+0xfffbda34>
 508be60:	b0800317 	ldw	r2,12(r22)
 508be64:	b0c00217 	ldw	r3,8(r22)
 508be68:	81bfff04 	addi	r6,r16,-4
 508be6c:	01000904 	movi	r4,36
 508be70:	18800315 	stw	r2,12(r3)
 508be74:	10c00215 	stw	r3,8(r2)
 508be78:	b4800204 	addi	r18,r22,8
 508be7c:	21bfe52e 	bgeu	r4,r6,508be14 <__alt_data_end+0xfffbdc14>
 508be80:	a80b883a 	mov	r5,r21
 508be84:	9009883a 	mov	r4,r18
 508be88:	508a9080 	call	508a908 <memmove>
 508be8c:	b821883a 	mov	r16,r23
 508be90:	b027883a 	mov	r19,r22
 508be94:	003f8a06 	br	508bcc0 <__alt_data_end+0xfffbdac0>
 508be98:	300b883a 	mov	r5,r6
 508be9c:	dfc00917 	ldw	ra,36(sp)
 508bea0:	df000817 	ldw	fp,32(sp)
 508bea4:	ddc00717 	ldw	r23,28(sp)
 508bea8:	dd800617 	ldw	r22,24(sp)
 508beac:	dd400517 	ldw	r21,20(sp)
 508beb0:	dd000417 	ldw	r20,16(sp)
 508beb4:	dcc00317 	ldw	r19,12(sp)
 508beb8:	dc800217 	ldw	r18,8(sp)
 508bebc:	dc400117 	ldw	r17,4(sp)
 508bec0:	dc000017 	ldw	r16,0(sp)
 508bec4:	dec00a04 	addi	sp,sp,40
 508bec8:	5089ed01 	jmpi	5089ed0 <_malloc_r>
 508becc:	a8c00017 	ldw	r3,0(r21)
 508bed0:	90c00015 	stw	r3,0(r18)
 508bed4:	a8c00117 	ldw	r3,4(r21)
 508bed8:	90c00115 	stw	r3,4(r18)
 508bedc:	00c006c4 	movi	r3,27
 508bee0:	19804536 	bltu	r3,r6,508bff8 <_realloc_r+0x470>
 508bee4:	90800204 	addi	r2,r18,8
 508bee8:	a8c00204 	addi	r3,r21,8
 508beec:	003f6306 	br	508bc7c <__alt_data_end+0xfffbda7c>
 508bef0:	9005883a 	mov	r2,r18
 508bef4:	a8c00017 	ldw	r3,0(r21)
 508bef8:	b821883a 	mov	r16,r23
 508befc:	b027883a 	mov	r19,r22
 508bf00:	10c00015 	stw	r3,0(r2)
 508bf04:	a8c00117 	ldw	r3,4(r21)
 508bf08:	10c00115 	stw	r3,4(r2)
 508bf0c:	a8c00217 	ldw	r3,8(r21)
 508bf10:	10c00215 	stw	r3,8(r2)
 508bf14:	003f6a06 	br	508bcc0 <__alt_data_end+0xfffbdac0>
 508bf18:	9c67883a 	add	r19,r19,r17
 508bf1c:	4445c83a 	sub	r2,r8,r17
 508bf20:	e4c00215 	stw	r19,8(fp)
 508bf24:	10800054 	ori	r2,r2,1
 508bf28:	98800115 	stw	r2,4(r19)
 508bf2c:	a8bfff17 	ldw	r2,-4(r21)
 508bf30:	a009883a 	mov	r4,r20
 508bf34:	1080004c 	andi	r2,r2,1
 508bf38:	1462b03a 	or	r17,r2,r17
 508bf3c:	ac7fff15 	stw	r17,-4(r21)
 508bf40:	509300c0 	call	509300c <__malloc_unlock>
 508bf44:	a805883a 	mov	r2,r21
 508bf48:	003f6b06 	br	508bcf8 <__alt_data_end+0xfffbdaf8>
 508bf4c:	a80b883a 	mov	r5,r21
 508bf50:	9009883a 	mov	r4,r18
 508bf54:	508a9080 	call	508a908 <memmove>
 508bf58:	003f4e06 	br	508bc94 <__alt_data_end+0xfffbda94>
 508bf5c:	89000404 	addi	r4,r17,16
 508bf60:	b93fbc16 	blt	r23,r4,508be54 <__alt_data_end+0xfffbdc54>
 508bf64:	b0800317 	ldw	r2,12(r22)
 508bf68:	b0c00217 	ldw	r3,8(r22)
 508bf6c:	81bfff04 	addi	r6,r16,-4
 508bf70:	01000904 	movi	r4,36
 508bf74:	18800315 	stw	r2,12(r3)
 508bf78:	10c00215 	stw	r3,8(r2)
 508bf7c:	b4800204 	addi	r18,r22,8
 508bf80:	21804336 	bltu	r4,r6,508c090 <_realloc_r+0x508>
 508bf84:	008004c4 	movi	r2,19
 508bf88:	11803f2e 	bgeu	r2,r6,508c088 <_realloc_r+0x500>
 508bf8c:	a8800017 	ldw	r2,0(r21)
 508bf90:	b0800215 	stw	r2,8(r22)
 508bf94:	a8800117 	ldw	r2,4(r21)
 508bf98:	b0800315 	stw	r2,12(r22)
 508bf9c:	008006c4 	movi	r2,27
 508bfa0:	11803f36 	bltu	r2,r6,508c0a0 <_realloc_r+0x518>
 508bfa4:	b0800404 	addi	r2,r22,16
 508bfa8:	ad400204 	addi	r21,r21,8
 508bfac:	a8c00017 	ldw	r3,0(r21)
 508bfb0:	10c00015 	stw	r3,0(r2)
 508bfb4:	a8c00117 	ldw	r3,4(r21)
 508bfb8:	10c00115 	stw	r3,4(r2)
 508bfbc:	a8c00217 	ldw	r3,8(r21)
 508bfc0:	10c00215 	stw	r3,8(r2)
 508bfc4:	b447883a 	add	r3,r22,r17
 508bfc8:	bc45c83a 	sub	r2,r23,r17
 508bfcc:	e0c00215 	stw	r3,8(fp)
 508bfd0:	10800054 	ori	r2,r2,1
 508bfd4:	18800115 	stw	r2,4(r3)
 508bfd8:	b0800117 	ldw	r2,4(r22)
 508bfdc:	a009883a 	mov	r4,r20
 508bfe0:	1080004c 	andi	r2,r2,1
 508bfe4:	1462b03a 	or	r17,r2,r17
 508bfe8:	b4400115 	stw	r17,4(r22)
 508bfec:	509300c0 	call	509300c <__malloc_unlock>
 508bff0:	9005883a 	mov	r2,r18
 508bff4:	003f4006 	br	508bcf8 <__alt_data_end+0xfffbdaf8>
 508bff8:	a8c00217 	ldw	r3,8(r21)
 508bffc:	90c00215 	stw	r3,8(r18)
 508c000:	a8c00317 	ldw	r3,12(r21)
 508c004:	90c00315 	stw	r3,12(r18)
 508c008:	30801126 	beq	r6,r2,508c050 <_realloc_r+0x4c8>
 508c00c:	90800404 	addi	r2,r18,16
 508c010:	a8c00404 	addi	r3,r21,16
 508c014:	003f1906 	br	508bc7c <__alt_data_end+0xfffbda7c>
 508c018:	90ffff17 	ldw	r3,-4(r18)
 508c01c:	00bfff04 	movi	r2,-4
 508c020:	a825883a 	mov	r18,r21
 508c024:	1884703a 	and	r2,r3,r2
 508c028:	80a1883a 	add	r16,r16,r2
 508c02c:	003f2406 	br	508bcc0 <__alt_data_end+0xfffbdac0>
 508c030:	a8800217 	ldw	r2,8(r21)
 508c034:	b0800415 	stw	r2,16(r22)
 508c038:	a8800317 	ldw	r2,12(r21)
 508c03c:	b0800515 	stw	r2,20(r22)
 508c040:	31000a26 	beq	r6,r4,508c06c <_realloc_r+0x4e4>
 508c044:	b0800604 	addi	r2,r22,24
 508c048:	ad400404 	addi	r21,r21,16
 508c04c:	003fa906 	br	508bef4 <__alt_data_end+0xfffbdcf4>
 508c050:	a9000417 	ldw	r4,16(r21)
 508c054:	90800604 	addi	r2,r18,24
 508c058:	a8c00604 	addi	r3,r21,24
 508c05c:	91000415 	stw	r4,16(r18)
 508c060:	a9000517 	ldw	r4,20(r21)
 508c064:	91000515 	stw	r4,20(r18)
 508c068:	003f0406 	br	508bc7c <__alt_data_end+0xfffbda7c>
 508c06c:	a8c00417 	ldw	r3,16(r21)
 508c070:	ad400604 	addi	r21,r21,24
 508c074:	b0800804 	addi	r2,r22,32
 508c078:	b0c00615 	stw	r3,24(r22)
 508c07c:	a8ffff17 	ldw	r3,-4(r21)
 508c080:	b0c00715 	stw	r3,28(r22)
 508c084:	003f9b06 	br	508bef4 <__alt_data_end+0xfffbdcf4>
 508c088:	9005883a 	mov	r2,r18
 508c08c:	003fc706 	br	508bfac <__alt_data_end+0xfffbddac>
 508c090:	a80b883a 	mov	r5,r21
 508c094:	9009883a 	mov	r4,r18
 508c098:	508a9080 	call	508a908 <memmove>
 508c09c:	003fc906 	br	508bfc4 <__alt_data_end+0xfffbddc4>
 508c0a0:	a8800217 	ldw	r2,8(r21)
 508c0a4:	b0800415 	stw	r2,16(r22)
 508c0a8:	a8800317 	ldw	r2,12(r21)
 508c0ac:	b0800515 	stw	r2,20(r22)
 508c0b0:	31000726 	beq	r6,r4,508c0d0 <_realloc_r+0x548>
 508c0b4:	b0800604 	addi	r2,r22,24
 508c0b8:	ad400404 	addi	r21,r21,16
 508c0bc:	003fbb06 	br	508bfac <__alt_data_end+0xfffbddac>
 508c0c0:	a009883a 	mov	r4,r20
 508c0c4:	509300c0 	call	509300c <__malloc_unlock>
 508c0c8:	0005883a 	mov	r2,zero
 508c0cc:	003f0a06 	br	508bcf8 <__alt_data_end+0xfffbdaf8>
 508c0d0:	a8c00417 	ldw	r3,16(r21)
 508c0d4:	ad400604 	addi	r21,r21,24
 508c0d8:	b0800804 	addi	r2,r22,32
 508c0dc:	b0c00615 	stw	r3,24(r22)
 508c0e0:	a8ffff17 	ldw	r3,-4(r21)
 508c0e4:	b0c00715 	stw	r3,28(r22)
 508c0e8:	003fb006 	br	508bfac <__alt_data_end+0xfffbddac>

0508c0ec <__fpclassifyd>:
 508c0ec:	00a00034 	movhi	r2,32768
 508c0f0:	10bfffc4 	addi	r2,r2,-1
 508c0f4:	2884703a 	and	r2,r5,r2
 508c0f8:	10000726 	beq	r2,zero,508c118 <__fpclassifyd+0x2c>
 508c0fc:	00fffc34 	movhi	r3,65520
 508c100:	019ff834 	movhi	r6,32736
 508c104:	28c7883a 	add	r3,r5,r3
 508c108:	31bfffc4 	addi	r6,r6,-1
 508c10c:	30c00536 	bltu	r6,r3,508c124 <__fpclassifyd+0x38>
 508c110:	00800104 	movi	r2,4
 508c114:	f800283a 	ret
 508c118:	2000021e 	bne	r4,zero,508c124 <__fpclassifyd+0x38>
 508c11c:	00800084 	movi	r2,2
 508c120:	f800283a 	ret
 508c124:	00dffc34 	movhi	r3,32752
 508c128:	019ff834 	movhi	r6,32736
 508c12c:	28cb883a 	add	r5,r5,r3
 508c130:	31bfffc4 	addi	r6,r6,-1
 508c134:	317ff62e 	bgeu	r6,r5,508c110 <__alt_data_end+0xfffbdf10>
 508c138:	01400434 	movhi	r5,16
 508c13c:	297fffc4 	addi	r5,r5,-1
 508c140:	28800236 	bltu	r5,r2,508c14c <__fpclassifyd+0x60>
 508c144:	008000c4 	movi	r2,3
 508c148:	f800283a 	ret
 508c14c:	10c00226 	beq	r2,r3,508c158 <__fpclassifyd+0x6c>
 508c150:	0005883a 	mov	r2,zero
 508c154:	f800283a 	ret
 508c158:	2005003a 	cmpeq	r2,r4,zero
 508c15c:	f800283a 	ret

0508c160 <_sbrk_r>:
 508c160:	defffd04 	addi	sp,sp,-12
 508c164:	dc000015 	stw	r16,0(sp)
 508c168:	040142b4 	movhi	r16,1290
 508c16c:	dc400115 	stw	r17,4(sp)
 508c170:	8425f804 	addi	r16,r16,-26656
 508c174:	2023883a 	mov	r17,r4
 508c178:	2809883a 	mov	r4,r5
 508c17c:	dfc00215 	stw	ra,8(sp)
 508c180:	80000015 	stw	zero,0(r16)
 508c184:	50931e00 	call	50931e0 <sbrk>
 508c188:	00ffffc4 	movi	r3,-1
 508c18c:	10c00526 	beq	r2,r3,508c1a4 <_sbrk_r+0x44>
 508c190:	dfc00217 	ldw	ra,8(sp)
 508c194:	dc400117 	ldw	r17,4(sp)
 508c198:	dc000017 	ldw	r16,0(sp)
 508c19c:	dec00304 	addi	sp,sp,12
 508c1a0:	f800283a 	ret
 508c1a4:	80c00017 	ldw	r3,0(r16)
 508c1a8:	183ff926 	beq	r3,zero,508c190 <__alt_data_end+0xfffbdf90>
 508c1ac:	88c00015 	stw	r3,0(r17)
 508c1b0:	003ff706 	br	508c190 <__alt_data_end+0xfffbdf90>

0508c1b4 <__sread>:
 508c1b4:	defffe04 	addi	sp,sp,-8
 508c1b8:	dc000015 	stw	r16,0(sp)
 508c1bc:	2821883a 	mov	r16,r5
 508c1c0:	2940038f 	ldh	r5,14(r5)
 508c1c4:	dfc00115 	stw	ra,4(sp)
 508c1c8:	508f3b40 	call	508f3b4 <_read_r>
 508c1cc:	10000716 	blt	r2,zero,508c1ec <__sread+0x38>
 508c1d0:	80c01417 	ldw	r3,80(r16)
 508c1d4:	1887883a 	add	r3,r3,r2
 508c1d8:	80c01415 	stw	r3,80(r16)
 508c1dc:	dfc00117 	ldw	ra,4(sp)
 508c1e0:	dc000017 	ldw	r16,0(sp)
 508c1e4:	dec00204 	addi	sp,sp,8
 508c1e8:	f800283a 	ret
 508c1ec:	80c0030b 	ldhu	r3,12(r16)
 508c1f0:	18fbffcc 	andi	r3,r3,61439
 508c1f4:	80c0030d 	sth	r3,12(r16)
 508c1f8:	dfc00117 	ldw	ra,4(sp)
 508c1fc:	dc000017 	ldw	r16,0(sp)
 508c200:	dec00204 	addi	sp,sp,8
 508c204:	f800283a 	ret

0508c208 <__seofread>:
 508c208:	0005883a 	mov	r2,zero
 508c20c:	f800283a 	ret

0508c210 <__swrite>:
 508c210:	2880030b 	ldhu	r2,12(r5)
 508c214:	defffb04 	addi	sp,sp,-20
 508c218:	dcc00315 	stw	r19,12(sp)
 508c21c:	dc800215 	stw	r18,8(sp)
 508c220:	dc400115 	stw	r17,4(sp)
 508c224:	dc000015 	stw	r16,0(sp)
 508c228:	dfc00415 	stw	ra,16(sp)
 508c22c:	10c0400c 	andi	r3,r2,256
 508c230:	2821883a 	mov	r16,r5
 508c234:	2023883a 	mov	r17,r4
 508c238:	3025883a 	mov	r18,r6
 508c23c:	3827883a 	mov	r19,r7
 508c240:	18000526 	beq	r3,zero,508c258 <__swrite+0x48>
 508c244:	2940038f 	ldh	r5,14(r5)
 508c248:	01c00084 	movi	r7,2
 508c24c:	000d883a 	mov	r6,zero
 508c250:	508f3540 	call	508f354 <_lseek_r>
 508c254:	8080030b 	ldhu	r2,12(r16)
 508c258:	8140038f 	ldh	r5,14(r16)
 508c25c:	10bbffcc 	andi	r2,r2,61439
 508c260:	980f883a 	mov	r7,r19
 508c264:	900d883a 	mov	r6,r18
 508c268:	8809883a 	mov	r4,r17
 508c26c:	8080030d 	sth	r2,12(r16)
 508c270:	dfc00417 	ldw	ra,16(sp)
 508c274:	dcc00317 	ldw	r19,12(sp)
 508c278:	dc800217 	ldw	r18,8(sp)
 508c27c:	dc400117 	ldw	r17,4(sp)
 508c280:	dc000017 	ldw	r16,0(sp)
 508c284:	dec00504 	addi	sp,sp,20
 508c288:	508ee201 	jmpi	508ee20 <_write_r>

0508c28c <__sseek>:
 508c28c:	defffe04 	addi	sp,sp,-8
 508c290:	dc000015 	stw	r16,0(sp)
 508c294:	2821883a 	mov	r16,r5
 508c298:	2940038f 	ldh	r5,14(r5)
 508c29c:	dfc00115 	stw	ra,4(sp)
 508c2a0:	508f3540 	call	508f354 <_lseek_r>
 508c2a4:	00ffffc4 	movi	r3,-1
 508c2a8:	10c00826 	beq	r2,r3,508c2cc <__sseek+0x40>
 508c2ac:	80c0030b 	ldhu	r3,12(r16)
 508c2b0:	80801415 	stw	r2,80(r16)
 508c2b4:	18c40014 	ori	r3,r3,4096
 508c2b8:	80c0030d 	sth	r3,12(r16)
 508c2bc:	dfc00117 	ldw	ra,4(sp)
 508c2c0:	dc000017 	ldw	r16,0(sp)
 508c2c4:	dec00204 	addi	sp,sp,8
 508c2c8:	f800283a 	ret
 508c2cc:	80c0030b 	ldhu	r3,12(r16)
 508c2d0:	18fbffcc 	andi	r3,r3,61439
 508c2d4:	80c0030d 	sth	r3,12(r16)
 508c2d8:	dfc00117 	ldw	ra,4(sp)
 508c2dc:	dc000017 	ldw	r16,0(sp)
 508c2e0:	dec00204 	addi	sp,sp,8
 508c2e4:	f800283a 	ret

0508c2e8 <__sclose>:
 508c2e8:	2940038f 	ldh	r5,14(r5)
 508c2ec:	508ee801 	jmpi	508ee80 <_close_r>

0508c2f0 <strcmp>:
 508c2f0:	2144b03a 	or	r2,r4,r5
 508c2f4:	108000cc 	andi	r2,r2,3
 508c2f8:	1000171e 	bne	r2,zero,508c358 <strcmp+0x68>
 508c2fc:	20800017 	ldw	r2,0(r4)
 508c300:	28c00017 	ldw	r3,0(r5)
 508c304:	10c0141e 	bne	r2,r3,508c358 <strcmp+0x68>
 508c308:	027fbff4 	movhi	r9,65279
 508c30c:	4a7fbfc4 	addi	r9,r9,-257
 508c310:	0086303a 	nor	r3,zero,r2
 508c314:	02202074 	movhi	r8,32897
 508c318:	1245883a 	add	r2,r2,r9
 508c31c:	42202004 	addi	r8,r8,-32640
 508c320:	10c4703a 	and	r2,r2,r3
 508c324:	1204703a 	and	r2,r2,r8
 508c328:	10000226 	beq	r2,zero,508c334 <strcmp+0x44>
 508c32c:	00002306 	br	508c3bc <strcmp+0xcc>
 508c330:	1000221e 	bne	r2,zero,508c3bc <strcmp+0xcc>
 508c334:	21000104 	addi	r4,r4,4
 508c338:	20c00017 	ldw	r3,0(r4)
 508c33c:	29400104 	addi	r5,r5,4
 508c340:	29800017 	ldw	r6,0(r5)
 508c344:	1a4f883a 	add	r7,r3,r9
 508c348:	00c4303a 	nor	r2,zero,r3
 508c34c:	3884703a 	and	r2,r7,r2
 508c350:	1204703a 	and	r2,r2,r8
 508c354:	19bff626 	beq	r3,r6,508c330 <__alt_data_end+0xfffbe130>
 508c358:	20800003 	ldbu	r2,0(r4)
 508c35c:	10c03fcc 	andi	r3,r2,255
 508c360:	18c0201c 	xori	r3,r3,128
 508c364:	18ffe004 	addi	r3,r3,-128
 508c368:	18000c26 	beq	r3,zero,508c39c <strcmp+0xac>
 508c36c:	29800007 	ldb	r6,0(r5)
 508c370:	19800326 	beq	r3,r6,508c380 <strcmp+0x90>
 508c374:	00001306 	br	508c3c4 <strcmp+0xd4>
 508c378:	29800007 	ldb	r6,0(r5)
 508c37c:	11800b1e 	bne	r2,r6,508c3ac <strcmp+0xbc>
 508c380:	21000044 	addi	r4,r4,1
 508c384:	20c00003 	ldbu	r3,0(r4)
 508c388:	29400044 	addi	r5,r5,1
 508c38c:	18803fcc 	andi	r2,r3,255
 508c390:	1080201c 	xori	r2,r2,128
 508c394:	10bfe004 	addi	r2,r2,-128
 508c398:	103ff71e 	bne	r2,zero,508c378 <__alt_data_end+0xfffbe178>
 508c39c:	0007883a 	mov	r3,zero
 508c3a0:	28800003 	ldbu	r2,0(r5)
 508c3a4:	1885c83a 	sub	r2,r3,r2
 508c3a8:	f800283a 	ret
 508c3ac:	28800003 	ldbu	r2,0(r5)
 508c3b0:	18c03fcc 	andi	r3,r3,255
 508c3b4:	1885c83a 	sub	r2,r3,r2
 508c3b8:	f800283a 	ret
 508c3bc:	0005883a 	mov	r2,zero
 508c3c0:	f800283a 	ret
 508c3c4:	10c03fcc 	andi	r3,r2,255
 508c3c8:	003ff506 	br	508c3a0 <__alt_data_end+0xfffbe1a0>

0508c3cc <__ssprint_r>:
 508c3cc:	30800217 	ldw	r2,8(r6)
 508c3d0:	defff604 	addi	sp,sp,-40
 508c3d4:	dc800215 	stw	r18,8(sp)
 508c3d8:	dfc00915 	stw	ra,36(sp)
 508c3dc:	df000815 	stw	fp,32(sp)
 508c3e0:	ddc00715 	stw	r23,28(sp)
 508c3e4:	dd800615 	stw	r22,24(sp)
 508c3e8:	dd400515 	stw	r21,20(sp)
 508c3ec:	dd000415 	stw	r20,16(sp)
 508c3f0:	dcc00315 	stw	r19,12(sp)
 508c3f4:	dc400115 	stw	r17,4(sp)
 508c3f8:	dc000015 	stw	r16,0(sp)
 508c3fc:	3025883a 	mov	r18,r6
 508c400:	10005826 	beq	r2,zero,508c564 <__ssprint_r+0x198>
 508c404:	2027883a 	mov	r19,r4
 508c408:	35c00017 	ldw	r23,0(r6)
 508c40c:	29000017 	ldw	r4,0(r5)
 508c410:	28800217 	ldw	r2,8(r5)
 508c414:	2823883a 	mov	r17,r5
 508c418:	0039883a 	mov	fp,zero
 508c41c:	0021883a 	mov	r16,zero
 508c420:	80003926 	beq	r16,zero,508c508 <__ssprint_r+0x13c>
 508c424:	102b883a 	mov	r21,r2
 508c428:	102d883a 	mov	r22,r2
 508c42c:	80803a36 	bltu	r16,r2,508c518 <__ssprint_r+0x14c>
 508c430:	88c0030b 	ldhu	r3,12(r17)
 508c434:	1881200c 	andi	r2,r3,1152
 508c438:	10002626 	beq	r2,zero,508c4d4 <__ssprint_r+0x108>
 508c43c:	88800517 	ldw	r2,20(r17)
 508c440:	89400417 	ldw	r5,16(r17)
 508c444:	81800044 	addi	r6,r16,1
 508c448:	108f883a 	add	r7,r2,r2
 508c44c:	3885883a 	add	r2,r7,r2
 508c450:	100ed7fa 	srli	r7,r2,31
 508c454:	216dc83a 	sub	r22,r4,r5
 508c458:	3589883a 	add	r4,r6,r22
 508c45c:	3885883a 	add	r2,r7,r2
 508c460:	102bd07a 	srai	r21,r2,1
 508c464:	a80d883a 	mov	r6,r21
 508c468:	a900022e 	bgeu	r21,r4,508c474 <__ssprint_r+0xa8>
 508c46c:	202b883a 	mov	r21,r4
 508c470:	200d883a 	mov	r6,r4
 508c474:	18c1000c 	andi	r3,r3,1024
 508c478:	18002a26 	beq	r3,zero,508c524 <__ssprint_r+0x158>
 508c47c:	300b883a 	mov	r5,r6
 508c480:	9809883a 	mov	r4,r19
 508c484:	5089ed00 	call	5089ed0 <_malloc_r>
 508c488:	1029883a 	mov	r20,r2
 508c48c:	10002c26 	beq	r2,zero,508c540 <__ssprint_r+0x174>
 508c490:	89400417 	ldw	r5,16(r17)
 508c494:	b00d883a 	mov	r6,r22
 508c498:	1009883a 	mov	r4,r2
 508c49c:	508a7c00 	call	508a7c0 <memcpy>
 508c4a0:	8880030b 	ldhu	r2,12(r17)
 508c4a4:	00fedfc4 	movi	r3,-1153
 508c4a8:	10c4703a 	and	r2,r2,r3
 508c4ac:	10802014 	ori	r2,r2,128
 508c4b0:	8880030d 	sth	r2,12(r17)
 508c4b4:	a589883a 	add	r4,r20,r22
 508c4b8:	adadc83a 	sub	r22,r21,r22
 508c4bc:	8d400515 	stw	r21,20(r17)
 508c4c0:	8d800215 	stw	r22,8(r17)
 508c4c4:	8d000415 	stw	r20,16(r17)
 508c4c8:	89000015 	stw	r4,0(r17)
 508c4cc:	802b883a 	mov	r21,r16
 508c4d0:	802d883a 	mov	r22,r16
 508c4d4:	b00d883a 	mov	r6,r22
 508c4d8:	e00b883a 	mov	r5,fp
 508c4dc:	508a9080 	call	508a908 <memmove>
 508c4e0:	88800217 	ldw	r2,8(r17)
 508c4e4:	89000017 	ldw	r4,0(r17)
 508c4e8:	90c00217 	ldw	r3,8(r18)
 508c4ec:	1545c83a 	sub	r2,r2,r21
 508c4f0:	2589883a 	add	r4,r4,r22
 508c4f4:	88800215 	stw	r2,8(r17)
 508c4f8:	89000015 	stw	r4,0(r17)
 508c4fc:	1c21c83a 	sub	r16,r3,r16
 508c500:	94000215 	stw	r16,8(r18)
 508c504:	80001726 	beq	r16,zero,508c564 <__ssprint_r+0x198>
 508c508:	bf000017 	ldw	fp,0(r23)
 508c50c:	bc000117 	ldw	r16,4(r23)
 508c510:	bdc00204 	addi	r23,r23,8
 508c514:	003fc206 	br	508c420 <__alt_data_end+0xfffbe220>
 508c518:	802b883a 	mov	r21,r16
 508c51c:	802d883a 	mov	r22,r16
 508c520:	003fec06 	br	508c4d4 <__alt_data_end+0xfffbe2d4>
 508c524:	9809883a 	mov	r4,r19
 508c528:	508bb880 	call	508bb88 <_realloc_r>
 508c52c:	1029883a 	mov	r20,r2
 508c530:	103fe01e 	bne	r2,zero,508c4b4 <__alt_data_end+0xfffbe2b4>
 508c534:	89400417 	ldw	r5,16(r17)
 508c538:	9809883a 	mov	r4,r19
 508c53c:	50892e40 	call	50892e4 <_free_r>
 508c540:	88c0030b 	ldhu	r3,12(r17)
 508c544:	00800304 	movi	r2,12
 508c548:	98800015 	stw	r2,0(r19)
 508c54c:	18c01014 	ori	r3,r3,64
 508c550:	88c0030d 	sth	r3,12(r17)
 508c554:	00bfffc4 	movi	r2,-1
 508c558:	90000215 	stw	zero,8(r18)
 508c55c:	90000115 	stw	zero,4(r18)
 508c560:	00000206 	br	508c56c <__ssprint_r+0x1a0>
 508c564:	90000115 	stw	zero,4(r18)
 508c568:	0005883a 	mov	r2,zero
 508c56c:	dfc00917 	ldw	ra,36(sp)
 508c570:	df000817 	ldw	fp,32(sp)
 508c574:	ddc00717 	ldw	r23,28(sp)
 508c578:	dd800617 	ldw	r22,24(sp)
 508c57c:	dd400517 	ldw	r21,20(sp)
 508c580:	dd000417 	ldw	r20,16(sp)
 508c584:	dcc00317 	ldw	r19,12(sp)
 508c588:	dc800217 	ldw	r18,8(sp)
 508c58c:	dc400117 	ldw	r17,4(sp)
 508c590:	dc000017 	ldw	r16,0(sp)
 508c594:	dec00a04 	addi	sp,sp,40
 508c598:	f800283a 	ret

0508c59c <___svfiprintf_internal_r>:
 508c59c:	2880030b 	ldhu	r2,12(r5)
 508c5a0:	deffc804 	addi	sp,sp,-224
 508c5a4:	dcc03115 	stw	r19,196(sp)
 508c5a8:	dfc03715 	stw	ra,220(sp)
 508c5ac:	df003615 	stw	fp,216(sp)
 508c5b0:	ddc03515 	stw	r23,212(sp)
 508c5b4:	dd803415 	stw	r22,208(sp)
 508c5b8:	dd403315 	stw	r21,204(sp)
 508c5bc:	dd003215 	stw	r20,200(sp)
 508c5c0:	dc803015 	stw	r18,192(sp)
 508c5c4:	dc402f15 	stw	r17,188(sp)
 508c5c8:	dc002e15 	stw	r16,184(sp)
 508c5cc:	d9402715 	stw	r5,156(sp)
 508c5d0:	d9002a15 	stw	r4,168(sp)
 508c5d4:	1080200c 	andi	r2,r2,128
 508c5d8:	d9c02315 	stw	r7,140(sp)
 508c5dc:	3027883a 	mov	r19,r6
 508c5e0:	10000226 	beq	r2,zero,508c5ec <___svfiprintf_internal_r+0x50>
 508c5e4:	28800417 	ldw	r2,16(r5)
 508c5e8:	10041d26 	beq	r2,zero,508d660 <___svfiprintf_internal_r+0x10c4>
 508c5ec:	dac01a04 	addi	r11,sp,104
 508c5f0:	dac01e15 	stw	r11,120(sp)
 508c5f4:	d8801e17 	ldw	r2,120(sp)
 508c5f8:	dac019c4 	addi	r11,sp,103
 508c5fc:	dd402a17 	ldw	r21,168(sp)
 508c600:	ddc02717 	ldw	r23,156(sp)
 508c604:	05814274 	movhi	r22,1289
 508c608:	05014274 	movhi	r20,1289
 508c60c:	dac01f15 	stw	r11,124(sp)
 508c610:	12d7c83a 	sub	r11,r2,r11
 508c614:	b5981a04 	addi	r22,r22,24680
 508c618:	a5181604 	addi	r20,r20,24664
 508c61c:	dec01a15 	stw	sp,104(sp)
 508c620:	d8001c15 	stw	zero,112(sp)
 508c624:	d8001b15 	stw	zero,108(sp)
 508c628:	d811883a 	mov	r8,sp
 508c62c:	d8002915 	stw	zero,164(sp)
 508c630:	d8002515 	stw	zero,148(sp)
 508c634:	dac02b15 	stw	r11,172(sp)
 508c638:	98800007 	ldb	r2,0(r19)
 508c63c:	1002dd26 	beq	r2,zero,508d1b4 <___svfiprintf_internal_r+0xc18>
 508c640:	00c00944 	movi	r3,37
 508c644:	9823883a 	mov	r17,r19
 508c648:	10c0021e 	bne	r2,r3,508c654 <___svfiprintf_internal_r+0xb8>
 508c64c:	00001406 	br	508c6a0 <___svfiprintf_internal_r+0x104>
 508c650:	10c00326 	beq	r2,r3,508c660 <___svfiprintf_internal_r+0xc4>
 508c654:	8c400044 	addi	r17,r17,1
 508c658:	88800007 	ldb	r2,0(r17)
 508c65c:	103ffc1e 	bne	r2,zero,508c650 <__alt_data_end+0xfffbe450>
 508c660:	8ce1c83a 	sub	r16,r17,r19
 508c664:	80000e26 	beq	r16,zero,508c6a0 <___svfiprintf_internal_r+0x104>
 508c668:	d8c01c17 	ldw	r3,112(sp)
 508c66c:	d8801b17 	ldw	r2,108(sp)
 508c670:	44c00015 	stw	r19,0(r8)
 508c674:	1c07883a 	add	r3,r3,r16
 508c678:	10800044 	addi	r2,r2,1
 508c67c:	d8c01c15 	stw	r3,112(sp)
 508c680:	44000115 	stw	r16,4(r8)
 508c684:	d8801b15 	stw	r2,108(sp)
 508c688:	00c001c4 	movi	r3,7
 508c68c:	18831e16 	blt	r3,r2,508d308 <___svfiprintf_internal_r+0xd6c>
 508c690:	42000204 	addi	r8,r8,8
 508c694:	dac02517 	ldw	r11,148(sp)
 508c698:	5c17883a 	add	r11,r11,r16
 508c69c:	dac02515 	stw	r11,148(sp)
 508c6a0:	88800007 	ldb	r2,0(r17)
 508c6a4:	1002c526 	beq	r2,zero,508d1bc <___svfiprintf_internal_r+0xc20>
 508c6a8:	88c00047 	ldb	r3,1(r17)
 508c6ac:	8cc00044 	addi	r19,r17,1
 508c6b0:	d8001d85 	stb	zero,118(sp)
 508c6b4:	0009883a 	mov	r4,zero
 508c6b8:	000f883a 	mov	r7,zero
 508c6bc:	043fffc4 	movi	r16,-1
 508c6c0:	d8002415 	stw	zero,144(sp)
 508c6c4:	0025883a 	mov	r18,zero
 508c6c8:	01401604 	movi	r5,88
 508c6cc:	01800244 	movi	r6,9
 508c6d0:	02800a84 	movi	r10,42
 508c6d4:	02401b04 	movi	r9,108
 508c6d8:	9cc00044 	addi	r19,r19,1
 508c6dc:	18bff804 	addi	r2,r3,-32
 508c6e0:	2881dd36 	bltu	r5,r2,508ce58 <___svfiprintf_internal_r+0x8bc>
 508c6e4:	100490ba 	slli	r2,r2,2
 508c6e8:	02c14274 	movhi	r11,1289
 508c6ec:	5af1bf04 	addi	r11,r11,-14596
 508c6f0:	12c5883a 	add	r2,r2,r11
 508c6f4:	10800017 	ldw	r2,0(r2)
 508c6f8:	1000683a 	jmp	r2
 508c6fc:	0508c8f8 	rdprs	r20,zero,8995
 508c700:	0508ce58 	cmpnei	r20,zero,9017
 508c704:	0508ce58 	cmpnei	r20,zero,9017
 508c708:	0508c8ec 	andhi	r20,zero,8995
 508c70c:	0508ce58 	cmpnei	r20,zero,9017
 508c710:	0508ce58 	cmpnei	r20,zero,9017
 508c714:	0508ce58 	cmpnei	r20,zero,9017
 508c718:	0508ce58 	cmpnei	r20,zero,9017
 508c71c:	0508ce58 	cmpnei	r20,zero,9017
 508c720:	0508ce58 	cmpnei	r20,zero,9017
 508c724:	0508c860 	cmpeqi	r20,zero,8993
 508c728:	0508ca3c 	xorhi	r20,zero,9000
 508c72c:	0508ce58 	cmpnei	r20,zero,9017
 508c730:	0508c88c 	andi	r20,zero,8994
 508c734:	0508ce8c 	andi	r20,zero,9018
 508c738:	0508ce58 	cmpnei	r20,zero,9017
 508c73c:	0508ce80 	call	508ce8 <__alt_mem_sdram+0x508ce8>
 508c740:	0508ce20 	cmpeqi	r20,zero,9016
 508c744:	0508ce20 	cmpeqi	r20,zero,9016
 508c748:	0508ce20 	cmpeqi	r20,zero,9016
 508c74c:	0508ce20 	cmpeqi	r20,zero,9016
 508c750:	0508ce20 	cmpeqi	r20,zero,9016
 508c754:	0508ce20 	cmpeqi	r20,zero,9016
 508c758:	0508ce20 	cmpeqi	r20,zero,9016
 508c75c:	0508ce20 	cmpeqi	r20,zero,9016
 508c760:	0508ce20 	cmpeqi	r20,zero,9016
 508c764:	0508ce58 	cmpnei	r20,zero,9017
 508c768:	0508ce58 	cmpnei	r20,zero,9017
 508c76c:	0508ce58 	cmpnei	r20,zero,9017
 508c770:	0508ce58 	cmpnei	r20,zero,9017
 508c774:	0508ce58 	cmpnei	r20,zero,9017
 508c778:	0508ce58 	cmpnei	r20,zero,9017
 508c77c:	0508ce58 	cmpnei	r20,zero,9017
 508c780:	0508ce58 	cmpnei	r20,zero,9017
 508c784:	0508ce58 	cmpnei	r20,zero,9017
 508c788:	0508ce58 	cmpnei	r20,zero,9017
 508c78c:	0508cdbc 	xorhi	r20,zero,9014
 508c790:	0508ce58 	cmpnei	r20,zero,9017
 508c794:	0508ce58 	cmpnei	r20,zero,9017
 508c798:	0508ce58 	cmpnei	r20,zero,9017
 508c79c:	0508ce58 	cmpnei	r20,zero,9017
 508c7a0:	0508ce58 	cmpnei	r20,zero,9017
 508c7a4:	0508ce58 	cmpnei	r20,zero,9017
 508c7a8:	0508ce58 	cmpnei	r20,zero,9017
 508c7ac:	0508ce58 	cmpnei	r20,zero,9017
 508c7b0:	0508ce58 	cmpnei	r20,zero,9017
 508c7b4:	0508ce58 	cmpnei	r20,zero,9017
 508c7b8:	0508cf34 	movhi	r20,9020
 508c7bc:	0508ce58 	cmpnei	r20,zero,9017
 508c7c0:	0508ce58 	cmpnei	r20,zero,9017
 508c7c4:	0508ce58 	cmpnei	r20,zero,9017
 508c7c8:	0508ce58 	cmpnei	r20,zero,9017
 508c7cc:	0508ce58 	cmpnei	r20,zero,9017
 508c7d0:	0508cecc 	andi	r20,zero,9019
 508c7d4:	0508ce58 	cmpnei	r20,zero,9017
 508c7d8:	0508ce58 	cmpnei	r20,zero,9017
 508c7dc:	0508cc00 	call	508cc0 <__alt_mem_sdram+0x508cc0>
 508c7e0:	0508ce58 	cmpnei	r20,zero,9017
 508c7e4:	0508ce58 	cmpnei	r20,zero,9017
 508c7e8:	0508ce58 	cmpnei	r20,zero,9017
 508c7ec:	0508ce58 	cmpnei	r20,zero,9017
 508c7f0:	0508ce58 	cmpnei	r20,zero,9017
 508c7f4:	0508ce58 	cmpnei	r20,zero,9017
 508c7f8:	0508ce58 	cmpnei	r20,zero,9017
 508c7fc:	0508ce58 	cmpnei	r20,zero,9017
 508c800:	0508ce58 	cmpnei	r20,zero,9017
 508c804:	0508ce58 	cmpnei	r20,zero,9017
 508c808:	0508caf0 	cmpltui	r20,zero,9003
 508c80c:	0508cc9c 	xori	r20,zero,9010
 508c810:	0508ce58 	cmpnei	r20,zero,9017
 508c814:	0508ce58 	cmpnei	r20,zero,9017
 508c818:	0508ce58 	cmpnei	r20,zero,9017
 508c81c:	0508cc90 	cmplti	r20,zero,9010
 508c820:	0508cc9c 	xori	r20,zero,9010
 508c824:	0508ce58 	cmpnei	r20,zero,9017
 508c828:	0508ce58 	cmpnei	r20,zero,9017
 508c82c:	0508cc80 	call	508cc8 <__alt_mem_sdram+0x508cc8>
 508c830:	0508ce58 	cmpnei	r20,zero,9017
 508c834:	0508cc44 	movi	r20,9009
 508c838:	0508ca4c 	andi	r20,zero,9001
 508c83c:	0508c898 	cmpnei	r20,zero,8994
 508c840:	0508cdb0 	cmpltui	r20,zero,9014
 508c844:	0508ce58 	cmpnei	r20,zero,9017
 508c848:	0508cd64 	muli	r20,zero,9013
 508c84c:	0508ce58 	cmpnei	r20,zero,9017
 508c850:	0508c9bc 	xorhi	r20,zero,8998
 508c854:	0508ce58 	cmpnei	r20,zero,9017
 508c858:	0508ce58 	cmpnei	r20,zero,9017
 508c85c:	0508c918 	cmpnei	r20,zero,8996
 508c860:	dac02317 	ldw	r11,140(sp)
 508c864:	5ac00017 	ldw	r11,0(r11)
 508c868:	dac02415 	stw	r11,144(sp)
 508c86c:	dac02317 	ldw	r11,140(sp)
 508c870:	58800104 	addi	r2,r11,4
 508c874:	dac02417 	ldw	r11,144(sp)
 508c878:	5802e90e 	bge	r11,zero,508d420 <___svfiprintf_internal_r+0xe84>
 508c87c:	dac02417 	ldw	r11,144(sp)
 508c880:	d8802315 	stw	r2,140(sp)
 508c884:	02d7c83a 	sub	r11,zero,r11
 508c888:	dac02415 	stw	r11,144(sp)
 508c88c:	94800114 	ori	r18,r18,4
 508c890:	98c00007 	ldb	r3,0(r19)
 508c894:	003f9006 	br	508c6d8 <__alt_data_end+0xfffbe4d8>
 508c898:	00800c04 	movi	r2,48
 508c89c:	dac02317 	ldw	r11,140(sp)
 508c8a0:	d8801d05 	stb	r2,116(sp)
 508c8a4:	00801e04 	movi	r2,120
 508c8a8:	d8801d45 	stb	r2,117(sp)
 508c8ac:	d8001d85 	stb	zero,118(sp)
 508c8b0:	58c00104 	addi	r3,r11,4
 508c8b4:	5f000017 	ldw	fp,0(r11)
 508c8b8:	0013883a 	mov	r9,zero
 508c8bc:	90800094 	ori	r2,r18,2
 508c8c0:	80032b16 	blt	r16,zero,508d570 <___svfiprintf_internal_r+0xfd4>
 508c8c4:	00bfdfc4 	movi	r2,-129
 508c8c8:	90a4703a 	and	r18,r18,r2
 508c8cc:	d8c02315 	stw	r3,140(sp)
 508c8d0:	94800094 	ori	r18,r18,2
 508c8d4:	e002dc26 	beq	fp,zero,508d448 <___svfiprintf_internal_r+0xeac>
 508c8d8:	01014274 	movhi	r4,1289
 508c8dc:	2117ad04 	addi	r4,r4,24244
 508c8e0:	0015883a 	mov	r10,zero
 508c8e4:	d9002915 	stw	r4,164(sp)
 508c8e8:	00002306 	br	508c978 <___svfiprintf_internal_r+0x3dc>
 508c8ec:	94800054 	ori	r18,r18,1
 508c8f0:	98c00007 	ldb	r3,0(r19)
 508c8f4:	003f7806 	br	508c6d8 <__alt_data_end+0xfffbe4d8>
 508c8f8:	38803fcc 	andi	r2,r7,255
 508c8fc:	1080201c 	xori	r2,r2,128
 508c900:	10bfe004 	addi	r2,r2,-128
 508c904:	1002f31e 	bne	r2,zero,508d4d4 <___svfiprintf_internal_r+0xf38>
 508c908:	01000044 	movi	r4,1
 508c90c:	01c00804 	movi	r7,32
 508c910:	98c00007 	ldb	r3,0(r19)
 508c914:	003f7006 	br	508c6d8 <__alt_data_end+0xfffbe4d8>
 508c918:	21003fcc 	andi	r4,r4,255
 508c91c:	2003aa1e 	bne	r4,zero,508d7c8 <___svfiprintf_internal_r+0x122c>
 508c920:	00814274 	movhi	r2,1289
 508c924:	1097ad04 	addi	r2,r2,24244
 508c928:	d8802915 	stw	r2,164(sp)
 508c92c:	9080080c 	andi	r2,r18,32
 508c930:	1000ba26 	beq	r2,zero,508cc1c <___svfiprintf_internal_r+0x680>
 508c934:	dac02317 	ldw	r11,140(sp)
 508c938:	5f000017 	ldw	fp,0(r11)
 508c93c:	5a400117 	ldw	r9,4(r11)
 508c940:	5ac00204 	addi	r11,r11,8
 508c944:	dac02315 	stw	r11,140(sp)
 508c948:	9080004c 	andi	r2,r18,1
 508c94c:	10029026 	beq	r2,zero,508d390 <___svfiprintf_internal_r+0xdf4>
 508c950:	e244b03a 	or	r2,fp,r9
 508c954:	1002d41e 	bne	r2,zero,508d4a8 <___svfiprintf_internal_r+0xf0c>
 508c958:	d8001d85 	stb	zero,118(sp)
 508c95c:	80030b16 	blt	r16,zero,508d58c <___svfiprintf_internal_r+0xff0>
 508c960:	00bfdfc4 	movi	r2,-129
 508c964:	90a4703a 	and	r18,r18,r2
 508c968:	0015883a 	mov	r10,zero
 508c96c:	80002426 	beq	r16,zero,508ca00 <___svfiprintf_internal_r+0x464>
 508c970:	0039883a 	mov	fp,zero
 508c974:	0013883a 	mov	r9,zero
 508c978:	d9002917 	ldw	r4,164(sp)
 508c97c:	dc401a04 	addi	r17,sp,104
 508c980:	e08003cc 	andi	r2,fp,15
 508c984:	4806973a 	slli	r3,r9,28
 508c988:	2085883a 	add	r2,r4,r2
 508c98c:	e038d13a 	srli	fp,fp,4
 508c990:	10800003 	ldbu	r2,0(r2)
 508c994:	4812d13a 	srli	r9,r9,4
 508c998:	8c7fffc4 	addi	r17,r17,-1
 508c99c:	1f38b03a 	or	fp,r3,fp
 508c9a0:	88800005 	stb	r2,0(r17)
 508c9a4:	e244b03a 	or	r2,fp,r9
 508c9a8:	103ff51e 	bne	r2,zero,508c980 <__alt_data_end+0xfffbe780>
 508c9ac:	dac01e17 	ldw	r11,120(sp)
 508c9b0:	5c57c83a 	sub	r11,r11,r17
 508c9b4:	dac02115 	stw	r11,132(sp)
 508c9b8:	00001406 	br	508ca0c <___svfiprintf_internal_r+0x470>
 508c9bc:	21003fcc 	andi	r4,r4,255
 508c9c0:	2003741e 	bne	r4,zero,508d794 <___svfiprintf_internal_r+0x11f8>
 508c9c4:	9080080c 	andi	r2,r18,32
 508c9c8:	10014526 	beq	r2,zero,508cee0 <___svfiprintf_internal_r+0x944>
 508c9cc:	dac02317 	ldw	r11,140(sp)
 508c9d0:	d8001d85 	stb	zero,118(sp)
 508c9d4:	58c00204 	addi	r3,r11,8
 508c9d8:	5f000017 	ldw	fp,0(r11)
 508c9dc:	5a400117 	ldw	r9,4(r11)
 508c9e0:	8002d916 	blt	r16,zero,508d548 <___svfiprintf_internal_r+0xfac>
 508c9e4:	013fdfc4 	movi	r4,-129
 508c9e8:	e244b03a 	or	r2,fp,r9
 508c9ec:	d8c02315 	stw	r3,140(sp)
 508c9f0:	9124703a 	and	r18,r18,r4
 508c9f4:	0015883a 	mov	r10,zero
 508c9f8:	1000b91e 	bne	r2,zero,508cce0 <___svfiprintf_internal_r+0x744>
 508c9fc:	8002e61e 	bne	r16,zero,508d598 <___svfiprintf_internal_r+0xffc>
 508ca00:	0021883a 	mov	r16,zero
 508ca04:	d8002115 	stw	zero,132(sp)
 508ca08:	dc401a04 	addi	r17,sp,104
 508ca0c:	d8c02117 	ldw	r3,132(sp)
 508ca10:	dc002015 	stw	r16,128(sp)
 508ca14:	80c0010e 	bge	r16,r3,508ca1c <___svfiprintf_internal_r+0x480>
 508ca18:	d8c02015 	stw	r3,128(sp)
 508ca1c:	52803fcc 	andi	r10,r10,255
 508ca20:	5280201c 	xori	r10,r10,128
 508ca24:	52bfe004 	addi	r10,r10,-128
 508ca28:	50003c26 	beq	r10,zero,508cb1c <___svfiprintf_internal_r+0x580>
 508ca2c:	dac02017 	ldw	r11,128(sp)
 508ca30:	5ac00044 	addi	r11,r11,1
 508ca34:	dac02015 	stw	r11,128(sp)
 508ca38:	00003806 	br	508cb1c <___svfiprintf_internal_r+0x580>
 508ca3c:	01000044 	movi	r4,1
 508ca40:	01c00ac4 	movi	r7,43
 508ca44:	98c00007 	ldb	r3,0(r19)
 508ca48:	003f2306 	br	508c6d8 <__alt_data_end+0xfffbe4d8>
 508ca4c:	21003fcc 	andi	r4,r4,255
 508ca50:	2003481e 	bne	r4,zero,508d774 <___svfiprintf_internal_r+0x11d8>
 508ca54:	9080080c 	andi	r2,r18,32
 508ca58:	10013b26 	beq	r2,zero,508cf48 <___svfiprintf_internal_r+0x9ac>
 508ca5c:	dac02317 	ldw	r11,140(sp)
 508ca60:	d8001d85 	stb	zero,118(sp)
 508ca64:	58800204 	addi	r2,r11,8
 508ca68:	5f000017 	ldw	fp,0(r11)
 508ca6c:	5a400117 	ldw	r9,4(r11)
 508ca70:	8002a816 	blt	r16,zero,508d514 <___svfiprintf_internal_r+0xf78>
 508ca74:	013fdfc4 	movi	r4,-129
 508ca78:	e246b03a 	or	r3,fp,r9
 508ca7c:	d8802315 	stw	r2,140(sp)
 508ca80:	9124703a 	and	r18,r18,r4
 508ca84:	18013c26 	beq	r3,zero,508cf78 <___svfiprintf_internal_r+0x9dc>
 508ca88:	0015883a 	mov	r10,zero
 508ca8c:	dc401a04 	addi	r17,sp,104
 508ca90:	e006d0fa 	srli	r3,fp,3
 508ca94:	4808977a 	slli	r4,r9,29
 508ca98:	4812d0fa 	srli	r9,r9,3
 508ca9c:	e70001cc 	andi	fp,fp,7
 508caa0:	e0800c04 	addi	r2,fp,48
 508caa4:	8c7fffc4 	addi	r17,r17,-1
 508caa8:	20f8b03a 	or	fp,r4,r3
 508caac:	88800005 	stb	r2,0(r17)
 508cab0:	e246b03a 	or	r3,fp,r9
 508cab4:	183ff61e 	bne	r3,zero,508ca90 <__alt_data_end+0xfffbe890>
 508cab8:	90c0004c 	andi	r3,r18,1
 508cabc:	1800a526 	beq	r3,zero,508cd54 <___svfiprintf_internal_r+0x7b8>
 508cac0:	10803fcc 	andi	r2,r2,255
 508cac4:	1080201c 	xori	r2,r2,128
 508cac8:	10bfe004 	addi	r2,r2,-128
 508cacc:	00c00c04 	movi	r3,48
 508cad0:	10ffb626 	beq	r2,r3,508c9ac <__alt_data_end+0xfffbe7ac>
 508cad4:	88ffffc5 	stb	r3,-1(r17)
 508cad8:	d8c01e17 	ldw	r3,120(sp)
 508cadc:	88bfffc4 	addi	r2,r17,-1
 508cae0:	1023883a 	mov	r17,r2
 508cae4:	1887c83a 	sub	r3,r3,r2
 508cae8:	d8c02115 	stw	r3,132(sp)
 508caec:	003fc706 	br	508ca0c <__alt_data_end+0xfffbe80c>
 508caf0:	dac02317 	ldw	r11,140(sp)
 508caf4:	00c00044 	movi	r3,1
 508caf8:	d8c02015 	stw	r3,128(sp)
 508cafc:	58800017 	ldw	r2,0(r11)
 508cb00:	5ac00104 	addi	r11,r11,4
 508cb04:	d8001d85 	stb	zero,118(sp)
 508cb08:	d8801005 	stb	r2,64(sp)
 508cb0c:	dac02315 	stw	r11,140(sp)
 508cb10:	d8c02115 	stw	r3,132(sp)
 508cb14:	dc401004 	addi	r17,sp,64
 508cb18:	0021883a 	mov	r16,zero
 508cb1c:	90c0008c 	andi	r3,r18,2
 508cb20:	d8c02215 	stw	r3,136(sp)
 508cb24:	18000326 	beq	r3,zero,508cb34 <___svfiprintf_internal_r+0x598>
 508cb28:	dac02017 	ldw	r11,128(sp)
 508cb2c:	5ac00084 	addi	r11,r11,2
 508cb30:	dac02015 	stw	r11,128(sp)
 508cb34:	90c0210c 	andi	r3,r18,132
 508cb38:	d8c02615 	stw	r3,152(sp)
 508cb3c:	1801131e 	bne	r3,zero,508cf8c <___svfiprintf_internal_r+0x9f0>
 508cb40:	dac02417 	ldw	r11,144(sp)
 508cb44:	d8c02017 	ldw	r3,128(sp)
 508cb48:	58f9c83a 	sub	fp,r11,r3
 508cb4c:	07010f0e 	bge	zero,fp,508cf8c <___svfiprintf_internal_r+0x9f0>
 508cb50:	02400404 	movi	r9,16
 508cb54:	d8c01c17 	ldw	r3,112(sp)
 508cb58:	d8801b17 	ldw	r2,108(sp)
 508cb5c:	4f02d60e 	bge	r9,fp,508d6b8 <___svfiprintf_internal_r+0x111c>
 508cb60:	01414274 	movhi	r5,1289
 508cb64:	29581a04 	addi	r5,r5,24680
 508cb68:	d9402815 	stw	r5,160(sp)
 508cb6c:	028001c4 	movi	r10,7
 508cb70:	00000306 	br	508cb80 <___svfiprintf_internal_r+0x5e4>
 508cb74:	e73ffc04 	addi	fp,fp,-16
 508cb78:	42000204 	addi	r8,r8,8
 508cb7c:	4f00150e 	bge	r9,fp,508cbd4 <___svfiprintf_internal_r+0x638>
 508cb80:	18c00404 	addi	r3,r3,16
 508cb84:	10800044 	addi	r2,r2,1
 508cb88:	45800015 	stw	r22,0(r8)
 508cb8c:	42400115 	stw	r9,4(r8)
 508cb90:	d8c01c15 	stw	r3,112(sp)
 508cb94:	d8801b15 	stw	r2,108(sp)
 508cb98:	50bff60e 	bge	r10,r2,508cb74 <__alt_data_end+0xfffbe974>
 508cb9c:	d9801a04 	addi	r6,sp,104
 508cba0:	b80b883a 	mov	r5,r23
 508cba4:	a809883a 	mov	r4,r21
 508cba8:	da402c15 	stw	r9,176(sp)
 508cbac:	da802d15 	stw	r10,180(sp)
 508cbb0:	508c3cc0 	call	508c3cc <__ssprint_r>
 508cbb4:	da402c17 	ldw	r9,176(sp)
 508cbb8:	da802d17 	ldw	r10,180(sp)
 508cbbc:	1001851e 	bne	r2,zero,508d1d4 <___svfiprintf_internal_r+0xc38>
 508cbc0:	e73ffc04 	addi	fp,fp,-16
 508cbc4:	d8c01c17 	ldw	r3,112(sp)
 508cbc8:	d8801b17 	ldw	r2,108(sp)
 508cbcc:	d811883a 	mov	r8,sp
 508cbd0:	4f3feb16 	blt	r9,fp,508cb80 <__alt_data_end+0xfffbe980>
 508cbd4:	dac02817 	ldw	r11,160(sp)
 508cbd8:	e0c7883a 	add	r3,fp,r3
 508cbdc:	10800044 	addi	r2,r2,1
 508cbe0:	42c00015 	stw	r11,0(r8)
 508cbe4:	47000115 	stw	fp,4(r8)
 508cbe8:	d8c01c15 	stw	r3,112(sp)
 508cbec:	d8801b15 	stw	r2,108(sp)
 508cbf0:	010001c4 	movi	r4,7
 508cbf4:	2081ee16 	blt	r4,r2,508d3b0 <___svfiprintf_internal_r+0xe14>
 508cbf8:	42000204 	addi	r8,r8,8
 508cbfc:	0000e506 	br	508cf94 <___svfiprintf_internal_r+0x9f8>
 508cc00:	21003fcc 	andi	r4,r4,255
 508cc04:	2002dd1e 	bne	r4,zero,508d77c <___svfiprintf_internal_r+0x11e0>
 508cc08:	00814274 	movhi	r2,1289
 508cc0c:	1097a804 	addi	r2,r2,24224
 508cc10:	d8802915 	stw	r2,164(sp)
 508cc14:	9080080c 	andi	r2,r18,32
 508cc18:	103f461e 	bne	r2,zero,508c934 <__alt_data_end+0xfffbe734>
 508cc1c:	9080040c 	andi	r2,r18,16
 508cc20:	10022e1e 	bne	r2,zero,508d4dc <___svfiprintf_internal_r+0xf40>
 508cc24:	9080100c 	andi	r2,r18,64
 508cc28:	dac02317 	ldw	r11,140(sp)
 508cc2c:	10027326 	beq	r2,zero,508d5fc <___svfiprintf_internal_r+0x1060>
 508cc30:	5f00000b 	ldhu	fp,0(r11)
 508cc34:	5ac00104 	addi	r11,r11,4
 508cc38:	0013883a 	mov	r9,zero
 508cc3c:	dac02315 	stw	r11,140(sp)
 508cc40:	003f4106 	br	508c948 <__alt_data_end+0xfffbe748>
 508cc44:	21003fcc 	andi	r4,r4,255
 508cc48:	2002e11e 	bne	r4,zero,508d7d0 <___svfiprintf_internal_r+0x1234>
 508cc4c:	9080080c 	andi	r2,r18,32
 508cc50:	1002011e 	bne	r2,zero,508d458 <___svfiprintf_internal_r+0xebc>
 508cc54:	9080040c 	andi	r2,r18,16
 508cc58:	10023e1e 	bne	r2,zero,508d554 <___svfiprintf_internal_r+0xfb8>
 508cc5c:	9480100c 	andi	r18,r18,64
 508cc60:	90023c26 	beq	r18,zero,508d554 <___svfiprintf_internal_r+0xfb8>
 508cc64:	dac02317 	ldw	r11,140(sp)
 508cc68:	58800017 	ldw	r2,0(r11)
 508cc6c:	5ac00104 	addi	r11,r11,4
 508cc70:	dac02315 	stw	r11,140(sp)
 508cc74:	dac02517 	ldw	r11,148(sp)
 508cc78:	12c0000d 	sth	r11,0(r2)
 508cc7c:	003e6e06 	br	508c638 <__alt_data_end+0xfffbe438>
 508cc80:	98c00007 	ldb	r3,0(r19)
 508cc84:	1a422926 	beq	r3,r9,508d52c <___svfiprintf_internal_r+0xf90>
 508cc88:	94800414 	ori	r18,r18,16
 508cc8c:	003e9206 	br	508c6d8 <__alt_data_end+0xfffbe4d8>
 508cc90:	94801014 	ori	r18,r18,64
 508cc94:	98c00007 	ldb	r3,0(r19)
 508cc98:	003e8f06 	br	508c6d8 <__alt_data_end+0xfffbe4d8>
 508cc9c:	21003fcc 	andi	r4,r4,255
 508cca0:	2002c71e 	bne	r4,zero,508d7c0 <___svfiprintf_internal_r+0x1224>
 508cca4:	9080080c 	andi	r2,r18,32
 508cca8:	10004926 	beq	r2,zero,508cdd0 <___svfiprintf_internal_r+0x834>
 508ccac:	dac02317 	ldw	r11,140(sp)
 508ccb0:	58800117 	ldw	r2,4(r11)
 508ccb4:	5f000017 	ldw	fp,0(r11)
 508ccb8:	5ac00204 	addi	r11,r11,8
 508ccbc:	dac02315 	stw	r11,140(sp)
 508ccc0:	1013883a 	mov	r9,r2
 508ccc4:	10004b16 	blt	r2,zero,508cdf4 <___svfiprintf_internal_r+0x858>
 508ccc8:	da801d83 	ldbu	r10,118(sp)
 508cccc:	8001cb16 	blt	r16,zero,508d3fc <___svfiprintf_internal_r+0xe60>
 508ccd0:	00ffdfc4 	movi	r3,-129
 508ccd4:	e244b03a 	or	r2,fp,r9
 508ccd8:	90e4703a 	and	r18,r18,r3
 508ccdc:	103f4726 	beq	r2,zero,508c9fc <__alt_data_end+0xfffbe7fc>
 508cce0:	48008c26 	beq	r9,zero,508cf14 <___svfiprintf_internal_r+0x978>
 508cce4:	dc802015 	stw	r18,128(sp)
 508cce8:	dc002115 	stw	r16,132(sp)
 508ccec:	dc401a04 	addi	r17,sp,104
 508ccf0:	e021883a 	mov	r16,fp
 508ccf4:	da002215 	stw	r8,136(sp)
 508ccf8:	5039883a 	mov	fp,r10
 508ccfc:	4825883a 	mov	r18,r9
 508cd00:	8009883a 	mov	r4,r16
 508cd04:	900b883a 	mov	r5,r18
 508cd08:	01800284 	movi	r6,10
 508cd0c:	000f883a 	mov	r7,zero
 508cd10:	508fccc0 	call	508fccc <__umoddi3>
 508cd14:	10800c04 	addi	r2,r2,48
 508cd18:	8c7fffc4 	addi	r17,r17,-1
 508cd1c:	8009883a 	mov	r4,r16
 508cd20:	900b883a 	mov	r5,r18
 508cd24:	88800005 	stb	r2,0(r17)
 508cd28:	01800284 	movi	r6,10
 508cd2c:	000f883a 	mov	r7,zero
 508cd30:	508f7540 	call	508f754 <__udivdi3>
 508cd34:	1021883a 	mov	r16,r2
 508cd38:	10c4b03a 	or	r2,r2,r3
 508cd3c:	1825883a 	mov	r18,r3
 508cd40:	103fef1e 	bne	r2,zero,508cd00 <__alt_data_end+0xfffbeb00>
 508cd44:	dc802017 	ldw	r18,128(sp)
 508cd48:	dc002117 	ldw	r16,132(sp)
 508cd4c:	da002217 	ldw	r8,136(sp)
 508cd50:	e015883a 	mov	r10,fp
 508cd54:	d8c01e17 	ldw	r3,120(sp)
 508cd58:	1c47c83a 	sub	r3,r3,r17
 508cd5c:	d8c02115 	stw	r3,132(sp)
 508cd60:	003f2a06 	br	508ca0c <__alt_data_end+0xfffbe80c>
 508cd64:	dac02317 	ldw	r11,140(sp)
 508cd68:	d8001d85 	stb	zero,118(sp)
 508cd6c:	5c400017 	ldw	r17,0(r11)
 508cd70:	5f000104 	addi	fp,r11,4
 508cd74:	88022f26 	beq	r17,zero,508d634 <___svfiprintf_internal_r+0x1098>
 508cd78:	80022516 	blt	r16,zero,508d610 <___svfiprintf_internal_r+0x1074>
 508cd7c:	800d883a 	mov	r6,r16
 508cd80:	000b883a 	mov	r5,zero
 508cd84:	8809883a 	mov	r4,r17
 508cd88:	da002c15 	stw	r8,176(sp)
 508cd8c:	508a6dc0 	call	508a6dc <memchr>
 508cd90:	da002c17 	ldw	r8,176(sp)
 508cd94:	10026426 	beq	r2,zero,508d728 <___svfiprintf_internal_r+0x118c>
 508cd98:	1445c83a 	sub	r2,r2,r17
 508cd9c:	d8802115 	stw	r2,132(sp)
 508cda0:	da801d83 	ldbu	r10,118(sp)
 508cda4:	df002315 	stw	fp,140(sp)
 508cda8:	0021883a 	mov	r16,zero
 508cdac:	003f1706 	br	508ca0c <__alt_data_end+0xfffbe80c>
 508cdb0:	94800814 	ori	r18,r18,32
 508cdb4:	98c00007 	ldb	r3,0(r19)
 508cdb8:	003e4706 	br	508c6d8 <__alt_data_end+0xfffbe4d8>
 508cdbc:	21003fcc 	andi	r4,r4,255
 508cdc0:	2002701e 	bne	r4,zero,508d784 <___svfiprintf_internal_r+0x11e8>
 508cdc4:	94800414 	ori	r18,r18,16
 508cdc8:	9080080c 	andi	r2,r18,32
 508cdcc:	103fb71e 	bne	r2,zero,508ccac <__alt_data_end+0xfffbeaac>
 508cdd0:	9080040c 	andi	r2,r18,16
 508cdd4:	1001ab26 	beq	r2,zero,508d484 <___svfiprintf_internal_r+0xee8>
 508cdd8:	dac02317 	ldw	r11,140(sp)
 508cddc:	5f000017 	ldw	fp,0(r11)
 508cde0:	5ac00104 	addi	r11,r11,4
 508cde4:	dac02315 	stw	r11,140(sp)
 508cde8:	e013d7fa 	srai	r9,fp,31
 508cdec:	4805883a 	mov	r2,r9
 508cdf0:	103fb50e 	bge	r2,zero,508ccc8 <__alt_data_end+0xfffbeac8>
 508cdf4:	0739c83a 	sub	fp,zero,fp
 508cdf8:	02800b44 	movi	r10,45
 508cdfc:	e004c03a 	cmpne	r2,fp,zero
 508ce00:	0253c83a 	sub	r9,zero,r9
 508ce04:	da801d85 	stb	r10,118(sp)
 508ce08:	4893c83a 	sub	r9,r9,r2
 508ce0c:	80023016 	blt	r16,zero,508d6d0 <___svfiprintf_internal_r+0x1134>
 508ce10:	00bfdfc4 	movi	r2,-129
 508ce14:	90a4703a 	and	r18,r18,r2
 508ce18:	483fb21e 	bne	r9,zero,508cce4 <__alt_data_end+0xfffbeae4>
 508ce1c:	00003d06 	br	508cf14 <___svfiprintf_internal_r+0x978>
 508ce20:	9817883a 	mov	r11,r19
 508ce24:	d8002415 	stw	zero,144(sp)
 508ce28:	18bff404 	addi	r2,r3,-48
 508ce2c:	0019883a 	mov	r12,zero
 508ce30:	58c00007 	ldb	r3,0(r11)
 508ce34:	630002a4 	muli	r12,r12,10
 508ce38:	9cc00044 	addi	r19,r19,1
 508ce3c:	9817883a 	mov	r11,r19
 508ce40:	1319883a 	add	r12,r2,r12
 508ce44:	18bff404 	addi	r2,r3,-48
 508ce48:	30bff92e 	bgeu	r6,r2,508ce30 <__alt_data_end+0xfffbec30>
 508ce4c:	db002415 	stw	r12,144(sp)
 508ce50:	18bff804 	addi	r2,r3,-32
 508ce54:	28be232e 	bgeu	r5,r2,508c6e4 <__alt_data_end+0xfffbe4e4>
 508ce58:	21003fcc 	andi	r4,r4,255
 508ce5c:	20024b1e 	bne	r4,zero,508d78c <___svfiprintf_internal_r+0x11f0>
 508ce60:	1800d626 	beq	r3,zero,508d1bc <___svfiprintf_internal_r+0xc20>
 508ce64:	02c00044 	movi	r11,1
 508ce68:	dac02015 	stw	r11,128(sp)
 508ce6c:	d8c01005 	stb	r3,64(sp)
 508ce70:	d8001d85 	stb	zero,118(sp)
 508ce74:	dac02115 	stw	r11,132(sp)
 508ce78:	dc401004 	addi	r17,sp,64
 508ce7c:	003f2606 	br	508cb18 <__alt_data_end+0xfffbe918>
 508ce80:	94802014 	ori	r18,r18,128
 508ce84:	98c00007 	ldb	r3,0(r19)
 508ce88:	003e1306 	br	508c6d8 <__alt_data_end+0xfffbe4d8>
 508ce8c:	98c00007 	ldb	r3,0(r19)
 508ce90:	9ac00044 	addi	r11,r19,1
 508ce94:	1a822b26 	beq	r3,r10,508d744 <___svfiprintf_internal_r+0x11a8>
 508ce98:	18bff404 	addi	r2,r3,-48
 508ce9c:	0021883a 	mov	r16,zero
 508cea0:	30821e36 	bltu	r6,r2,508d71c <___svfiprintf_internal_r+0x1180>
 508cea4:	58c00007 	ldb	r3,0(r11)
 508cea8:	840002a4 	muli	r16,r16,10
 508ceac:	5cc00044 	addi	r19,r11,1
 508ceb0:	9817883a 	mov	r11,r19
 508ceb4:	80a1883a 	add	r16,r16,r2
 508ceb8:	18bff404 	addi	r2,r3,-48
 508cebc:	30bff92e 	bgeu	r6,r2,508cea4 <__alt_data_end+0xfffbeca4>
 508cec0:	803e060e 	bge	r16,zero,508c6dc <__alt_data_end+0xfffbe4dc>
 508cec4:	043fffc4 	movi	r16,-1
 508cec8:	003e0406 	br	508c6dc <__alt_data_end+0xfffbe4dc>
 508cecc:	21003fcc 	andi	r4,r4,255
 508ced0:	2002371e 	bne	r4,zero,508d7b0 <___svfiprintf_internal_r+0x1214>
 508ced4:	94800414 	ori	r18,r18,16
 508ced8:	9080080c 	andi	r2,r18,32
 508cedc:	103ebb1e 	bne	r2,zero,508c9cc <__alt_data_end+0xfffbe7cc>
 508cee0:	9080040c 	andi	r2,r18,16
 508cee4:	10013b26 	beq	r2,zero,508d3d4 <___svfiprintf_internal_r+0xe38>
 508cee8:	dac02317 	ldw	r11,140(sp)
 508ceec:	d8001d85 	stb	zero,118(sp)
 508cef0:	0013883a 	mov	r9,zero
 508cef4:	58800104 	addi	r2,r11,4
 508cef8:	5f000017 	ldw	fp,0(r11)
 508cefc:	80013d16 	blt	r16,zero,508d3f4 <___svfiprintf_internal_r+0xe58>
 508cf00:	00ffdfc4 	movi	r3,-129
 508cf04:	d8802315 	stw	r2,140(sp)
 508cf08:	90e4703a 	and	r18,r18,r3
 508cf0c:	0015883a 	mov	r10,zero
 508cf10:	e03eba26 	beq	fp,zero,508c9fc <__alt_data_end+0xfffbe7fc>
 508cf14:	00800244 	movi	r2,9
 508cf18:	173f7236 	bltu	r2,fp,508cce4 <__alt_data_end+0xfffbeae4>
 508cf1c:	dac02b17 	ldw	r11,172(sp)
 508cf20:	e7000c04 	addi	fp,fp,48
 508cf24:	df0019c5 	stb	fp,103(sp)
 508cf28:	dac02115 	stw	r11,132(sp)
 508cf2c:	dc4019c4 	addi	r17,sp,103
 508cf30:	003eb606 	br	508ca0c <__alt_data_end+0xfffbe80c>
 508cf34:	21003fcc 	andi	r4,r4,255
 508cf38:	20021f1e 	bne	r4,zero,508d7b8 <___svfiprintf_internal_r+0x121c>
 508cf3c:	94800414 	ori	r18,r18,16
 508cf40:	9080080c 	andi	r2,r18,32
 508cf44:	103ec51e 	bne	r2,zero,508ca5c <__alt_data_end+0xfffbe85c>
 508cf48:	9080040c 	andi	r2,r18,16
 508cf4c:	10016926 	beq	r2,zero,508d4f4 <___svfiprintf_internal_r+0xf58>
 508cf50:	dac02317 	ldw	r11,140(sp)
 508cf54:	d8001d85 	stb	zero,118(sp)
 508cf58:	0013883a 	mov	r9,zero
 508cf5c:	58800104 	addi	r2,r11,4
 508cf60:	5f000017 	ldw	fp,0(r11)
 508cf64:	80016b16 	blt	r16,zero,508d514 <___svfiprintf_internal_r+0xf78>
 508cf68:	00ffdfc4 	movi	r3,-129
 508cf6c:	d8802315 	stw	r2,140(sp)
 508cf70:	90e4703a 	and	r18,r18,r3
 508cf74:	e03ec41e 	bne	fp,zero,508ca88 <__alt_data_end+0xfffbe888>
 508cf78:	0015883a 	mov	r10,zero
 508cf7c:	8001c226 	beq	r16,zero,508d688 <___svfiprintf_internal_r+0x10ec>
 508cf80:	0039883a 	mov	fp,zero
 508cf84:	0013883a 	mov	r9,zero
 508cf88:	003ec006 	br	508ca8c <__alt_data_end+0xfffbe88c>
 508cf8c:	d8c01c17 	ldw	r3,112(sp)
 508cf90:	d8801b17 	ldw	r2,108(sp)
 508cf94:	d9001d87 	ldb	r4,118(sp)
 508cf98:	20000b26 	beq	r4,zero,508cfc8 <___svfiprintf_internal_r+0xa2c>
 508cf9c:	d9001d84 	addi	r4,sp,118
 508cfa0:	18c00044 	addi	r3,r3,1
 508cfa4:	10800044 	addi	r2,r2,1
 508cfa8:	41000015 	stw	r4,0(r8)
 508cfac:	01000044 	movi	r4,1
 508cfb0:	41000115 	stw	r4,4(r8)
 508cfb4:	d8c01c15 	stw	r3,112(sp)
 508cfb8:	d8801b15 	stw	r2,108(sp)
 508cfbc:	010001c4 	movi	r4,7
 508cfc0:	2080e116 	blt	r4,r2,508d348 <___svfiprintf_internal_r+0xdac>
 508cfc4:	42000204 	addi	r8,r8,8
 508cfc8:	dac02217 	ldw	r11,136(sp)
 508cfcc:	58000b26 	beq	r11,zero,508cffc <___svfiprintf_internal_r+0xa60>
 508cfd0:	d9001d04 	addi	r4,sp,116
 508cfd4:	18c00084 	addi	r3,r3,2
 508cfd8:	10800044 	addi	r2,r2,1
 508cfdc:	41000015 	stw	r4,0(r8)
 508cfe0:	01000084 	movi	r4,2
 508cfe4:	41000115 	stw	r4,4(r8)
 508cfe8:	d8c01c15 	stw	r3,112(sp)
 508cfec:	d8801b15 	stw	r2,108(sp)
 508cff0:	010001c4 	movi	r4,7
 508cff4:	2080dd16 	blt	r4,r2,508d36c <___svfiprintf_internal_r+0xdd0>
 508cff8:	42000204 	addi	r8,r8,8
 508cffc:	dac02617 	ldw	r11,152(sp)
 508d000:	01002004 	movi	r4,128
 508d004:	59008426 	beq	r11,r4,508d218 <___svfiprintf_internal_r+0xc7c>
 508d008:	dac02117 	ldw	r11,132(sp)
 508d00c:	82e1c83a 	sub	r16,r16,r11
 508d010:	0400270e 	bge	zero,r16,508d0b0 <___svfiprintf_internal_r+0xb14>
 508d014:	01c00404 	movi	r7,16
 508d018:	3c016a0e 	bge	r7,r16,508d5c4 <___svfiprintf_internal_r+0x1028>
 508d01c:	01414274 	movhi	r5,1289
 508d020:	29581604 	addi	r5,r5,24664
 508d024:	d9402215 	stw	r5,136(sp)
 508d028:	070001c4 	movi	fp,7
 508d02c:	00000306 	br	508d03c <___svfiprintf_internal_r+0xaa0>
 508d030:	843ffc04 	addi	r16,r16,-16
 508d034:	42000204 	addi	r8,r8,8
 508d038:	3c00130e 	bge	r7,r16,508d088 <___svfiprintf_internal_r+0xaec>
 508d03c:	18c00404 	addi	r3,r3,16
 508d040:	10800044 	addi	r2,r2,1
 508d044:	45000015 	stw	r20,0(r8)
 508d048:	41c00115 	stw	r7,4(r8)
 508d04c:	d8c01c15 	stw	r3,112(sp)
 508d050:	d8801b15 	stw	r2,108(sp)
 508d054:	e0bff60e 	bge	fp,r2,508d030 <__alt_data_end+0xfffbee30>
 508d058:	d9801a04 	addi	r6,sp,104
 508d05c:	b80b883a 	mov	r5,r23
 508d060:	a809883a 	mov	r4,r21
 508d064:	d9c02c15 	stw	r7,176(sp)
 508d068:	508c3cc0 	call	508c3cc <__ssprint_r>
 508d06c:	d9c02c17 	ldw	r7,176(sp)
 508d070:	1000581e 	bne	r2,zero,508d1d4 <___svfiprintf_internal_r+0xc38>
 508d074:	843ffc04 	addi	r16,r16,-16
 508d078:	d8c01c17 	ldw	r3,112(sp)
 508d07c:	d8801b17 	ldw	r2,108(sp)
 508d080:	d811883a 	mov	r8,sp
 508d084:	3c3fed16 	blt	r7,r16,508d03c <__alt_data_end+0xfffbee3c>
 508d088:	dac02217 	ldw	r11,136(sp)
 508d08c:	1c07883a 	add	r3,r3,r16
 508d090:	10800044 	addi	r2,r2,1
 508d094:	42c00015 	stw	r11,0(r8)
 508d098:	44000115 	stw	r16,4(r8)
 508d09c:	d8c01c15 	stw	r3,112(sp)
 508d0a0:	d8801b15 	stw	r2,108(sp)
 508d0a4:	010001c4 	movi	r4,7
 508d0a8:	20809e16 	blt	r4,r2,508d324 <___svfiprintf_internal_r+0xd88>
 508d0ac:	42000204 	addi	r8,r8,8
 508d0b0:	dac02117 	ldw	r11,132(sp)
 508d0b4:	10800044 	addi	r2,r2,1
 508d0b8:	44400015 	stw	r17,0(r8)
 508d0bc:	58c7883a 	add	r3,r11,r3
 508d0c0:	42c00115 	stw	r11,4(r8)
 508d0c4:	d8c01c15 	stw	r3,112(sp)
 508d0c8:	d8801b15 	stw	r2,108(sp)
 508d0cc:	010001c4 	movi	r4,7
 508d0d0:	20807f16 	blt	r4,r2,508d2d0 <___svfiprintf_internal_r+0xd34>
 508d0d4:	42000204 	addi	r8,r8,8
 508d0d8:	9480010c 	andi	r18,r18,4
 508d0dc:	90002926 	beq	r18,zero,508d184 <___svfiprintf_internal_r+0xbe8>
 508d0e0:	dac02417 	ldw	r11,144(sp)
 508d0e4:	d8802017 	ldw	r2,128(sp)
 508d0e8:	58a1c83a 	sub	r16,r11,r2
 508d0ec:	0400250e 	bge	zero,r16,508d184 <___svfiprintf_internal_r+0xbe8>
 508d0f0:	04400404 	movi	r17,16
 508d0f4:	d8801b17 	ldw	r2,108(sp)
 508d0f8:	8c017c0e 	bge	r17,r16,508d6ec <___svfiprintf_internal_r+0x1150>
 508d0fc:	01414274 	movhi	r5,1289
 508d100:	29581a04 	addi	r5,r5,24680
 508d104:	d9402815 	stw	r5,160(sp)
 508d108:	048001c4 	movi	r18,7
 508d10c:	00000306 	br	508d11c <___svfiprintf_internal_r+0xb80>
 508d110:	843ffc04 	addi	r16,r16,-16
 508d114:	42000204 	addi	r8,r8,8
 508d118:	8c00110e 	bge	r17,r16,508d160 <___svfiprintf_internal_r+0xbc4>
 508d11c:	18c00404 	addi	r3,r3,16
 508d120:	10800044 	addi	r2,r2,1
 508d124:	45800015 	stw	r22,0(r8)
 508d128:	44400115 	stw	r17,4(r8)
 508d12c:	d8c01c15 	stw	r3,112(sp)
 508d130:	d8801b15 	stw	r2,108(sp)
 508d134:	90bff60e 	bge	r18,r2,508d110 <__alt_data_end+0xfffbef10>
 508d138:	d9801a04 	addi	r6,sp,104
 508d13c:	b80b883a 	mov	r5,r23
 508d140:	a809883a 	mov	r4,r21
 508d144:	508c3cc0 	call	508c3cc <__ssprint_r>
 508d148:	1000221e 	bne	r2,zero,508d1d4 <___svfiprintf_internal_r+0xc38>
 508d14c:	843ffc04 	addi	r16,r16,-16
 508d150:	d8c01c17 	ldw	r3,112(sp)
 508d154:	d8801b17 	ldw	r2,108(sp)
 508d158:	d811883a 	mov	r8,sp
 508d15c:	8c3fef16 	blt	r17,r16,508d11c <__alt_data_end+0xfffbef1c>
 508d160:	dac02817 	ldw	r11,160(sp)
 508d164:	1c07883a 	add	r3,r3,r16
 508d168:	10800044 	addi	r2,r2,1
 508d16c:	42c00015 	stw	r11,0(r8)
 508d170:	44000115 	stw	r16,4(r8)
 508d174:	d8c01c15 	stw	r3,112(sp)
 508d178:	d8801b15 	stw	r2,108(sp)
 508d17c:	010001c4 	movi	r4,7
 508d180:	2080aa16 	blt	r4,r2,508d42c <___svfiprintf_internal_r+0xe90>
 508d184:	d8802417 	ldw	r2,144(sp)
 508d188:	dac02017 	ldw	r11,128(sp)
 508d18c:	12c0010e 	bge	r2,r11,508d194 <___svfiprintf_internal_r+0xbf8>
 508d190:	5805883a 	mov	r2,r11
 508d194:	dac02517 	ldw	r11,148(sp)
 508d198:	5897883a 	add	r11,r11,r2
 508d19c:	dac02515 	stw	r11,148(sp)
 508d1a0:	1800531e 	bne	r3,zero,508d2f0 <___svfiprintf_internal_r+0xd54>
 508d1a4:	98800007 	ldb	r2,0(r19)
 508d1a8:	d8001b15 	stw	zero,108(sp)
 508d1ac:	d811883a 	mov	r8,sp
 508d1b0:	103d231e 	bne	r2,zero,508c640 <__alt_data_end+0xfffbe440>
 508d1b4:	9823883a 	mov	r17,r19
 508d1b8:	003d3906 	br	508c6a0 <__alt_data_end+0xfffbe4a0>
 508d1bc:	d8801c17 	ldw	r2,112(sp)
 508d1c0:	10000426 	beq	r2,zero,508d1d4 <___svfiprintf_internal_r+0xc38>
 508d1c4:	d9402717 	ldw	r5,156(sp)
 508d1c8:	d9002a17 	ldw	r4,168(sp)
 508d1cc:	d9801a04 	addi	r6,sp,104
 508d1d0:	508c3cc0 	call	508c3cc <__ssprint_r>
 508d1d4:	dac02717 	ldw	r11,156(sp)
 508d1d8:	d8802517 	ldw	r2,148(sp)
 508d1dc:	58c0030b 	ldhu	r3,12(r11)
 508d1e0:	18c0100c 	andi	r3,r3,64
 508d1e4:	1801381e 	bne	r3,zero,508d6c8 <___svfiprintf_internal_r+0x112c>
 508d1e8:	dfc03717 	ldw	ra,220(sp)
 508d1ec:	df003617 	ldw	fp,216(sp)
 508d1f0:	ddc03517 	ldw	r23,212(sp)
 508d1f4:	dd803417 	ldw	r22,208(sp)
 508d1f8:	dd403317 	ldw	r21,204(sp)
 508d1fc:	dd003217 	ldw	r20,200(sp)
 508d200:	dcc03117 	ldw	r19,196(sp)
 508d204:	dc803017 	ldw	r18,192(sp)
 508d208:	dc402f17 	ldw	r17,188(sp)
 508d20c:	dc002e17 	ldw	r16,184(sp)
 508d210:	dec03804 	addi	sp,sp,224
 508d214:	f800283a 	ret
 508d218:	dac02417 	ldw	r11,144(sp)
 508d21c:	d9002017 	ldw	r4,128(sp)
 508d220:	5939c83a 	sub	fp,r11,r4
 508d224:	073f780e 	bge	zero,fp,508d008 <__alt_data_end+0xfffbee08>
 508d228:	02400404 	movi	r9,16
 508d22c:	4f01370e 	bge	r9,fp,508d70c <___svfiprintf_internal_r+0x1170>
 508d230:	02c14274 	movhi	r11,1289
 508d234:	5ad81604 	addi	r11,r11,24664
 508d238:	dac02215 	stw	r11,136(sp)
 508d23c:	028001c4 	movi	r10,7
 508d240:	00000306 	br	508d250 <___svfiprintf_internal_r+0xcb4>
 508d244:	e73ffc04 	addi	fp,fp,-16
 508d248:	42000204 	addi	r8,r8,8
 508d24c:	4f00150e 	bge	r9,fp,508d2a4 <___svfiprintf_internal_r+0xd08>
 508d250:	18c00404 	addi	r3,r3,16
 508d254:	10800044 	addi	r2,r2,1
 508d258:	45000015 	stw	r20,0(r8)
 508d25c:	42400115 	stw	r9,4(r8)
 508d260:	d8c01c15 	stw	r3,112(sp)
 508d264:	d8801b15 	stw	r2,108(sp)
 508d268:	50bff60e 	bge	r10,r2,508d244 <__alt_data_end+0xfffbf044>
 508d26c:	d9801a04 	addi	r6,sp,104
 508d270:	b80b883a 	mov	r5,r23
 508d274:	a809883a 	mov	r4,r21
 508d278:	da402c15 	stw	r9,176(sp)
 508d27c:	da802d15 	stw	r10,180(sp)
 508d280:	508c3cc0 	call	508c3cc <__ssprint_r>
 508d284:	da402c17 	ldw	r9,176(sp)
 508d288:	da802d17 	ldw	r10,180(sp)
 508d28c:	103fd11e 	bne	r2,zero,508d1d4 <__alt_data_end+0xfffbefd4>
 508d290:	e73ffc04 	addi	fp,fp,-16
 508d294:	d8c01c17 	ldw	r3,112(sp)
 508d298:	d8801b17 	ldw	r2,108(sp)
 508d29c:	d811883a 	mov	r8,sp
 508d2a0:	4f3feb16 	blt	r9,fp,508d250 <__alt_data_end+0xfffbf050>
 508d2a4:	dac02217 	ldw	r11,136(sp)
 508d2a8:	1f07883a 	add	r3,r3,fp
 508d2ac:	10800044 	addi	r2,r2,1
 508d2b0:	42c00015 	stw	r11,0(r8)
 508d2b4:	47000115 	stw	fp,4(r8)
 508d2b8:	d8c01c15 	stw	r3,112(sp)
 508d2bc:	d8801b15 	stw	r2,108(sp)
 508d2c0:	010001c4 	movi	r4,7
 508d2c4:	2080b616 	blt	r4,r2,508d5a0 <___svfiprintf_internal_r+0x1004>
 508d2c8:	42000204 	addi	r8,r8,8
 508d2cc:	003f4e06 	br	508d008 <__alt_data_end+0xfffbee08>
 508d2d0:	d9801a04 	addi	r6,sp,104
 508d2d4:	b80b883a 	mov	r5,r23
 508d2d8:	a809883a 	mov	r4,r21
 508d2dc:	508c3cc0 	call	508c3cc <__ssprint_r>
 508d2e0:	103fbc1e 	bne	r2,zero,508d1d4 <__alt_data_end+0xfffbefd4>
 508d2e4:	d8c01c17 	ldw	r3,112(sp)
 508d2e8:	d811883a 	mov	r8,sp
 508d2ec:	003f7a06 	br	508d0d8 <__alt_data_end+0xfffbeed8>
 508d2f0:	d9801a04 	addi	r6,sp,104
 508d2f4:	b80b883a 	mov	r5,r23
 508d2f8:	a809883a 	mov	r4,r21
 508d2fc:	508c3cc0 	call	508c3cc <__ssprint_r>
 508d300:	103fa826 	beq	r2,zero,508d1a4 <__alt_data_end+0xfffbefa4>
 508d304:	003fb306 	br	508d1d4 <__alt_data_end+0xfffbefd4>
 508d308:	d9801a04 	addi	r6,sp,104
 508d30c:	b80b883a 	mov	r5,r23
 508d310:	a809883a 	mov	r4,r21
 508d314:	508c3cc0 	call	508c3cc <__ssprint_r>
 508d318:	103fae1e 	bne	r2,zero,508d1d4 <__alt_data_end+0xfffbefd4>
 508d31c:	d811883a 	mov	r8,sp
 508d320:	003cdc06 	br	508c694 <__alt_data_end+0xfffbe494>
 508d324:	d9801a04 	addi	r6,sp,104
 508d328:	b80b883a 	mov	r5,r23
 508d32c:	a809883a 	mov	r4,r21
 508d330:	508c3cc0 	call	508c3cc <__ssprint_r>
 508d334:	103fa71e 	bne	r2,zero,508d1d4 <__alt_data_end+0xfffbefd4>
 508d338:	d8c01c17 	ldw	r3,112(sp)
 508d33c:	d8801b17 	ldw	r2,108(sp)
 508d340:	d811883a 	mov	r8,sp
 508d344:	003f5a06 	br	508d0b0 <__alt_data_end+0xfffbeeb0>
 508d348:	d9801a04 	addi	r6,sp,104
 508d34c:	b80b883a 	mov	r5,r23
 508d350:	a809883a 	mov	r4,r21
 508d354:	508c3cc0 	call	508c3cc <__ssprint_r>
 508d358:	103f9e1e 	bne	r2,zero,508d1d4 <__alt_data_end+0xfffbefd4>
 508d35c:	d8c01c17 	ldw	r3,112(sp)
 508d360:	d8801b17 	ldw	r2,108(sp)
 508d364:	d811883a 	mov	r8,sp
 508d368:	003f1706 	br	508cfc8 <__alt_data_end+0xfffbedc8>
 508d36c:	d9801a04 	addi	r6,sp,104
 508d370:	b80b883a 	mov	r5,r23
 508d374:	a809883a 	mov	r4,r21
 508d378:	508c3cc0 	call	508c3cc <__ssprint_r>
 508d37c:	103f951e 	bne	r2,zero,508d1d4 <__alt_data_end+0xfffbefd4>
 508d380:	d8c01c17 	ldw	r3,112(sp)
 508d384:	d8801b17 	ldw	r2,108(sp)
 508d388:	d811883a 	mov	r8,sp
 508d38c:	003f1b06 	br	508cffc <__alt_data_end+0xfffbedfc>
 508d390:	d8001d85 	stb	zero,118(sp)
 508d394:	80007b16 	blt	r16,zero,508d584 <___svfiprintf_internal_r+0xfe8>
 508d398:	00ffdfc4 	movi	r3,-129
 508d39c:	e244b03a 	or	r2,fp,r9
 508d3a0:	90e4703a 	and	r18,r18,r3
 508d3a4:	103d7026 	beq	r2,zero,508c968 <__alt_data_end+0xfffbe768>
 508d3a8:	0015883a 	mov	r10,zero
 508d3ac:	003d7206 	br	508c978 <__alt_data_end+0xfffbe778>
 508d3b0:	d9801a04 	addi	r6,sp,104
 508d3b4:	b80b883a 	mov	r5,r23
 508d3b8:	a809883a 	mov	r4,r21
 508d3bc:	508c3cc0 	call	508c3cc <__ssprint_r>
 508d3c0:	103f841e 	bne	r2,zero,508d1d4 <__alt_data_end+0xfffbefd4>
 508d3c4:	d8c01c17 	ldw	r3,112(sp)
 508d3c8:	d8801b17 	ldw	r2,108(sp)
 508d3cc:	d811883a 	mov	r8,sp
 508d3d0:	003ef006 	br	508cf94 <__alt_data_end+0xfffbed94>
 508d3d4:	9080100c 	andi	r2,r18,64
 508d3d8:	d8001d85 	stb	zero,118(sp)
 508d3dc:	dac02317 	ldw	r11,140(sp)
 508d3e0:	10008126 	beq	r2,zero,508d5e8 <___svfiprintf_internal_r+0x104c>
 508d3e4:	58800104 	addi	r2,r11,4
 508d3e8:	5f00000b 	ldhu	fp,0(r11)
 508d3ec:	0013883a 	mov	r9,zero
 508d3f0:	803ec30e 	bge	r16,zero,508cf00 <__alt_data_end+0xfffbed00>
 508d3f4:	d8802315 	stw	r2,140(sp)
 508d3f8:	0015883a 	mov	r10,zero
 508d3fc:	e244b03a 	or	r2,fp,r9
 508d400:	103e371e 	bne	r2,zero,508cce0 <__alt_data_end+0xfffbeae0>
 508d404:	00800044 	movi	r2,1
 508d408:	10803fcc 	andi	r2,r2,255
 508d40c:	00c00044 	movi	r3,1
 508d410:	10c06126 	beq	r2,r3,508d598 <___svfiprintf_internal_r+0xffc>
 508d414:	00c00084 	movi	r3,2
 508d418:	10fd5526 	beq	r2,r3,508c970 <__alt_data_end+0xfffbe770>
 508d41c:	003ed806 	br	508cf80 <__alt_data_end+0xfffbed80>
 508d420:	d8802315 	stw	r2,140(sp)
 508d424:	98c00007 	ldb	r3,0(r19)
 508d428:	003cab06 	br	508c6d8 <__alt_data_end+0xfffbe4d8>
 508d42c:	d9801a04 	addi	r6,sp,104
 508d430:	b80b883a 	mov	r5,r23
 508d434:	a809883a 	mov	r4,r21
 508d438:	508c3cc0 	call	508c3cc <__ssprint_r>
 508d43c:	103f651e 	bne	r2,zero,508d1d4 <__alt_data_end+0xfffbefd4>
 508d440:	d8c01c17 	ldw	r3,112(sp)
 508d444:	003f4f06 	br	508d184 <__alt_data_end+0xfffbef84>
 508d448:	00814274 	movhi	r2,1289
 508d44c:	1097ad04 	addi	r2,r2,24244
 508d450:	d8802915 	stw	r2,164(sp)
 508d454:	003d4406 	br	508c968 <__alt_data_end+0xfffbe768>
 508d458:	dac02317 	ldw	r11,140(sp)
 508d45c:	58800017 	ldw	r2,0(r11)
 508d460:	dac02517 	ldw	r11,148(sp)
 508d464:	5807d7fa 	srai	r3,r11,31
 508d468:	dac02317 	ldw	r11,140(sp)
 508d46c:	10c00115 	stw	r3,4(r2)
 508d470:	5ac00104 	addi	r11,r11,4
 508d474:	dac02315 	stw	r11,140(sp)
 508d478:	dac02517 	ldw	r11,148(sp)
 508d47c:	12c00015 	stw	r11,0(r2)
 508d480:	003c6d06 	br	508c638 <__alt_data_end+0xfffbe438>
 508d484:	9080100c 	andi	r2,r18,64
 508d488:	dac02317 	ldw	r11,140(sp)
 508d48c:	103e5326 	beq	r2,zero,508cddc <__alt_data_end+0xfffbebdc>
 508d490:	5f00000f 	ldh	fp,0(r11)
 508d494:	5ac00104 	addi	r11,r11,4
 508d498:	dac02315 	stw	r11,140(sp)
 508d49c:	e013d7fa 	srai	r9,fp,31
 508d4a0:	4805883a 	mov	r2,r9
 508d4a4:	003e0706 	br	508ccc4 <__alt_data_end+0xfffbeac4>
 508d4a8:	00800c04 	movi	r2,48
 508d4ac:	d8801d05 	stb	r2,116(sp)
 508d4b0:	d8c01d45 	stb	r3,117(sp)
 508d4b4:	d8001d85 	stb	zero,118(sp)
 508d4b8:	90800094 	ori	r2,r18,2
 508d4bc:	80008f16 	blt	r16,zero,508d6fc <___svfiprintf_internal_r+0x1160>
 508d4c0:	00bfdfc4 	movi	r2,-129
 508d4c4:	90a4703a 	and	r18,r18,r2
 508d4c8:	94800094 	ori	r18,r18,2
 508d4cc:	0015883a 	mov	r10,zero
 508d4d0:	003d2906 	br	508c978 <__alt_data_end+0xfffbe778>
 508d4d4:	98c00007 	ldb	r3,0(r19)
 508d4d8:	003c7f06 	br	508c6d8 <__alt_data_end+0xfffbe4d8>
 508d4dc:	dac02317 	ldw	r11,140(sp)
 508d4e0:	0013883a 	mov	r9,zero
 508d4e4:	5f000017 	ldw	fp,0(r11)
 508d4e8:	5ac00104 	addi	r11,r11,4
 508d4ec:	dac02315 	stw	r11,140(sp)
 508d4f0:	003d1506 	br	508c948 <__alt_data_end+0xfffbe748>
 508d4f4:	9080100c 	andi	r2,r18,64
 508d4f8:	d8001d85 	stb	zero,118(sp)
 508d4fc:	dac02317 	ldw	r11,140(sp)
 508d500:	10003426 	beq	r2,zero,508d5d4 <___svfiprintf_internal_r+0x1038>
 508d504:	58800104 	addi	r2,r11,4
 508d508:	5f00000b 	ldhu	fp,0(r11)
 508d50c:	0013883a 	mov	r9,zero
 508d510:	803e950e 	bge	r16,zero,508cf68 <__alt_data_end+0xfffbed68>
 508d514:	e246b03a 	or	r3,fp,r9
 508d518:	d8802315 	stw	r2,140(sp)
 508d51c:	183d5a1e 	bne	r3,zero,508ca88 <__alt_data_end+0xfffbe888>
 508d520:	0015883a 	mov	r10,zero
 508d524:	0005883a 	mov	r2,zero
 508d528:	003fb706 	br	508d408 <__alt_data_end+0xfffbf208>
 508d52c:	98c00043 	ldbu	r3,1(r19)
 508d530:	94800814 	ori	r18,r18,32
 508d534:	9cc00044 	addi	r19,r19,1
 508d538:	18c03fcc 	andi	r3,r3,255
 508d53c:	18c0201c 	xori	r3,r3,128
 508d540:	18ffe004 	addi	r3,r3,-128
 508d544:	003c6406 	br	508c6d8 <__alt_data_end+0xfffbe4d8>
 508d548:	d8c02315 	stw	r3,140(sp)
 508d54c:	0015883a 	mov	r10,zero
 508d550:	003faa06 	br	508d3fc <__alt_data_end+0xfffbf1fc>
 508d554:	dac02317 	ldw	r11,140(sp)
 508d558:	58800017 	ldw	r2,0(r11)
 508d55c:	5ac00104 	addi	r11,r11,4
 508d560:	dac02315 	stw	r11,140(sp)
 508d564:	dac02517 	ldw	r11,148(sp)
 508d568:	12c00015 	stw	r11,0(r2)
 508d56c:	003c3206 	br	508c638 <__alt_data_end+0xfffbe438>
 508d570:	01014274 	movhi	r4,1289
 508d574:	2117ad04 	addi	r4,r4,24244
 508d578:	d9002915 	stw	r4,164(sp)
 508d57c:	d8c02315 	stw	r3,140(sp)
 508d580:	1025883a 	mov	r18,r2
 508d584:	e244b03a 	or	r2,fp,r9
 508d588:	103f871e 	bne	r2,zero,508d3a8 <__alt_data_end+0xfffbf1a8>
 508d58c:	0015883a 	mov	r10,zero
 508d590:	00800084 	movi	r2,2
 508d594:	003f9c06 	br	508d408 <__alt_data_end+0xfffbf208>
 508d598:	0039883a 	mov	fp,zero
 508d59c:	003e5f06 	br	508cf1c <__alt_data_end+0xfffbed1c>
 508d5a0:	d9801a04 	addi	r6,sp,104
 508d5a4:	b80b883a 	mov	r5,r23
 508d5a8:	a809883a 	mov	r4,r21
 508d5ac:	508c3cc0 	call	508c3cc <__ssprint_r>
 508d5b0:	103f081e 	bne	r2,zero,508d1d4 <__alt_data_end+0xfffbefd4>
 508d5b4:	d8c01c17 	ldw	r3,112(sp)
 508d5b8:	d8801b17 	ldw	r2,108(sp)
 508d5bc:	d811883a 	mov	r8,sp
 508d5c0:	003e9106 	br	508d008 <__alt_data_end+0xfffbee08>
 508d5c4:	01014274 	movhi	r4,1289
 508d5c8:	21181604 	addi	r4,r4,24664
 508d5cc:	d9002215 	stw	r4,136(sp)
 508d5d0:	003ead06 	br	508d088 <__alt_data_end+0xfffbee88>
 508d5d4:	58800104 	addi	r2,r11,4
 508d5d8:	5f000017 	ldw	fp,0(r11)
 508d5dc:	0013883a 	mov	r9,zero
 508d5e0:	803e610e 	bge	r16,zero,508cf68 <__alt_data_end+0xfffbed68>
 508d5e4:	003fcb06 	br	508d514 <__alt_data_end+0xfffbf314>
 508d5e8:	58800104 	addi	r2,r11,4
 508d5ec:	5f000017 	ldw	fp,0(r11)
 508d5f0:	0013883a 	mov	r9,zero
 508d5f4:	803e420e 	bge	r16,zero,508cf00 <__alt_data_end+0xfffbed00>
 508d5f8:	003f7e06 	br	508d3f4 <__alt_data_end+0xfffbf1f4>
 508d5fc:	5f000017 	ldw	fp,0(r11)
 508d600:	5ac00104 	addi	r11,r11,4
 508d604:	0013883a 	mov	r9,zero
 508d608:	dac02315 	stw	r11,140(sp)
 508d60c:	003cce06 	br	508c948 <__alt_data_end+0xfffbe748>
 508d610:	8809883a 	mov	r4,r17
 508d614:	da002c15 	stw	r8,176(sp)
 508d618:	5082b380 	call	5082b38 <strlen>
 508d61c:	d8802115 	stw	r2,132(sp)
 508d620:	da801d83 	ldbu	r10,118(sp)
 508d624:	df002315 	stw	fp,140(sp)
 508d628:	0021883a 	mov	r16,zero
 508d62c:	da002c17 	ldw	r8,176(sp)
 508d630:	003cf606 	br	508ca0c <__alt_data_end+0xfffbe80c>
 508d634:	00800184 	movi	r2,6
 508d638:	1400012e 	bgeu	r2,r16,508d640 <___svfiprintf_internal_r+0x10a4>
 508d63c:	1021883a 	mov	r16,r2
 508d640:	dc002115 	stw	r16,132(sp)
 508d644:	8005883a 	mov	r2,r16
 508d648:	80003c16 	blt	r16,zero,508d73c <___svfiprintf_internal_r+0x11a0>
 508d64c:	04414274 	movhi	r17,1289
 508d650:	d8802015 	stw	r2,128(sp)
 508d654:	df002315 	stw	fp,140(sp)
 508d658:	8c57b204 	addi	r17,r17,24264
 508d65c:	003d2e06 	br	508cb18 <__alt_data_end+0xfffbe918>
 508d660:	04001004 	movi	r16,64
 508d664:	800b883a 	mov	r5,r16
 508d668:	5089ed00 	call	5089ed0 <_malloc_r>
 508d66c:	dac02717 	ldw	r11,156(sp)
 508d670:	58800015 	stw	r2,0(r11)
 508d674:	58800415 	stw	r2,16(r11)
 508d678:	10004826 	beq	r2,zero,508d79c <___svfiprintf_internal_r+0x1200>
 508d67c:	dac02717 	ldw	r11,156(sp)
 508d680:	5c000515 	stw	r16,20(r11)
 508d684:	003bd906 	br	508c5ec <__alt_data_end+0xfffbe3ec>
 508d688:	9080004c 	andi	r2,r18,1
 508d68c:	0015883a 	mov	r10,zero
 508d690:	10000626 	beq	r2,zero,508d6ac <___svfiprintf_internal_r+0x1110>
 508d694:	dac02b17 	ldw	r11,172(sp)
 508d698:	00800c04 	movi	r2,48
 508d69c:	d88019c5 	stb	r2,103(sp)
 508d6a0:	dac02115 	stw	r11,132(sp)
 508d6a4:	dc4019c4 	addi	r17,sp,103
 508d6a8:	003cd806 	br	508ca0c <__alt_data_end+0xfffbe80c>
 508d6ac:	d8002115 	stw	zero,132(sp)
 508d6b0:	dc401a04 	addi	r17,sp,104
 508d6b4:	003cd506 	br	508ca0c <__alt_data_end+0xfffbe80c>
 508d6b8:	01014274 	movhi	r4,1289
 508d6bc:	21181a04 	addi	r4,r4,24680
 508d6c0:	d9002815 	stw	r4,160(sp)
 508d6c4:	003d4306 	br	508cbd4 <__alt_data_end+0xfffbe9d4>
 508d6c8:	00bfffc4 	movi	r2,-1
 508d6cc:	003ec606 	br	508d1e8 <__alt_data_end+0xfffbefe8>
 508d6d0:	00800044 	movi	r2,1
 508d6d4:	10803fcc 	andi	r2,r2,255
 508d6d8:	00c00044 	movi	r3,1
 508d6dc:	10fd8026 	beq	r2,r3,508cce0 <__alt_data_end+0xfffbeae0>
 508d6e0:	00c00084 	movi	r3,2
 508d6e4:	10fca426 	beq	r2,r3,508c978 <__alt_data_end+0xfffbe778>
 508d6e8:	003ce806 	br	508ca8c <__alt_data_end+0xfffbe88c>
 508d6ec:	01014274 	movhi	r4,1289
 508d6f0:	21181a04 	addi	r4,r4,24680
 508d6f4:	d9002815 	stw	r4,160(sp)
 508d6f8:	003e9906 	br	508d160 <__alt_data_end+0xfffbef60>
 508d6fc:	1025883a 	mov	r18,r2
 508d700:	0015883a 	mov	r10,zero
 508d704:	00800084 	movi	r2,2
 508d708:	003ff206 	br	508d6d4 <__alt_data_end+0xfffbf4d4>
 508d70c:	01414274 	movhi	r5,1289
 508d710:	29581604 	addi	r5,r5,24664
 508d714:	d9402215 	stw	r5,136(sp)
 508d718:	003ee206 	br	508d2a4 <__alt_data_end+0xfffbf0a4>
 508d71c:	5827883a 	mov	r19,r11
 508d720:	0021883a 	mov	r16,zero
 508d724:	003bed06 	br	508c6dc <__alt_data_end+0xfffbe4dc>
 508d728:	dc002115 	stw	r16,132(sp)
 508d72c:	da801d83 	ldbu	r10,118(sp)
 508d730:	df002315 	stw	fp,140(sp)
 508d734:	0021883a 	mov	r16,zero
 508d738:	003cb406 	br	508ca0c <__alt_data_end+0xfffbe80c>
 508d73c:	0005883a 	mov	r2,zero
 508d740:	003fc206 	br	508d64c <__alt_data_end+0xfffbf44c>
 508d744:	d8802317 	ldw	r2,140(sp)
 508d748:	98c00043 	ldbu	r3,1(r19)
 508d74c:	5827883a 	mov	r19,r11
 508d750:	14000017 	ldw	r16,0(r2)
 508d754:	10800104 	addi	r2,r2,4
 508d758:	d8802315 	stw	r2,140(sp)
 508d75c:	803f760e 	bge	r16,zero,508d538 <__alt_data_end+0xfffbf338>
 508d760:	18c03fcc 	andi	r3,r3,255
 508d764:	18c0201c 	xori	r3,r3,128
 508d768:	043fffc4 	movi	r16,-1
 508d76c:	18ffe004 	addi	r3,r3,-128
 508d770:	003bd906 	br	508c6d8 <__alt_data_end+0xfffbe4d8>
 508d774:	d9c01d85 	stb	r7,118(sp)
 508d778:	003cb606 	br	508ca54 <__alt_data_end+0xfffbe854>
 508d77c:	d9c01d85 	stb	r7,118(sp)
 508d780:	003d2106 	br	508cc08 <__alt_data_end+0xfffbea08>
 508d784:	d9c01d85 	stb	r7,118(sp)
 508d788:	003d8e06 	br	508cdc4 <__alt_data_end+0xfffbebc4>
 508d78c:	d9c01d85 	stb	r7,118(sp)
 508d790:	003db306 	br	508ce60 <__alt_data_end+0xfffbec60>
 508d794:	d9c01d85 	stb	r7,118(sp)
 508d798:	003c8a06 	br	508c9c4 <__alt_data_end+0xfffbe7c4>
 508d79c:	dac02a17 	ldw	r11,168(sp)
 508d7a0:	00800304 	movi	r2,12
 508d7a4:	58800015 	stw	r2,0(r11)
 508d7a8:	00bfffc4 	movi	r2,-1
 508d7ac:	003e8e06 	br	508d1e8 <__alt_data_end+0xfffbefe8>
 508d7b0:	d9c01d85 	stb	r7,118(sp)
 508d7b4:	003dc706 	br	508ced4 <__alt_data_end+0xfffbecd4>
 508d7b8:	d9c01d85 	stb	r7,118(sp)
 508d7bc:	003ddf06 	br	508cf3c <__alt_data_end+0xfffbed3c>
 508d7c0:	d9c01d85 	stb	r7,118(sp)
 508d7c4:	003d3706 	br	508cca4 <__alt_data_end+0xfffbeaa4>
 508d7c8:	d9c01d85 	stb	r7,118(sp)
 508d7cc:	003c5406 	br	508c920 <__alt_data_end+0xfffbe720>
 508d7d0:	d9c01d85 	stb	r7,118(sp)
 508d7d4:	003d1d06 	br	508cc4c <__alt_data_end+0xfffbea4c>

0508d7d8 <__sprint_r.part.0>:
 508d7d8:	28801917 	ldw	r2,100(r5)
 508d7dc:	defff604 	addi	sp,sp,-40
 508d7e0:	dd400515 	stw	r21,20(sp)
 508d7e4:	dfc00915 	stw	ra,36(sp)
 508d7e8:	df000815 	stw	fp,32(sp)
 508d7ec:	ddc00715 	stw	r23,28(sp)
 508d7f0:	dd800615 	stw	r22,24(sp)
 508d7f4:	dd000415 	stw	r20,16(sp)
 508d7f8:	dcc00315 	stw	r19,12(sp)
 508d7fc:	dc800215 	stw	r18,8(sp)
 508d800:	dc400115 	stw	r17,4(sp)
 508d804:	dc000015 	stw	r16,0(sp)
 508d808:	1088000c 	andi	r2,r2,8192
 508d80c:	302b883a 	mov	r21,r6
 508d810:	10002e26 	beq	r2,zero,508d8cc <__sprint_r.part.0+0xf4>
 508d814:	30800217 	ldw	r2,8(r6)
 508d818:	35800017 	ldw	r22,0(r6)
 508d81c:	10002926 	beq	r2,zero,508d8c4 <__sprint_r.part.0+0xec>
 508d820:	2827883a 	mov	r19,r5
 508d824:	2029883a 	mov	r20,r4
 508d828:	b5c00104 	addi	r23,r22,4
 508d82c:	04bfffc4 	movi	r18,-1
 508d830:	bc400017 	ldw	r17,0(r23)
 508d834:	b4000017 	ldw	r16,0(r22)
 508d838:	0039883a 	mov	fp,zero
 508d83c:	8822d0ba 	srli	r17,r17,2
 508d840:	8800031e 	bne	r17,zero,508d850 <__sprint_r.part.0+0x78>
 508d844:	00001806 	br	508d8a8 <__sprint_r.part.0+0xd0>
 508d848:	84000104 	addi	r16,r16,4
 508d84c:	8f001526 	beq	r17,fp,508d8a4 <__sprint_r.part.0+0xcc>
 508d850:	81400017 	ldw	r5,0(r16)
 508d854:	980d883a 	mov	r6,r19
 508d858:	a009883a 	mov	r4,r20
 508d85c:	508f2000 	call	508f200 <_fputwc_r>
 508d860:	e7000044 	addi	fp,fp,1
 508d864:	14bff81e 	bne	r2,r18,508d848 <__alt_data_end+0xfffbf648>
 508d868:	9005883a 	mov	r2,r18
 508d86c:	a8000215 	stw	zero,8(r21)
 508d870:	a8000115 	stw	zero,4(r21)
 508d874:	dfc00917 	ldw	ra,36(sp)
 508d878:	df000817 	ldw	fp,32(sp)
 508d87c:	ddc00717 	ldw	r23,28(sp)
 508d880:	dd800617 	ldw	r22,24(sp)
 508d884:	dd400517 	ldw	r21,20(sp)
 508d888:	dd000417 	ldw	r20,16(sp)
 508d88c:	dcc00317 	ldw	r19,12(sp)
 508d890:	dc800217 	ldw	r18,8(sp)
 508d894:	dc400117 	ldw	r17,4(sp)
 508d898:	dc000017 	ldw	r16,0(sp)
 508d89c:	dec00a04 	addi	sp,sp,40
 508d8a0:	f800283a 	ret
 508d8a4:	a8800217 	ldw	r2,8(r21)
 508d8a8:	8c63883a 	add	r17,r17,r17
 508d8ac:	8c63883a 	add	r17,r17,r17
 508d8b0:	1445c83a 	sub	r2,r2,r17
 508d8b4:	a8800215 	stw	r2,8(r21)
 508d8b8:	b5800204 	addi	r22,r22,8
 508d8bc:	bdc00204 	addi	r23,r23,8
 508d8c0:	103fdb1e 	bne	r2,zero,508d830 <__alt_data_end+0xfffbf630>
 508d8c4:	0005883a 	mov	r2,zero
 508d8c8:	003fe806 	br	508d86c <__alt_data_end+0xfffbf66c>
 508d8cc:	50895f40 	call	50895f4 <__sfvwrite_r>
 508d8d0:	003fe606 	br	508d86c <__alt_data_end+0xfffbf66c>

0508d8d4 <__sprint_r>:
 508d8d4:	30c00217 	ldw	r3,8(r6)
 508d8d8:	18000126 	beq	r3,zero,508d8e0 <__sprint_r+0xc>
 508d8dc:	508d7d81 	jmpi	508d7d8 <__sprint_r.part.0>
 508d8e0:	30000115 	stw	zero,4(r6)
 508d8e4:	0005883a 	mov	r2,zero
 508d8e8:	f800283a 	ret

0508d8ec <___vfiprintf_internal_r>:
 508d8ec:	deffc904 	addi	sp,sp,-220
 508d8f0:	df003515 	stw	fp,212(sp)
 508d8f4:	dd003115 	stw	r20,196(sp)
 508d8f8:	dfc03615 	stw	ra,216(sp)
 508d8fc:	ddc03415 	stw	r23,208(sp)
 508d900:	dd803315 	stw	r22,204(sp)
 508d904:	dd403215 	stw	r21,200(sp)
 508d908:	dcc03015 	stw	r19,192(sp)
 508d90c:	dc802f15 	stw	r18,188(sp)
 508d910:	dc402e15 	stw	r17,184(sp)
 508d914:	dc002d15 	stw	r16,180(sp)
 508d918:	d9002015 	stw	r4,128(sp)
 508d91c:	d9c02215 	stw	r7,136(sp)
 508d920:	2829883a 	mov	r20,r5
 508d924:	3039883a 	mov	fp,r6
 508d928:	20000226 	beq	r4,zero,508d934 <___vfiprintf_internal_r+0x48>
 508d92c:	20800e17 	ldw	r2,56(r4)
 508d930:	1000cf26 	beq	r2,zero,508dc70 <___vfiprintf_internal_r+0x384>
 508d934:	a080030b 	ldhu	r2,12(r20)
 508d938:	10c8000c 	andi	r3,r2,8192
 508d93c:	1800061e 	bne	r3,zero,508d958 <___vfiprintf_internal_r+0x6c>
 508d940:	a1001917 	ldw	r4,100(r20)
 508d944:	00f7ffc4 	movi	r3,-8193
 508d948:	10880014 	ori	r2,r2,8192
 508d94c:	20c6703a 	and	r3,r4,r3
 508d950:	a080030d 	sth	r2,12(r20)
 508d954:	a0c01915 	stw	r3,100(r20)
 508d958:	10c0020c 	andi	r3,r2,8
 508d95c:	1800a926 	beq	r3,zero,508dc04 <___vfiprintf_internal_r+0x318>
 508d960:	a0c00417 	ldw	r3,16(r20)
 508d964:	1800a726 	beq	r3,zero,508dc04 <___vfiprintf_internal_r+0x318>
 508d968:	1080068c 	andi	r2,r2,26
 508d96c:	00c00284 	movi	r3,10
 508d970:	10c0ac26 	beq	r2,r3,508dc24 <___vfiprintf_internal_r+0x338>
 508d974:	da801a04 	addi	r10,sp,104
 508d978:	da801e15 	stw	r10,120(sp)
 508d97c:	d8801e17 	ldw	r2,120(sp)
 508d980:	da8019c4 	addi	r10,sp,103
 508d984:	05814274 	movhi	r22,1289
 508d988:	05c14274 	movhi	r23,1289
 508d98c:	da801f15 	stw	r10,124(sp)
 508d990:	1295c83a 	sub	r10,r2,r10
 508d994:	b5982204 	addi	r22,r22,24712
 508d998:	bdd81e04 	addi	r23,r23,24696
 508d99c:	dec01a15 	stw	sp,104(sp)
 508d9a0:	d8001c15 	stw	zero,112(sp)
 508d9a4:	d8001b15 	stw	zero,108(sp)
 508d9a8:	d8002615 	stw	zero,152(sp)
 508d9ac:	d8002315 	stw	zero,140(sp)
 508d9b0:	da802715 	stw	r10,156(sp)
 508d9b4:	d811883a 	mov	r8,sp
 508d9b8:	dd002115 	stw	r20,132(sp)
 508d9bc:	e021883a 	mov	r16,fp
 508d9c0:	80800007 	ldb	r2,0(r16)
 508d9c4:	1003ea26 	beq	r2,zero,508e970 <___vfiprintf_internal_r+0x1084>
 508d9c8:	00c00944 	movi	r3,37
 508d9cc:	8025883a 	mov	r18,r16
 508d9d0:	10c0021e 	bne	r2,r3,508d9dc <___vfiprintf_internal_r+0xf0>
 508d9d4:	00001606 	br	508da30 <___vfiprintf_internal_r+0x144>
 508d9d8:	10c00326 	beq	r2,r3,508d9e8 <___vfiprintf_internal_r+0xfc>
 508d9dc:	94800044 	addi	r18,r18,1
 508d9e0:	90800007 	ldb	r2,0(r18)
 508d9e4:	103ffc1e 	bne	r2,zero,508d9d8 <__alt_data_end+0xfffbf7d8>
 508d9e8:	9423c83a 	sub	r17,r18,r16
 508d9ec:	88001026 	beq	r17,zero,508da30 <___vfiprintf_internal_r+0x144>
 508d9f0:	d8c01c17 	ldw	r3,112(sp)
 508d9f4:	d8801b17 	ldw	r2,108(sp)
 508d9f8:	44000015 	stw	r16,0(r8)
 508d9fc:	88c7883a 	add	r3,r17,r3
 508da00:	10800044 	addi	r2,r2,1
 508da04:	44400115 	stw	r17,4(r8)
 508da08:	d8c01c15 	stw	r3,112(sp)
 508da0c:	d8801b15 	stw	r2,108(sp)
 508da10:	010001c4 	movi	r4,7
 508da14:	2080760e 	bge	r4,r2,508dbf0 <___vfiprintf_internal_r+0x304>
 508da18:	1803821e 	bne	r3,zero,508e824 <___vfiprintf_internal_r+0xf38>
 508da1c:	da802317 	ldw	r10,140(sp)
 508da20:	d8001b15 	stw	zero,108(sp)
 508da24:	d811883a 	mov	r8,sp
 508da28:	5455883a 	add	r10,r10,r17
 508da2c:	da802315 	stw	r10,140(sp)
 508da30:	90800007 	ldb	r2,0(r18)
 508da34:	10044626 	beq	r2,zero,508eb50 <___vfiprintf_internal_r+0x1264>
 508da38:	90c00047 	ldb	r3,1(r18)
 508da3c:	94000044 	addi	r16,r18,1
 508da40:	d8001d85 	stb	zero,118(sp)
 508da44:	0009883a 	mov	r4,zero
 508da48:	000f883a 	mov	r7,zero
 508da4c:	027fffc4 	movi	r9,-1
 508da50:	0023883a 	mov	r17,zero
 508da54:	0029883a 	mov	r20,zero
 508da58:	01401604 	movi	r5,88
 508da5c:	01800244 	movi	r6,9
 508da60:	03400a84 	movi	r13,42
 508da64:	03001b04 	movi	r12,108
 508da68:	84000044 	addi	r16,r16,1
 508da6c:	18bff804 	addi	r2,r3,-32
 508da70:	28827336 	bltu	r5,r2,508e440 <___vfiprintf_internal_r+0xb54>
 508da74:	100490ba 	slli	r2,r2,2
 508da78:	02814274 	movhi	r10,1289
 508da7c:	52b6a304 	addi	r10,r10,-9588
 508da80:	1285883a 	add	r2,r2,r10
 508da84:	10800017 	ldw	r2,0(r2)
 508da88:	1000683a 	jmp	r2
 508da8c:	0508e174 	movhi	r20,9093
 508da90:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508da94:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508da98:	0508e194 	movui	r20,9094
 508da9c:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508daa0:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508daa4:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508daa8:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508daac:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508dab0:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508dab4:	0508e37c 	xorhi	r20,zero,9101
 508dab8:	0508e398 	cmpnei	r20,zero,9102
 508dabc:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508dac0:	0508dc80 	call	508dc8 <__alt_mem_sdram+0x508dc8>
 508dac4:	0508e3a8 	cmpgeui	r20,zero,9102
 508dac8:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508dacc:	0508e1a0 	cmpeqi	r20,zero,9094
 508dad0:	0508e1ac 	andhi	r20,zero,9094
 508dad4:	0508e1ac 	andhi	r20,zero,9094
 508dad8:	0508e1ac 	andhi	r20,zero,9094
 508dadc:	0508e1ac 	andhi	r20,zero,9094
 508dae0:	0508e1ac 	andhi	r20,zero,9094
 508dae4:	0508e1ac 	andhi	r20,zero,9094
 508dae8:	0508e1ac 	andhi	r20,zero,9094
 508daec:	0508e1ac 	andhi	r20,zero,9094
 508daf0:	0508e1ac 	andhi	r20,zero,9094
 508daf4:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508daf8:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508dafc:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db00:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db04:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db08:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db0c:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db10:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db14:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db18:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db1c:	0508e1d8 	cmpnei	r20,zero,9095
 508db20:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db24:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db28:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db2c:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db30:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db34:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db38:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db3c:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db40:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db44:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db48:	0508e210 	cmplti	r20,zero,9096
 508db4c:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db50:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db54:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db58:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db5c:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db60:	0508e268 	cmpgeui	r20,zero,9097
 508db64:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db68:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db6c:	0508e2d8 	cmpnei	r20,zero,9099
 508db70:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db74:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db78:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db7c:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db80:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db84:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db88:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db8c:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db90:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db94:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508db98:	0508e084 	movi	r20,9090
 508db9c:	0508e0b0 	cmpltui	r20,zero,9090
 508dba0:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508dba4:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508dba8:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508dbac:	0508e3e8 	cmpgeui	r20,zero,9103
 508dbb0:	0508e0b0 	cmpltui	r20,zero,9090
 508dbb4:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508dbb8:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508dbbc:	0508df44 	movi	r20,9085
 508dbc0:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508dbc4:	0508df54 	movui	r20,9085
 508dbc8:	0508df90 	cmplti	r20,zero,9086
 508dbcc:	0508dc8c 	andi	r20,zero,9074
 508dbd0:	0508df38 	rdprs	r20,zero,9084
 508dbd4:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508dbd8:	0508e314 	movui	r20,9100
 508dbdc:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508dbe0:	0508e36c 	andhi	r20,zero,9101
 508dbe4:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508dbe8:	0508e440 	call	508e44 <__alt_mem_sdram+0x508e44>
 508dbec:	0508e030 	cmpltui	r20,zero,9088
 508dbf0:	42000204 	addi	r8,r8,8
 508dbf4:	da802317 	ldw	r10,140(sp)
 508dbf8:	5455883a 	add	r10,r10,r17
 508dbfc:	da802315 	stw	r10,140(sp)
 508dc00:	003f8b06 	br	508da30 <__alt_data_end+0xfffbf830>
 508dc04:	d9002017 	ldw	r4,128(sp)
 508dc08:	a00b883a 	mov	r5,r20
 508dc0c:	508719c0 	call	508719c <__swsetup_r>
 508dc10:	1003b11e 	bne	r2,zero,508ead8 <___vfiprintf_internal_r+0x11ec>
 508dc14:	a080030b 	ldhu	r2,12(r20)
 508dc18:	00c00284 	movi	r3,10
 508dc1c:	1080068c 	andi	r2,r2,26
 508dc20:	10ff541e 	bne	r2,r3,508d974 <__alt_data_end+0xfffbf774>
 508dc24:	a080038f 	ldh	r2,14(r20)
 508dc28:	103f5216 	blt	r2,zero,508d974 <__alt_data_end+0xfffbf774>
 508dc2c:	d9c02217 	ldw	r7,136(sp)
 508dc30:	d9002017 	ldw	r4,128(sp)
 508dc34:	e00d883a 	mov	r6,fp
 508dc38:	a00b883a 	mov	r5,r20
 508dc3c:	508ed640 	call	508ed64 <__sbprintf>
 508dc40:	dfc03617 	ldw	ra,216(sp)
 508dc44:	df003517 	ldw	fp,212(sp)
 508dc48:	ddc03417 	ldw	r23,208(sp)
 508dc4c:	dd803317 	ldw	r22,204(sp)
 508dc50:	dd403217 	ldw	r21,200(sp)
 508dc54:	dd003117 	ldw	r20,196(sp)
 508dc58:	dcc03017 	ldw	r19,192(sp)
 508dc5c:	dc802f17 	ldw	r18,188(sp)
 508dc60:	dc402e17 	ldw	r17,184(sp)
 508dc64:	dc002d17 	ldw	r16,180(sp)
 508dc68:	dec03704 	addi	sp,sp,220
 508dc6c:	f800283a 	ret
 508dc70:	50891700 	call	5089170 <__sinit>
 508dc74:	003f2f06 	br	508d934 <__alt_data_end+0xfffbf734>
 508dc78:	0463c83a 	sub	r17,zero,r17
 508dc7c:	d8802215 	stw	r2,136(sp)
 508dc80:	a5000114 	ori	r20,r20,4
 508dc84:	80c00007 	ldb	r3,0(r16)
 508dc88:	003f7706 	br	508da68 <__alt_data_end+0xfffbf868>
 508dc8c:	00800c04 	movi	r2,48
 508dc90:	da802217 	ldw	r10,136(sp)
 508dc94:	d8801d05 	stb	r2,116(sp)
 508dc98:	00801e04 	movi	r2,120
 508dc9c:	d8801d45 	stb	r2,117(sp)
 508dca0:	d8001d85 	stb	zero,118(sp)
 508dca4:	50c00104 	addi	r3,r10,4
 508dca8:	54800017 	ldw	r18,0(r10)
 508dcac:	0027883a 	mov	r19,zero
 508dcb0:	a0800094 	ori	r2,r20,2
 508dcb4:	48030b16 	blt	r9,zero,508e8e4 <___vfiprintf_internal_r+0xff8>
 508dcb8:	00bfdfc4 	movi	r2,-129
 508dcbc:	a096703a 	and	r11,r20,r2
 508dcc0:	d8c02215 	stw	r3,136(sp)
 508dcc4:	5d000094 	ori	r20,r11,2
 508dcc8:	90032b1e 	bne	r18,zero,508e978 <___vfiprintf_internal_r+0x108c>
 508dccc:	00814274 	movhi	r2,1289
 508dcd0:	1097ad04 	addi	r2,r2,24244
 508dcd4:	d8802615 	stw	r2,152(sp)
 508dcd8:	0039883a 	mov	fp,zero
 508dcdc:	48017b1e 	bne	r9,zero,508e2cc <___vfiprintf_internal_r+0x9e0>
 508dce0:	0013883a 	mov	r9,zero
 508dce4:	0027883a 	mov	r19,zero
 508dce8:	dd401a04 	addi	r21,sp,104
 508dcec:	4825883a 	mov	r18,r9
 508dcf0:	4cc0010e 	bge	r9,r19,508dcf8 <___vfiprintf_internal_r+0x40c>
 508dcf4:	9825883a 	mov	r18,r19
 508dcf8:	e7003fcc 	andi	fp,fp,255
 508dcfc:	e700201c 	xori	fp,fp,128
 508dd00:	e73fe004 	addi	fp,fp,-128
 508dd04:	e0000126 	beq	fp,zero,508dd0c <___vfiprintf_internal_r+0x420>
 508dd08:	94800044 	addi	r18,r18,1
 508dd0c:	a380008c 	andi	r14,r20,2
 508dd10:	70000126 	beq	r14,zero,508dd18 <___vfiprintf_internal_r+0x42c>
 508dd14:	94800084 	addi	r18,r18,2
 508dd18:	a700210c 	andi	fp,r20,132
 508dd1c:	e001df1e 	bne	fp,zero,508e49c <___vfiprintf_internal_r+0xbb0>
 508dd20:	8c87c83a 	sub	r3,r17,r18
 508dd24:	00c1dd0e 	bge	zero,r3,508e49c <___vfiprintf_internal_r+0xbb0>
 508dd28:	01c00404 	movi	r7,16
 508dd2c:	d8801c17 	ldw	r2,112(sp)
 508dd30:	38c3ad0e 	bge	r7,r3,508ebe8 <___vfiprintf_internal_r+0x12fc>
 508dd34:	02814274 	movhi	r10,1289
 508dd38:	52982204 	addi	r10,r10,24712
 508dd3c:	dc002915 	stw	r16,164(sp)
 508dd40:	d9801b17 	ldw	r6,108(sp)
 508dd44:	da802415 	stw	r10,144(sp)
 508dd48:	03c001c4 	movi	r15,7
 508dd4c:	da402515 	stw	r9,148(sp)
 508dd50:	db802815 	stw	r14,160(sp)
 508dd54:	1821883a 	mov	r16,r3
 508dd58:	00000506 	br	508dd70 <___vfiprintf_internal_r+0x484>
 508dd5c:	31400084 	addi	r5,r6,2
 508dd60:	42000204 	addi	r8,r8,8
 508dd64:	200d883a 	mov	r6,r4
 508dd68:	843ffc04 	addi	r16,r16,-16
 508dd6c:	3c000d0e 	bge	r7,r16,508dda4 <___vfiprintf_internal_r+0x4b8>
 508dd70:	10800404 	addi	r2,r2,16
 508dd74:	31000044 	addi	r4,r6,1
 508dd78:	45800015 	stw	r22,0(r8)
 508dd7c:	41c00115 	stw	r7,4(r8)
 508dd80:	d8801c15 	stw	r2,112(sp)
 508dd84:	d9001b15 	stw	r4,108(sp)
 508dd88:	793ff40e 	bge	r15,r4,508dd5c <__alt_data_end+0xfffbfb5c>
 508dd8c:	1001b51e 	bne	r2,zero,508e464 <___vfiprintf_internal_r+0xb78>
 508dd90:	843ffc04 	addi	r16,r16,-16
 508dd94:	000d883a 	mov	r6,zero
 508dd98:	01400044 	movi	r5,1
 508dd9c:	d811883a 	mov	r8,sp
 508dda0:	3c3ff316 	blt	r7,r16,508dd70 <__alt_data_end+0xfffbfb70>
 508dda4:	8007883a 	mov	r3,r16
 508dda8:	da402517 	ldw	r9,148(sp)
 508ddac:	db802817 	ldw	r14,160(sp)
 508ddb0:	dc002917 	ldw	r16,164(sp)
 508ddb4:	da802417 	ldw	r10,144(sp)
 508ddb8:	1885883a 	add	r2,r3,r2
 508ddbc:	40c00115 	stw	r3,4(r8)
 508ddc0:	42800015 	stw	r10,0(r8)
 508ddc4:	d8801c15 	stw	r2,112(sp)
 508ddc8:	d9401b15 	stw	r5,108(sp)
 508ddcc:	00c001c4 	movi	r3,7
 508ddd0:	19426016 	blt	r3,r5,508e754 <___vfiprintf_internal_r+0xe68>
 508ddd4:	d8c01d87 	ldb	r3,118(sp)
 508ddd8:	42000204 	addi	r8,r8,8
 508dddc:	29000044 	addi	r4,r5,1
 508dde0:	1801b31e 	bne	r3,zero,508e4b0 <___vfiprintf_internal_r+0xbc4>
 508dde4:	7001c026 	beq	r14,zero,508e4e8 <___vfiprintf_internal_r+0xbfc>
 508dde8:	d8c01d04 	addi	r3,sp,116
 508ddec:	10800084 	addi	r2,r2,2
 508ddf0:	40c00015 	stw	r3,0(r8)
 508ddf4:	00c00084 	movi	r3,2
 508ddf8:	40c00115 	stw	r3,4(r8)
 508ddfc:	d8801c15 	stw	r2,112(sp)
 508de00:	d9001b15 	stw	r4,108(sp)
 508de04:	00c001c4 	movi	r3,7
 508de08:	1902650e 	bge	r3,r4,508e7a0 <___vfiprintf_internal_r+0xeb4>
 508de0c:	10029a1e 	bne	r2,zero,508e878 <___vfiprintf_internal_r+0xf8c>
 508de10:	00c02004 	movi	r3,128
 508de14:	01000044 	movi	r4,1
 508de18:	000b883a 	mov	r5,zero
 508de1c:	d811883a 	mov	r8,sp
 508de20:	e0c1b31e 	bne	fp,r3,508e4f0 <___vfiprintf_internal_r+0xc04>
 508de24:	8cb9c83a 	sub	fp,r17,r18
 508de28:	0701b10e 	bge	zero,fp,508e4f0 <___vfiprintf_internal_r+0xc04>
 508de2c:	01c00404 	movi	r7,16
 508de30:	3f03890e 	bge	r7,fp,508ec58 <___vfiprintf_internal_r+0x136c>
 508de34:	00c14274 	movhi	r3,1289
 508de38:	18d81e04 	addi	r3,r3,24696
 508de3c:	d8c02415 	stw	r3,144(sp)
 508de40:	8007883a 	mov	r3,r16
 508de44:	034001c4 	movi	r13,7
 508de48:	e021883a 	mov	r16,fp
 508de4c:	da402515 	stw	r9,148(sp)
 508de50:	1839883a 	mov	fp,r3
 508de54:	00000506 	br	508de6c <___vfiprintf_internal_r+0x580>
 508de58:	29800084 	addi	r6,r5,2
 508de5c:	42000204 	addi	r8,r8,8
 508de60:	180b883a 	mov	r5,r3
 508de64:	843ffc04 	addi	r16,r16,-16
 508de68:	3c000d0e 	bge	r7,r16,508dea0 <___vfiprintf_internal_r+0x5b4>
 508de6c:	10800404 	addi	r2,r2,16
 508de70:	28c00044 	addi	r3,r5,1
 508de74:	45c00015 	stw	r23,0(r8)
 508de78:	41c00115 	stw	r7,4(r8)
 508de7c:	d8801c15 	stw	r2,112(sp)
 508de80:	d8c01b15 	stw	r3,108(sp)
 508de84:	68fff40e 	bge	r13,r3,508de58 <__alt_data_end+0xfffbfc58>
 508de88:	1002241e 	bne	r2,zero,508e71c <___vfiprintf_internal_r+0xe30>
 508de8c:	843ffc04 	addi	r16,r16,-16
 508de90:	01800044 	movi	r6,1
 508de94:	000b883a 	mov	r5,zero
 508de98:	d811883a 	mov	r8,sp
 508de9c:	3c3ff316 	blt	r7,r16,508de6c <__alt_data_end+0xfffbfc6c>
 508dea0:	da402517 	ldw	r9,148(sp)
 508dea4:	e007883a 	mov	r3,fp
 508dea8:	8039883a 	mov	fp,r16
 508deac:	1821883a 	mov	r16,r3
 508deb0:	d8c02417 	ldw	r3,144(sp)
 508deb4:	1705883a 	add	r2,r2,fp
 508deb8:	47000115 	stw	fp,4(r8)
 508debc:	40c00015 	stw	r3,0(r8)
 508dec0:	d8801c15 	stw	r2,112(sp)
 508dec4:	d9801b15 	stw	r6,108(sp)
 508dec8:	00c001c4 	movi	r3,7
 508decc:	19827616 	blt	r3,r6,508e8a8 <___vfiprintf_internal_r+0xfbc>
 508ded0:	4cf9c83a 	sub	fp,r9,r19
 508ded4:	42000204 	addi	r8,r8,8
 508ded8:	31000044 	addi	r4,r6,1
 508dedc:	300b883a 	mov	r5,r6
 508dee0:	07018516 	blt	zero,fp,508e4f8 <___vfiprintf_internal_r+0xc0c>
 508dee4:	9885883a 	add	r2,r19,r2
 508dee8:	45400015 	stw	r21,0(r8)
 508deec:	44c00115 	stw	r19,4(r8)
 508def0:	d8801c15 	stw	r2,112(sp)
 508def4:	d9001b15 	stw	r4,108(sp)
 508def8:	00c001c4 	movi	r3,7
 508defc:	1901dd0e 	bge	r3,r4,508e674 <___vfiprintf_internal_r+0xd88>
 508df00:	1002401e 	bne	r2,zero,508e804 <___vfiprintf_internal_r+0xf18>
 508df04:	d8001b15 	stw	zero,108(sp)
 508df08:	a2c0010c 	andi	r11,r20,4
 508df0c:	58000226 	beq	r11,zero,508df18 <___vfiprintf_internal_r+0x62c>
 508df10:	8ca7c83a 	sub	r19,r17,r18
 508df14:	04c2f216 	blt	zero,r19,508eae0 <___vfiprintf_internal_r+0x11f4>
 508df18:	8c80010e 	bge	r17,r18,508df20 <___vfiprintf_internal_r+0x634>
 508df1c:	9023883a 	mov	r17,r18
 508df20:	da802317 	ldw	r10,140(sp)
 508df24:	5455883a 	add	r10,r10,r17
 508df28:	da802315 	stw	r10,140(sp)
 508df2c:	d8001b15 	stw	zero,108(sp)
 508df30:	d811883a 	mov	r8,sp
 508df34:	003ea206 	br	508d9c0 <__alt_data_end+0xfffbf7c0>
 508df38:	a5000814 	ori	r20,r20,32
 508df3c:	80c00007 	ldb	r3,0(r16)
 508df40:	003ec906 	br	508da68 <__alt_data_end+0xfffbf868>
 508df44:	80c00007 	ldb	r3,0(r16)
 508df48:	1b030926 	beq	r3,r12,508eb70 <___vfiprintf_internal_r+0x1284>
 508df4c:	a5000414 	ori	r20,r20,16
 508df50:	003ec506 	br	508da68 <__alt_data_end+0xfffbf868>
 508df54:	21003fcc 	andi	r4,r4,255
 508df58:	20035e1e 	bne	r4,zero,508ecd4 <___vfiprintf_internal_r+0x13e8>
 508df5c:	a080080c 	andi	r2,r20,32
 508df60:	1002a526 	beq	r2,zero,508e9f8 <___vfiprintf_internal_r+0x110c>
 508df64:	da802217 	ldw	r10,136(sp)
 508df68:	50800017 	ldw	r2,0(r10)
 508df6c:	da802317 	ldw	r10,140(sp)
 508df70:	5007d7fa 	srai	r3,r10,31
 508df74:	da802217 	ldw	r10,136(sp)
 508df78:	10c00115 	stw	r3,4(r2)
 508df7c:	52800104 	addi	r10,r10,4
 508df80:	da802215 	stw	r10,136(sp)
 508df84:	da802317 	ldw	r10,140(sp)
 508df88:	12800015 	stw	r10,0(r2)
 508df8c:	003e8c06 	br	508d9c0 <__alt_data_end+0xfffbf7c0>
 508df90:	21003fcc 	andi	r4,r4,255
 508df94:	2003511e 	bne	r4,zero,508ecdc <___vfiprintf_internal_r+0x13f0>
 508df98:	a080080c 	andi	r2,r20,32
 508df9c:	1000a126 	beq	r2,zero,508e224 <___vfiprintf_internal_r+0x938>
 508dfa0:	da802217 	ldw	r10,136(sp)
 508dfa4:	d8001d85 	stb	zero,118(sp)
 508dfa8:	50800204 	addi	r2,r10,8
 508dfac:	54800017 	ldw	r18,0(r10)
 508dfb0:	54c00117 	ldw	r19,4(r10)
 508dfb4:	4802b416 	blt	r9,zero,508ea88 <___vfiprintf_internal_r+0x119c>
 508dfb8:	013fdfc4 	movi	r4,-129
 508dfbc:	94c6b03a 	or	r3,r18,r19
 508dfc0:	d8802215 	stw	r2,136(sp)
 508dfc4:	a128703a 	and	r20,r20,r4
 508dfc8:	1800a226 	beq	r3,zero,508e254 <___vfiprintf_internal_r+0x968>
 508dfcc:	0039883a 	mov	fp,zero
 508dfd0:	dd401a04 	addi	r21,sp,104
 508dfd4:	9006d0fa 	srli	r3,r18,3
 508dfd8:	9808977a 	slli	r4,r19,29
 508dfdc:	9826d0fa 	srli	r19,r19,3
 508dfe0:	948001cc 	andi	r18,r18,7
 508dfe4:	90800c04 	addi	r2,r18,48
 508dfe8:	ad7fffc4 	addi	r21,r21,-1
 508dfec:	20e4b03a 	or	r18,r4,r3
 508dff0:	a8800005 	stb	r2,0(r21)
 508dff4:	94c6b03a 	or	r3,r18,r19
 508dff8:	183ff61e 	bne	r3,zero,508dfd4 <__alt_data_end+0xfffbfdd4>
 508dffc:	a0c0004c 	andi	r3,r20,1
 508e000:	18005926 	beq	r3,zero,508e168 <___vfiprintf_internal_r+0x87c>
 508e004:	10803fcc 	andi	r2,r2,255
 508e008:	1080201c 	xori	r2,r2,128
 508e00c:	10bfe004 	addi	r2,r2,-128
 508e010:	00c00c04 	movi	r3,48
 508e014:	10c05426 	beq	r2,r3,508e168 <___vfiprintf_internal_r+0x87c>
 508e018:	da801e17 	ldw	r10,120(sp)
 508e01c:	a8bfffc4 	addi	r2,r21,-1
 508e020:	a8ffffc5 	stb	r3,-1(r21)
 508e024:	50a7c83a 	sub	r19,r10,r2
 508e028:	102b883a 	mov	r21,r2
 508e02c:	003f2f06 	br	508dcec <__alt_data_end+0xfffbfaec>
 508e030:	21003fcc 	andi	r4,r4,255
 508e034:	2003421e 	bne	r4,zero,508ed40 <___vfiprintf_internal_r+0x1454>
 508e038:	00814274 	movhi	r2,1289
 508e03c:	1097ad04 	addi	r2,r2,24244
 508e040:	d8802615 	stw	r2,152(sp)
 508e044:	a080080c 	andi	r2,r20,32
 508e048:	1000aa26 	beq	r2,zero,508e2f4 <___vfiprintf_internal_r+0xa08>
 508e04c:	da802217 	ldw	r10,136(sp)
 508e050:	54800017 	ldw	r18,0(r10)
 508e054:	54c00117 	ldw	r19,4(r10)
 508e058:	52800204 	addi	r10,r10,8
 508e05c:	da802215 	stw	r10,136(sp)
 508e060:	a080004c 	andi	r2,r20,1
 508e064:	1001d226 	beq	r2,zero,508e7b0 <___vfiprintf_internal_r+0xec4>
 508e068:	94c4b03a 	or	r2,r18,r19
 508e06c:	1002351e 	bne	r2,zero,508e944 <___vfiprintf_internal_r+0x1058>
 508e070:	d8001d85 	stb	zero,118(sp)
 508e074:	48022216 	blt	r9,zero,508e900 <___vfiprintf_internal_r+0x1014>
 508e078:	00bfdfc4 	movi	r2,-129
 508e07c:	a0a8703a 	and	r20,r20,r2
 508e080:	003f1506 	br	508dcd8 <__alt_data_end+0xfffbfad8>
 508e084:	da802217 	ldw	r10,136(sp)
 508e088:	04800044 	movi	r18,1
 508e08c:	d8001d85 	stb	zero,118(sp)
 508e090:	50800017 	ldw	r2,0(r10)
 508e094:	52800104 	addi	r10,r10,4
 508e098:	da802215 	stw	r10,136(sp)
 508e09c:	d8801005 	stb	r2,64(sp)
 508e0a0:	9027883a 	mov	r19,r18
 508e0a4:	dd401004 	addi	r21,sp,64
 508e0a8:	0013883a 	mov	r9,zero
 508e0ac:	003f1706 	br	508dd0c <__alt_data_end+0xfffbfb0c>
 508e0b0:	21003fcc 	andi	r4,r4,255
 508e0b4:	2003201e 	bne	r4,zero,508ed38 <___vfiprintf_internal_r+0x144c>
 508e0b8:	a080080c 	andi	r2,r20,32
 508e0bc:	10004b26 	beq	r2,zero,508e1ec <___vfiprintf_internal_r+0x900>
 508e0c0:	da802217 	ldw	r10,136(sp)
 508e0c4:	50800117 	ldw	r2,4(r10)
 508e0c8:	54800017 	ldw	r18,0(r10)
 508e0cc:	52800204 	addi	r10,r10,8
 508e0d0:	da802215 	stw	r10,136(sp)
 508e0d4:	1027883a 	mov	r19,r2
 508e0d8:	10022c16 	blt	r2,zero,508e98c <___vfiprintf_internal_r+0x10a0>
 508e0dc:	df001d83 	ldbu	fp,118(sp)
 508e0e0:	48007216 	blt	r9,zero,508e2ac <___vfiprintf_internal_r+0x9c0>
 508e0e4:	00ffdfc4 	movi	r3,-129
 508e0e8:	94c4b03a 	or	r2,r18,r19
 508e0ec:	a0e8703a 	and	r20,r20,r3
 508e0f0:	1000cc26 	beq	r2,zero,508e424 <___vfiprintf_internal_r+0xb38>
 508e0f4:	98021026 	beq	r19,zero,508e938 <___vfiprintf_internal_r+0x104c>
 508e0f8:	dc402415 	stw	r17,144(sp)
 508e0fc:	dc002515 	stw	r16,148(sp)
 508e100:	9823883a 	mov	r17,r19
 508e104:	9021883a 	mov	r16,r18
 508e108:	dd401a04 	addi	r21,sp,104
 508e10c:	4825883a 	mov	r18,r9
 508e110:	4027883a 	mov	r19,r8
 508e114:	8009883a 	mov	r4,r16
 508e118:	880b883a 	mov	r5,r17
 508e11c:	01800284 	movi	r6,10
 508e120:	000f883a 	mov	r7,zero
 508e124:	508fccc0 	call	508fccc <__umoddi3>
 508e128:	10800c04 	addi	r2,r2,48
 508e12c:	ad7fffc4 	addi	r21,r21,-1
 508e130:	8009883a 	mov	r4,r16
 508e134:	880b883a 	mov	r5,r17
 508e138:	a8800005 	stb	r2,0(r21)
 508e13c:	01800284 	movi	r6,10
 508e140:	000f883a 	mov	r7,zero
 508e144:	508f7540 	call	508f754 <__udivdi3>
 508e148:	1021883a 	mov	r16,r2
 508e14c:	10c4b03a 	or	r2,r2,r3
 508e150:	1823883a 	mov	r17,r3
 508e154:	103fef1e 	bne	r2,zero,508e114 <__alt_data_end+0xfffbff14>
 508e158:	dc402417 	ldw	r17,144(sp)
 508e15c:	dc002517 	ldw	r16,148(sp)
 508e160:	9013883a 	mov	r9,r18
 508e164:	9811883a 	mov	r8,r19
 508e168:	da801e17 	ldw	r10,120(sp)
 508e16c:	5567c83a 	sub	r19,r10,r21
 508e170:	003ede06 	br	508dcec <__alt_data_end+0xfffbfaec>
 508e174:	38803fcc 	andi	r2,r7,255
 508e178:	1080201c 	xori	r2,r2,128
 508e17c:	10bfe004 	addi	r2,r2,-128
 508e180:	1002371e 	bne	r2,zero,508ea60 <___vfiprintf_internal_r+0x1174>
 508e184:	01000044 	movi	r4,1
 508e188:	01c00804 	movi	r7,32
 508e18c:	80c00007 	ldb	r3,0(r16)
 508e190:	003e3506 	br	508da68 <__alt_data_end+0xfffbf868>
 508e194:	a5000054 	ori	r20,r20,1
 508e198:	80c00007 	ldb	r3,0(r16)
 508e19c:	003e3206 	br	508da68 <__alt_data_end+0xfffbf868>
 508e1a0:	a5002014 	ori	r20,r20,128
 508e1a4:	80c00007 	ldb	r3,0(r16)
 508e1a8:	003e2f06 	br	508da68 <__alt_data_end+0xfffbf868>
 508e1ac:	8015883a 	mov	r10,r16
 508e1b0:	0023883a 	mov	r17,zero
 508e1b4:	18bff404 	addi	r2,r3,-48
 508e1b8:	50c00007 	ldb	r3,0(r10)
 508e1bc:	8c4002a4 	muli	r17,r17,10
 508e1c0:	84000044 	addi	r16,r16,1
 508e1c4:	8015883a 	mov	r10,r16
 508e1c8:	1463883a 	add	r17,r2,r17
 508e1cc:	18bff404 	addi	r2,r3,-48
 508e1d0:	30bff92e 	bgeu	r6,r2,508e1b8 <__alt_data_end+0xfffbffb8>
 508e1d4:	003e2506 	br	508da6c <__alt_data_end+0xfffbf86c>
 508e1d8:	21003fcc 	andi	r4,r4,255
 508e1dc:	2002d41e 	bne	r4,zero,508ed30 <___vfiprintf_internal_r+0x1444>
 508e1e0:	a5000414 	ori	r20,r20,16
 508e1e4:	a080080c 	andi	r2,r20,32
 508e1e8:	103fb51e 	bne	r2,zero,508e0c0 <__alt_data_end+0xfffbfec0>
 508e1ec:	a080040c 	andi	r2,r20,16
 508e1f0:	1001f826 	beq	r2,zero,508e9d4 <___vfiprintf_internal_r+0x10e8>
 508e1f4:	da802217 	ldw	r10,136(sp)
 508e1f8:	54800017 	ldw	r18,0(r10)
 508e1fc:	52800104 	addi	r10,r10,4
 508e200:	da802215 	stw	r10,136(sp)
 508e204:	9027d7fa 	srai	r19,r18,31
 508e208:	9805883a 	mov	r2,r19
 508e20c:	003fb206 	br	508e0d8 <__alt_data_end+0xfffbfed8>
 508e210:	21003fcc 	andi	r4,r4,255
 508e214:	2002c41e 	bne	r4,zero,508ed28 <___vfiprintf_internal_r+0x143c>
 508e218:	a5000414 	ori	r20,r20,16
 508e21c:	a080080c 	andi	r2,r20,32
 508e220:	103f5f1e 	bne	r2,zero,508dfa0 <__alt_data_end+0xfffbfda0>
 508e224:	a080040c 	andi	r2,r20,16
 508e228:	10020f26 	beq	r2,zero,508ea68 <___vfiprintf_internal_r+0x117c>
 508e22c:	da802217 	ldw	r10,136(sp)
 508e230:	d8001d85 	stb	zero,118(sp)
 508e234:	0027883a 	mov	r19,zero
 508e238:	50800104 	addi	r2,r10,4
 508e23c:	54800017 	ldw	r18,0(r10)
 508e240:	48021116 	blt	r9,zero,508ea88 <___vfiprintf_internal_r+0x119c>
 508e244:	00ffdfc4 	movi	r3,-129
 508e248:	d8802215 	stw	r2,136(sp)
 508e24c:	a0e8703a 	and	r20,r20,r3
 508e250:	903f5e1e 	bne	r18,zero,508dfcc <__alt_data_end+0xfffbfdcc>
 508e254:	0039883a 	mov	fp,zero
 508e258:	4802a626 	beq	r9,zero,508ecf4 <___vfiprintf_internal_r+0x1408>
 508e25c:	0025883a 	mov	r18,zero
 508e260:	0027883a 	mov	r19,zero
 508e264:	003f5a06 	br	508dfd0 <__alt_data_end+0xfffbfdd0>
 508e268:	21003fcc 	andi	r4,r4,255
 508e26c:	20029f1e 	bne	r4,zero,508ecec <___vfiprintf_internal_r+0x1400>
 508e270:	a5000414 	ori	r20,r20,16
 508e274:	a080080c 	andi	r2,r20,32
 508e278:	10005e1e 	bne	r2,zero,508e3f4 <___vfiprintf_internal_r+0xb08>
 508e27c:	a080040c 	andi	r2,r20,16
 508e280:	1001a21e 	bne	r2,zero,508e90c <___vfiprintf_internal_r+0x1020>
 508e284:	a080100c 	andi	r2,r20,64
 508e288:	d8001d85 	stb	zero,118(sp)
 508e28c:	da802217 	ldw	r10,136(sp)
 508e290:	1002231e 	bne	r2,zero,508eb20 <___vfiprintf_internal_r+0x1234>
 508e294:	50800104 	addi	r2,r10,4
 508e298:	54800017 	ldw	r18,0(r10)
 508e29c:	0027883a 	mov	r19,zero
 508e2a0:	4801a00e 	bge	r9,zero,508e924 <___vfiprintf_internal_r+0x1038>
 508e2a4:	d8802215 	stw	r2,136(sp)
 508e2a8:	0039883a 	mov	fp,zero
 508e2ac:	94c4b03a 	or	r2,r18,r19
 508e2b0:	103f901e 	bne	r2,zero,508e0f4 <__alt_data_end+0xfffbfef4>
 508e2b4:	00800044 	movi	r2,1
 508e2b8:	10803fcc 	andi	r2,r2,255
 508e2bc:	00c00044 	movi	r3,1
 508e2c0:	10c05926 	beq	r2,r3,508e428 <___vfiprintf_internal_r+0xb3c>
 508e2c4:	00c00084 	movi	r3,2
 508e2c8:	10ffe41e 	bne	r2,r3,508e25c <__alt_data_end+0xfffc005c>
 508e2cc:	0025883a 	mov	r18,zero
 508e2d0:	0027883a 	mov	r19,zero
 508e2d4:	00013d06 	br	508e7cc <___vfiprintf_internal_r+0xee0>
 508e2d8:	21003fcc 	andi	r4,r4,255
 508e2dc:	2002811e 	bne	r4,zero,508ece4 <___vfiprintf_internal_r+0x13f8>
 508e2e0:	00814274 	movhi	r2,1289
 508e2e4:	1097a804 	addi	r2,r2,24224
 508e2e8:	d8802615 	stw	r2,152(sp)
 508e2ec:	a080080c 	andi	r2,r20,32
 508e2f0:	103f561e 	bne	r2,zero,508e04c <__alt_data_end+0xfffbfe4c>
 508e2f4:	a080040c 	andi	r2,r20,16
 508e2f8:	1001d126 	beq	r2,zero,508ea40 <___vfiprintf_internal_r+0x1154>
 508e2fc:	da802217 	ldw	r10,136(sp)
 508e300:	0027883a 	mov	r19,zero
 508e304:	54800017 	ldw	r18,0(r10)
 508e308:	52800104 	addi	r10,r10,4
 508e30c:	da802215 	stw	r10,136(sp)
 508e310:	003f5306 	br	508e060 <__alt_data_end+0xfffbfe60>
 508e314:	da802217 	ldw	r10,136(sp)
 508e318:	d8001d85 	stb	zero,118(sp)
 508e31c:	55400017 	ldw	r21,0(r10)
 508e320:	50c00104 	addi	r3,r10,4
 508e324:	a8024226 	beq	r21,zero,508ec30 <___vfiprintf_internal_r+0x1344>
 508e328:	48021816 	blt	r9,zero,508eb8c <___vfiprintf_internal_r+0x12a0>
 508e32c:	480d883a 	mov	r6,r9
 508e330:	000b883a 	mov	r5,zero
 508e334:	a809883a 	mov	r4,r21
 508e338:	d8c02a15 	stw	r3,168(sp)
 508e33c:	da002b15 	stw	r8,172(sp)
 508e340:	da402c15 	stw	r9,176(sp)
 508e344:	508a6dc0 	call	508a6dc <memchr>
 508e348:	d8c02a17 	ldw	r3,168(sp)
 508e34c:	da002b17 	ldw	r8,172(sp)
 508e350:	da402c17 	ldw	r9,176(sp)
 508e354:	10024826 	beq	r2,zero,508ec78 <___vfiprintf_internal_r+0x138c>
 508e358:	1567c83a 	sub	r19,r2,r21
 508e35c:	df001d83 	ldbu	fp,118(sp)
 508e360:	d8c02215 	stw	r3,136(sp)
 508e364:	0013883a 	mov	r9,zero
 508e368:	003e6006 	br	508dcec <__alt_data_end+0xfffbfaec>
 508e36c:	21003fcc 	andi	r4,r4,255
 508e370:	203fc026 	beq	r4,zero,508e274 <__alt_data_end+0xfffc0074>
 508e374:	d9c01d85 	stb	r7,118(sp)
 508e378:	003fbe06 	br	508e274 <__alt_data_end+0xfffc0074>
 508e37c:	da802217 	ldw	r10,136(sp)
 508e380:	54400017 	ldw	r17,0(r10)
 508e384:	50800104 	addi	r2,r10,4
 508e388:	883e3b16 	blt	r17,zero,508dc78 <__alt_data_end+0xfffbfa78>
 508e38c:	d8802215 	stw	r2,136(sp)
 508e390:	80c00007 	ldb	r3,0(r16)
 508e394:	003db406 	br	508da68 <__alt_data_end+0xfffbf868>
 508e398:	01000044 	movi	r4,1
 508e39c:	01c00ac4 	movi	r7,43
 508e3a0:	80c00007 	ldb	r3,0(r16)
 508e3a4:	003db006 	br	508da68 <__alt_data_end+0xfffbf868>
 508e3a8:	80c00007 	ldb	r3,0(r16)
 508e3ac:	82800044 	addi	r10,r16,1
 508e3b0:	1b423c26 	beq	r3,r13,508eca4 <___vfiprintf_internal_r+0x13b8>
 508e3b4:	18bff404 	addi	r2,r3,-48
 508e3b8:	0013883a 	mov	r9,zero
 508e3bc:	30822b36 	bltu	r6,r2,508ec6c <___vfiprintf_internal_r+0x1380>
 508e3c0:	50c00007 	ldb	r3,0(r10)
 508e3c4:	4a4002a4 	muli	r9,r9,10
 508e3c8:	54000044 	addi	r16,r10,1
 508e3cc:	8015883a 	mov	r10,r16
 508e3d0:	4893883a 	add	r9,r9,r2
 508e3d4:	18bff404 	addi	r2,r3,-48
 508e3d8:	30bff92e 	bgeu	r6,r2,508e3c0 <__alt_data_end+0xfffc01c0>
 508e3dc:	483da30e 	bge	r9,zero,508da6c <__alt_data_end+0xfffbf86c>
 508e3e0:	027fffc4 	movi	r9,-1
 508e3e4:	003da106 	br	508da6c <__alt_data_end+0xfffbf86c>
 508e3e8:	a5001014 	ori	r20,r20,64
 508e3ec:	80c00007 	ldb	r3,0(r16)
 508e3f0:	003d9d06 	br	508da68 <__alt_data_end+0xfffbf868>
 508e3f4:	da802217 	ldw	r10,136(sp)
 508e3f8:	d8001d85 	stb	zero,118(sp)
 508e3fc:	50c00204 	addi	r3,r10,8
 508e400:	54800017 	ldw	r18,0(r10)
 508e404:	54c00117 	ldw	r19,4(r10)
 508e408:	4801ca16 	blt	r9,zero,508eb34 <___vfiprintf_internal_r+0x1248>
 508e40c:	013fdfc4 	movi	r4,-129
 508e410:	94c4b03a 	or	r2,r18,r19
 508e414:	d8c02215 	stw	r3,136(sp)
 508e418:	a128703a 	and	r20,r20,r4
 508e41c:	0039883a 	mov	fp,zero
 508e420:	103f341e 	bne	r2,zero,508e0f4 <__alt_data_end+0xfffbfef4>
 508e424:	483e2e26 	beq	r9,zero,508dce0 <__alt_data_end+0xfffbfae0>
 508e428:	0025883a 	mov	r18,zero
 508e42c:	94800c04 	addi	r18,r18,48
 508e430:	dc8019c5 	stb	r18,103(sp)
 508e434:	dcc02717 	ldw	r19,156(sp)
 508e438:	dd4019c4 	addi	r21,sp,103
 508e43c:	003e2b06 	br	508dcec <__alt_data_end+0xfffbfaec>
 508e440:	21003fcc 	andi	r4,r4,255
 508e444:	2002361e 	bne	r4,zero,508ed20 <___vfiprintf_internal_r+0x1434>
 508e448:	1801c126 	beq	r3,zero,508eb50 <___vfiprintf_internal_r+0x1264>
 508e44c:	04800044 	movi	r18,1
 508e450:	d8c01005 	stb	r3,64(sp)
 508e454:	d8001d85 	stb	zero,118(sp)
 508e458:	9027883a 	mov	r19,r18
 508e45c:	dd401004 	addi	r21,sp,64
 508e460:	003f1106 	br	508e0a8 <__alt_data_end+0xfffbfea8>
 508e464:	d9402117 	ldw	r5,132(sp)
 508e468:	d9002017 	ldw	r4,128(sp)
 508e46c:	d9801a04 	addi	r6,sp,104
 508e470:	d9c02b15 	stw	r7,172(sp)
 508e474:	dbc02a15 	stw	r15,168(sp)
 508e478:	508d7d80 	call	508d7d8 <__sprint_r.part.0>
 508e47c:	d9c02b17 	ldw	r7,172(sp)
 508e480:	dbc02a17 	ldw	r15,168(sp)
 508e484:	10006d1e 	bne	r2,zero,508e63c <___vfiprintf_internal_r+0xd50>
 508e488:	d9801b17 	ldw	r6,108(sp)
 508e48c:	d8801c17 	ldw	r2,112(sp)
 508e490:	d811883a 	mov	r8,sp
 508e494:	31400044 	addi	r5,r6,1
 508e498:	003e3306 	br	508dd68 <__alt_data_end+0xfffbfb68>
 508e49c:	d9401b17 	ldw	r5,108(sp)
 508e4a0:	d8801c17 	ldw	r2,112(sp)
 508e4a4:	29000044 	addi	r4,r5,1
 508e4a8:	d8c01d87 	ldb	r3,118(sp)
 508e4ac:	183e4d26 	beq	r3,zero,508dde4 <__alt_data_end+0xfffbfbe4>
 508e4b0:	00c00044 	movi	r3,1
 508e4b4:	d9401d84 	addi	r5,sp,118
 508e4b8:	10c5883a 	add	r2,r2,r3
 508e4bc:	41400015 	stw	r5,0(r8)
 508e4c0:	40c00115 	stw	r3,4(r8)
 508e4c4:	d8801c15 	stw	r2,112(sp)
 508e4c8:	d9001b15 	stw	r4,108(sp)
 508e4cc:	014001c4 	movi	r5,7
 508e4d0:	2900a90e 	bge	r5,r4,508e778 <___vfiprintf_internal_r+0xe8c>
 508e4d4:	1000da1e 	bne	r2,zero,508e840 <___vfiprintf_internal_r+0xf54>
 508e4d8:	7000ab1e 	bne	r14,zero,508e788 <___vfiprintf_internal_r+0xe9c>
 508e4dc:	000b883a 	mov	r5,zero
 508e4e0:	1809883a 	mov	r4,r3
 508e4e4:	d811883a 	mov	r8,sp
 508e4e8:	00c02004 	movi	r3,128
 508e4ec:	e0fe4d26 	beq	fp,r3,508de24 <__alt_data_end+0xfffbfc24>
 508e4f0:	4cf9c83a 	sub	fp,r9,r19
 508e4f4:	073e7b0e 	bge	zero,fp,508dee4 <__alt_data_end+0xfffbfce4>
 508e4f8:	01c00404 	movi	r7,16
 508e4fc:	3f01900e 	bge	r7,fp,508eb40 <___vfiprintf_internal_r+0x1254>
 508e500:	00c14274 	movhi	r3,1289
 508e504:	18d81e04 	addi	r3,r3,24696
 508e508:	d8c02415 	stw	r3,144(sp)
 508e50c:	034001c4 	movi	r13,7
 508e510:	00000506 	br	508e528 <___vfiprintf_internal_r+0xc3c>
 508e514:	29000084 	addi	r4,r5,2
 508e518:	42000204 	addi	r8,r8,8
 508e51c:	180b883a 	mov	r5,r3
 508e520:	e73ffc04 	addi	fp,fp,-16
 508e524:	3f000d0e 	bge	r7,fp,508e55c <___vfiprintf_internal_r+0xc70>
 508e528:	10800404 	addi	r2,r2,16
 508e52c:	28c00044 	addi	r3,r5,1
 508e530:	45c00015 	stw	r23,0(r8)
 508e534:	41c00115 	stw	r7,4(r8)
 508e538:	d8801c15 	stw	r2,112(sp)
 508e53c:	d8c01b15 	stw	r3,108(sp)
 508e540:	68fff40e 	bge	r13,r3,508e514 <__alt_data_end+0xfffc0314>
 508e544:	1000101e 	bne	r2,zero,508e588 <___vfiprintf_internal_r+0xc9c>
 508e548:	e73ffc04 	addi	fp,fp,-16
 508e54c:	01000044 	movi	r4,1
 508e550:	000b883a 	mov	r5,zero
 508e554:	d811883a 	mov	r8,sp
 508e558:	3f3ff316 	blt	r7,fp,508e528 <__alt_data_end+0xfffc0328>
 508e55c:	da802417 	ldw	r10,144(sp)
 508e560:	1705883a 	add	r2,r2,fp
 508e564:	47000115 	stw	fp,4(r8)
 508e568:	42800015 	stw	r10,0(r8)
 508e56c:	d8801c15 	stw	r2,112(sp)
 508e570:	d9001b15 	stw	r4,108(sp)
 508e574:	00c001c4 	movi	r3,7
 508e578:	19003616 	blt	r3,r4,508e654 <___vfiprintf_internal_r+0xd68>
 508e57c:	42000204 	addi	r8,r8,8
 508e580:	21000044 	addi	r4,r4,1
 508e584:	003e5706 	br	508dee4 <__alt_data_end+0xfffbfce4>
 508e588:	d9402117 	ldw	r5,132(sp)
 508e58c:	d9002017 	ldw	r4,128(sp)
 508e590:	d9801a04 	addi	r6,sp,104
 508e594:	d9c02b15 	stw	r7,172(sp)
 508e598:	db402a15 	stw	r13,168(sp)
 508e59c:	508d7d80 	call	508d7d8 <__sprint_r.part.0>
 508e5a0:	d9c02b17 	ldw	r7,172(sp)
 508e5a4:	db402a17 	ldw	r13,168(sp)
 508e5a8:	1000241e 	bne	r2,zero,508e63c <___vfiprintf_internal_r+0xd50>
 508e5ac:	d9401b17 	ldw	r5,108(sp)
 508e5b0:	d8801c17 	ldw	r2,112(sp)
 508e5b4:	d811883a 	mov	r8,sp
 508e5b8:	29000044 	addi	r4,r5,1
 508e5bc:	003fd806 	br	508e520 <__alt_data_end+0xfffc0320>
 508e5c0:	d9401b17 	ldw	r5,108(sp)
 508e5c4:	00c14274 	movhi	r3,1289
 508e5c8:	18d82204 	addi	r3,r3,24712
 508e5cc:	d8c02415 	stw	r3,144(sp)
 508e5d0:	29400044 	addi	r5,r5,1
 508e5d4:	d8c02417 	ldw	r3,144(sp)
 508e5d8:	14c5883a 	add	r2,r2,r19
 508e5dc:	44c00115 	stw	r19,4(r8)
 508e5e0:	40c00015 	stw	r3,0(r8)
 508e5e4:	d8801c15 	stw	r2,112(sp)
 508e5e8:	d9401b15 	stw	r5,108(sp)
 508e5ec:	00c001c4 	movi	r3,7
 508e5f0:	1940070e 	bge	r3,r5,508e610 <___vfiprintf_internal_r+0xd24>
 508e5f4:	103e4826 	beq	r2,zero,508df18 <__alt_data_end+0xfffbfd18>
 508e5f8:	d9402117 	ldw	r5,132(sp)
 508e5fc:	d9002017 	ldw	r4,128(sp)
 508e600:	d9801a04 	addi	r6,sp,104
 508e604:	508d7d80 	call	508d7d8 <__sprint_r.part.0>
 508e608:	10000c1e 	bne	r2,zero,508e63c <___vfiprintf_internal_r+0xd50>
 508e60c:	d8801c17 	ldw	r2,112(sp)
 508e610:	8c80010e 	bge	r17,r18,508e618 <___vfiprintf_internal_r+0xd2c>
 508e614:	9023883a 	mov	r17,r18
 508e618:	da802317 	ldw	r10,140(sp)
 508e61c:	5455883a 	add	r10,r10,r17
 508e620:	da802315 	stw	r10,140(sp)
 508e624:	103e4126 	beq	r2,zero,508df2c <__alt_data_end+0xfffbfd2c>
 508e628:	d9402117 	ldw	r5,132(sp)
 508e62c:	d9002017 	ldw	r4,128(sp)
 508e630:	d9801a04 	addi	r6,sp,104
 508e634:	508d7d80 	call	508d7d8 <__sprint_r.part.0>
 508e638:	103e3c26 	beq	r2,zero,508df2c <__alt_data_end+0xfffbfd2c>
 508e63c:	dd002117 	ldw	r20,132(sp)
 508e640:	a080030b 	ldhu	r2,12(r20)
 508e644:	1080100c 	andi	r2,r2,64
 508e648:	1001231e 	bne	r2,zero,508ead8 <___vfiprintf_internal_r+0x11ec>
 508e64c:	d8802317 	ldw	r2,140(sp)
 508e650:	003d7b06 	br	508dc40 <__alt_data_end+0xfffbfa40>
 508e654:	1000991e 	bne	r2,zero,508e8bc <___vfiprintf_internal_r+0xfd0>
 508e658:	00c00044 	movi	r3,1
 508e65c:	9805883a 	mov	r2,r19
 508e660:	dd400015 	stw	r21,0(sp)
 508e664:	dcc00115 	stw	r19,4(sp)
 508e668:	dcc01c15 	stw	r19,112(sp)
 508e66c:	d8c01b15 	stw	r3,108(sp)
 508e670:	d811883a 	mov	r8,sp
 508e674:	42000204 	addi	r8,r8,8
 508e678:	a2c0010c 	andi	r11,r20,4
 508e67c:	583fe426 	beq	r11,zero,508e610 <__alt_data_end+0xfffc0410>
 508e680:	8ca7c83a 	sub	r19,r17,r18
 508e684:	04ffe20e 	bge	zero,r19,508e610 <__alt_data_end+0xfffc0410>
 508e688:	01c00404 	movi	r7,16
 508e68c:	3cffcc0e 	bge	r7,r19,508e5c0 <__alt_data_end+0xfffc03c0>
 508e690:	02814274 	movhi	r10,1289
 508e694:	52982204 	addi	r10,r10,24712
 508e698:	d9001b17 	ldw	r4,108(sp)
 508e69c:	da802415 	stw	r10,144(sp)
 508e6a0:	382b883a 	mov	r21,r7
 508e6a4:	050001c4 	movi	r20,7
 508e6a8:	df002017 	ldw	fp,128(sp)
 508e6ac:	00000506 	br	508e6c4 <___vfiprintf_internal_r+0xdd8>
 508e6b0:	21400084 	addi	r5,r4,2
 508e6b4:	42000204 	addi	r8,r8,8
 508e6b8:	1809883a 	mov	r4,r3
 508e6bc:	9cfffc04 	addi	r19,r19,-16
 508e6c0:	acffc40e 	bge	r21,r19,508e5d4 <__alt_data_end+0xfffc03d4>
 508e6c4:	10800404 	addi	r2,r2,16
 508e6c8:	20c00044 	addi	r3,r4,1
 508e6cc:	45800015 	stw	r22,0(r8)
 508e6d0:	45400115 	stw	r21,4(r8)
 508e6d4:	d8801c15 	stw	r2,112(sp)
 508e6d8:	d8c01b15 	stw	r3,108(sp)
 508e6dc:	a0fff40e 	bge	r20,r3,508e6b0 <__alt_data_end+0xfffc04b0>
 508e6e0:	1000041e 	bne	r2,zero,508e6f4 <___vfiprintf_internal_r+0xe08>
 508e6e4:	01400044 	movi	r5,1
 508e6e8:	0009883a 	mov	r4,zero
 508e6ec:	d811883a 	mov	r8,sp
 508e6f0:	003ff206 	br	508e6bc <__alt_data_end+0xfffc04bc>
 508e6f4:	d9402117 	ldw	r5,132(sp)
 508e6f8:	d9801a04 	addi	r6,sp,104
 508e6fc:	e009883a 	mov	r4,fp
 508e700:	508d7d80 	call	508d7d8 <__sprint_r.part.0>
 508e704:	103fcd1e 	bne	r2,zero,508e63c <__alt_data_end+0xfffc043c>
 508e708:	d9001b17 	ldw	r4,108(sp)
 508e70c:	d8801c17 	ldw	r2,112(sp)
 508e710:	d811883a 	mov	r8,sp
 508e714:	21400044 	addi	r5,r4,1
 508e718:	003fe806 	br	508e6bc <__alt_data_end+0xfffc04bc>
 508e71c:	d9402117 	ldw	r5,132(sp)
 508e720:	d9002017 	ldw	r4,128(sp)
 508e724:	d9801a04 	addi	r6,sp,104
 508e728:	d9c02b15 	stw	r7,172(sp)
 508e72c:	db402a15 	stw	r13,168(sp)
 508e730:	508d7d80 	call	508d7d8 <__sprint_r.part.0>
 508e734:	d9c02b17 	ldw	r7,172(sp)
 508e738:	db402a17 	ldw	r13,168(sp)
 508e73c:	103fbf1e 	bne	r2,zero,508e63c <__alt_data_end+0xfffc043c>
 508e740:	d9401b17 	ldw	r5,108(sp)
 508e744:	d8801c17 	ldw	r2,112(sp)
 508e748:	d811883a 	mov	r8,sp
 508e74c:	29800044 	addi	r6,r5,1
 508e750:	003dc406 	br	508de64 <__alt_data_end+0xfffbfc64>
 508e754:	1000d21e 	bne	r2,zero,508eaa0 <___vfiprintf_internal_r+0x11b4>
 508e758:	d8c01d87 	ldb	r3,118(sp)
 508e75c:	18009526 	beq	r3,zero,508e9b4 <___vfiprintf_internal_r+0x10c8>
 508e760:	00800044 	movi	r2,1
 508e764:	d8c01d84 	addi	r3,sp,118
 508e768:	1009883a 	mov	r4,r2
 508e76c:	d8c00015 	stw	r3,0(sp)
 508e770:	d8800115 	stw	r2,4(sp)
 508e774:	d811883a 	mov	r8,sp
 508e778:	200b883a 	mov	r5,r4
 508e77c:	42000204 	addi	r8,r8,8
 508e780:	21000044 	addi	r4,r4,1
 508e784:	003d9706 	br	508dde4 <__alt_data_end+0xfffbfbe4>
 508e788:	d9001d04 	addi	r4,sp,116
 508e78c:	00800084 	movi	r2,2
 508e790:	d9000015 	stw	r4,0(sp)
 508e794:	d8800115 	stw	r2,4(sp)
 508e798:	1809883a 	mov	r4,r3
 508e79c:	d811883a 	mov	r8,sp
 508e7a0:	200b883a 	mov	r5,r4
 508e7a4:	42000204 	addi	r8,r8,8
 508e7a8:	21000044 	addi	r4,r4,1
 508e7ac:	003f4e06 	br	508e4e8 <__alt_data_end+0xfffc02e8>
 508e7b0:	d8001d85 	stb	zero,118(sp)
 508e7b4:	48005016 	blt	r9,zero,508e8f8 <___vfiprintf_internal_r+0x100c>
 508e7b8:	00ffdfc4 	movi	r3,-129
 508e7bc:	94c4b03a 	or	r2,r18,r19
 508e7c0:	a0e8703a 	and	r20,r20,r3
 508e7c4:	103d4426 	beq	r2,zero,508dcd8 <__alt_data_end+0xfffbfad8>
 508e7c8:	0039883a 	mov	fp,zero
 508e7cc:	d9002617 	ldw	r4,152(sp)
 508e7d0:	dd401a04 	addi	r21,sp,104
 508e7d4:	908003cc 	andi	r2,r18,15
 508e7d8:	9806973a 	slli	r3,r19,28
 508e7dc:	2085883a 	add	r2,r4,r2
 508e7e0:	9024d13a 	srli	r18,r18,4
 508e7e4:	10800003 	ldbu	r2,0(r2)
 508e7e8:	9826d13a 	srli	r19,r19,4
 508e7ec:	ad7fffc4 	addi	r21,r21,-1
 508e7f0:	1ca4b03a 	or	r18,r3,r18
 508e7f4:	a8800005 	stb	r2,0(r21)
 508e7f8:	94c4b03a 	or	r2,r18,r19
 508e7fc:	103ff51e 	bne	r2,zero,508e7d4 <__alt_data_end+0xfffc05d4>
 508e800:	003e5906 	br	508e168 <__alt_data_end+0xfffbff68>
 508e804:	d9402117 	ldw	r5,132(sp)
 508e808:	d9002017 	ldw	r4,128(sp)
 508e80c:	d9801a04 	addi	r6,sp,104
 508e810:	508d7d80 	call	508d7d8 <__sprint_r.part.0>
 508e814:	103f891e 	bne	r2,zero,508e63c <__alt_data_end+0xfffc043c>
 508e818:	d8801c17 	ldw	r2,112(sp)
 508e81c:	d811883a 	mov	r8,sp
 508e820:	003f9506 	br	508e678 <__alt_data_end+0xfffc0478>
 508e824:	d9402117 	ldw	r5,132(sp)
 508e828:	d9002017 	ldw	r4,128(sp)
 508e82c:	d9801a04 	addi	r6,sp,104
 508e830:	508d7d80 	call	508d7d8 <__sprint_r.part.0>
 508e834:	103f811e 	bne	r2,zero,508e63c <__alt_data_end+0xfffc043c>
 508e838:	d811883a 	mov	r8,sp
 508e83c:	003ced06 	br	508dbf4 <__alt_data_end+0xfffbf9f4>
 508e840:	d9402117 	ldw	r5,132(sp)
 508e844:	d9002017 	ldw	r4,128(sp)
 508e848:	d9801a04 	addi	r6,sp,104
 508e84c:	da402c15 	stw	r9,176(sp)
 508e850:	db802a15 	stw	r14,168(sp)
 508e854:	508d7d80 	call	508d7d8 <__sprint_r.part.0>
 508e858:	da402c17 	ldw	r9,176(sp)
 508e85c:	db802a17 	ldw	r14,168(sp)
 508e860:	103f761e 	bne	r2,zero,508e63c <__alt_data_end+0xfffc043c>
 508e864:	d9401b17 	ldw	r5,108(sp)
 508e868:	d8801c17 	ldw	r2,112(sp)
 508e86c:	d811883a 	mov	r8,sp
 508e870:	29000044 	addi	r4,r5,1
 508e874:	003d5b06 	br	508dde4 <__alt_data_end+0xfffbfbe4>
 508e878:	d9402117 	ldw	r5,132(sp)
 508e87c:	d9002017 	ldw	r4,128(sp)
 508e880:	d9801a04 	addi	r6,sp,104
 508e884:	da402c15 	stw	r9,176(sp)
 508e888:	508d7d80 	call	508d7d8 <__sprint_r.part.0>
 508e88c:	da402c17 	ldw	r9,176(sp)
 508e890:	103f6a1e 	bne	r2,zero,508e63c <__alt_data_end+0xfffc043c>
 508e894:	d9401b17 	ldw	r5,108(sp)
 508e898:	d8801c17 	ldw	r2,112(sp)
 508e89c:	d811883a 	mov	r8,sp
 508e8a0:	29000044 	addi	r4,r5,1
 508e8a4:	003f1006 	br	508e4e8 <__alt_data_end+0xfffc02e8>
 508e8a8:	1000c31e 	bne	r2,zero,508ebb8 <___vfiprintf_internal_r+0x12cc>
 508e8ac:	01000044 	movi	r4,1
 508e8b0:	000b883a 	mov	r5,zero
 508e8b4:	d811883a 	mov	r8,sp
 508e8b8:	003f0d06 	br	508e4f0 <__alt_data_end+0xfffc02f0>
 508e8bc:	d9402117 	ldw	r5,132(sp)
 508e8c0:	d9002017 	ldw	r4,128(sp)
 508e8c4:	d9801a04 	addi	r6,sp,104
 508e8c8:	508d7d80 	call	508d7d8 <__sprint_r.part.0>
 508e8cc:	103f5b1e 	bne	r2,zero,508e63c <__alt_data_end+0xfffc043c>
 508e8d0:	d9001b17 	ldw	r4,108(sp)
 508e8d4:	d8801c17 	ldw	r2,112(sp)
 508e8d8:	d811883a 	mov	r8,sp
 508e8dc:	21000044 	addi	r4,r4,1
 508e8e0:	003d8006 	br	508dee4 <__alt_data_end+0xfffbfce4>
 508e8e4:	01014274 	movhi	r4,1289
 508e8e8:	2117ad04 	addi	r4,r4,24244
 508e8ec:	d9002615 	stw	r4,152(sp)
 508e8f0:	d8c02215 	stw	r3,136(sp)
 508e8f4:	1029883a 	mov	r20,r2
 508e8f8:	94c4b03a 	or	r2,r18,r19
 508e8fc:	103fb21e 	bne	r2,zero,508e7c8 <__alt_data_end+0xfffc05c8>
 508e900:	0039883a 	mov	fp,zero
 508e904:	00800084 	movi	r2,2
 508e908:	003e6b06 	br	508e2b8 <__alt_data_end+0xfffc00b8>
 508e90c:	da802217 	ldw	r10,136(sp)
 508e910:	d8001d85 	stb	zero,118(sp)
 508e914:	0027883a 	mov	r19,zero
 508e918:	50800104 	addi	r2,r10,4
 508e91c:	54800017 	ldw	r18,0(r10)
 508e920:	483e6016 	blt	r9,zero,508e2a4 <__alt_data_end+0xfffc00a4>
 508e924:	00ffdfc4 	movi	r3,-129
 508e928:	d8802215 	stw	r2,136(sp)
 508e92c:	a0e8703a 	and	r20,r20,r3
 508e930:	0039883a 	mov	fp,zero
 508e934:	903ebb26 	beq	r18,zero,508e424 <__alt_data_end+0xfffc0224>
 508e938:	00800244 	movi	r2,9
 508e93c:	14bdee36 	bltu	r2,r18,508e0f8 <__alt_data_end+0xfffbfef8>
 508e940:	003eba06 	br	508e42c <__alt_data_end+0xfffc022c>
 508e944:	00800c04 	movi	r2,48
 508e948:	d8c01d45 	stb	r3,117(sp)
 508e94c:	d8801d05 	stb	r2,116(sp)
 508e950:	d8001d85 	stb	zero,118(sp)
 508e954:	a0c00094 	ori	r3,r20,2
 508e958:	4800a916 	blt	r9,zero,508ec00 <___vfiprintf_internal_r+0x1314>
 508e95c:	00bfdfc4 	movi	r2,-129
 508e960:	a096703a 	and	r11,r20,r2
 508e964:	5d000094 	ori	r20,r11,2
 508e968:	0039883a 	mov	fp,zero
 508e96c:	003f9706 	br	508e7cc <__alt_data_end+0xfffc05cc>
 508e970:	8025883a 	mov	r18,r16
 508e974:	003c2e06 	br	508da30 <__alt_data_end+0xfffbf830>
 508e978:	00814274 	movhi	r2,1289
 508e97c:	1097ad04 	addi	r2,r2,24244
 508e980:	0039883a 	mov	fp,zero
 508e984:	d8802615 	stw	r2,152(sp)
 508e988:	003f9006 	br	508e7cc <__alt_data_end+0xfffc05cc>
 508e98c:	04a5c83a 	sub	r18,zero,r18
 508e990:	07000b44 	movi	fp,45
 508e994:	9004c03a 	cmpne	r2,r18,zero
 508e998:	04e7c83a 	sub	r19,zero,r19
 508e99c:	df001d85 	stb	fp,118(sp)
 508e9a0:	98a7c83a 	sub	r19,r19,r2
 508e9a4:	48009f16 	blt	r9,zero,508ec24 <___vfiprintf_internal_r+0x1338>
 508e9a8:	00bfdfc4 	movi	r2,-129
 508e9ac:	a0a8703a 	and	r20,r20,r2
 508e9b0:	003dd006 	br	508e0f4 <__alt_data_end+0xfffbfef4>
 508e9b4:	70004c26 	beq	r14,zero,508eae8 <___vfiprintf_internal_r+0x11fc>
 508e9b8:	00800084 	movi	r2,2
 508e9bc:	d8c01d04 	addi	r3,sp,116
 508e9c0:	d8c00015 	stw	r3,0(sp)
 508e9c4:	d8800115 	stw	r2,4(sp)
 508e9c8:	01000044 	movi	r4,1
 508e9cc:	d811883a 	mov	r8,sp
 508e9d0:	003f7306 	br	508e7a0 <__alt_data_end+0xfffc05a0>
 508e9d4:	a080100c 	andi	r2,r20,64
 508e9d8:	da802217 	ldw	r10,136(sp)
 508e9dc:	103e0626 	beq	r2,zero,508e1f8 <__alt_data_end+0xfffbfff8>
 508e9e0:	5480000f 	ldh	r18,0(r10)
 508e9e4:	52800104 	addi	r10,r10,4
 508e9e8:	da802215 	stw	r10,136(sp)
 508e9ec:	9027d7fa 	srai	r19,r18,31
 508e9f0:	9805883a 	mov	r2,r19
 508e9f4:	003db806 	br	508e0d8 <__alt_data_end+0xfffbfed8>
 508e9f8:	a080040c 	andi	r2,r20,16
 508e9fc:	1000091e 	bne	r2,zero,508ea24 <___vfiprintf_internal_r+0x1138>
 508ea00:	a2c0100c 	andi	r11,r20,64
 508ea04:	58000726 	beq	r11,zero,508ea24 <___vfiprintf_internal_r+0x1138>
 508ea08:	da802217 	ldw	r10,136(sp)
 508ea0c:	50800017 	ldw	r2,0(r10)
 508ea10:	52800104 	addi	r10,r10,4
 508ea14:	da802215 	stw	r10,136(sp)
 508ea18:	da802317 	ldw	r10,140(sp)
 508ea1c:	1280000d 	sth	r10,0(r2)
 508ea20:	003be706 	br	508d9c0 <__alt_data_end+0xfffbf7c0>
 508ea24:	da802217 	ldw	r10,136(sp)
 508ea28:	50800017 	ldw	r2,0(r10)
 508ea2c:	52800104 	addi	r10,r10,4
 508ea30:	da802215 	stw	r10,136(sp)
 508ea34:	da802317 	ldw	r10,140(sp)
 508ea38:	12800015 	stw	r10,0(r2)
 508ea3c:	003be006 	br	508d9c0 <__alt_data_end+0xfffbf7c0>
 508ea40:	a080100c 	andi	r2,r20,64
 508ea44:	da802217 	ldw	r10,136(sp)
 508ea48:	10003026 	beq	r2,zero,508eb0c <___vfiprintf_internal_r+0x1220>
 508ea4c:	5480000b 	ldhu	r18,0(r10)
 508ea50:	52800104 	addi	r10,r10,4
 508ea54:	0027883a 	mov	r19,zero
 508ea58:	da802215 	stw	r10,136(sp)
 508ea5c:	003d8006 	br	508e060 <__alt_data_end+0xfffbfe60>
 508ea60:	80c00007 	ldb	r3,0(r16)
 508ea64:	003c0006 	br	508da68 <__alt_data_end+0xfffbf868>
 508ea68:	a080100c 	andi	r2,r20,64
 508ea6c:	d8001d85 	stb	zero,118(sp)
 508ea70:	da802217 	ldw	r10,136(sp)
 508ea74:	1000201e 	bne	r2,zero,508eaf8 <___vfiprintf_internal_r+0x120c>
 508ea78:	50800104 	addi	r2,r10,4
 508ea7c:	54800017 	ldw	r18,0(r10)
 508ea80:	0027883a 	mov	r19,zero
 508ea84:	483def0e 	bge	r9,zero,508e244 <__alt_data_end+0xfffc0044>
 508ea88:	94c6b03a 	or	r3,r18,r19
 508ea8c:	d8802215 	stw	r2,136(sp)
 508ea90:	183d4e1e 	bne	r3,zero,508dfcc <__alt_data_end+0xfffbfdcc>
 508ea94:	0039883a 	mov	fp,zero
 508ea98:	0005883a 	mov	r2,zero
 508ea9c:	003e0606 	br	508e2b8 <__alt_data_end+0xfffc00b8>
 508eaa0:	d9402117 	ldw	r5,132(sp)
 508eaa4:	d9002017 	ldw	r4,128(sp)
 508eaa8:	d9801a04 	addi	r6,sp,104
 508eaac:	da402c15 	stw	r9,176(sp)
 508eab0:	db802a15 	stw	r14,168(sp)
 508eab4:	508d7d80 	call	508d7d8 <__sprint_r.part.0>
 508eab8:	da402c17 	ldw	r9,176(sp)
 508eabc:	db802a17 	ldw	r14,168(sp)
 508eac0:	103ede1e 	bne	r2,zero,508e63c <__alt_data_end+0xfffc043c>
 508eac4:	d9401b17 	ldw	r5,108(sp)
 508eac8:	d8801c17 	ldw	r2,112(sp)
 508eacc:	d811883a 	mov	r8,sp
 508ead0:	29000044 	addi	r4,r5,1
 508ead4:	003e7406 	br	508e4a8 <__alt_data_end+0xfffc02a8>
 508ead8:	00bfffc4 	movi	r2,-1
 508eadc:	003c5806 	br	508dc40 <__alt_data_end+0xfffbfa40>
 508eae0:	d811883a 	mov	r8,sp
 508eae4:	003ee806 	br	508e688 <__alt_data_end+0xfffc0488>
 508eae8:	000b883a 	mov	r5,zero
 508eaec:	01000044 	movi	r4,1
 508eaf0:	d811883a 	mov	r8,sp
 508eaf4:	003e7c06 	br	508e4e8 <__alt_data_end+0xfffc02e8>
 508eaf8:	50800104 	addi	r2,r10,4
 508eafc:	5480000b 	ldhu	r18,0(r10)
 508eb00:	0027883a 	mov	r19,zero
 508eb04:	483dcf0e 	bge	r9,zero,508e244 <__alt_data_end+0xfffc0044>
 508eb08:	003fdf06 	br	508ea88 <__alt_data_end+0xfffc0888>
 508eb0c:	54800017 	ldw	r18,0(r10)
 508eb10:	52800104 	addi	r10,r10,4
 508eb14:	0027883a 	mov	r19,zero
 508eb18:	da802215 	stw	r10,136(sp)
 508eb1c:	003d5006 	br	508e060 <__alt_data_end+0xfffbfe60>
 508eb20:	50800104 	addi	r2,r10,4
 508eb24:	5480000b 	ldhu	r18,0(r10)
 508eb28:	0027883a 	mov	r19,zero
 508eb2c:	483f7d0e 	bge	r9,zero,508e924 <__alt_data_end+0xfffc0724>
 508eb30:	003ddc06 	br	508e2a4 <__alt_data_end+0xfffc00a4>
 508eb34:	d8c02215 	stw	r3,136(sp)
 508eb38:	0039883a 	mov	fp,zero
 508eb3c:	003ddb06 	br	508e2ac <__alt_data_end+0xfffc00ac>
 508eb40:	02814274 	movhi	r10,1289
 508eb44:	52981e04 	addi	r10,r10,24696
 508eb48:	da802415 	stw	r10,144(sp)
 508eb4c:	003e8306 	br	508e55c <__alt_data_end+0xfffc035c>
 508eb50:	d8801c17 	ldw	r2,112(sp)
 508eb54:	dd002117 	ldw	r20,132(sp)
 508eb58:	103eb926 	beq	r2,zero,508e640 <__alt_data_end+0xfffc0440>
 508eb5c:	d9002017 	ldw	r4,128(sp)
 508eb60:	d9801a04 	addi	r6,sp,104
 508eb64:	a00b883a 	mov	r5,r20
 508eb68:	508d7d80 	call	508d7d8 <__sprint_r.part.0>
 508eb6c:	003eb406 	br	508e640 <__alt_data_end+0xfffc0440>
 508eb70:	80c00043 	ldbu	r3,1(r16)
 508eb74:	a5000814 	ori	r20,r20,32
 508eb78:	84000044 	addi	r16,r16,1
 508eb7c:	18c03fcc 	andi	r3,r3,255
 508eb80:	18c0201c 	xori	r3,r3,128
 508eb84:	18ffe004 	addi	r3,r3,-128
 508eb88:	003bb706 	br	508da68 <__alt_data_end+0xfffbf868>
 508eb8c:	a809883a 	mov	r4,r21
 508eb90:	d8c02a15 	stw	r3,168(sp)
 508eb94:	da002b15 	stw	r8,172(sp)
 508eb98:	5082b380 	call	5082b38 <strlen>
 508eb9c:	d8c02a17 	ldw	r3,168(sp)
 508eba0:	1027883a 	mov	r19,r2
 508eba4:	df001d83 	ldbu	fp,118(sp)
 508eba8:	d8c02215 	stw	r3,136(sp)
 508ebac:	0013883a 	mov	r9,zero
 508ebb0:	da002b17 	ldw	r8,172(sp)
 508ebb4:	003c4d06 	br	508dcec <__alt_data_end+0xfffbfaec>
 508ebb8:	d9402117 	ldw	r5,132(sp)
 508ebbc:	d9002017 	ldw	r4,128(sp)
 508ebc0:	d9801a04 	addi	r6,sp,104
 508ebc4:	da402c15 	stw	r9,176(sp)
 508ebc8:	508d7d80 	call	508d7d8 <__sprint_r.part.0>
 508ebcc:	da402c17 	ldw	r9,176(sp)
 508ebd0:	103e9a1e 	bne	r2,zero,508e63c <__alt_data_end+0xfffc043c>
 508ebd4:	d9401b17 	ldw	r5,108(sp)
 508ebd8:	d8801c17 	ldw	r2,112(sp)
 508ebdc:	d811883a 	mov	r8,sp
 508ebe0:	29000044 	addi	r4,r5,1
 508ebe4:	003e4206 	br	508e4f0 <__alt_data_end+0xfffc02f0>
 508ebe8:	d9401b17 	ldw	r5,108(sp)
 508ebec:	01014274 	movhi	r4,1289
 508ebf0:	21182204 	addi	r4,r4,24712
 508ebf4:	d9002415 	stw	r4,144(sp)
 508ebf8:	29400044 	addi	r5,r5,1
 508ebfc:	003c6d06 	br	508ddb4 <__alt_data_end+0xfffbfbb4>
 508ec00:	0039883a 	mov	fp,zero
 508ec04:	00800084 	movi	r2,2
 508ec08:	10803fcc 	andi	r2,r2,255
 508ec0c:	01000044 	movi	r4,1
 508ec10:	11001e26 	beq	r2,r4,508ec8c <___vfiprintf_internal_r+0x13a0>
 508ec14:	01000084 	movi	r4,2
 508ec18:	11001e1e 	bne	r2,r4,508ec94 <___vfiprintf_internal_r+0x13a8>
 508ec1c:	1829883a 	mov	r20,r3
 508ec20:	003eea06 	br	508e7cc <__alt_data_end+0xfffc05cc>
 508ec24:	a007883a 	mov	r3,r20
 508ec28:	00800044 	movi	r2,1
 508ec2c:	003ff606 	br	508ec08 <__alt_data_end+0xfffc0a08>
 508ec30:	00800184 	movi	r2,6
 508ec34:	1240012e 	bgeu	r2,r9,508ec3c <___vfiprintf_internal_r+0x1350>
 508ec38:	1013883a 	mov	r9,r2
 508ec3c:	4827883a 	mov	r19,r9
 508ec40:	4825883a 	mov	r18,r9
 508ec44:	48001516 	blt	r9,zero,508ec9c <___vfiprintf_internal_r+0x13b0>
 508ec48:	05414274 	movhi	r21,1289
 508ec4c:	d8c02215 	stw	r3,136(sp)
 508ec50:	ad57b204 	addi	r21,r21,24264
 508ec54:	003d1406 	br	508e0a8 <__alt_data_end+0xfffbfea8>
 508ec58:	02814274 	movhi	r10,1289
 508ec5c:	52981e04 	addi	r10,r10,24696
 508ec60:	da802415 	stw	r10,144(sp)
 508ec64:	200d883a 	mov	r6,r4
 508ec68:	003c9106 	br	508deb0 <__alt_data_end+0xfffbfcb0>
 508ec6c:	5021883a 	mov	r16,r10
 508ec70:	0013883a 	mov	r9,zero
 508ec74:	003b7d06 	br	508da6c <__alt_data_end+0xfffbf86c>
 508ec78:	4827883a 	mov	r19,r9
 508ec7c:	df001d83 	ldbu	fp,118(sp)
 508ec80:	d8c02215 	stw	r3,136(sp)
 508ec84:	0013883a 	mov	r9,zero
 508ec88:	003c1806 	br	508dcec <__alt_data_end+0xfffbfaec>
 508ec8c:	1829883a 	mov	r20,r3
 508ec90:	003d1806 	br	508e0f4 <__alt_data_end+0xfffbfef4>
 508ec94:	1829883a 	mov	r20,r3
 508ec98:	003ccd06 	br	508dfd0 <__alt_data_end+0xfffbfdd0>
 508ec9c:	0025883a 	mov	r18,zero
 508eca0:	003fe906 	br	508ec48 <__alt_data_end+0xfffc0a48>
 508eca4:	d8802217 	ldw	r2,136(sp)
 508eca8:	80c00043 	ldbu	r3,1(r16)
 508ecac:	5021883a 	mov	r16,r10
 508ecb0:	12400017 	ldw	r9,0(r2)
 508ecb4:	10800104 	addi	r2,r2,4
 508ecb8:	d8802215 	stw	r2,136(sp)
 508ecbc:	483faf0e 	bge	r9,zero,508eb7c <__alt_data_end+0xfffc097c>
 508ecc0:	18c03fcc 	andi	r3,r3,255
 508ecc4:	18c0201c 	xori	r3,r3,128
 508ecc8:	027fffc4 	movi	r9,-1
 508eccc:	18ffe004 	addi	r3,r3,-128
 508ecd0:	003b6506 	br	508da68 <__alt_data_end+0xfffbf868>
 508ecd4:	d9c01d85 	stb	r7,118(sp)
 508ecd8:	003ca006 	br	508df5c <__alt_data_end+0xfffbfd5c>
 508ecdc:	d9c01d85 	stb	r7,118(sp)
 508ece0:	003cad06 	br	508df98 <__alt_data_end+0xfffbfd98>
 508ece4:	d9c01d85 	stb	r7,118(sp)
 508ece8:	003d7d06 	br	508e2e0 <__alt_data_end+0xfffc00e0>
 508ecec:	d9c01d85 	stb	r7,118(sp)
 508ecf0:	003d5f06 	br	508e270 <__alt_data_end+0xfffc0070>
 508ecf4:	a080004c 	andi	r2,r20,1
 508ecf8:	0039883a 	mov	fp,zero
 508ecfc:	10000526 	beq	r2,zero,508ed14 <___vfiprintf_internal_r+0x1428>
 508ed00:	00800c04 	movi	r2,48
 508ed04:	d88019c5 	stb	r2,103(sp)
 508ed08:	dcc02717 	ldw	r19,156(sp)
 508ed0c:	dd4019c4 	addi	r21,sp,103
 508ed10:	003bf606 	br	508dcec <__alt_data_end+0xfffbfaec>
 508ed14:	0027883a 	mov	r19,zero
 508ed18:	dd401a04 	addi	r21,sp,104
 508ed1c:	003bf306 	br	508dcec <__alt_data_end+0xfffbfaec>
 508ed20:	d9c01d85 	stb	r7,118(sp)
 508ed24:	003dc806 	br	508e448 <__alt_data_end+0xfffc0248>
 508ed28:	d9c01d85 	stb	r7,118(sp)
 508ed2c:	003d3a06 	br	508e218 <__alt_data_end+0xfffc0018>
 508ed30:	d9c01d85 	stb	r7,118(sp)
 508ed34:	003d2a06 	br	508e1e0 <__alt_data_end+0xfffbffe0>
 508ed38:	d9c01d85 	stb	r7,118(sp)
 508ed3c:	003cde06 	br	508e0b8 <__alt_data_end+0xfffbfeb8>
 508ed40:	d9c01d85 	stb	r7,118(sp)
 508ed44:	003cbc06 	br	508e038 <__alt_data_end+0xfffbfe38>

0508ed48 <__vfiprintf_internal>:
 508ed48:	00814274 	movhi	r2,1289
 508ed4c:	109f2104 	addi	r2,r2,31876
 508ed50:	300f883a 	mov	r7,r6
 508ed54:	280d883a 	mov	r6,r5
 508ed58:	200b883a 	mov	r5,r4
 508ed5c:	11000017 	ldw	r4,0(r2)
 508ed60:	508d8ec1 	jmpi	508d8ec <___vfiprintf_internal_r>

0508ed64 <__sbprintf>:
 508ed64:	2880030b 	ldhu	r2,12(r5)
 508ed68:	2ac01917 	ldw	r11,100(r5)
 508ed6c:	2a80038b 	ldhu	r10,14(r5)
 508ed70:	2a400717 	ldw	r9,28(r5)
 508ed74:	2a000917 	ldw	r8,36(r5)
 508ed78:	defee204 	addi	sp,sp,-1144
 508ed7c:	00c10004 	movi	r3,1024
 508ed80:	dc011a15 	stw	r16,1128(sp)
 508ed84:	10bfff4c 	andi	r2,r2,65533
 508ed88:	2821883a 	mov	r16,r5
 508ed8c:	d8cb883a 	add	r5,sp,r3
 508ed90:	dc811c15 	stw	r18,1136(sp)
 508ed94:	dc411b15 	stw	r17,1132(sp)
 508ed98:	dfc11d15 	stw	ra,1140(sp)
 508ed9c:	2025883a 	mov	r18,r4
 508eda0:	d881030d 	sth	r2,1036(sp)
 508eda4:	dac11915 	stw	r11,1124(sp)
 508eda8:	da81038d 	sth	r10,1038(sp)
 508edac:	da410715 	stw	r9,1052(sp)
 508edb0:	da010915 	stw	r8,1060(sp)
 508edb4:	dec10015 	stw	sp,1024(sp)
 508edb8:	dec10415 	stw	sp,1040(sp)
 508edbc:	d8c10215 	stw	r3,1032(sp)
 508edc0:	d8c10515 	stw	r3,1044(sp)
 508edc4:	d8010615 	stw	zero,1048(sp)
 508edc8:	508d8ec0 	call	508d8ec <___vfiprintf_internal_r>
 508edcc:	1023883a 	mov	r17,r2
 508edd0:	10000416 	blt	r2,zero,508ede4 <__sbprintf+0x80>
 508edd4:	d9410004 	addi	r5,sp,1024
 508edd8:	9009883a 	mov	r4,r18
 508eddc:	5088d940 	call	5088d94 <_fflush_r>
 508ede0:	10000d1e 	bne	r2,zero,508ee18 <__sbprintf+0xb4>
 508ede4:	d881030b 	ldhu	r2,1036(sp)
 508ede8:	1080100c 	andi	r2,r2,64
 508edec:	10000326 	beq	r2,zero,508edfc <__sbprintf+0x98>
 508edf0:	8080030b 	ldhu	r2,12(r16)
 508edf4:	10801014 	ori	r2,r2,64
 508edf8:	8080030d 	sth	r2,12(r16)
 508edfc:	8805883a 	mov	r2,r17
 508ee00:	dfc11d17 	ldw	ra,1140(sp)
 508ee04:	dc811c17 	ldw	r18,1136(sp)
 508ee08:	dc411b17 	ldw	r17,1132(sp)
 508ee0c:	dc011a17 	ldw	r16,1128(sp)
 508ee10:	dec11e04 	addi	sp,sp,1144
 508ee14:	f800283a 	ret
 508ee18:	047fffc4 	movi	r17,-1
 508ee1c:	003ff106 	br	508ede4 <__alt_data_end+0xfffc0be4>

0508ee20 <_write_r>:
 508ee20:	defffd04 	addi	sp,sp,-12
 508ee24:	2805883a 	mov	r2,r5
 508ee28:	dc000015 	stw	r16,0(sp)
 508ee2c:	040142b4 	movhi	r16,1290
 508ee30:	dc400115 	stw	r17,4(sp)
 508ee34:	300b883a 	mov	r5,r6
 508ee38:	8425f804 	addi	r16,r16,-26656
 508ee3c:	2023883a 	mov	r17,r4
 508ee40:	380d883a 	mov	r6,r7
 508ee44:	1009883a 	mov	r4,r2
 508ee48:	dfc00215 	stw	ra,8(sp)
 508ee4c:	80000015 	stw	zero,0(r16)
 508ee50:	50933100 	call	5093310 <write>
 508ee54:	00ffffc4 	movi	r3,-1
 508ee58:	10c00526 	beq	r2,r3,508ee70 <_write_r+0x50>
 508ee5c:	dfc00217 	ldw	ra,8(sp)
 508ee60:	dc400117 	ldw	r17,4(sp)
 508ee64:	dc000017 	ldw	r16,0(sp)
 508ee68:	dec00304 	addi	sp,sp,12
 508ee6c:	f800283a 	ret
 508ee70:	80c00017 	ldw	r3,0(r16)
 508ee74:	183ff926 	beq	r3,zero,508ee5c <__alt_data_end+0xfffc0c5c>
 508ee78:	88c00015 	stw	r3,0(r17)
 508ee7c:	003ff706 	br	508ee5c <__alt_data_end+0xfffc0c5c>

0508ee80 <_close_r>:
 508ee80:	defffd04 	addi	sp,sp,-12
 508ee84:	dc000015 	stw	r16,0(sp)
 508ee88:	040142b4 	movhi	r16,1290
 508ee8c:	dc400115 	stw	r17,4(sp)
 508ee90:	8425f804 	addi	r16,r16,-26656
 508ee94:	2023883a 	mov	r17,r4
 508ee98:	2809883a 	mov	r4,r5
 508ee9c:	dfc00215 	stw	ra,8(sp)
 508eea0:	80000015 	stw	zero,0(r16)
 508eea4:	50928bc0 	call	50928bc <close>
 508eea8:	00ffffc4 	movi	r3,-1
 508eeac:	10c00526 	beq	r2,r3,508eec4 <_close_r+0x44>
 508eeb0:	dfc00217 	ldw	ra,8(sp)
 508eeb4:	dc400117 	ldw	r17,4(sp)
 508eeb8:	dc000017 	ldw	r16,0(sp)
 508eebc:	dec00304 	addi	sp,sp,12
 508eec0:	f800283a 	ret
 508eec4:	80c00017 	ldw	r3,0(r16)
 508eec8:	183ff926 	beq	r3,zero,508eeb0 <__alt_data_end+0xfffc0cb0>
 508eecc:	88c00015 	stw	r3,0(r17)
 508eed0:	003ff706 	br	508eeb0 <__alt_data_end+0xfffc0cb0>

0508eed4 <_calloc_r>:
 508eed4:	298b383a 	mul	r5,r5,r6
 508eed8:	defffe04 	addi	sp,sp,-8
 508eedc:	dfc00115 	stw	ra,4(sp)
 508eee0:	dc000015 	stw	r16,0(sp)
 508eee4:	5089ed00 	call	5089ed0 <_malloc_r>
 508eee8:	10002926 	beq	r2,zero,508ef90 <_calloc_r+0xbc>
 508eeec:	11bfff17 	ldw	r6,-4(r2)
 508eef0:	1021883a 	mov	r16,r2
 508eef4:	00bfff04 	movi	r2,-4
 508eef8:	308c703a 	and	r6,r6,r2
 508eefc:	00c00904 	movi	r3,36
 508ef00:	308d883a 	add	r6,r6,r2
 508ef04:	19801636 	bltu	r3,r6,508ef60 <_calloc_r+0x8c>
 508ef08:	008004c4 	movi	r2,19
 508ef0c:	11800b2e 	bgeu	r2,r6,508ef3c <_calloc_r+0x68>
 508ef10:	80000015 	stw	zero,0(r16)
 508ef14:	80000115 	stw	zero,4(r16)
 508ef18:	008006c4 	movi	r2,27
 508ef1c:	11801a2e 	bgeu	r2,r6,508ef88 <_calloc_r+0xb4>
 508ef20:	80000215 	stw	zero,8(r16)
 508ef24:	80000315 	stw	zero,12(r16)
 508ef28:	30c0151e 	bne	r6,r3,508ef80 <_calloc_r+0xac>
 508ef2c:	80000415 	stw	zero,16(r16)
 508ef30:	80800604 	addi	r2,r16,24
 508ef34:	80000515 	stw	zero,20(r16)
 508ef38:	00000106 	br	508ef40 <_calloc_r+0x6c>
 508ef3c:	8005883a 	mov	r2,r16
 508ef40:	10000015 	stw	zero,0(r2)
 508ef44:	10000115 	stw	zero,4(r2)
 508ef48:	10000215 	stw	zero,8(r2)
 508ef4c:	8005883a 	mov	r2,r16
 508ef50:	dfc00117 	ldw	ra,4(sp)
 508ef54:	dc000017 	ldw	r16,0(sp)
 508ef58:	dec00204 	addi	sp,sp,8
 508ef5c:	f800283a 	ret
 508ef60:	000b883a 	mov	r5,zero
 508ef64:	8009883a 	mov	r4,r16
 508ef68:	508aa640 	call	508aa64 <memset>
 508ef6c:	8005883a 	mov	r2,r16
 508ef70:	dfc00117 	ldw	ra,4(sp)
 508ef74:	dc000017 	ldw	r16,0(sp)
 508ef78:	dec00204 	addi	sp,sp,8
 508ef7c:	f800283a 	ret
 508ef80:	80800404 	addi	r2,r16,16
 508ef84:	003fee06 	br	508ef40 <__alt_data_end+0xfffc0d40>
 508ef88:	80800204 	addi	r2,r16,8
 508ef8c:	003fec06 	br	508ef40 <__alt_data_end+0xfffc0d40>
 508ef90:	0005883a 	mov	r2,zero
 508ef94:	003fee06 	br	508ef50 <__alt_data_end+0xfffc0d50>

0508ef98 <_fclose_r>:
 508ef98:	28003926 	beq	r5,zero,508f080 <_fclose_r+0xe8>
 508ef9c:	defffc04 	addi	sp,sp,-16
 508efa0:	dc400115 	stw	r17,4(sp)
 508efa4:	dc000015 	stw	r16,0(sp)
 508efa8:	dfc00315 	stw	ra,12(sp)
 508efac:	dc800215 	stw	r18,8(sp)
 508efb0:	2023883a 	mov	r17,r4
 508efb4:	2821883a 	mov	r16,r5
 508efb8:	20000226 	beq	r4,zero,508efc4 <_fclose_r+0x2c>
 508efbc:	20800e17 	ldw	r2,56(r4)
 508efc0:	10002726 	beq	r2,zero,508f060 <_fclose_r+0xc8>
 508efc4:	8080030f 	ldh	r2,12(r16)
 508efc8:	1000071e 	bne	r2,zero,508efe8 <_fclose_r+0x50>
 508efcc:	0005883a 	mov	r2,zero
 508efd0:	dfc00317 	ldw	ra,12(sp)
 508efd4:	dc800217 	ldw	r18,8(sp)
 508efd8:	dc400117 	ldw	r17,4(sp)
 508efdc:	dc000017 	ldw	r16,0(sp)
 508efe0:	dec00404 	addi	sp,sp,16
 508efe4:	f800283a 	ret
 508efe8:	800b883a 	mov	r5,r16
 508efec:	8809883a 	mov	r4,r17
 508eff0:	5088b780 	call	5088b78 <__sflush_r>
 508eff4:	1025883a 	mov	r18,r2
 508eff8:	80800b17 	ldw	r2,44(r16)
 508effc:	10000426 	beq	r2,zero,508f010 <_fclose_r+0x78>
 508f000:	81400717 	ldw	r5,28(r16)
 508f004:	8809883a 	mov	r4,r17
 508f008:	103ee83a 	callr	r2
 508f00c:	10001616 	blt	r2,zero,508f068 <_fclose_r+0xd0>
 508f010:	8080030b 	ldhu	r2,12(r16)
 508f014:	1080200c 	andi	r2,r2,128
 508f018:	1000151e 	bne	r2,zero,508f070 <_fclose_r+0xd8>
 508f01c:	81400c17 	ldw	r5,48(r16)
 508f020:	28000526 	beq	r5,zero,508f038 <_fclose_r+0xa0>
 508f024:	80801004 	addi	r2,r16,64
 508f028:	28800226 	beq	r5,r2,508f034 <_fclose_r+0x9c>
 508f02c:	8809883a 	mov	r4,r17
 508f030:	50892e40 	call	50892e4 <_free_r>
 508f034:	80000c15 	stw	zero,48(r16)
 508f038:	81401117 	ldw	r5,68(r16)
 508f03c:	28000326 	beq	r5,zero,508f04c <_fclose_r+0xb4>
 508f040:	8809883a 	mov	r4,r17
 508f044:	50892e40 	call	50892e4 <_free_r>
 508f048:	80001115 	stw	zero,68(r16)
 508f04c:	50891800 	call	5089180 <__sfp_lock_acquire>
 508f050:	8000030d 	sth	zero,12(r16)
 508f054:	50891840 	call	5089184 <__sfp_lock_release>
 508f058:	9005883a 	mov	r2,r18
 508f05c:	003fdc06 	br	508efd0 <__alt_data_end+0xfffc0dd0>
 508f060:	50891700 	call	5089170 <__sinit>
 508f064:	003fd706 	br	508efc4 <__alt_data_end+0xfffc0dc4>
 508f068:	04bfffc4 	movi	r18,-1
 508f06c:	003fe806 	br	508f010 <__alt_data_end+0xfffc0e10>
 508f070:	81400417 	ldw	r5,16(r16)
 508f074:	8809883a 	mov	r4,r17
 508f078:	50892e40 	call	50892e4 <_free_r>
 508f07c:	003fe706 	br	508f01c <__alt_data_end+0xfffc0e1c>
 508f080:	0005883a 	mov	r2,zero
 508f084:	f800283a 	ret

0508f088 <fclose>:
 508f088:	00814274 	movhi	r2,1289
 508f08c:	109f2104 	addi	r2,r2,31876
 508f090:	200b883a 	mov	r5,r4
 508f094:	11000017 	ldw	r4,0(r2)
 508f098:	508ef981 	jmpi	508ef98 <_fclose_r>

0508f09c <__fputwc>:
 508f09c:	defff804 	addi	sp,sp,-32
 508f0a0:	dcc00415 	stw	r19,16(sp)
 508f0a4:	dc800315 	stw	r18,12(sp)
 508f0a8:	dc000115 	stw	r16,4(sp)
 508f0ac:	dfc00715 	stw	ra,28(sp)
 508f0b0:	dd400615 	stw	r21,24(sp)
 508f0b4:	dd000515 	stw	r20,20(sp)
 508f0b8:	dc400215 	stw	r17,8(sp)
 508f0bc:	2027883a 	mov	r19,r4
 508f0c0:	2825883a 	mov	r18,r5
 508f0c4:	3021883a 	mov	r16,r6
 508f0c8:	5089cc00 	call	5089cc0 <__locale_mb_cur_max>
 508f0cc:	00c00044 	movi	r3,1
 508f0d0:	10c03e26 	beq	r2,r3,508f1cc <__fputwc+0x130>
 508f0d4:	81c01704 	addi	r7,r16,92
 508f0d8:	900d883a 	mov	r6,r18
 508f0dc:	d80b883a 	mov	r5,sp
 508f0e0:	9809883a 	mov	r4,r19
 508f0e4:	508f56c0 	call	508f56c <_wcrtomb_r>
 508f0e8:	1029883a 	mov	r20,r2
 508f0ec:	00bfffc4 	movi	r2,-1
 508f0f0:	a0802026 	beq	r20,r2,508f174 <__fputwc+0xd8>
 508f0f4:	d9400003 	ldbu	r5,0(sp)
 508f0f8:	a0001c26 	beq	r20,zero,508f16c <__fputwc+0xd0>
 508f0fc:	0023883a 	mov	r17,zero
 508f100:	05400284 	movi	r21,10
 508f104:	00000906 	br	508f12c <__fputwc+0x90>
 508f108:	80800017 	ldw	r2,0(r16)
 508f10c:	11400005 	stb	r5,0(r2)
 508f110:	80c00017 	ldw	r3,0(r16)
 508f114:	18c00044 	addi	r3,r3,1
 508f118:	80c00015 	stw	r3,0(r16)
 508f11c:	8c400044 	addi	r17,r17,1
 508f120:	dc45883a 	add	r2,sp,r17
 508f124:	8d00112e 	bgeu	r17,r20,508f16c <__fputwc+0xd0>
 508f128:	11400003 	ldbu	r5,0(r2)
 508f12c:	80c00217 	ldw	r3,8(r16)
 508f130:	18ffffc4 	addi	r3,r3,-1
 508f134:	80c00215 	stw	r3,8(r16)
 508f138:	183ff30e 	bge	r3,zero,508f108 <__alt_data_end+0xfffc0f08>
 508f13c:	80800617 	ldw	r2,24(r16)
 508f140:	18801916 	blt	r3,r2,508f1a8 <__fputwc+0x10c>
 508f144:	80800017 	ldw	r2,0(r16)
 508f148:	11400005 	stb	r5,0(r2)
 508f14c:	80800017 	ldw	r2,0(r16)
 508f150:	10c00003 	ldbu	r3,0(r2)
 508f154:	10800044 	addi	r2,r2,1
 508f158:	1d402326 	beq	r3,r21,508f1e8 <__fputwc+0x14c>
 508f15c:	80800015 	stw	r2,0(r16)
 508f160:	8c400044 	addi	r17,r17,1
 508f164:	dc45883a 	add	r2,sp,r17
 508f168:	8d3fef36 	bltu	r17,r20,508f128 <__alt_data_end+0xfffc0f28>
 508f16c:	9005883a 	mov	r2,r18
 508f170:	00000406 	br	508f184 <__fputwc+0xe8>
 508f174:	80c0030b 	ldhu	r3,12(r16)
 508f178:	a005883a 	mov	r2,r20
 508f17c:	18c01014 	ori	r3,r3,64
 508f180:	80c0030d 	sth	r3,12(r16)
 508f184:	dfc00717 	ldw	ra,28(sp)
 508f188:	dd400617 	ldw	r21,24(sp)
 508f18c:	dd000517 	ldw	r20,20(sp)
 508f190:	dcc00417 	ldw	r19,16(sp)
 508f194:	dc800317 	ldw	r18,12(sp)
 508f198:	dc400217 	ldw	r17,8(sp)
 508f19c:	dc000117 	ldw	r16,4(sp)
 508f1a0:	dec00804 	addi	sp,sp,32
 508f1a4:	f800283a 	ret
 508f1a8:	800d883a 	mov	r6,r16
 508f1ac:	29403fcc 	andi	r5,r5,255
 508f1b0:	9809883a 	mov	r4,r19
 508f1b4:	508f4140 	call	508f414 <__swbuf_r>
 508f1b8:	10bfffe0 	cmpeqi	r2,r2,-1
 508f1bc:	10803fcc 	andi	r2,r2,255
 508f1c0:	103fd626 	beq	r2,zero,508f11c <__alt_data_end+0xfffc0f1c>
 508f1c4:	00bfffc4 	movi	r2,-1
 508f1c8:	003fee06 	br	508f184 <__alt_data_end+0xfffc0f84>
 508f1cc:	90ffffc4 	addi	r3,r18,-1
 508f1d0:	01003f84 	movi	r4,254
 508f1d4:	20ffbf36 	bltu	r4,r3,508f0d4 <__alt_data_end+0xfffc0ed4>
 508f1d8:	900b883a 	mov	r5,r18
 508f1dc:	dc800005 	stb	r18,0(sp)
 508f1e0:	1029883a 	mov	r20,r2
 508f1e4:	003fc506 	br	508f0fc <__alt_data_end+0xfffc0efc>
 508f1e8:	800d883a 	mov	r6,r16
 508f1ec:	a80b883a 	mov	r5,r21
 508f1f0:	9809883a 	mov	r4,r19
 508f1f4:	508f4140 	call	508f414 <__swbuf_r>
 508f1f8:	10bfffe0 	cmpeqi	r2,r2,-1
 508f1fc:	003fef06 	br	508f1bc <__alt_data_end+0xfffc0fbc>

0508f200 <_fputwc_r>:
 508f200:	3080030b 	ldhu	r2,12(r6)
 508f204:	10c8000c 	andi	r3,r2,8192
 508f208:	1800051e 	bne	r3,zero,508f220 <_fputwc_r+0x20>
 508f20c:	30c01917 	ldw	r3,100(r6)
 508f210:	10880014 	ori	r2,r2,8192
 508f214:	3080030d 	sth	r2,12(r6)
 508f218:	18880014 	ori	r2,r3,8192
 508f21c:	30801915 	stw	r2,100(r6)
 508f220:	508f09c1 	jmpi	508f09c <__fputwc>

0508f224 <fputwc>:
 508f224:	00814274 	movhi	r2,1289
 508f228:	defffc04 	addi	sp,sp,-16
 508f22c:	109f2104 	addi	r2,r2,31876
 508f230:	dc000115 	stw	r16,4(sp)
 508f234:	14000017 	ldw	r16,0(r2)
 508f238:	dc400215 	stw	r17,8(sp)
 508f23c:	dfc00315 	stw	ra,12(sp)
 508f240:	2023883a 	mov	r17,r4
 508f244:	80000226 	beq	r16,zero,508f250 <fputwc+0x2c>
 508f248:	80800e17 	ldw	r2,56(r16)
 508f24c:	10001026 	beq	r2,zero,508f290 <fputwc+0x6c>
 508f250:	2880030b 	ldhu	r2,12(r5)
 508f254:	10c8000c 	andi	r3,r2,8192
 508f258:	1800051e 	bne	r3,zero,508f270 <fputwc+0x4c>
 508f25c:	28c01917 	ldw	r3,100(r5)
 508f260:	10880014 	ori	r2,r2,8192
 508f264:	2880030d 	sth	r2,12(r5)
 508f268:	18880014 	ori	r2,r3,8192
 508f26c:	28801915 	stw	r2,100(r5)
 508f270:	280d883a 	mov	r6,r5
 508f274:	8009883a 	mov	r4,r16
 508f278:	880b883a 	mov	r5,r17
 508f27c:	dfc00317 	ldw	ra,12(sp)
 508f280:	dc400217 	ldw	r17,8(sp)
 508f284:	dc000117 	ldw	r16,4(sp)
 508f288:	dec00404 	addi	sp,sp,16
 508f28c:	508f09c1 	jmpi	508f09c <__fputwc>
 508f290:	8009883a 	mov	r4,r16
 508f294:	d9400015 	stw	r5,0(sp)
 508f298:	50891700 	call	5089170 <__sinit>
 508f29c:	d9400017 	ldw	r5,0(sp)
 508f2a0:	003feb06 	br	508f250 <__alt_data_end+0xfffc1050>

0508f2a4 <_fstat_r>:
 508f2a4:	defffd04 	addi	sp,sp,-12
 508f2a8:	2805883a 	mov	r2,r5
 508f2ac:	dc000015 	stw	r16,0(sp)
 508f2b0:	040142b4 	movhi	r16,1290
 508f2b4:	dc400115 	stw	r17,4(sp)
 508f2b8:	8425f804 	addi	r16,r16,-26656
 508f2bc:	2023883a 	mov	r17,r4
 508f2c0:	300b883a 	mov	r5,r6
 508f2c4:	1009883a 	mov	r4,r2
 508f2c8:	dfc00215 	stw	ra,8(sp)
 508f2cc:	80000015 	stw	zero,0(r16)
 508f2d0:	5092a080 	call	5092a08 <fstat>
 508f2d4:	00ffffc4 	movi	r3,-1
 508f2d8:	10c00526 	beq	r2,r3,508f2f0 <_fstat_r+0x4c>
 508f2dc:	dfc00217 	ldw	ra,8(sp)
 508f2e0:	dc400117 	ldw	r17,4(sp)
 508f2e4:	dc000017 	ldw	r16,0(sp)
 508f2e8:	dec00304 	addi	sp,sp,12
 508f2ec:	f800283a 	ret
 508f2f0:	80c00017 	ldw	r3,0(r16)
 508f2f4:	183ff926 	beq	r3,zero,508f2dc <__alt_data_end+0xfffc10dc>
 508f2f8:	88c00015 	stw	r3,0(r17)
 508f2fc:	003ff706 	br	508f2dc <__alt_data_end+0xfffc10dc>

0508f300 <_isatty_r>:
 508f300:	defffd04 	addi	sp,sp,-12
 508f304:	dc000015 	stw	r16,0(sp)
 508f308:	040142b4 	movhi	r16,1290
 508f30c:	dc400115 	stw	r17,4(sp)
 508f310:	8425f804 	addi	r16,r16,-26656
 508f314:	2023883a 	mov	r17,r4
 508f318:	2809883a 	mov	r4,r5
 508f31c:	dfc00215 	stw	ra,8(sp)
 508f320:	80000015 	stw	zero,0(r16)
 508f324:	5092cb80 	call	5092cb8 <isatty>
 508f328:	00ffffc4 	movi	r3,-1
 508f32c:	10c00526 	beq	r2,r3,508f344 <_isatty_r+0x44>
 508f330:	dfc00217 	ldw	ra,8(sp)
 508f334:	dc400117 	ldw	r17,4(sp)
 508f338:	dc000017 	ldw	r16,0(sp)
 508f33c:	dec00304 	addi	sp,sp,12
 508f340:	f800283a 	ret
 508f344:	80c00017 	ldw	r3,0(r16)
 508f348:	183ff926 	beq	r3,zero,508f330 <__alt_data_end+0xfffc1130>
 508f34c:	88c00015 	stw	r3,0(r17)
 508f350:	003ff706 	br	508f330 <__alt_data_end+0xfffc1130>

0508f354 <_lseek_r>:
 508f354:	defffd04 	addi	sp,sp,-12
 508f358:	2805883a 	mov	r2,r5
 508f35c:	dc000015 	stw	r16,0(sp)
 508f360:	040142b4 	movhi	r16,1290
 508f364:	dc400115 	stw	r17,4(sp)
 508f368:	300b883a 	mov	r5,r6
 508f36c:	8425f804 	addi	r16,r16,-26656
 508f370:	2023883a 	mov	r17,r4
 508f374:	380d883a 	mov	r6,r7
 508f378:	1009883a 	mov	r4,r2
 508f37c:	dfc00215 	stw	ra,8(sp)
 508f380:	80000015 	stw	zero,0(r16)
 508f384:	5092e980 	call	5092e98 <lseek>
 508f388:	00ffffc4 	movi	r3,-1
 508f38c:	10c00526 	beq	r2,r3,508f3a4 <_lseek_r+0x50>
 508f390:	dfc00217 	ldw	ra,8(sp)
 508f394:	dc400117 	ldw	r17,4(sp)
 508f398:	dc000017 	ldw	r16,0(sp)
 508f39c:	dec00304 	addi	sp,sp,12
 508f3a0:	f800283a 	ret
 508f3a4:	80c00017 	ldw	r3,0(r16)
 508f3a8:	183ff926 	beq	r3,zero,508f390 <__alt_data_end+0xfffc1190>
 508f3ac:	88c00015 	stw	r3,0(r17)
 508f3b0:	003ff706 	br	508f390 <__alt_data_end+0xfffc1190>

0508f3b4 <_read_r>:
 508f3b4:	defffd04 	addi	sp,sp,-12
 508f3b8:	2805883a 	mov	r2,r5
 508f3bc:	dc000015 	stw	r16,0(sp)
 508f3c0:	040142b4 	movhi	r16,1290
 508f3c4:	dc400115 	stw	r17,4(sp)
 508f3c8:	300b883a 	mov	r5,r6
 508f3cc:	8425f804 	addi	r16,r16,-26656
 508f3d0:	2023883a 	mov	r17,r4
 508f3d4:	380d883a 	mov	r6,r7
 508f3d8:	1009883a 	mov	r4,r2
 508f3dc:	dfc00215 	stw	ra,8(sp)
 508f3e0:	80000015 	stw	zero,0(r16)
 508f3e4:	50930800 	call	5093080 <read>
 508f3e8:	00ffffc4 	movi	r3,-1
 508f3ec:	10c00526 	beq	r2,r3,508f404 <_read_r+0x50>
 508f3f0:	dfc00217 	ldw	ra,8(sp)
 508f3f4:	dc400117 	ldw	r17,4(sp)
 508f3f8:	dc000017 	ldw	r16,0(sp)
 508f3fc:	dec00304 	addi	sp,sp,12
 508f400:	f800283a 	ret
 508f404:	80c00017 	ldw	r3,0(r16)
 508f408:	183ff926 	beq	r3,zero,508f3f0 <__alt_data_end+0xfffc11f0>
 508f40c:	88c00015 	stw	r3,0(r17)
 508f410:	003ff706 	br	508f3f0 <__alt_data_end+0xfffc11f0>

0508f414 <__swbuf_r>:
 508f414:	defffb04 	addi	sp,sp,-20
 508f418:	dcc00315 	stw	r19,12(sp)
 508f41c:	dc800215 	stw	r18,8(sp)
 508f420:	dc000015 	stw	r16,0(sp)
 508f424:	dfc00415 	stw	ra,16(sp)
 508f428:	dc400115 	stw	r17,4(sp)
 508f42c:	2025883a 	mov	r18,r4
 508f430:	2827883a 	mov	r19,r5
 508f434:	3021883a 	mov	r16,r6
 508f438:	20000226 	beq	r4,zero,508f444 <__swbuf_r+0x30>
 508f43c:	20800e17 	ldw	r2,56(r4)
 508f440:	10004226 	beq	r2,zero,508f54c <__swbuf_r+0x138>
 508f444:	80800617 	ldw	r2,24(r16)
 508f448:	8100030b 	ldhu	r4,12(r16)
 508f44c:	80800215 	stw	r2,8(r16)
 508f450:	2080020c 	andi	r2,r4,8
 508f454:	10003626 	beq	r2,zero,508f530 <__swbuf_r+0x11c>
 508f458:	80c00417 	ldw	r3,16(r16)
 508f45c:	18003426 	beq	r3,zero,508f530 <__swbuf_r+0x11c>
 508f460:	2088000c 	andi	r2,r4,8192
 508f464:	9c403fcc 	andi	r17,r19,255
 508f468:	10001a26 	beq	r2,zero,508f4d4 <__swbuf_r+0xc0>
 508f46c:	80800017 	ldw	r2,0(r16)
 508f470:	81000517 	ldw	r4,20(r16)
 508f474:	10c7c83a 	sub	r3,r2,r3
 508f478:	1900200e 	bge	r3,r4,508f4fc <__swbuf_r+0xe8>
 508f47c:	18c00044 	addi	r3,r3,1
 508f480:	81000217 	ldw	r4,8(r16)
 508f484:	11400044 	addi	r5,r2,1
 508f488:	81400015 	stw	r5,0(r16)
 508f48c:	213fffc4 	addi	r4,r4,-1
 508f490:	81000215 	stw	r4,8(r16)
 508f494:	14c00005 	stb	r19,0(r2)
 508f498:	80800517 	ldw	r2,20(r16)
 508f49c:	10c01e26 	beq	r2,r3,508f518 <__swbuf_r+0x104>
 508f4a0:	8080030b 	ldhu	r2,12(r16)
 508f4a4:	1080004c 	andi	r2,r2,1
 508f4a8:	10000226 	beq	r2,zero,508f4b4 <__swbuf_r+0xa0>
 508f4ac:	00800284 	movi	r2,10
 508f4b0:	88801926 	beq	r17,r2,508f518 <__swbuf_r+0x104>
 508f4b4:	8805883a 	mov	r2,r17
 508f4b8:	dfc00417 	ldw	ra,16(sp)
 508f4bc:	dcc00317 	ldw	r19,12(sp)
 508f4c0:	dc800217 	ldw	r18,8(sp)
 508f4c4:	dc400117 	ldw	r17,4(sp)
 508f4c8:	dc000017 	ldw	r16,0(sp)
 508f4cc:	dec00504 	addi	sp,sp,20
 508f4d0:	f800283a 	ret
 508f4d4:	81401917 	ldw	r5,100(r16)
 508f4d8:	00b7ffc4 	movi	r2,-8193
 508f4dc:	21080014 	ori	r4,r4,8192
 508f4e0:	2884703a 	and	r2,r5,r2
 508f4e4:	80801915 	stw	r2,100(r16)
 508f4e8:	80800017 	ldw	r2,0(r16)
 508f4ec:	8100030d 	sth	r4,12(r16)
 508f4f0:	81000517 	ldw	r4,20(r16)
 508f4f4:	10c7c83a 	sub	r3,r2,r3
 508f4f8:	193fe016 	blt	r3,r4,508f47c <__alt_data_end+0xfffc127c>
 508f4fc:	800b883a 	mov	r5,r16
 508f500:	9009883a 	mov	r4,r18
 508f504:	5088d940 	call	5088d94 <_fflush_r>
 508f508:	1000071e 	bne	r2,zero,508f528 <__swbuf_r+0x114>
 508f50c:	80800017 	ldw	r2,0(r16)
 508f510:	00c00044 	movi	r3,1
 508f514:	003fda06 	br	508f480 <__alt_data_end+0xfffc1280>
 508f518:	800b883a 	mov	r5,r16
 508f51c:	9009883a 	mov	r4,r18
 508f520:	5088d940 	call	5088d94 <_fflush_r>
 508f524:	103fe326 	beq	r2,zero,508f4b4 <__alt_data_end+0xfffc12b4>
 508f528:	00bfffc4 	movi	r2,-1
 508f52c:	003fe206 	br	508f4b8 <__alt_data_end+0xfffc12b8>
 508f530:	800b883a 	mov	r5,r16
 508f534:	9009883a 	mov	r4,r18
 508f538:	508719c0 	call	508719c <__swsetup_r>
 508f53c:	103ffa1e 	bne	r2,zero,508f528 <__alt_data_end+0xfffc1328>
 508f540:	8100030b 	ldhu	r4,12(r16)
 508f544:	80c00417 	ldw	r3,16(r16)
 508f548:	003fc506 	br	508f460 <__alt_data_end+0xfffc1260>
 508f54c:	50891700 	call	5089170 <__sinit>
 508f550:	003fbc06 	br	508f444 <__alt_data_end+0xfffc1244>

0508f554 <__swbuf>:
 508f554:	00814274 	movhi	r2,1289
 508f558:	109f2104 	addi	r2,r2,31876
 508f55c:	280d883a 	mov	r6,r5
 508f560:	200b883a 	mov	r5,r4
 508f564:	11000017 	ldw	r4,0(r2)
 508f568:	508f4141 	jmpi	508f414 <__swbuf_r>

0508f56c <_wcrtomb_r>:
 508f56c:	defff604 	addi	sp,sp,-40
 508f570:	00814274 	movhi	r2,1289
 508f574:	dc800815 	stw	r18,32(sp)
 508f578:	dc400715 	stw	r17,28(sp)
 508f57c:	dc000615 	stw	r16,24(sp)
 508f580:	109f2504 	addi	r2,r2,31892
 508f584:	dfc00915 	stw	ra,36(sp)
 508f588:	2021883a 	mov	r16,r4
 508f58c:	3823883a 	mov	r17,r7
 508f590:	14800017 	ldw	r18,0(r2)
 508f594:	28001426 	beq	r5,zero,508f5e8 <_wcrtomb_r+0x7c>
 508f598:	d9400415 	stw	r5,16(sp)
 508f59c:	d9800515 	stw	r6,20(sp)
 508f5a0:	5089cb40 	call	5089cb4 <__locale_charset>
 508f5a4:	d9800517 	ldw	r6,20(sp)
 508f5a8:	d9400417 	ldw	r5,16(sp)
 508f5ac:	100f883a 	mov	r7,r2
 508f5b0:	dc400015 	stw	r17,0(sp)
 508f5b4:	8009883a 	mov	r4,r16
 508f5b8:	903ee83a 	callr	r18
 508f5bc:	00ffffc4 	movi	r3,-1
 508f5c0:	10c0031e 	bne	r2,r3,508f5d0 <_wcrtomb_r+0x64>
 508f5c4:	88000015 	stw	zero,0(r17)
 508f5c8:	00c02284 	movi	r3,138
 508f5cc:	80c00015 	stw	r3,0(r16)
 508f5d0:	dfc00917 	ldw	ra,36(sp)
 508f5d4:	dc800817 	ldw	r18,32(sp)
 508f5d8:	dc400717 	ldw	r17,28(sp)
 508f5dc:	dc000617 	ldw	r16,24(sp)
 508f5e0:	dec00a04 	addi	sp,sp,40
 508f5e4:	f800283a 	ret
 508f5e8:	5089cb40 	call	5089cb4 <__locale_charset>
 508f5ec:	100f883a 	mov	r7,r2
 508f5f0:	dc400015 	stw	r17,0(sp)
 508f5f4:	000d883a 	mov	r6,zero
 508f5f8:	d9400104 	addi	r5,sp,4
 508f5fc:	8009883a 	mov	r4,r16
 508f600:	903ee83a 	callr	r18
 508f604:	003fed06 	br	508f5bc <__alt_data_end+0xfffc13bc>

0508f608 <wcrtomb>:
 508f608:	defff604 	addi	sp,sp,-40
 508f60c:	00814274 	movhi	r2,1289
 508f610:	dc800615 	stw	r18,24(sp)
 508f614:	dc400515 	stw	r17,20(sp)
 508f618:	109f2104 	addi	r2,r2,31876
 508f61c:	dfc00915 	stw	ra,36(sp)
 508f620:	dd000815 	stw	r20,32(sp)
 508f624:	dcc00715 	stw	r19,28(sp)
 508f628:	dc000415 	stw	r16,16(sp)
 508f62c:	3025883a 	mov	r18,r6
 508f630:	14400017 	ldw	r17,0(r2)
 508f634:	20001926 	beq	r4,zero,508f69c <wcrtomb+0x94>
 508f638:	00814274 	movhi	r2,1289
 508f63c:	109f2504 	addi	r2,r2,31892
 508f640:	15000017 	ldw	r20,0(r2)
 508f644:	2021883a 	mov	r16,r4
 508f648:	2827883a 	mov	r19,r5
 508f64c:	5089cb40 	call	5089cb4 <__locale_charset>
 508f650:	100f883a 	mov	r7,r2
 508f654:	dc800015 	stw	r18,0(sp)
 508f658:	980d883a 	mov	r6,r19
 508f65c:	800b883a 	mov	r5,r16
 508f660:	8809883a 	mov	r4,r17
 508f664:	a03ee83a 	callr	r20
 508f668:	00ffffc4 	movi	r3,-1
 508f66c:	10c0031e 	bne	r2,r3,508f67c <wcrtomb+0x74>
 508f670:	90000015 	stw	zero,0(r18)
 508f674:	00c02284 	movi	r3,138
 508f678:	88c00015 	stw	r3,0(r17)
 508f67c:	dfc00917 	ldw	ra,36(sp)
 508f680:	dd000817 	ldw	r20,32(sp)
 508f684:	dcc00717 	ldw	r19,28(sp)
 508f688:	dc800617 	ldw	r18,24(sp)
 508f68c:	dc400517 	ldw	r17,20(sp)
 508f690:	dc000417 	ldw	r16,16(sp)
 508f694:	dec00a04 	addi	sp,sp,40
 508f698:	f800283a 	ret
 508f69c:	00814274 	movhi	r2,1289
 508f6a0:	109f2504 	addi	r2,r2,31892
 508f6a4:	14000017 	ldw	r16,0(r2)
 508f6a8:	5089cb40 	call	5089cb4 <__locale_charset>
 508f6ac:	100f883a 	mov	r7,r2
 508f6b0:	dc800015 	stw	r18,0(sp)
 508f6b4:	000d883a 	mov	r6,zero
 508f6b8:	d9400104 	addi	r5,sp,4
 508f6bc:	8809883a 	mov	r4,r17
 508f6c0:	803ee83a 	callr	r16
 508f6c4:	003fe806 	br	508f668 <__alt_data_end+0xfffc1468>

0508f6c8 <__ascii_wctomb>:
 508f6c8:	28000526 	beq	r5,zero,508f6e0 <__ascii_wctomb+0x18>
 508f6cc:	00803fc4 	movi	r2,255
 508f6d0:	11800536 	bltu	r2,r6,508f6e8 <__ascii_wctomb+0x20>
 508f6d4:	29800005 	stb	r6,0(r5)
 508f6d8:	00800044 	movi	r2,1
 508f6dc:	f800283a 	ret
 508f6e0:	0005883a 	mov	r2,zero
 508f6e4:	f800283a 	ret
 508f6e8:	00802284 	movi	r2,138
 508f6ec:	20800015 	stw	r2,0(r4)
 508f6f0:	00bfffc4 	movi	r2,-1
 508f6f4:	f800283a 	ret

0508f6f8 <_wctomb_r>:
 508f6f8:	00814274 	movhi	r2,1289
 508f6fc:	defff904 	addi	sp,sp,-28
 508f700:	109f2504 	addi	r2,r2,31892
 508f704:	dfc00615 	stw	ra,24(sp)
 508f708:	dc400515 	stw	r17,20(sp)
 508f70c:	dc000415 	stw	r16,16(sp)
 508f710:	3823883a 	mov	r17,r7
 508f714:	14000017 	ldw	r16,0(r2)
 508f718:	d9000115 	stw	r4,4(sp)
 508f71c:	d9400215 	stw	r5,8(sp)
 508f720:	d9800315 	stw	r6,12(sp)
 508f724:	5089cb40 	call	5089cb4 <__locale_charset>
 508f728:	d9800317 	ldw	r6,12(sp)
 508f72c:	d9400217 	ldw	r5,8(sp)
 508f730:	d9000117 	ldw	r4,4(sp)
 508f734:	100f883a 	mov	r7,r2
 508f738:	dc400015 	stw	r17,0(sp)
 508f73c:	803ee83a 	callr	r16
 508f740:	dfc00617 	ldw	ra,24(sp)
 508f744:	dc400517 	ldw	r17,20(sp)
 508f748:	dc000417 	ldw	r16,16(sp)
 508f74c:	dec00704 	addi	sp,sp,28
 508f750:	f800283a 	ret

0508f754 <__udivdi3>:
 508f754:	defff504 	addi	sp,sp,-44
 508f758:	dcc00415 	stw	r19,16(sp)
 508f75c:	dc000115 	stw	r16,4(sp)
 508f760:	dfc00a15 	stw	ra,40(sp)
 508f764:	df000915 	stw	fp,36(sp)
 508f768:	ddc00815 	stw	r23,32(sp)
 508f76c:	dd800715 	stw	r22,28(sp)
 508f770:	dd400615 	stw	r21,24(sp)
 508f774:	dd000515 	stw	r20,20(sp)
 508f778:	dc800315 	stw	r18,12(sp)
 508f77c:	dc400215 	stw	r17,8(sp)
 508f780:	2027883a 	mov	r19,r4
 508f784:	2821883a 	mov	r16,r5
 508f788:	3800411e 	bne	r7,zero,508f890 <__udivdi3+0x13c>
 508f78c:	3023883a 	mov	r17,r6
 508f790:	2025883a 	mov	r18,r4
 508f794:	2980522e 	bgeu	r5,r6,508f8e0 <__udivdi3+0x18c>
 508f798:	00bfffd4 	movui	r2,65535
 508f79c:	282d883a 	mov	r22,r5
 508f7a0:	1180a836 	bltu	r2,r6,508fa44 <__udivdi3+0x2f0>
 508f7a4:	00803fc4 	movi	r2,255
 508f7a8:	1185803a 	cmpltu	r2,r2,r6
 508f7ac:	100490fa 	slli	r2,r2,3
 508f7b0:	3086d83a 	srl	r3,r6,r2
 508f7b4:	01014274 	movhi	r4,1289
 508f7b8:	21182604 	addi	r4,r4,24728
 508f7bc:	20c7883a 	add	r3,r4,r3
 508f7c0:	18c00003 	ldbu	r3,0(r3)
 508f7c4:	1885883a 	add	r2,r3,r2
 508f7c8:	00c00804 	movi	r3,32
 508f7cc:	1887c83a 	sub	r3,r3,r2
 508f7d0:	18000526 	beq	r3,zero,508f7e8 <__udivdi3+0x94>
 508f7d4:	80e0983a 	sll	r16,r16,r3
 508f7d8:	9884d83a 	srl	r2,r19,r2
 508f7dc:	30e2983a 	sll	r17,r6,r3
 508f7e0:	98e4983a 	sll	r18,r19,r3
 508f7e4:	142cb03a 	or	r22,r2,r16
 508f7e8:	882ad43a 	srli	r21,r17,16
 508f7ec:	b009883a 	mov	r4,r22
 508f7f0:	8d3fffcc 	andi	r20,r17,65535
 508f7f4:	a80b883a 	mov	r5,r21
 508f7f8:	50828dc0 	call	50828dc <__umodsi3>
 508f7fc:	b009883a 	mov	r4,r22
 508f800:	a80b883a 	mov	r5,r21
 508f804:	1027883a 	mov	r19,r2
 508f808:	50828780 	call	5082878 <__udivsi3>
 508f80c:	102d883a 	mov	r22,r2
 508f810:	9826943a 	slli	r19,r19,16
 508f814:	9004d43a 	srli	r2,r18,16
 508f818:	a5a1383a 	mul	r16,r20,r22
 508f81c:	14c4b03a 	or	r2,r2,r19
 508f820:	1400052e 	bgeu	r2,r16,508f838 <__udivdi3+0xe4>
 508f824:	1445883a 	add	r2,r2,r17
 508f828:	b0ffffc4 	addi	r3,r22,-1
 508f82c:	14400136 	bltu	r2,r17,508f834 <__udivdi3+0xe0>
 508f830:	14012336 	bltu	r2,r16,508fcc0 <__udivdi3+0x56c>
 508f834:	182d883a 	mov	r22,r3
 508f838:	1421c83a 	sub	r16,r2,r16
 508f83c:	a80b883a 	mov	r5,r21
 508f840:	8009883a 	mov	r4,r16
 508f844:	50828dc0 	call	50828dc <__umodsi3>
 508f848:	1027883a 	mov	r19,r2
 508f84c:	a80b883a 	mov	r5,r21
 508f850:	8009883a 	mov	r4,r16
 508f854:	50828780 	call	5082878 <__udivsi3>
 508f858:	9826943a 	slli	r19,r19,16
 508f85c:	a0a9383a 	mul	r20,r20,r2
 508f860:	94bfffcc 	andi	r18,r18,65535
 508f864:	94e4b03a 	or	r18,r18,r19
 508f868:	9500052e 	bgeu	r18,r20,508f880 <__udivdi3+0x12c>
 508f86c:	8ca5883a 	add	r18,r17,r18
 508f870:	10ffffc4 	addi	r3,r2,-1
 508f874:	9440f136 	bltu	r18,r17,508fc3c <__udivdi3+0x4e8>
 508f878:	9500f02e 	bgeu	r18,r20,508fc3c <__udivdi3+0x4e8>
 508f87c:	10bfff84 	addi	r2,r2,-2
 508f880:	b00c943a 	slli	r6,r22,16
 508f884:	0007883a 	mov	r3,zero
 508f888:	3084b03a 	or	r2,r6,r2
 508f88c:	00005906 	br	508f9f4 <__udivdi3+0x2a0>
 508f890:	29c05636 	bltu	r5,r7,508f9ec <__udivdi3+0x298>
 508f894:	00bfffd4 	movui	r2,65535
 508f898:	11c0622e 	bgeu	r2,r7,508fa24 <__udivdi3+0x2d0>
 508f89c:	00804034 	movhi	r2,256
 508f8a0:	10bfffc4 	addi	r2,r2,-1
 508f8a4:	11c0ee36 	bltu	r2,r7,508fc60 <__udivdi3+0x50c>
 508f8a8:	00800404 	movi	r2,16
 508f8ac:	3886d83a 	srl	r3,r7,r2
 508f8b0:	01014274 	movhi	r4,1289
 508f8b4:	21182604 	addi	r4,r4,24728
 508f8b8:	20c7883a 	add	r3,r4,r3
 508f8bc:	18c00003 	ldbu	r3,0(r3)
 508f8c0:	05400804 	movi	r21,32
 508f8c4:	1885883a 	add	r2,r3,r2
 508f8c8:	a8abc83a 	sub	r21,r21,r2
 508f8cc:	a800621e 	bne	r21,zero,508fa58 <__udivdi3+0x304>
 508f8d0:	3c00e936 	bltu	r7,r16,508fc78 <__udivdi3+0x524>
 508f8d4:	9985403a 	cmpgeu	r2,r19,r6
 508f8d8:	0007883a 	mov	r3,zero
 508f8dc:	00004506 	br	508f9f4 <__udivdi3+0x2a0>
 508f8e0:	3000041e 	bne	r6,zero,508f8f4 <__udivdi3+0x1a0>
 508f8e4:	000b883a 	mov	r5,zero
 508f8e8:	01000044 	movi	r4,1
 508f8ec:	50828780 	call	5082878 <__udivsi3>
 508f8f0:	1023883a 	mov	r17,r2
 508f8f4:	00bfffd4 	movui	r2,65535
 508f8f8:	14404e2e 	bgeu	r2,r17,508fa34 <__udivdi3+0x2e0>
 508f8fc:	00804034 	movhi	r2,256
 508f900:	10bfffc4 	addi	r2,r2,-1
 508f904:	1440d836 	bltu	r2,r17,508fc68 <__udivdi3+0x514>
 508f908:	00800404 	movi	r2,16
 508f90c:	8886d83a 	srl	r3,r17,r2
 508f910:	01014274 	movhi	r4,1289
 508f914:	21182604 	addi	r4,r4,24728
 508f918:	20c7883a 	add	r3,r4,r3
 508f91c:	18c00003 	ldbu	r3,0(r3)
 508f920:	1885883a 	add	r2,r3,r2
 508f924:	00c00804 	movi	r3,32
 508f928:	1887c83a 	sub	r3,r3,r2
 508f92c:	18008f1e 	bne	r3,zero,508fb6c <__udivdi3+0x418>
 508f930:	882ad43a 	srli	r21,r17,16
 508f934:	8461c83a 	sub	r16,r16,r17
 508f938:	8d3fffcc 	andi	r20,r17,65535
 508f93c:	00c00044 	movi	r3,1
 508f940:	8009883a 	mov	r4,r16
 508f944:	a80b883a 	mov	r5,r21
 508f948:	d8c00015 	stw	r3,0(sp)
 508f94c:	50828dc0 	call	50828dc <__umodsi3>
 508f950:	8009883a 	mov	r4,r16
 508f954:	a80b883a 	mov	r5,r21
 508f958:	1027883a 	mov	r19,r2
 508f95c:	50828780 	call	5082878 <__udivsi3>
 508f960:	9826943a 	slli	r19,r19,16
 508f964:	9008d43a 	srli	r4,r18,16
 508f968:	1521383a 	mul	r16,r2,r20
 508f96c:	102d883a 	mov	r22,r2
 508f970:	24c8b03a 	or	r4,r4,r19
 508f974:	d8c00017 	ldw	r3,0(sp)
 508f978:	2400052e 	bgeu	r4,r16,508f990 <__udivdi3+0x23c>
 508f97c:	2449883a 	add	r4,r4,r17
 508f980:	b0bfffc4 	addi	r2,r22,-1
 508f984:	24400136 	bltu	r4,r17,508f98c <__udivdi3+0x238>
 508f988:	2400ca36 	bltu	r4,r16,508fcb4 <__udivdi3+0x560>
 508f98c:	102d883a 	mov	r22,r2
 508f990:	2421c83a 	sub	r16,r4,r16
 508f994:	a80b883a 	mov	r5,r21
 508f998:	8009883a 	mov	r4,r16
 508f99c:	d8c00015 	stw	r3,0(sp)
 508f9a0:	50828dc0 	call	50828dc <__umodsi3>
 508f9a4:	1027883a 	mov	r19,r2
 508f9a8:	a80b883a 	mov	r5,r21
 508f9ac:	8009883a 	mov	r4,r16
 508f9b0:	50828780 	call	5082878 <__udivsi3>
 508f9b4:	9826943a 	slli	r19,r19,16
 508f9b8:	1529383a 	mul	r20,r2,r20
 508f9bc:	94bfffcc 	andi	r18,r18,65535
 508f9c0:	94e4b03a 	or	r18,r18,r19
 508f9c4:	d8c00017 	ldw	r3,0(sp)
 508f9c8:	9500052e 	bgeu	r18,r20,508f9e0 <__udivdi3+0x28c>
 508f9cc:	8ca5883a 	add	r18,r17,r18
 508f9d0:	113fffc4 	addi	r4,r2,-1
 508f9d4:	94409736 	bltu	r18,r17,508fc34 <__udivdi3+0x4e0>
 508f9d8:	9500962e 	bgeu	r18,r20,508fc34 <__udivdi3+0x4e0>
 508f9dc:	10bfff84 	addi	r2,r2,-2
 508f9e0:	b00c943a 	slli	r6,r22,16
 508f9e4:	3084b03a 	or	r2,r6,r2
 508f9e8:	00000206 	br	508f9f4 <__udivdi3+0x2a0>
 508f9ec:	0007883a 	mov	r3,zero
 508f9f0:	0005883a 	mov	r2,zero
 508f9f4:	dfc00a17 	ldw	ra,40(sp)
 508f9f8:	df000917 	ldw	fp,36(sp)
 508f9fc:	ddc00817 	ldw	r23,32(sp)
 508fa00:	dd800717 	ldw	r22,28(sp)
 508fa04:	dd400617 	ldw	r21,24(sp)
 508fa08:	dd000517 	ldw	r20,20(sp)
 508fa0c:	dcc00417 	ldw	r19,16(sp)
 508fa10:	dc800317 	ldw	r18,12(sp)
 508fa14:	dc400217 	ldw	r17,8(sp)
 508fa18:	dc000117 	ldw	r16,4(sp)
 508fa1c:	dec00b04 	addi	sp,sp,44
 508fa20:	f800283a 	ret
 508fa24:	00803fc4 	movi	r2,255
 508fa28:	11c5803a 	cmpltu	r2,r2,r7
 508fa2c:	100490fa 	slli	r2,r2,3
 508fa30:	003f9e06 	br	508f8ac <__alt_data_end+0xfffc16ac>
 508fa34:	00803fc4 	movi	r2,255
 508fa38:	1445803a 	cmpltu	r2,r2,r17
 508fa3c:	100490fa 	slli	r2,r2,3
 508fa40:	003fb206 	br	508f90c <__alt_data_end+0xfffc170c>
 508fa44:	00804034 	movhi	r2,256
 508fa48:	10bfffc4 	addi	r2,r2,-1
 508fa4c:	11808836 	bltu	r2,r6,508fc70 <__udivdi3+0x51c>
 508fa50:	00800404 	movi	r2,16
 508fa54:	003f5606 	br	508f7b0 <__alt_data_end+0xfffc15b0>
 508fa58:	30aed83a 	srl	r23,r6,r2
 508fa5c:	3d4e983a 	sll	r7,r7,r21
 508fa60:	80acd83a 	srl	r22,r16,r2
 508fa64:	9884d83a 	srl	r2,r19,r2
 508fa68:	3deeb03a 	or	r23,r7,r23
 508fa6c:	b824d43a 	srli	r18,r23,16
 508fa70:	8560983a 	sll	r16,r16,r21
 508fa74:	b009883a 	mov	r4,r22
 508fa78:	900b883a 	mov	r5,r18
 508fa7c:	3568983a 	sll	r20,r6,r21
 508fa80:	1420b03a 	or	r16,r2,r16
 508fa84:	50828dc0 	call	50828dc <__umodsi3>
 508fa88:	b009883a 	mov	r4,r22
 508fa8c:	900b883a 	mov	r5,r18
 508fa90:	1023883a 	mov	r17,r2
 508fa94:	50828780 	call	5082878 <__udivsi3>
 508fa98:	8808943a 	slli	r4,r17,16
 508fa9c:	bf3fffcc 	andi	fp,r23,65535
 508faa0:	8006d43a 	srli	r3,r16,16
 508faa4:	e0a3383a 	mul	r17,fp,r2
 508faa8:	100d883a 	mov	r6,r2
 508faac:	1906b03a 	or	r3,r3,r4
 508fab0:	1c40042e 	bgeu	r3,r17,508fac4 <__udivdi3+0x370>
 508fab4:	1dc7883a 	add	r3,r3,r23
 508fab8:	10bfffc4 	addi	r2,r2,-1
 508fabc:	1dc0752e 	bgeu	r3,r23,508fc94 <__udivdi3+0x540>
 508fac0:	100d883a 	mov	r6,r2
 508fac4:	1c63c83a 	sub	r17,r3,r17
 508fac8:	900b883a 	mov	r5,r18
 508facc:	8809883a 	mov	r4,r17
 508fad0:	d9800015 	stw	r6,0(sp)
 508fad4:	50828dc0 	call	50828dc <__umodsi3>
 508fad8:	102d883a 	mov	r22,r2
 508fadc:	8809883a 	mov	r4,r17
 508fae0:	900b883a 	mov	r5,r18
 508fae4:	50828780 	call	5082878 <__udivsi3>
 508fae8:	b02c943a 	slli	r22,r22,16
 508faec:	e089383a 	mul	r4,fp,r2
 508faf0:	843fffcc 	andi	r16,r16,65535
 508faf4:	85a0b03a 	or	r16,r16,r22
 508faf8:	d9800017 	ldw	r6,0(sp)
 508fafc:	8100042e 	bgeu	r16,r4,508fb10 <__udivdi3+0x3bc>
 508fb00:	85e1883a 	add	r16,r16,r23
 508fb04:	10ffffc4 	addi	r3,r2,-1
 508fb08:	85c05e2e 	bgeu	r16,r23,508fc84 <__udivdi3+0x530>
 508fb0c:	1805883a 	mov	r2,r3
 508fb10:	300c943a 	slli	r6,r6,16
 508fb14:	a17fffcc 	andi	r5,r20,65535
 508fb18:	a028d43a 	srli	r20,r20,16
 508fb1c:	3084b03a 	or	r2,r6,r2
 508fb20:	10ffffcc 	andi	r3,r2,65535
 508fb24:	100cd43a 	srli	r6,r2,16
 508fb28:	194f383a 	mul	r7,r3,r5
 508fb2c:	1d07383a 	mul	r3,r3,r20
 508fb30:	314b383a 	mul	r5,r6,r5
 508fb34:	3810d43a 	srli	r8,r7,16
 508fb38:	8121c83a 	sub	r16,r16,r4
 508fb3c:	1947883a 	add	r3,r3,r5
 508fb40:	40c7883a 	add	r3,r8,r3
 508fb44:	350d383a 	mul	r6,r6,r20
 508fb48:	1940022e 	bgeu	r3,r5,508fb54 <__udivdi3+0x400>
 508fb4c:	01000074 	movhi	r4,1
 508fb50:	310d883a 	add	r6,r6,r4
 508fb54:	1828d43a 	srli	r20,r3,16
 508fb58:	a18d883a 	add	r6,r20,r6
 508fb5c:	81803e36 	bltu	r16,r6,508fc58 <__udivdi3+0x504>
 508fb60:	81803826 	beq	r16,r6,508fc44 <__udivdi3+0x4f0>
 508fb64:	0007883a 	mov	r3,zero
 508fb68:	003fa206 	br	508f9f4 <__alt_data_end+0xfffc17f4>
 508fb6c:	88e2983a 	sll	r17,r17,r3
 508fb70:	80a8d83a 	srl	r20,r16,r2
 508fb74:	80e0983a 	sll	r16,r16,r3
 508fb78:	882ad43a 	srli	r21,r17,16
 508fb7c:	9884d83a 	srl	r2,r19,r2
 508fb80:	a009883a 	mov	r4,r20
 508fb84:	a80b883a 	mov	r5,r21
 508fb88:	142eb03a 	or	r23,r2,r16
 508fb8c:	98e4983a 	sll	r18,r19,r3
 508fb90:	50828dc0 	call	50828dc <__umodsi3>
 508fb94:	a009883a 	mov	r4,r20
 508fb98:	a80b883a 	mov	r5,r21
 508fb9c:	1021883a 	mov	r16,r2
 508fba0:	50828780 	call	5082878 <__udivsi3>
 508fba4:	1039883a 	mov	fp,r2
 508fba8:	8d3fffcc 	andi	r20,r17,65535
 508fbac:	8020943a 	slli	r16,r16,16
 508fbb0:	b804d43a 	srli	r2,r23,16
 508fbb4:	a72d383a 	mul	r22,r20,fp
 508fbb8:	1404b03a 	or	r2,r2,r16
 508fbbc:	1580062e 	bgeu	r2,r22,508fbd8 <__udivdi3+0x484>
 508fbc0:	1445883a 	add	r2,r2,r17
 508fbc4:	e0ffffc4 	addi	r3,fp,-1
 508fbc8:	14403836 	bltu	r2,r17,508fcac <__udivdi3+0x558>
 508fbcc:	1580372e 	bgeu	r2,r22,508fcac <__udivdi3+0x558>
 508fbd0:	e73fff84 	addi	fp,fp,-2
 508fbd4:	1445883a 	add	r2,r2,r17
 508fbd8:	15adc83a 	sub	r22,r2,r22
 508fbdc:	a80b883a 	mov	r5,r21
 508fbe0:	b009883a 	mov	r4,r22
 508fbe4:	50828dc0 	call	50828dc <__umodsi3>
 508fbe8:	1027883a 	mov	r19,r2
 508fbec:	b009883a 	mov	r4,r22
 508fbf0:	a80b883a 	mov	r5,r21
 508fbf4:	50828780 	call	5082878 <__udivsi3>
 508fbf8:	9826943a 	slli	r19,r19,16
 508fbfc:	a0a1383a 	mul	r16,r20,r2
 508fc00:	b93fffcc 	andi	r4,r23,65535
 508fc04:	24c8b03a 	or	r4,r4,r19
 508fc08:	2400062e 	bgeu	r4,r16,508fc24 <__udivdi3+0x4d0>
 508fc0c:	2449883a 	add	r4,r4,r17
 508fc10:	10ffffc4 	addi	r3,r2,-1
 508fc14:	24402336 	bltu	r4,r17,508fca4 <__udivdi3+0x550>
 508fc18:	2400222e 	bgeu	r4,r16,508fca4 <__udivdi3+0x550>
 508fc1c:	10bfff84 	addi	r2,r2,-2
 508fc20:	2449883a 	add	r4,r4,r17
 508fc24:	e038943a 	slli	fp,fp,16
 508fc28:	2421c83a 	sub	r16,r4,r16
 508fc2c:	e086b03a 	or	r3,fp,r2
 508fc30:	003f4306 	br	508f940 <__alt_data_end+0xfffc1740>
 508fc34:	2005883a 	mov	r2,r4
 508fc38:	003f6906 	br	508f9e0 <__alt_data_end+0xfffc17e0>
 508fc3c:	1805883a 	mov	r2,r3
 508fc40:	003f0f06 	br	508f880 <__alt_data_end+0xfffc1680>
 508fc44:	1806943a 	slli	r3,r3,16
 508fc48:	9d66983a 	sll	r19,r19,r21
 508fc4c:	39ffffcc 	andi	r7,r7,65535
 508fc50:	19c7883a 	add	r3,r3,r7
 508fc54:	98ffc32e 	bgeu	r19,r3,508fb64 <__alt_data_end+0xfffc1964>
 508fc58:	10bfffc4 	addi	r2,r2,-1
 508fc5c:	003fc106 	br	508fb64 <__alt_data_end+0xfffc1964>
 508fc60:	00800604 	movi	r2,24
 508fc64:	003f1106 	br	508f8ac <__alt_data_end+0xfffc16ac>
 508fc68:	00800604 	movi	r2,24
 508fc6c:	003f2706 	br	508f90c <__alt_data_end+0xfffc170c>
 508fc70:	00800604 	movi	r2,24
 508fc74:	003ece06 	br	508f7b0 <__alt_data_end+0xfffc15b0>
 508fc78:	0007883a 	mov	r3,zero
 508fc7c:	00800044 	movi	r2,1
 508fc80:	003f5c06 	br	508f9f4 <__alt_data_end+0xfffc17f4>
 508fc84:	813fa12e 	bgeu	r16,r4,508fb0c <__alt_data_end+0xfffc190c>
 508fc88:	10bfff84 	addi	r2,r2,-2
 508fc8c:	85e1883a 	add	r16,r16,r23
 508fc90:	003f9f06 	br	508fb10 <__alt_data_end+0xfffc1910>
 508fc94:	1c7f8a2e 	bgeu	r3,r17,508fac0 <__alt_data_end+0xfffc18c0>
 508fc98:	31bfff84 	addi	r6,r6,-2
 508fc9c:	1dc7883a 	add	r3,r3,r23
 508fca0:	003f8806 	br	508fac4 <__alt_data_end+0xfffc18c4>
 508fca4:	1805883a 	mov	r2,r3
 508fca8:	003fde06 	br	508fc24 <__alt_data_end+0xfffc1a24>
 508fcac:	1839883a 	mov	fp,r3
 508fcb0:	003fc906 	br	508fbd8 <__alt_data_end+0xfffc19d8>
 508fcb4:	b5bfff84 	addi	r22,r22,-2
 508fcb8:	2449883a 	add	r4,r4,r17
 508fcbc:	003f3406 	br	508f990 <__alt_data_end+0xfffc1790>
 508fcc0:	b5bfff84 	addi	r22,r22,-2
 508fcc4:	1445883a 	add	r2,r2,r17
 508fcc8:	003edb06 	br	508f838 <__alt_data_end+0xfffc1638>

0508fccc <__umoddi3>:
 508fccc:	defff404 	addi	sp,sp,-48
 508fcd0:	df000a15 	stw	fp,40(sp)
 508fcd4:	dc400315 	stw	r17,12(sp)
 508fcd8:	dc000215 	stw	r16,8(sp)
 508fcdc:	dfc00b15 	stw	ra,44(sp)
 508fce0:	ddc00915 	stw	r23,36(sp)
 508fce4:	dd800815 	stw	r22,32(sp)
 508fce8:	dd400715 	stw	r21,28(sp)
 508fcec:	dd000615 	stw	r20,24(sp)
 508fcf0:	dcc00515 	stw	r19,20(sp)
 508fcf4:	dc800415 	stw	r18,16(sp)
 508fcf8:	2021883a 	mov	r16,r4
 508fcfc:	2823883a 	mov	r17,r5
 508fd00:	2839883a 	mov	fp,r5
 508fd04:	38003c1e 	bne	r7,zero,508fdf8 <__umoddi3+0x12c>
 508fd08:	3027883a 	mov	r19,r6
 508fd0c:	2029883a 	mov	r20,r4
 508fd10:	2980512e 	bgeu	r5,r6,508fe58 <__umoddi3+0x18c>
 508fd14:	00bfffd4 	movui	r2,65535
 508fd18:	11809a36 	bltu	r2,r6,508ff84 <__umoddi3+0x2b8>
 508fd1c:	01003fc4 	movi	r4,255
 508fd20:	2189803a 	cmpltu	r4,r4,r6
 508fd24:	200890fa 	slli	r4,r4,3
 508fd28:	3104d83a 	srl	r2,r6,r4
 508fd2c:	00c14274 	movhi	r3,1289
 508fd30:	18d82604 	addi	r3,r3,24728
 508fd34:	1885883a 	add	r2,r3,r2
 508fd38:	10c00003 	ldbu	r3,0(r2)
 508fd3c:	00800804 	movi	r2,32
 508fd40:	1909883a 	add	r4,r3,r4
 508fd44:	1125c83a 	sub	r18,r2,r4
 508fd48:	90000526 	beq	r18,zero,508fd60 <__umoddi3+0x94>
 508fd4c:	8ca2983a 	sll	r17,r17,r18
 508fd50:	8108d83a 	srl	r4,r16,r4
 508fd54:	34a6983a 	sll	r19,r6,r18
 508fd58:	84a8983a 	sll	r20,r16,r18
 508fd5c:	2478b03a 	or	fp,r4,r17
 508fd60:	982ed43a 	srli	r23,r19,16
 508fd64:	e009883a 	mov	r4,fp
 508fd68:	9dbfffcc 	andi	r22,r19,65535
 508fd6c:	b80b883a 	mov	r5,r23
 508fd70:	50828dc0 	call	50828dc <__umodsi3>
 508fd74:	e009883a 	mov	r4,fp
 508fd78:	b80b883a 	mov	r5,r23
 508fd7c:	102b883a 	mov	r21,r2
 508fd80:	50828780 	call	5082878 <__udivsi3>
 508fd84:	a806943a 	slli	r3,r21,16
 508fd88:	a008d43a 	srli	r4,r20,16
 508fd8c:	b085383a 	mul	r2,r22,r2
 508fd90:	20c8b03a 	or	r4,r4,r3
 508fd94:	2080032e 	bgeu	r4,r2,508fda4 <__umoddi3+0xd8>
 508fd98:	24c9883a 	add	r4,r4,r19
 508fd9c:	24c00136 	bltu	r4,r19,508fda4 <__umoddi3+0xd8>
 508fda0:	20811036 	bltu	r4,r2,50901e4 <__umoddi3+0x518>
 508fda4:	20abc83a 	sub	r21,r4,r2
 508fda8:	b80b883a 	mov	r5,r23
 508fdac:	a809883a 	mov	r4,r21
 508fdb0:	50828dc0 	call	50828dc <__umodsi3>
 508fdb4:	1023883a 	mov	r17,r2
 508fdb8:	b80b883a 	mov	r5,r23
 508fdbc:	a809883a 	mov	r4,r21
 508fdc0:	50828780 	call	5082878 <__udivsi3>
 508fdc4:	8822943a 	slli	r17,r17,16
 508fdc8:	b085383a 	mul	r2,r22,r2
 508fdcc:	a0ffffcc 	andi	r3,r20,65535
 508fdd0:	1c46b03a 	or	r3,r3,r17
 508fdd4:	1880042e 	bgeu	r3,r2,508fde8 <__umoddi3+0x11c>
 508fdd8:	1cc7883a 	add	r3,r3,r19
 508fddc:	1cc00236 	bltu	r3,r19,508fde8 <__umoddi3+0x11c>
 508fde0:	1880012e 	bgeu	r3,r2,508fde8 <__umoddi3+0x11c>
 508fde4:	1cc7883a 	add	r3,r3,r19
 508fde8:	1885c83a 	sub	r2,r3,r2
 508fdec:	1484d83a 	srl	r2,r2,r18
 508fdf0:	0007883a 	mov	r3,zero
 508fdf4:	00004f06 	br	508ff34 <__umoddi3+0x268>
 508fdf8:	29c04c36 	bltu	r5,r7,508ff2c <__umoddi3+0x260>
 508fdfc:	00bfffd4 	movui	r2,65535
 508fe00:	11c0582e 	bgeu	r2,r7,508ff64 <__umoddi3+0x298>
 508fe04:	00804034 	movhi	r2,256
 508fe08:	10bfffc4 	addi	r2,r2,-1
 508fe0c:	11c0e736 	bltu	r2,r7,50901ac <__umoddi3+0x4e0>
 508fe10:	01000404 	movi	r4,16
 508fe14:	3904d83a 	srl	r2,r7,r4
 508fe18:	00c14274 	movhi	r3,1289
 508fe1c:	18d82604 	addi	r3,r3,24728
 508fe20:	1885883a 	add	r2,r3,r2
 508fe24:	14c00003 	ldbu	r19,0(r2)
 508fe28:	00c00804 	movi	r3,32
 508fe2c:	9927883a 	add	r19,r19,r4
 508fe30:	1ce9c83a 	sub	r20,r3,r19
 508fe34:	a000581e 	bne	r20,zero,508ff98 <__umoddi3+0x2cc>
 508fe38:	3c400136 	bltu	r7,r17,508fe40 <__umoddi3+0x174>
 508fe3c:	8180eb36 	bltu	r16,r6,50901ec <__umoddi3+0x520>
 508fe40:	8185c83a 	sub	r2,r16,r6
 508fe44:	89e3c83a 	sub	r17,r17,r7
 508fe48:	8089803a 	cmpltu	r4,r16,r2
 508fe4c:	8939c83a 	sub	fp,r17,r4
 508fe50:	e007883a 	mov	r3,fp
 508fe54:	00003706 	br	508ff34 <__umoddi3+0x268>
 508fe58:	3000041e 	bne	r6,zero,508fe6c <__umoddi3+0x1a0>
 508fe5c:	000b883a 	mov	r5,zero
 508fe60:	01000044 	movi	r4,1
 508fe64:	50828780 	call	5082878 <__udivsi3>
 508fe68:	1027883a 	mov	r19,r2
 508fe6c:	00bfffd4 	movui	r2,65535
 508fe70:	14c0402e 	bgeu	r2,r19,508ff74 <__umoddi3+0x2a8>
 508fe74:	00804034 	movhi	r2,256
 508fe78:	10bfffc4 	addi	r2,r2,-1
 508fe7c:	14c0cd36 	bltu	r2,r19,50901b4 <__umoddi3+0x4e8>
 508fe80:	00800404 	movi	r2,16
 508fe84:	9886d83a 	srl	r3,r19,r2
 508fe88:	01014274 	movhi	r4,1289
 508fe8c:	21182604 	addi	r4,r4,24728
 508fe90:	20c7883a 	add	r3,r4,r3
 508fe94:	18c00003 	ldbu	r3,0(r3)
 508fe98:	1887883a 	add	r3,r3,r2
 508fe9c:	00800804 	movi	r2,32
 508fea0:	10e5c83a 	sub	r18,r2,r3
 508fea4:	9000901e 	bne	r18,zero,50900e8 <__umoddi3+0x41c>
 508fea8:	982cd43a 	srli	r22,r19,16
 508feac:	8ce3c83a 	sub	r17,r17,r19
 508feb0:	9d7fffcc 	andi	r21,r19,65535
 508feb4:	b00b883a 	mov	r5,r22
 508feb8:	8809883a 	mov	r4,r17
 508febc:	50828dc0 	call	50828dc <__umodsi3>
 508fec0:	8809883a 	mov	r4,r17
 508fec4:	b00b883a 	mov	r5,r22
 508fec8:	1021883a 	mov	r16,r2
 508fecc:	50828780 	call	5082878 <__udivsi3>
 508fed0:	8006943a 	slli	r3,r16,16
 508fed4:	a008d43a 	srli	r4,r20,16
 508fed8:	1545383a 	mul	r2,r2,r21
 508fedc:	20c8b03a 	or	r4,r4,r3
 508fee0:	2080042e 	bgeu	r4,r2,508fef4 <__umoddi3+0x228>
 508fee4:	24c9883a 	add	r4,r4,r19
 508fee8:	24c00236 	bltu	r4,r19,508fef4 <__umoddi3+0x228>
 508feec:	2080012e 	bgeu	r4,r2,508fef4 <__umoddi3+0x228>
 508fef0:	24c9883a 	add	r4,r4,r19
 508fef4:	20a1c83a 	sub	r16,r4,r2
 508fef8:	b00b883a 	mov	r5,r22
 508fefc:	8009883a 	mov	r4,r16
 508ff00:	50828dc0 	call	50828dc <__umodsi3>
 508ff04:	1023883a 	mov	r17,r2
 508ff08:	b00b883a 	mov	r5,r22
 508ff0c:	8009883a 	mov	r4,r16
 508ff10:	50828780 	call	5082878 <__udivsi3>
 508ff14:	8822943a 	slli	r17,r17,16
 508ff18:	1545383a 	mul	r2,r2,r21
 508ff1c:	a53fffcc 	andi	r20,r20,65535
 508ff20:	a446b03a 	or	r3,r20,r17
 508ff24:	18bfb02e 	bgeu	r3,r2,508fde8 <__alt_data_end+0xfffc1be8>
 508ff28:	003fab06 	br	508fdd8 <__alt_data_end+0xfffc1bd8>
 508ff2c:	2005883a 	mov	r2,r4
 508ff30:	2807883a 	mov	r3,r5
 508ff34:	dfc00b17 	ldw	ra,44(sp)
 508ff38:	df000a17 	ldw	fp,40(sp)
 508ff3c:	ddc00917 	ldw	r23,36(sp)
 508ff40:	dd800817 	ldw	r22,32(sp)
 508ff44:	dd400717 	ldw	r21,28(sp)
 508ff48:	dd000617 	ldw	r20,24(sp)
 508ff4c:	dcc00517 	ldw	r19,20(sp)
 508ff50:	dc800417 	ldw	r18,16(sp)
 508ff54:	dc400317 	ldw	r17,12(sp)
 508ff58:	dc000217 	ldw	r16,8(sp)
 508ff5c:	dec00c04 	addi	sp,sp,48
 508ff60:	f800283a 	ret
 508ff64:	04c03fc4 	movi	r19,255
 508ff68:	99c9803a 	cmpltu	r4,r19,r7
 508ff6c:	200890fa 	slli	r4,r4,3
 508ff70:	003fa806 	br	508fe14 <__alt_data_end+0xfffc1c14>
 508ff74:	00803fc4 	movi	r2,255
 508ff78:	14c5803a 	cmpltu	r2,r2,r19
 508ff7c:	100490fa 	slli	r2,r2,3
 508ff80:	003fc006 	br	508fe84 <__alt_data_end+0xfffc1c84>
 508ff84:	00804034 	movhi	r2,256
 508ff88:	10bfffc4 	addi	r2,r2,-1
 508ff8c:	11808b36 	bltu	r2,r6,50901bc <__umoddi3+0x4f0>
 508ff90:	01000404 	movi	r4,16
 508ff94:	003f6406 	br	508fd28 <__alt_data_end+0xfffc1b28>
 508ff98:	34c4d83a 	srl	r2,r6,r19
 508ff9c:	3d0e983a 	sll	r7,r7,r20
 508ffa0:	8cf8d83a 	srl	fp,r17,r19
 508ffa4:	8d10983a 	sll	r8,r17,r20
 508ffa8:	38aab03a 	or	r21,r7,r2
 508ffac:	a82cd43a 	srli	r22,r21,16
 508ffb0:	84e2d83a 	srl	r17,r16,r19
 508ffb4:	e009883a 	mov	r4,fp
 508ffb8:	b00b883a 	mov	r5,r22
 508ffbc:	8a22b03a 	or	r17,r17,r8
 508ffc0:	3524983a 	sll	r18,r6,r20
 508ffc4:	50828dc0 	call	50828dc <__umodsi3>
 508ffc8:	e009883a 	mov	r4,fp
 508ffcc:	b00b883a 	mov	r5,r22
 508ffd0:	102f883a 	mov	r23,r2
 508ffd4:	50828780 	call	5082878 <__udivsi3>
 508ffd8:	100d883a 	mov	r6,r2
 508ffdc:	b808943a 	slli	r4,r23,16
 508ffe0:	aa3fffcc 	andi	r8,r21,65535
 508ffe4:	8804d43a 	srli	r2,r17,16
 508ffe8:	41af383a 	mul	r23,r8,r6
 508ffec:	8520983a 	sll	r16,r16,r20
 508fff0:	1104b03a 	or	r2,r2,r4
 508fff4:	15c0042e 	bgeu	r2,r23,5090008 <__umoddi3+0x33c>
 508fff8:	1545883a 	add	r2,r2,r21
 508fffc:	30ffffc4 	addi	r3,r6,-1
 5090000:	1540742e 	bgeu	r2,r21,50901d4 <__umoddi3+0x508>
 5090004:	180d883a 	mov	r6,r3
 5090008:	15efc83a 	sub	r23,r2,r23
 509000c:	b00b883a 	mov	r5,r22
 5090010:	b809883a 	mov	r4,r23
 5090014:	d9800115 	stw	r6,4(sp)
 5090018:	da000015 	stw	r8,0(sp)
 509001c:	50828dc0 	call	50828dc <__umodsi3>
 5090020:	b00b883a 	mov	r5,r22
 5090024:	b809883a 	mov	r4,r23
 5090028:	1039883a 	mov	fp,r2
 509002c:	50828780 	call	5082878 <__udivsi3>
 5090030:	da000017 	ldw	r8,0(sp)
 5090034:	e038943a 	slli	fp,fp,16
 5090038:	100b883a 	mov	r5,r2
 509003c:	4089383a 	mul	r4,r8,r2
 5090040:	8a3fffcc 	andi	r8,r17,65535
 5090044:	4710b03a 	or	r8,r8,fp
 5090048:	d9800117 	ldw	r6,4(sp)
 509004c:	4100042e 	bgeu	r8,r4,5090060 <__umoddi3+0x394>
 5090050:	4551883a 	add	r8,r8,r21
 5090054:	10bfffc4 	addi	r2,r2,-1
 5090058:	45405a2e 	bgeu	r8,r21,50901c4 <__umoddi3+0x4f8>
 509005c:	100b883a 	mov	r5,r2
 5090060:	300c943a 	slli	r6,r6,16
 5090064:	91ffffcc 	andi	r7,r18,65535
 5090068:	9004d43a 	srli	r2,r18,16
 509006c:	314cb03a 	or	r6,r6,r5
 5090070:	317fffcc 	andi	r5,r6,65535
 5090074:	300cd43a 	srli	r6,r6,16
 5090078:	29d3383a 	mul	r9,r5,r7
 509007c:	288b383a 	mul	r5,r5,r2
 5090080:	31cf383a 	mul	r7,r6,r7
 5090084:	4806d43a 	srli	r3,r9,16
 5090088:	4111c83a 	sub	r8,r8,r4
 509008c:	29cb883a 	add	r5,r5,r7
 5090090:	194b883a 	add	r5,r3,r5
 5090094:	3085383a 	mul	r2,r6,r2
 5090098:	29c0022e 	bgeu	r5,r7,50900a4 <__umoddi3+0x3d8>
 509009c:	00c00074 	movhi	r3,1
 50900a0:	10c5883a 	add	r2,r2,r3
 50900a4:	2808d43a 	srli	r4,r5,16
 50900a8:	280a943a 	slli	r5,r5,16
 50900ac:	4a7fffcc 	andi	r9,r9,65535
 50900b0:	2085883a 	add	r2,r4,r2
 50900b4:	2a4b883a 	add	r5,r5,r9
 50900b8:	40803636 	bltu	r8,r2,5090194 <__umoddi3+0x4c8>
 50900bc:	40804d26 	beq	r8,r2,50901f4 <__umoddi3+0x528>
 50900c0:	4089c83a 	sub	r4,r8,r2
 50900c4:	280f883a 	mov	r7,r5
 50900c8:	81cfc83a 	sub	r7,r16,r7
 50900cc:	81c7803a 	cmpltu	r3,r16,r7
 50900d0:	20c7c83a 	sub	r3,r4,r3
 50900d4:	1cc4983a 	sll	r2,r3,r19
 50900d8:	3d0ed83a 	srl	r7,r7,r20
 50900dc:	1d06d83a 	srl	r3,r3,r20
 50900e0:	11c4b03a 	or	r2,r2,r7
 50900e4:	003f9306 	br	508ff34 <__alt_data_end+0xfffc1d34>
 50900e8:	9ca6983a 	sll	r19,r19,r18
 50900ec:	88e8d83a 	srl	r20,r17,r3
 50900f0:	80c4d83a 	srl	r2,r16,r3
 50900f4:	982cd43a 	srli	r22,r19,16
 50900f8:	8ca2983a 	sll	r17,r17,r18
 50900fc:	a009883a 	mov	r4,r20
 5090100:	b00b883a 	mov	r5,r22
 5090104:	1478b03a 	or	fp,r2,r17
 5090108:	50828dc0 	call	50828dc <__umodsi3>
 509010c:	a009883a 	mov	r4,r20
 5090110:	b00b883a 	mov	r5,r22
 5090114:	1023883a 	mov	r17,r2
 5090118:	50828780 	call	5082878 <__udivsi3>
 509011c:	9d7fffcc 	andi	r21,r19,65535
 5090120:	880a943a 	slli	r5,r17,16
 5090124:	e008d43a 	srli	r4,fp,16
 5090128:	a885383a 	mul	r2,r21,r2
 509012c:	84a8983a 	sll	r20,r16,r18
 5090130:	2148b03a 	or	r4,r4,r5
 5090134:	2080042e 	bgeu	r4,r2,5090148 <__umoddi3+0x47c>
 5090138:	24c9883a 	add	r4,r4,r19
 509013c:	24c00236 	bltu	r4,r19,5090148 <__umoddi3+0x47c>
 5090140:	2080012e 	bgeu	r4,r2,5090148 <__umoddi3+0x47c>
 5090144:	24c9883a 	add	r4,r4,r19
 5090148:	20a3c83a 	sub	r17,r4,r2
 509014c:	b00b883a 	mov	r5,r22
 5090150:	8809883a 	mov	r4,r17
 5090154:	50828dc0 	call	50828dc <__umodsi3>
 5090158:	102f883a 	mov	r23,r2
 509015c:	8809883a 	mov	r4,r17
 5090160:	b00b883a 	mov	r5,r22
 5090164:	50828780 	call	5082878 <__udivsi3>
 5090168:	b82e943a 	slli	r23,r23,16
 509016c:	a885383a 	mul	r2,r21,r2
 5090170:	e13fffcc 	andi	r4,fp,65535
 5090174:	25c8b03a 	or	r4,r4,r23
 5090178:	2080042e 	bgeu	r4,r2,509018c <__umoddi3+0x4c0>
 509017c:	24c9883a 	add	r4,r4,r19
 5090180:	24c00236 	bltu	r4,r19,509018c <__umoddi3+0x4c0>
 5090184:	2080012e 	bgeu	r4,r2,509018c <__umoddi3+0x4c0>
 5090188:	24c9883a 	add	r4,r4,r19
 509018c:	20a3c83a 	sub	r17,r4,r2
 5090190:	003f4806 	br	508feb4 <__alt_data_end+0xfffc1cb4>
 5090194:	2c8fc83a 	sub	r7,r5,r18
 5090198:	1545c83a 	sub	r2,r2,r21
 509019c:	29cb803a 	cmpltu	r5,r5,r7
 50901a0:	1145c83a 	sub	r2,r2,r5
 50901a4:	4089c83a 	sub	r4,r8,r2
 50901a8:	003fc706 	br	50900c8 <__alt_data_end+0xfffc1ec8>
 50901ac:	01000604 	movi	r4,24
 50901b0:	003f1806 	br	508fe14 <__alt_data_end+0xfffc1c14>
 50901b4:	00800604 	movi	r2,24
 50901b8:	003f3206 	br	508fe84 <__alt_data_end+0xfffc1c84>
 50901bc:	01000604 	movi	r4,24
 50901c0:	003ed906 	br	508fd28 <__alt_data_end+0xfffc1b28>
 50901c4:	413fa52e 	bgeu	r8,r4,509005c <__alt_data_end+0xfffc1e5c>
 50901c8:	297fff84 	addi	r5,r5,-2
 50901cc:	4551883a 	add	r8,r8,r21
 50901d0:	003fa306 	br	5090060 <__alt_data_end+0xfffc1e60>
 50901d4:	15ff8b2e 	bgeu	r2,r23,5090004 <__alt_data_end+0xfffc1e04>
 50901d8:	31bfff84 	addi	r6,r6,-2
 50901dc:	1545883a 	add	r2,r2,r21
 50901e0:	003f8906 	br	5090008 <__alt_data_end+0xfffc1e08>
 50901e4:	24c9883a 	add	r4,r4,r19
 50901e8:	003eee06 	br	508fda4 <__alt_data_end+0xfffc1ba4>
 50901ec:	8005883a 	mov	r2,r16
 50901f0:	003f1706 	br	508fe50 <__alt_data_end+0xfffc1c50>
 50901f4:	817fe736 	bltu	r16,r5,5090194 <__alt_data_end+0xfffc1f94>
 50901f8:	280f883a 	mov	r7,r5
 50901fc:	0009883a 	mov	r4,zero
 5090200:	003fb106 	br	50900c8 <__alt_data_end+0xfffc1ec8>

05090204 <__adddf3>:
 5090204:	02c00434 	movhi	r11,16
 5090208:	5affffc4 	addi	r11,r11,-1
 509020c:	2806d7fa 	srli	r3,r5,31
 5090210:	2ad4703a 	and	r10,r5,r11
 5090214:	3ad2703a 	and	r9,r7,r11
 5090218:	3804d53a 	srli	r2,r7,20
 509021c:	3018d77a 	srli	r12,r6,29
 5090220:	280ad53a 	srli	r5,r5,20
 5090224:	501490fa 	slli	r10,r10,3
 5090228:	2010d77a 	srli	r8,r4,29
 509022c:	481290fa 	slli	r9,r9,3
 5090230:	380ed7fa 	srli	r7,r7,31
 5090234:	defffb04 	addi	sp,sp,-20
 5090238:	dc800215 	stw	r18,8(sp)
 509023c:	dc400115 	stw	r17,4(sp)
 5090240:	dc000015 	stw	r16,0(sp)
 5090244:	dfc00415 	stw	ra,16(sp)
 5090248:	dcc00315 	stw	r19,12(sp)
 509024c:	1c803fcc 	andi	r18,r3,255
 5090250:	2c01ffcc 	andi	r16,r5,2047
 5090254:	5210b03a 	or	r8,r10,r8
 5090258:	202290fa 	slli	r17,r4,3
 509025c:	1081ffcc 	andi	r2,r2,2047
 5090260:	4b12b03a 	or	r9,r9,r12
 5090264:	300c90fa 	slli	r6,r6,3
 5090268:	91c07526 	beq	r18,r7,5090440 <__adddf3+0x23c>
 509026c:	8087c83a 	sub	r3,r16,r2
 5090270:	00c0ab0e 	bge	zero,r3,5090520 <__adddf3+0x31c>
 5090274:	10002a1e 	bne	r2,zero,5090320 <__adddf3+0x11c>
 5090278:	4984b03a 	or	r2,r9,r6
 509027c:	1000961e 	bne	r2,zero,50904d8 <__adddf3+0x2d4>
 5090280:	888001cc 	andi	r2,r17,7
 5090284:	10000726 	beq	r2,zero,50902a4 <__adddf3+0xa0>
 5090288:	888003cc 	andi	r2,r17,15
 509028c:	00c00104 	movi	r3,4
 5090290:	10c00426 	beq	r2,r3,50902a4 <__adddf3+0xa0>
 5090294:	88c7883a 	add	r3,r17,r3
 5090298:	1c63803a 	cmpltu	r17,r3,r17
 509029c:	4451883a 	add	r8,r8,r17
 50902a0:	1823883a 	mov	r17,r3
 50902a4:	4080202c 	andhi	r2,r8,128
 50902a8:	10005926 	beq	r2,zero,5090410 <__adddf3+0x20c>
 50902ac:	84000044 	addi	r16,r16,1
 50902b0:	0081ffc4 	movi	r2,2047
 50902b4:	8080ba26 	beq	r16,r2,50905a0 <__adddf3+0x39c>
 50902b8:	00bfe034 	movhi	r2,65408
 50902bc:	10bfffc4 	addi	r2,r2,-1
 50902c0:	4090703a 	and	r8,r8,r2
 50902c4:	4004977a 	slli	r2,r8,29
 50902c8:	4010927a 	slli	r8,r8,9
 50902cc:	8822d0fa 	srli	r17,r17,3
 50902d0:	8401ffcc 	andi	r16,r16,2047
 50902d4:	4010d33a 	srli	r8,r8,12
 50902d8:	9007883a 	mov	r3,r18
 50902dc:	1444b03a 	or	r2,r2,r17
 50902e0:	8401ffcc 	andi	r16,r16,2047
 50902e4:	8020953a 	slli	r16,r16,20
 50902e8:	18c03fcc 	andi	r3,r3,255
 50902ec:	01000434 	movhi	r4,16
 50902f0:	213fffc4 	addi	r4,r4,-1
 50902f4:	180697fa 	slli	r3,r3,31
 50902f8:	4110703a 	and	r8,r8,r4
 50902fc:	4410b03a 	or	r8,r8,r16
 5090300:	40c6b03a 	or	r3,r8,r3
 5090304:	dfc00417 	ldw	ra,16(sp)
 5090308:	dcc00317 	ldw	r19,12(sp)
 509030c:	dc800217 	ldw	r18,8(sp)
 5090310:	dc400117 	ldw	r17,4(sp)
 5090314:	dc000017 	ldw	r16,0(sp)
 5090318:	dec00504 	addi	sp,sp,20
 509031c:	f800283a 	ret
 5090320:	0081ffc4 	movi	r2,2047
 5090324:	80bfd626 	beq	r16,r2,5090280 <__alt_data_end+0xfffc2080>
 5090328:	4a402034 	orhi	r9,r9,128
 509032c:	00800e04 	movi	r2,56
 5090330:	10c09f16 	blt	r2,r3,50905b0 <__adddf3+0x3ac>
 5090334:	008007c4 	movi	r2,31
 5090338:	10c0c216 	blt	r2,r3,5090644 <__adddf3+0x440>
 509033c:	00800804 	movi	r2,32
 5090340:	10c5c83a 	sub	r2,r2,r3
 5090344:	488a983a 	sll	r5,r9,r2
 5090348:	30c8d83a 	srl	r4,r6,r3
 509034c:	3084983a 	sll	r2,r6,r2
 5090350:	48c6d83a 	srl	r3,r9,r3
 5090354:	290cb03a 	or	r6,r5,r4
 5090358:	1004c03a 	cmpne	r2,r2,zero
 509035c:	308cb03a 	or	r6,r6,r2
 5090360:	898dc83a 	sub	r6,r17,r6
 5090364:	89a3803a 	cmpltu	r17,r17,r6
 5090368:	40d1c83a 	sub	r8,r8,r3
 509036c:	4451c83a 	sub	r8,r8,r17
 5090370:	3023883a 	mov	r17,r6
 5090374:	4080202c 	andhi	r2,r8,128
 5090378:	10002326 	beq	r2,zero,5090408 <__adddf3+0x204>
 509037c:	04c02034 	movhi	r19,128
 5090380:	9cffffc4 	addi	r19,r19,-1
 5090384:	44e6703a 	and	r19,r8,r19
 5090388:	98007626 	beq	r19,zero,5090564 <__adddf3+0x360>
 509038c:	9809883a 	mov	r4,r19
 5090390:	50928080 	call	5092808 <__clzsi2>
 5090394:	10fffe04 	addi	r3,r2,-8
 5090398:	010007c4 	movi	r4,31
 509039c:	20c07716 	blt	r4,r3,509057c <__adddf3+0x378>
 50903a0:	00800804 	movi	r2,32
 50903a4:	10c5c83a 	sub	r2,r2,r3
 50903a8:	8884d83a 	srl	r2,r17,r2
 50903ac:	98d0983a 	sll	r8,r19,r3
 50903b0:	88e2983a 	sll	r17,r17,r3
 50903b4:	1204b03a 	or	r2,r2,r8
 50903b8:	1c007416 	blt	r3,r16,509058c <__adddf3+0x388>
 50903bc:	1c21c83a 	sub	r16,r3,r16
 50903c0:	82000044 	addi	r8,r16,1
 50903c4:	00c007c4 	movi	r3,31
 50903c8:	1a009116 	blt	r3,r8,5090610 <__adddf3+0x40c>
 50903cc:	00c00804 	movi	r3,32
 50903d0:	1a07c83a 	sub	r3,r3,r8
 50903d4:	8a08d83a 	srl	r4,r17,r8
 50903d8:	88e2983a 	sll	r17,r17,r3
 50903dc:	10c6983a 	sll	r3,r2,r3
 50903e0:	1210d83a 	srl	r8,r2,r8
 50903e4:	8804c03a 	cmpne	r2,r17,zero
 50903e8:	1906b03a 	or	r3,r3,r4
 50903ec:	18a2b03a 	or	r17,r3,r2
 50903f0:	0021883a 	mov	r16,zero
 50903f4:	003fa206 	br	5090280 <__alt_data_end+0xfffc2080>
 50903f8:	1890b03a 	or	r8,r3,r2
 50903fc:	40017d26 	beq	r8,zero,50909f4 <__adddf3+0x7f0>
 5090400:	1011883a 	mov	r8,r2
 5090404:	1823883a 	mov	r17,r3
 5090408:	888001cc 	andi	r2,r17,7
 509040c:	103f9e1e 	bne	r2,zero,5090288 <__alt_data_end+0xfffc2088>
 5090410:	4004977a 	slli	r2,r8,29
 5090414:	8822d0fa 	srli	r17,r17,3
 5090418:	4010d0fa 	srli	r8,r8,3
 509041c:	9007883a 	mov	r3,r18
 5090420:	1444b03a 	or	r2,r2,r17
 5090424:	0101ffc4 	movi	r4,2047
 5090428:	81002426 	beq	r16,r4,50904bc <__adddf3+0x2b8>
 509042c:	8120703a 	and	r16,r16,r4
 5090430:	01000434 	movhi	r4,16
 5090434:	213fffc4 	addi	r4,r4,-1
 5090438:	4110703a 	and	r8,r8,r4
 509043c:	003fa806 	br	50902e0 <__alt_data_end+0xfffc20e0>
 5090440:	8089c83a 	sub	r4,r16,r2
 5090444:	01005e0e 	bge	zero,r4,50905c0 <__adddf3+0x3bc>
 5090448:	10002b26 	beq	r2,zero,50904f8 <__adddf3+0x2f4>
 509044c:	0081ffc4 	movi	r2,2047
 5090450:	80bf8b26 	beq	r16,r2,5090280 <__alt_data_end+0xfffc2080>
 5090454:	4a402034 	orhi	r9,r9,128
 5090458:	00800e04 	movi	r2,56
 509045c:	1100a40e 	bge	r2,r4,50906f0 <__adddf3+0x4ec>
 5090460:	498cb03a 	or	r6,r9,r6
 5090464:	300ac03a 	cmpne	r5,r6,zero
 5090468:	0013883a 	mov	r9,zero
 509046c:	2c4b883a 	add	r5,r5,r17
 5090470:	2c63803a 	cmpltu	r17,r5,r17
 5090474:	4a11883a 	add	r8,r9,r8
 5090478:	8a11883a 	add	r8,r17,r8
 509047c:	2823883a 	mov	r17,r5
 5090480:	4080202c 	andhi	r2,r8,128
 5090484:	103fe026 	beq	r2,zero,5090408 <__alt_data_end+0xfffc2208>
 5090488:	84000044 	addi	r16,r16,1
 509048c:	0081ffc4 	movi	r2,2047
 5090490:	8080d226 	beq	r16,r2,50907dc <__adddf3+0x5d8>
 5090494:	00bfe034 	movhi	r2,65408
 5090498:	10bfffc4 	addi	r2,r2,-1
 509049c:	4090703a 	and	r8,r8,r2
 50904a0:	880ad07a 	srli	r5,r17,1
 50904a4:	400897fa 	slli	r4,r8,31
 50904a8:	88c0004c 	andi	r3,r17,1
 50904ac:	28e2b03a 	or	r17,r5,r3
 50904b0:	4010d07a 	srli	r8,r8,1
 50904b4:	2462b03a 	or	r17,r4,r17
 50904b8:	003f7106 	br	5090280 <__alt_data_end+0xfffc2080>
 50904bc:	4088b03a 	or	r4,r8,r2
 50904c0:	20014526 	beq	r4,zero,50909d8 <__adddf3+0x7d4>
 50904c4:	01000434 	movhi	r4,16
 50904c8:	42000234 	orhi	r8,r8,8
 50904cc:	213fffc4 	addi	r4,r4,-1
 50904d0:	4110703a 	and	r8,r8,r4
 50904d4:	003f8206 	br	50902e0 <__alt_data_end+0xfffc20e0>
 50904d8:	18ffffc4 	addi	r3,r3,-1
 50904dc:	1800491e 	bne	r3,zero,5090604 <__adddf3+0x400>
 50904e0:	898bc83a 	sub	r5,r17,r6
 50904e4:	8963803a 	cmpltu	r17,r17,r5
 50904e8:	4251c83a 	sub	r8,r8,r9
 50904ec:	4451c83a 	sub	r8,r8,r17
 50904f0:	2823883a 	mov	r17,r5
 50904f4:	003f9f06 	br	5090374 <__alt_data_end+0xfffc2174>
 50904f8:	4984b03a 	or	r2,r9,r6
 50904fc:	103f6026 	beq	r2,zero,5090280 <__alt_data_end+0xfffc2080>
 5090500:	213fffc4 	addi	r4,r4,-1
 5090504:	2000931e 	bne	r4,zero,5090754 <__adddf3+0x550>
 5090508:	898d883a 	add	r6,r17,r6
 509050c:	3463803a 	cmpltu	r17,r6,r17
 5090510:	4251883a 	add	r8,r8,r9
 5090514:	8a11883a 	add	r8,r17,r8
 5090518:	3023883a 	mov	r17,r6
 509051c:	003fd806 	br	5090480 <__alt_data_end+0xfffc2280>
 5090520:	1800541e 	bne	r3,zero,5090674 <__adddf3+0x470>
 5090524:	80800044 	addi	r2,r16,1
 5090528:	1081ffcc 	andi	r2,r2,2047
 509052c:	00c00044 	movi	r3,1
 5090530:	1880a00e 	bge	r3,r2,50907b4 <__adddf3+0x5b0>
 5090534:	8989c83a 	sub	r4,r17,r6
 5090538:	8905803a 	cmpltu	r2,r17,r4
 509053c:	4267c83a 	sub	r19,r8,r9
 5090540:	98a7c83a 	sub	r19,r19,r2
 5090544:	9880202c 	andhi	r2,r19,128
 5090548:	10006326 	beq	r2,zero,50906d8 <__adddf3+0x4d4>
 509054c:	3463c83a 	sub	r17,r6,r17
 5090550:	4a07c83a 	sub	r3,r9,r8
 5090554:	344d803a 	cmpltu	r6,r6,r17
 5090558:	19a7c83a 	sub	r19,r3,r6
 509055c:	3825883a 	mov	r18,r7
 5090560:	983f8a1e 	bne	r19,zero,509038c <__alt_data_end+0xfffc218c>
 5090564:	8809883a 	mov	r4,r17
 5090568:	50928080 	call	5092808 <__clzsi2>
 509056c:	10800804 	addi	r2,r2,32
 5090570:	10fffe04 	addi	r3,r2,-8
 5090574:	010007c4 	movi	r4,31
 5090578:	20ff890e 	bge	r4,r3,50903a0 <__alt_data_end+0xfffc21a0>
 509057c:	10bff604 	addi	r2,r2,-40
 5090580:	8884983a 	sll	r2,r17,r2
 5090584:	0023883a 	mov	r17,zero
 5090588:	1c3f8c0e 	bge	r3,r16,50903bc <__alt_data_end+0xfffc21bc>
 509058c:	023fe034 	movhi	r8,65408
 5090590:	423fffc4 	addi	r8,r8,-1
 5090594:	80e1c83a 	sub	r16,r16,r3
 5090598:	1210703a 	and	r8,r2,r8
 509059c:	003f3806 	br	5090280 <__alt_data_end+0xfffc2080>
 50905a0:	9007883a 	mov	r3,r18
 50905a4:	0011883a 	mov	r8,zero
 50905a8:	0005883a 	mov	r2,zero
 50905ac:	003f4c06 	br	50902e0 <__alt_data_end+0xfffc20e0>
 50905b0:	498cb03a 	or	r6,r9,r6
 50905b4:	300cc03a 	cmpne	r6,r6,zero
 50905b8:	0007883a 	mov	r3,zero
 50905bc:	003f6806 	br	5090360 <__alt_data_end+0xfffc2160>
 50905c0:	20009c1e 	bne	r4,zero,5090834 <__adddf3+0x630>
 50905c4:	80800044 	addi	r2,r16,1
 50905c8:	1141ffcc 	andi	r5,r2,2047
 50905cc:	01000044 	movi	r4,1
 50905d0:	2140670e 	bge	r4,r5,5090770 <__adddf3+0x56c>
 50905d4:	0101ffc4 	movi	r4,2047
 50905d8:	11007f26 	beq	r2,r4,50907d8 <__adddf3+0x5d4>
 50905dc:	898d883a 	add	r6,r17,r6
 50905e0:	4247883a 	add	r3,r8,r9
 50905e4:	3451803a 	cmpltu	r8,r6,r17
 50905e8:	40d1883a 	add	r8,r8,r3
 50905ec:	402297fa 	slli	r17,r8,31
 50905f0:	300cd07a 	srli	r6,r6,1
 50905f4:	4010d07a 	srli	r8,r8,1
 50905f8:	1021883a 	mov	r16,r2
 50905fc:	89a2b03a 	or	r17,r17,r6
 5090600:	003f1f06 	br	5090280 <__alt_data_end+0xfffc2080>
 5090604:	0081ffc4 	movi	r2,2047
 5090608:	80bf481e 	bne	r16,r2,509032c <__alt_data_end+0xfffc212c>
 509060c:	003f1c06 	br	5090280 <__alt_data_end+0xfffc2080>
 5090610:	843ff844 	addi	r16,r16,-31
 5090614:	01000804 	movi	r4,32
 5090618:	1406d83a 	srl	r3,r2,r16
 509061c:	41005026 	beq	r8,r4,5090760 <__adddf3+0x55c>
 5090620:	01001004 	movi	r4,64
 5090624:	2211c83a 	sub	r8,r4,r8
 5090628:	1204983a 	sll	r2,r2,r8
 509062c:	88a2b03a 	or	r17,r17,r2
 5090630:	8822c03a 	cmpne	r17,r17,zero
 5090634:	1c62b03a 	or	r17,r3,r17
 5090638:	0011883a 	mov	r8,zero
 509063c:	0021883a 	mov	r16,zero
 5090640:	003f7106 	br	5090408 <__alt_data_end+0xfffc2208>
 5090644:	193ff804 	addi	r4,r3,-32
 5090648:	00800804 	movi	r2,32
 509064c:	4908d83a 	srl	r4,r9,r4
 5090650:	18804526 	beq	r3,r2,5090768 <__adddf3+0x564>
 5090654:	00801004 	movi	r2,64
 5090658:	10c5c83a 	sub	r2,r2,r3
 509065c:	4886983a 	sll	r3,r9,r2
 5090660:	198cb03a 	or	r6,r3,r6
 5090664:	300cc03a 	cmpne	r6,r6,zero
 5090668:	218cb03a 	or	r6,r4,r6
 509066c:	0007883a 	mov	r3,zero
 5090670:	003f3b06 	br	5090360 <__alt_data_end+0xfffc2160>
 5090674:	80002a26 	beq	r16,zero,5090720 <__adddf3+0x51c>
 5090678:	0101ffc4 	movi	r4,2047
 509067c:	11006826 	beq	r2,r4,5090820 <__adddf3+0x61c>
 5090680:	00c7c83a 	sub	r3,zero,r3
 5090684:	42002034 	orhi	r8,r8,128
 5090688:	01000e04 	movi	r4,56
 509068c:	20c07c16 	blt	r4,r3,5090880 <__adddf3+0x67c>
 5090690:	010007c4 	movi	r4,31
 5090694:	20c0da16 	blt	r4,r3,5090a00 <__adddf3+0x7fc>
 5090698:	01000804 	movi	r4,32
 509069c:	20c9c83a 	sub	r4,r4,r3
 50906a0:	4114983a 	sll	r10,r8,r4
 50906a4:	88cad83a 	srl	r5,r17,r3
 50906a8:	8908983a 	sll	r4,r17,r4
 50906ac:	40c6d83a 	srl	r3,r8,r3
 50906b0:	5162b03a 	or	r17,r10,r5
 50906b4:	2008c03a 	cmpne	r4,r4,zero
 50906b8:	8922b03a 	or	r17,r17,r4
 50906bc:	3463c83a 	sub	r17,r6,r17
 50906c0:	48c7c83a 	sub	r3,r9,r3
 50906c4:	344d803a 	cmpltu	r6,r6,r17
 50906c8:	1991c83a 	sub	r8,r3,r6
 50906cc:	1021883a 	mov	r16,r2
 50906d0:	3825883a 	mov	r18,r7
 50906d4:	003f2706 	br	5090374 <__alt_data_end+0xfffc2174>
 50906d8:	24d0b03a 	or	r8,r4,r19
 50906dc:	40001b1e 	bne	r8,zero,509074c <__adddf3+0x548>
 50906e0:	0005883a 	mov	r2,zero
 50906e4:	0007883a 	mov	r3,zero
 50906e8:	0021883a 	mov	r16,zero
 50906ec:	003f4d06 	br	5090424 <__alt_data_end+0xfffc2224>
 50906f0:	008007c4 	movi	r2,31
 50906f4:	11003c16 	blt	r2,r4,50907e8 <__adddf3+0x5e4>
 50906f8:	00800804 	movi	r2,32
 50906fc:	1105c83a 	sub	r2,r2,r4
 5090700:	488e983a 	sll	r7,r9,r2
 5090704:	310ad83a 	srl	r5,r6,r4
 5090708:	3084983a 	sll	r2,r6,r2
 509070c:	4912d83a 	srl	r9,r9,r4
 5090710:	394ab03a 	or	r5,r7,r5
 5090714:	1004c03a 	cmpne	r2,r2,zero
 5090718:	288ab03a 	or	r5,r5,r2
 509071c:	003f5306 	br	509046c <__alt_data_end+0xfffc226c>
 5090720:	4448b03a 	or	r4,r8,r17
 5090724:	20003e26 	beq	r4,zero,5090820 <__adddf3+0x61c>
 5090728:	00c6303a 	nor	r3,zero,r3
 509072c:	18003a1e 	bne	r3,zero,5090818 <__adddf3+0x614>
 5090730:	3463c83a 	sub	r17,r6,r17
 5090734:	4a07c83a 	sub	r3,r9,r8
 5090738:	344d803a 	cmpltu	r6,r6,r17
 509073c:	1991c83a 	sub	r8,r3,r6
 5090740:	1021883a 	mov	r16,r2
 5090744:	3825883a 	mov	r18,r7
 5090748:	003f0a06 	br	5090374 <__alt_data_end+0xfffc2174>
 509074c:	2023883a 	mov	r17,r4
 5090750:	003f0d06 	br	5090388 <__alt_data_end+0xfffc2188>
 5090754:	0081ffc4 	movi	r2,2047
 5090758:	80bf3f1e 	bne	r16,r2,5090458 <__alt_data_end+0xfffc2258>
 509075c:	003ec806 	br	5090280 <__alt_data_end+0xfffc2080>
 5090760:	0005883a 	mov	r2,zero
 5090764:	003fb106 	br	509062c <__alt_data_end+0xfffc242c>
 5090768:	0007883a 	mov	r3,zero
 509076c:	003fbc06 	br	5090660 <__alt_data_end+0xfffc2460>
 5090770:	4444b03a 	or	r2,r8,r17
 5090774:	8000871e 	bne	r16,zero,5090994 <__adddf3+0x790>
 5090778:	1000ba26 	beq	r2,zero,5090a64 <__adddf3+0x860>
 509077c:	4984b03a 	or	r2,r9,r6
 5090780:	103ebf26 	beq	r2,zero,5090280 <__alt_data_end+0xfffc2080>
 5090784:	8985883a 	add	r2,r17,r6
 5090788:	4247883a 	add	r3,r8,r9
 509078c:	1451803a 	cmpltu	r8,r2,r17
 5090790:	40d1883a 	add	r8,r8,r3
 5090794:	40c0202c 	andhi	r3,r8,128
 5090798:	1023883a 	mov	r17,r2
 509079c:	183f1a26 	beq	r3,zero,5090408 <__alt_data_end+0xfffc2208>
 50907a0:	00bfe034 	movhi	r2,65408
 50907a4:	10bfffc4 	addi	r2,r2,-1
 50907a8:	2021883a 	mov	r16,r4
 50907ac:	4090703a 	and	r8,r8,r2
 50907b0:	003eb306 	br	5090280 <__alt_data_end+0xfffc2080>
 50907b4:	4444b03a 	or	r2,r8,r17
 50907b8:	8000291e 	bne	r16,zero,5090860 <__adddf3+0x65c>
 50907bc:	10004b1e 	bne	r2,zero,50908ec <__adddf3+0x6e8>
 50907c0:	4990b03a 	or	r8,r9,r6
 50907c4:	40008b26 	beq	r8,zero,50909f4 <__adddf3+0x7f0>
 50907c8:	4811883a 	mov	r8,r9
 50907cc:	3023883a 	mov	r17,r6
 50907d0:	3825883a 	mov	r18,r7
 50907d4:	003eaa06 	br	5090280 <__alt_data_end+0xfffc2080>
 50907d8:	1021883a 	mov	r16,r2
 50907dc:	0011883a 	mov	r8,zero
 50907e0:	0005883a 	mov	r2,zero
 50907e4:	003f0f06 	br	5090424 <__alt_data_end+0xfffc2224>
 50907e8:	217ff804 	addi	r5,r4,-32
 50907ec:	00800804 	movi	r2,32
 50907f0:	494ad83a 	srl	r5,r9,r5
 50907f4:	20807d26 	beq	r4,r2,50909ec <__adddf3+0x7e8>
 50907f8:	00801004 	movi	r2,64
 50907fc:	1109c83a 	sub	r4,r2,r4
 5090800:	4912983a 	sll	r9,r9,r4
 5090804:	498cb03a 	or	r6,r9,r6
 5090808:	300cc03a 	cmpne	r6,r6,zero
 509080c:	298ab03a 	or	r5,r5,r6
 5090810:	0013883a 	mov	r9,zero
 5090814:	003f1506 	br	509046c <__alt_data_end+0xfffc226c>
 5090818:	0101ffc4 	movi	r4,2047
 509081c:	113f9a1e 	bne	r2,r4,5090688 <__alt_data_end+0xfffc2488>
 5090820:	4811883a 	mov	r8,r9
 5090824:	3023883a 	mov	r17,r6
 5090828:	1021883a 	mov	r16,r2
 509082c:	3825883a 	mov	r18,r7
 5090830:	003e9306 	br	5090280 <__alt_data_end+0xfffc2080>
 5090834:	8000161e 	bne	r16,zero,5090890 <__adddf3+0x68c>
 5090838:	444ab03a 	or	r5,r8,r17
 509083c:	28005126 	beq	r5,zero,5090984 <__adddf3+0x780>
 5090840:	0108303a 	nor	r4,zero,r4
 5090844:	20004d1e 	bne	r4,zero,509097c <__adddf3+0x778>
 5090848:	89a3883a 	add	r17,r17,r6
 509084c:	4253883a 	add	r9,r8,r9
 5090850:	898d803a 	cmpltu	r6,r17,r6
 5090854:	3251883a 	add	r8,r6,r9
 5090858:	1021883a 	mov	r16,r2
 509085c:	003f0806 	br	5090480 <__alt_data_end+0xfffc2280>
 5090860:	1000301e 	bne	r2,zero,5090924 <__adddf3+0x720>
 5090864:	4984b03a 	or	r2,r9,r6
 5090868:	10007126 	beq	r2,zero,5090a30 <__adddf3+0x82c>
 509086c:	4811883a 	mov	r8,r9
 5090870:	3023883a 	mov	r17,r6
 5090874:	3825883a 	mov	r18,r7
 5090878:	0401ffc4 	movi	r16,2047
 509087c:	003e8006 	br	5090280 <__alt_data_end+0xfffc2080>
 5090880:	4462b03a 	or	r17,r8,r17
 5090884:	8822c03a 	cmpne	r17,r17,zero
 5090888:	0007883a 	mov	r3,zero
 509088c:	003f8b06 	br	50906bc <__alt_data_end+0xfffc24bc>
 5090890:	0141ffc4 	movi	r5,2047
 5090894:	11403b26 	beq	r2,r5,5090984 <__adddf3+0x780>
 5090898:	0109c83a 	sub	r4,zero,r4
 509089c:	42002034 	orhi	r8,r8,128
 50908a0:	01400e04 	movi	r5,56
 50908a4:	29006716 	blt	r5,r4,5090a44 <__adddf3+0x840>
 50908a8:	014007c4 	movi	r5,31
 50908ac:	29007016 	blt	r5,r4,5090a70 <__adddf3+0x86c>
 50908b0:	01400804 	movi	r5,32
 50908b4:	290bc83a 	sub	r5,r5,r4
 50908b8:	4154983a 	sll	r10,r8,r5
 50908bc:	890ed83a 	srl	r7,r17,r4
 50908c0:	894a983a 	sll	r5,r17,r5
 50908c4:	4108d83a 	srl	r4,r8,r4
 50908c8:	51e2b03a 	or	r17,r10,r7
 50908cc:	280ac03a 	cmpne	r5,r5,zero
 50908d0:	8962b03a 	or	r17,r17,r5
 50908d4:	89a3883a 	add	r17,r17,r6
 50908d8:	2253883a 	add	r9,r4,r9
 50908dc:	898d803a 	cmpltu	r6,r17,r6
 50908e0:	3251883a 	add	r8,r6,r9
 50908e4:	1021883a 	mov	r16,r2
 50908e8:	003ee506 	br	5090480 <__alt_data_end+0xfffc2280>
 50908ec:	4984b03a 	or	r2,r9,r6
 50908f0:	103e6326 	beq	r2,zero,5090280 <__alt_data_end+0xfffc2080>
 50908f4:	8987c83a 	sub	r3,r17,r6
 50908f8:	88c9803a 	cmpltu	r4,r17,r3
 50908fc:	4245c83a 	sub	r2,r8,r9
 5090900:	1105c83a 	sub	r2,r2,r4
 5090904:	1100202c 	andhi	r4,r2,128
 5090908:	203ebb26 	beq	r4,zero,50903f8 <__alt_data_end+0xfffc21f8>
 509090c:	3463c83a 	sub	r17,r6,r17
 5090910:	4a07c83a 	sub	r3,r9,r8
 5090914:	344d803a 	cmpltu	r6,r6,r17
 5090918:	1991c83a 	sub	r8,r3,r6
 509091c:	3825883a 	mov	r18,r7
 5090920:	003e5706 	br	5090280 <__alt_data_end+0xfffc2080>
 5090924:	4984b03a 	or	r2,r9,r6
 5090928:	10002e26 	beq	r2,zero,50909e4 <__adddf3+0x7e0>
 509092c:	4004d0fa 	srli	r2,r8,3
 5090930:	8822d0fa 	srli	r17,r17,3
 5090934:	4010977a 	slli	r8,r8,29
 5090938:	10c0022c 	andhi	r3,r2,8
 509093c:	4462b03a 	or	r17,r8,r17
 5090940:	18000826 	beq	r3,zero,5090964 <__adddf3+0x760>
 5090944:	4808d0fa 	srli	r4,r9,3
 5090948:	20c0022c 	andhi	r3,r4,8
 509094c:	1800051e 	bne	r3,zero,5090964 <__adddf3+0x760>
 5090950:	300cd0fa 	srli	r6,r6,3
 5090954:	4806977a 	slli	r3,r9,29
 5090958:	2005883a 	mov	r2,r4
 509095c:	3825883a 	mov	r18,r7
 5090960:	19a2b03a 	or	r17,r3,r6
 5090964:	8810d77a 	srli	r8,r17,29
 5090968:	100490fa 	slli	r2,r2,3
 509096c:	882290fa 	slli	r17,r17,3
 5090970:	0401ffc4 	movi	r16,2047
 5090974:	4090b03a 	or	r8,r8,r2
 5090978:	003e4106 	br	5090280 <__alt_data_end+0xfffc2080>
 509097c:	0141ffc4 	movi	r5,2047
 5090980:	117fc71e 	bne	r2,r5,50908a0 <__alt_data_end+0xfffc26a0>
 5090984:	4811883a 	mov	r8,r9
 5090988:	3023883a 	mov	r17,r6
 509098c:	1021883a 	mov	r16,r2
 5090990:	003e3b06 	br	5090280 <__alt_data_end+0xfffc2080>
 5090994:	10002f26 	beq	r2,zero,5090a54 <__adddf3+0x850>
 5090998:	4984b03a 	or	r2,r9,r6
 509099c:	10001126 	beq	r2,zero,50909e4 <__adddf3+0x7e0>
 50909a0:	4004d0fa 	srli	r2,r8,3
 50909a4:	8822d0fa 	srli	r17,r17,3
 50909a8:	4010977a 	slli	r8,r8,29
 50909ac:	10c0022c 	andhi	r3,r2,8
 50909b0:	4462b03a 	or	r17,r8,r17
 50909b4:	183feb26 	beq	r3,zero,5090964 <__alt_data_end+0xfffc2764>
 50909b8:	4808d0fa 	srli	r4,r9,3
 50909bc:	20c0022c 	andhi	r3,r4,8
 50909c0:	183fe81e 	bne	r3,zero,5090964 <__alt_data_end+0xfffc2764>
 50909c4:	300cd0fa 	srli	r6,r6,3
 50909c8:	4806977a 	slli	r3,r9,29
 50909cc:	2005883a 	mov	r2,r4
 50909d0:	19a2b03a 	or	r17,r3,r6
 50909d4:	003fe306 	br	5090964 <__alt_data_end+0xfffc2764>
 50909d8:	0011883a 	mov	r8,zero
 50909dc:	0005883a 	mov	r2,zero
 50909e0:	003e3f06 	br	50902e0 <__alt_data_end+0xfffc20e0>
 50909e4:	0401ffc4 	movi	r16,2047
 50909e8:	003e2506 	br	5090280 <__alt_data_end+0xfffc2080>
 50909ec:	0013883a 	mov	r9,zero
 50909f0:	003f8406 	br	5090804 <__alt_data_end+0xfffc2604>
 50909f4:	0005883a 	mov	r2,zero
 50909f8:	0007883a 	mov	r3,zero
 50909fc:	003e8906 	br	5090424 <__alt_data_end+0xfffc2224>
 5090a00:	197ff804 	addi	r5,r3,-32
 5090a04:	01000804 	movi	r4,32
 5090a08:	414ad83a 	srl	r5,r8,r5
 5090a0c:	19002426 	beq	r3,r4,5090aa0 <__adddf3+0x89c>
 5090a10:	01001004 	movi	r4,64
 5090a14:	20c7c83a 	sub	r3,r4,r3
 5090a18:	40c6983a 	sll	r3,r8,r3
 5090a1c:	1c46b03a 	or	r3,r3,r17
 5090a20:	1806c03a 	cmpne	r3,r3,zero
 5090a24:	28e2b03a 	or	r17,r5,r3
 5090a28:	0007883a 	mov	r3,zero
 5090a2c:	003f2306 	br	50906bc <__alt_data_end+0xfffc24bc>
 5090a30:	0007883a 	mov	r3,zero
 5090a34:	5811883a 	mov	r8,r11
 5090a38:	00bfffc4 	movi	r2,-1
 5090a3c:	0401ffc4 	movi	r16,2047
 5090a40:	003e7806 	br	5090424 <__alt_data_end+0xfffc2224>
 5090a44:	4462b03a 	or	r17,r8,r17
 5090a48:	8822c03a 	cmpne	r17,r17,zero
 5090a4c:	0009883a 	mov	r4,zero
 5090a50:	003fa006 	br	50908d4 <__alt_data_end+0xfffc26d4>
 5090a54:	4811883a 	mov	r8,r9
 5090a58:	3023883a 	mov	r17,r6
 5090a5c:	0401ffc4 	movi	r16,2047
 5090a60:	003e0706 	br	5090280 <__alt_data_end+0xfffc2080>
 5090a64:	4811883a 	mov	r8,r9
 5090a68:	3023883a 	mov	r17,r6
 5090a6c:	003e0406 	br	5090280 <__alt_data_end+0xfffc2080>
 5090a70:	21fff804 	addi	r7,r4,-32
 5090a74:	01400804 	movi	r5,32
 5090a78:	41ced83a 	srl	r7,r8,r7
 5090a7c:	21400a26 	beq	r4,r5,5090aa8 <__adddf3+0x8a4>
 5090a80:	01401004 	movi	r5,64
 5090a84:	2909c83a 	sub	r4,r5,r4
 5090a88:	4108983a 	sll	r4,r8,r4
 5090a8c:	2448b03a 	or	r4,r4,r17
 5090a90:	2008c03a 	cmpne	r4,r4,zero
 5090a94:	3922b03a 	or	r17,r7,r4
 5090a98:	0009883a 	mov	r4,zero
 5090a9c:	003f8d06 	br	50908d4 <__alt_data_end+0xfffc26d4>
 5090aa0:	0007883a 	mov	r3,zero
 5090aa4:	003fdd06 	br	5090a1c <__alt_data_end+0xfffc281c>
 5090aa8:	0009883a 	mov	r4,zero
 5090aac:	003ff706 	br	5090a8c <__alt_data_end+0xfffc288c>

05090ab0 <__divdf3>:
 5090ab0:	defff204 	addi	sp,sp,-56
 5090ab4:	dd400915 	stw	r21,36(sp)
 5090ab8:	282ad53a 	srli	r21,r5,20
 5090abc:	dd000815 	stw	r20,32(sp)
 5090ac0:	2828d7fa 	srli	r20,r5,31
 5090ac4:	dc000415 	stw	r16,16(sp)
 5090ac8:	04000434 	movhi	r16,16
 5090acc:	df000c15 	stw	fp,48(sp)
 5090ad0:	843fffc4 	addi	r16,r16,-1
 5090ad4:	dfc00d15 	stw	ra,52(sp)
 5090ad8:	ddc00b15 	stw	r23,44(sp)
 5090adc:	dd800a15 	stw	r22,40(sp)
 5090ae0:	dcc00715 	stw	r19,28(sp)
 5090ae4:	dc800615 	stw	r18,24(sp)
 5090ae8:	dc400515 	stw	r17,20(sp)
 5090aec:	ad41ffcc 	andi	r21,r21,2047
 5090af0:	2c20703a 	and	r16,r5,r16
 5090af4:	a7003fcc 	andi	fp,r20,255
 5090af8:	a8006126 	beq	r21,zero,5090c80 <__divdf3+0x1d0>
 5090afc:	0081ffc4 	movi	r2,2047
 5090b00:	2025883a 	mov	r18,r4
 5090b04:	a8803726 	beq	r21,r2,5090be4 <__divdf3+0x134>
 5090b08:	80800434 	orhi	r2,r16,16
 5090b0c:	100490fa 	slli	r2,r2,3
 5090b10:	2020d77a 	srli	r16,r4,29
 5090b14:	202490fa 	slli	r18,r4,3
 5090b18:	ad7f0044 	addi	r21,r21,-1023
 5090b1c:	80a0b03a 	or	r16,r16,r2
 5090b20:	0027883a 	mov	r19,zero
 5090b24:	0013883a 	mov	r9,zero
 5090b28:	3804d53a 	srli	r2,r7,20
 5090b2c:	382cd7fa 	srli	r22,r7,31
 5090b30:	04400434 	movhi	r17,16
 5090b34:	8c7fffc4 	addi	r17,r17,-1
 5090b38:	1081ffcc 	andi	r2,r2,2047
 5090b3c:	3011883a 	mov	r8,r6
 5090b40:	3c62703a 	and	r17,r7,r17
 5090b44:	b5c03fcc 	andi	r23,r22,255
 5090b48:	10006c26 	beq	r2,zero,5090cfc <__divdf3+0x24c>
 5090b4c:	00c1ffc4 	movi	r3,2047
 5090b50:	10c06426 	beq	r2,r3,5090ce4 <__divdf3+0x234>
 5090b54:	88c00434 	orhi	r3,r17,16
 5090b58:	180690fa 	slli	r3,r3,3
 5090b5c:	3022d77a 	srli	r17,r6,29
 5090b60:	301090fa 	slli	r8,r6,3
 5090b64:	10bf0044 	addi	r2,r2,-1023
 5090b68:	88e2b03a 	or	r17,r17,r3
 5090b6c:	000f883a 	mov	r7,zero
 5090b70:	a58cf03a 	xor	r6,r20,r22
 5090b74:	3cc8b03a 	or	r4,r7,r19
 5090b78:	a8abc83a 	sub	r21,r21,r2
 5090b7c:	008003c4 	movi	r2,15
 5090b80:	3007883a 	mov	r3,r6
 5090b84:	34c03fcc 	andi	r19,r6,255
 5090b88:	11009036 	bltu	r2,r4,5090dcc <__divdf3+0x31c>
 5090b8c:	200890ba 	slli	r4,r4,2
 5090b90:	00814274 	movhi	r2,1289
 5090b94:	1082e904 	addi	r2,r2,2980
 5090b98:	2089883a 	add	r4,r4,r2
 5090b9c:	20800017 	ldw	r2,0(r4)
 5090ba0:	1000683a 	jmp	r2
 5090ba4:	05090dcc 	andi	r20,zero,9271
 5090ba8:	05090c1c 	xori	r20,zero,9264
 5090bac:	05090dbc 	xorhi	r20,zero,9270
 5090bb0:	05090c10 	cmplti	r20,zero,9264
 5090bb4:	05090dbc 	xorhi	r20,zero,9270
 5090bb8:	05090d90 	cmplti	r20,zero,9270
 5090bbc:	05090dbc 	xorhi	r20,zero,9270
 5090bc0:	05090c10 	cmplti	r20,zero,9264
 5090bc4:	05090c1c 	xori	r20,zero,9264
 5090bc8:	05090c1c 	xori	r20,zero,9264
 5090bcc:	05090d90 	cmplti	r20,zero,9270
 5090bd0:	05090c10 	cmplti	r20,zero,9264
 5090bd4:	05090c00 	call	5090c0 <__alt_mem_sdram+0x5090c0>
 5090bd8:	05090c00 	call	5090c0 <__alt_mem_sdram+0x5090c0>
 5090bdc:	05090c00 	call	5090c0 <__alt_mem_sdram+0x5090c0>
 5090be0:	050910b0 	cmpltui	r20,zero,9282
 5090be4:	2404b03a 	or	r2,r4,r16
 5090be8:	1000661e 	bne	r2,zero,5090d84 <__divdf3+0x2d4>
 5090bec:	04c00204 	movi	r19,8
 5090bf0:	0021883a 	mov	r16,zero
 5090bf4:	0025883a 	mov	r18,zero
 5090bf8:	02400084 	movi	r9,2
 5090bfc:	003fca06 	br	5090b28 <__alt_data_end+0xfffc2928>
 5090c00:	8023883a 	mov	r17,r16
 5090c04:	9011883a 	mov	r8,r18
 5090c08:	e02f883a 	mov	r23,fp
 5090c0c:	480f883a 	mov	r7,r9
 5090c10:	00800084 	movi	r2,2
 5090c14:	3881311e 	bne	r7,r2,50910dc <__divdf3+0x62c>
 5090c18:	b827883a 	mov	r19,r23
 5090c1c:	98c0004c 	andi	r3,r19,1
 5090c20:	0081ffc4 	movi	r2,2047
 5090c24:	000b883a 	mov	r5,zero
 5090c28:	0025883a 	mov	r18,zero
 5090c2c:	1004953a 	slli	r2,r2,20
 5090c30:	18c03fcc 	andi	r3,r3,255
 5090c34:	04400434 	movhi	r17,16
 5090c38:	8c7fffc4 	addi	r17,r17,-1
 5090c3c:	180697fa 	slli	r3,r3,31
 5090c40:	2c4a703a 	and	r5,r5,r17
 5090c44:	288ab03a 	or	r5,r5,r2
 5090c48:	28c6b03a 	or	r3,r5,r3
 5090c4c:	9005883a 	mov	r2,r18
 5090c50:	dfc00d17 	ldw	ra,52(sp)
 5090c54:	df000c17 	ldw	fp,48(sp)
 5090c58:	ddc00b17 	ldw	r23,44(sp)
 5090c5c:	dd800a17 	ldw	r22,40(sp)
 5090c60:	dd400917 	ldw	r21,36(sp)
 5090c64:	dd000817 	ldw	r20,32(sp)
 5090c68:	dcc00717 	ldw	r19,28(sp)
 5090c6c:	dc800617 	ldw	r18,24(sp)
 5090c70:	dc400517 	ldw	r17,20(sp)
 5090c74:	dc000417 	ldw	r16,16(sp)
 5090c78:	dec00e04 	addi	sp,sp,56
 5090c7c:	f800283a 	ret
 5090c80:	2404b03a 	or	r2,r4,r16
 5090c84:	2027883a 	mov	r19,r4
 5090c88:	10003926 	beq	r2,zero,5090d70 <__divdf3+0x2c0>
 5090c8c:	80012e26 	beq	r16,zero,5091148 <__divdf3+0x698>
 5090c90:	8009883a 	mov	r4,r16
 5090c94:	d9800315 	stw	r6,12(sp)
 5090c98:	d9c00215 	stw	r7,8(sp)
 5090c9c:	50928080 	call	5092808 <__clzsi2>
 5090ca0:	d9800317 	ldw	r6,12(sp)
 5090ca4:	d9c00217 	ldw	r7,8(sp)
 5090ca8:	113ffd44 	addi	r4,r2,-11
 5090cac:	00c00704 	movi	r3,28
 5090cb0:	19012116 	blt	r3,r4,5091138 <__divdf3+0x688>
 5090cb4:	00c00744 	movi	r3,29
 5090cb8:	147ffe04 	addi	r17,r2,-8
 5090cbc:	1907c83a 	sub	r3,r3,r4
 5090cc0:	8460983a 	sll	r16,r16,r17
 5090cc4:	98c6d83a 	srl	r3,r19,r3
 5090cc8:	9c64983a 	sll	r18,r19,r17
 5090ccc:	1c20b03a 	or	r16,r3,r16
 5090cd0:	1080fcc4 	addi	r2,r2,1011
 5090cd4:	00abc83a 	sub	r21,zero,r2
 5090cd8:	0027883a 	mov	r19,zero
 5090cdc:	0013883a 	mov	r9,zero
 5090ce0:	003f9106 	br	5090b28 <__alt_data_end+0xfffc2928>
 5090ce4:	3446b03a 	or	r3,r6,r17
 5090ce8:	18001f1e 	bne	r3,zero,5090d68 <__divdf3+0x2b8>
 5090cec:	0023883a 	mov	r17,zero
 5090cf0:	0011883a 	mov	r8,zero
 5090cf4:	01c00084 	movi	r7,2
 5090cf8:	003f9d06 	br	5090b70 <__alt_data_end+0xfffc2970>
 5090cfc:	3446b03a 	or	r3,r6,r17
 5090d00:	18001526 	beq	r3,zero,5090d58 <__divdf3+0x2a8>
 5090d04:	88011b26 	beq	r17,zero,5091174 <__divdf3+0x6c4>
 5090d08:	8809883a 	mov	r4,r17
 5090d0c:	d9800315 	stw	r6,12(sp)
 5090d10:	da400115 	stw	r9,4(sp)
 5090d14:	50928080 	call	5092808 <__clzsi2>
 5090d18:	d9800317 	ldw	r6,12(sp)
 5090d1c:	da400117 	ldw	r9,4(sp)
 5090d20:	113ffd44 	addi	r4,r2,-11
 5090d24:	00c00704 	movi	r3,28
 5090d28:	19010e16 	blt	r3,r4,5091164 <__divdf3+0x6b4>
 5090d2c:	00c00744 	movi	r3,29
 5090d30:	123ffe04 	addi	r8,r2,-8
 5090d34:	1907c83a 	sub	r3,r3,r4
 5090d38:	8a22983a 	sll	r17,r17,r8
 5090d3c:	30c6d83a 	srl	r3,r6,r3
 5090d40:	3210983a 	sll	r8,r6,r8
 5090d44:	1c62b03a 	or	r17,r3,r17
 5090d48:	1080fcc4 	addi	r2,r2,1011
 5090d4c:	0085c83a 	sub	r2,zero,r2
 5090d50:	000f883a 	mov	r7,zero
 5090d54:	003f8606 	br	5090b70 <__alt_data_end+0xfffc2970>
 5090d58:	0023883a 	mov	r17,zero
 5090d5c:	0011883a 	mov	r8,zero
 5090d60:	01c00044 	movi	r7,1
 5090d64:	003f8206 	br	5090b70 <__alt_data_end+0xfffc2970>
 5090d68:	01c000c4 	movi	r7,3
 5090d6c:	003f8006 	br	5090b70 <__alt_data_end+0xfffc2970>
 5090d70:	04c00104 	movi	r19,4
 5090d74:	0021883a 	mov	r16,zero
 5090d78:	0025883a 	mov	r18,zero
 5090d7c:	02400044 	movi	r9,1
 5090d80:	003f6906 	br	5090b28 <__alt_data_end+0xfffc2928>
 5090d84:	04c00304 	movi	r19,12
 5090d88:	024000c4 	movi	r9,3
 5090d8c:	003f6606 	br	5090b28 <__alt_data_end+0xfffc2928>
 5090d90:	01400434 	movhi	r5,16
 5090d94:	0007883a 	mov	r3,zero
 5090d98:	297fffc4 	addi	r5,r5,-1
 5090d9c:	04bfffc4 	movi	r18,-1
 5090da0:	0081ffc4 	movi	r2,2047
 5090da4:	003fa106 	br	5090c2c <__alt_data_end+0xfffc2a2c>
 5090da8:	00c00044 	movi	r3,1
 5090dac:	1887c83a 	sub	r3,r3,r2
 5090db0:	01000e04 	movi	r4,56
 5090db4:	20c1210e 	bge	r4,r3,509123c <__divdf3+0x78c>
 5090db8:	98c0004c 	andi	r3,r19,1
 5090dbc:	0005883a 	mov	r2,zero
 5090dc0:	000b883a 	mov	r5,zero
 5090dc4:	0025883a 	mov	r18,zero
 5090dc8:	003f9806 	br	5090c2c <__alt_data_end+0xfffc2a2c>
 5090dcc:	8c00fd36 	bltu	r17,r16,50911c4 <__divdf3+0x714>
 5090dd0:	8440fb26 	beq	r16,r17,50911c0 <__divdf3+0x710>
 5090dd4:	8007883a 	mov	r3,r16
 5090dd8:	ad7fffc4 	addi	r21,r21,-1
 5090ddc:	0021883a 	mov	r16,zero
 5090de0:	4004d63a 	srli	r2,r8,24
 5090de4:	8822923a 	slli	r17,r17,8
 5090de8:	1809883a 	mov	r4,r3
 5090dec:	402c923a 	slli	r22,r8,8
 5090df0:	88b8b03a 	or	fp,r17,r2
 5090df4:	e028d43a 	srli	r20,fp,16
 5090df8:	d8c00015 	stw	r3,0(sp)
 5090dfc:	e5ffffcc 	andi	r23,fp,65535
 5090e00:	a00b883a 	mov	r5,r20
 5090e04:	50828780 	call	5082878 <__udivsi3>
 5090e08:	d8c00017 	ldw	r3,0(sp)
 5090e0c:	a00b883a 	mov	r5,r20
 5090e10:	d8800315 	stw	r2,12(sp)
 5090e14:	1809883a 	mov	r4,r3
 5090e18:	50828dc0 	call	50828dc <__umodsi3>
 5090e1c:	d9800317 	ldw	r6,12(sp)
 5090e20:	1006943a 	slli	r3,r2,16
 5090e24:	9004d43a 	srli	r2,r18,16
 5090e28:	b9a3383a 	mul	r17,r23,r6
 5090e2c:	10c4b03a 	or	r2,r2,r3
 5090e30:	1440062e 	bgeu	r2,r17,5090e4c <__divdf3+0x39c>
 5090e34:	1705883a 	add	r2,r2,fp
 5090e38:	30ffffc4 	addi	r3,r6,-1
 5090e3c:	1700ee36 	bltu	r2,fp,50911f8 <__divdf3+0x748>
 5090e40:	1440ed2e 	bgeu	r2,r17,50911f8 <__divdf3+0x748>
 5090e44:	31bfff84 	addi	r6,r6,-2
 5090e48:	1705883a 	add	r2,r2,fp
 5090e4c:	1463c83a 	sub	r17,r2,r17
 5090e50:	a00b883a 	mov	r5,r20
 5090e54:	8809883a 	mov	r4,r17
 5090e58:	d9800315 	stw	r6,12(sp)
 5090e5c:	50828780 	call	5082878 <__udivsi3>
 5090e60:	a00b883a 	mov	r5,r20
 5090e64:	8809883a 	mov	r4,r17
 5090e68:	d8800215 	stw	r2,8(sp)
 5090e6c:	50828dc0 	call	50828dc <__umodsi3>
 5090e70:	d9c00217 	ldw	r7,8(sp)
 5090e74:	1004943a 	slli	r2,r2,16
 5090e78:	94bfffcc 	andi	r18,r18,65535
 5090e7c:	b9d1383a 	mul	r8,r23,r7
 5090e80:	90a4b03a 	or	r18,r18,r2
 5090e84:	d9800317 	ldw	r6,12(sp)
 5090e88:	9200062e 	bgeu	r18,r8,5090ea4 <__divdf3+0x3f4>
 5090e8c:	9725883a 	add	r18,r18,fp
 5090e90:	38bfffc4 	addi	r2,r7,-1
 5090e94:	9700d636 	bltu	r18,fp,50911f0 <__divdf3+0x740>
 5090e98:	9200d52e 	bgeu	r18,r8,50911f0 <__divdf3+0x740>
 5090e9c:	39ffff84 	addi	r7,r7,-2
 5090ea0:	9725883a 	add	r18,r18,fp
 5090ea4:	3004943a 	slli	r2,r6,16
 5090ea8:	b012d43a 	srli	r9,r22,16
 5090eac:	b1bfffcc 	andi	r6,r22,65535
 5090eb0:	11e2b03a 	or	r17,r2,r7
 5090eb4:	8806d43a 	srli	r3,r17,16
 5090eb8:	893fffcc 	andi	r4,r17,65535
 5090ebc:	218b383a 	mul	r5,r4,r6
 5090ec0:	30c5383a 	mul	r2,r6,r3
 5090ec4:	2249383a 	mul	r4,r4,r9
 5090ec8:	280ed43a 	srli	r7,r5,16
 5090ecc:	9225c83a 	sub	r18,r18,r8
 5090ed0:	2089883a 	add	r4,r4,r2
 5090ed4:	3909883a 	add	r4,r7,r4
 5090ed8:	1a47383a 	mul	r3,r3,r9
 5090edc:	2080022e 	bgeu	r4,r2,5090ee8 <__divdf3+0x438>
 5090ee0:	00800074 	movhi	r2,1
 5090ee4:	1887883a 	add	r3,r3,r2
 5090ee8:	2004d43a 	srli	r2,r4,16
 5090eec:	2008943a 	slli	r4,r4,16
 5090ef0:	297fffcc 	andi	r5,r5,65535
 5090ef4:	10c7883a 	add	r3,r2,r3
 5090ef8:	2149883a 	add	r4,r4,r5
 5090efc:	90c0a536 	bltu	r18,r3,5091194 <__divdf3+0x6e4>
 5090f00:	90c0bf26 	beq	r18,r3,5091200 <__divdf3+0x750>
 5090f04:	90c7c83a 	sub	r3,r18,r3
 5090f08:	810fc83a 	sub	r7,r16,r4
 5090f0c:	81e5803a 	cmpltu	r18,r16,r7
 5090f10:	1ca5c83a 	sub	r18,r3,r18
 5090f14:	e480c126 	beq	fp,r18,509121c <__divdf3+0x76c>
 5090f18:	a00b883a 	mov	r5,r20
 5090f1c:	9009883a 	mov	r4,r18
 5090f20:	d9800315 	stw	r6,12(sp)
 5090f24:	d9c00215 	stw	r7,8(sp)
 5090f28:	da400115 	stw	r9,4(sp)
 5090f2c:	50828780 	call	5082878 <__udivsi3>
 5090f30:	a00b883a 	mov	r5,r20
 5090f34:	9009883a 	mov	r4,r18
 5090f38:	d8800015 	stw	r2,0(sp)
 5090f3c:	50828dc0 	call	50828dc <__umodsi3>
 5090f40:	d9c00217 	ldw	r7,8(sp)
 5090f44:	da000017 	ldw	r8,0(sp)
 5090f48:	1006943a 	slli	r3,r2,16
 5090f4c:	3804d43a 	srli	r2,r7,16
 5090f50:	ba21383a 	mul	r16,r23,r8
 5090f54:	d9800317 	ldw	r6,12(sp)
 5090f58:	10c4b03a 	or	r2,r2,r3
 5090f5c:	da400117 	ldw	r9,4(sp)
 5090f60:	1400062e 	bgeu	r2,r16,5090f7c <__divdf3+0x4cc>
 5090f64:	1705883a 	add	r2,r2,fp
 5090f68:	40ffffc4 	addi	r3,r8,-1
 5090f6c:	1700ad36 	bltu	r2,fp,5091224 <__divdf3+0x774>
 5090f70:	1400ac2e 	bgeu	r2,r16,5091224 <__divdf3+0x774>
 5090f74:	423fff84 	addi	r8,r8,-2
 5090f78:	1705883a 	add	r2,r2,fp
 5090f7c:	1421c83a 	sub	r16,r2,r16
 5090f80:	a00b883a 	mov	r5,r20
 5090f84:	8009883a 	mov	r4,r16
 5090f88:	d9800315 	stw	r6,12(sp)
 5090f8c:	d9c00215 	stw	r7,8(sp)
 5090f90:	da000015 	stw	r8,0(sp)
 5090f94:	da400115 	stw	r9,4(sp)
 5090f98:	50828780 	call	5082878 <__udivsi3>
 5090f9c:	8009883a 	mov	r4,r16
 5090fa0:	a00b883a 	mov	r5,r20
 5090fa4:	1025883a 	mov	r18,r2
 5090fa8:	50828dc0 	call	50828dc <__umodsi3>
 5090fac:	d9c00217 	ldw	r7,8(sp)
 5090fb0:	1004943a 	slli	r2,r2,16
 5090fb4:	bcaf383a 	mul	r23,r23,r18
 5090fb8:	393fffcc 	andi	r4,r7,65535
 5090fbc:	2088b03a 	or	r4,r4,r2
 5090fc0:	d9800317 	ldw	r6,12(sp)
 5090fc4:	da000017 	ldw	r8,0(sp)
 5090fc8:	da400117 	ldw	r9,4(sp)
 5090fcc:	25c0062e 	bgeu	r4,r23,5090fe8 <__divdf3+0x538>
 5090fd0:	2709883a 	add	r4,r4,fp
 5090fd4:	90bfffc4 	addi	r2,r18,-1
 5090fd8:	27009436 	bltu	r4,fp,509122c <__divdf3+0x77c>
 5090fdc:	25c0932e 	bgeu	r4,r23,509122c <__divdf3+0x77c>
 5090fe0:	94bfff84 	addi	r18,r18,-2
 5090fe4:	2709883a 	add	r4,r4,fp
 5090fe8:	4004943a 	slli	r2,r8,16
 5090fec:	25efc83a 	sub	r23,r4,r23
 5090ff0:	1490b03a 	or	r8,r2,r18
 5090ff4:	4008d43a 	srli	r4,r8,16
 5090ff8:	40ffffcc 	andi	r3,r8,65535
 5090ffc:	30c5383a 	mul	r2,r6,r3
 5091000:	1a47383a 	mul	r3,r3,r9
 5091004:	310d383a 	mul	r6,r6,r4
 5091008:	100ad43a 	srli	r5,r2,16
 509100c:	4913383a 	mul	r9,r9,r4
 5091010:	1987883a 	add	r3,r3,r6
 5091014:	28c7883a 	add	r3,r5,r3
 5091018:	1980022e 	bgeu	r3,r6,5091024 <__divdf3+0x574>
 509101c:	01000074 	movhi	r4,1
 5091020:	4913883a 	add	r9,r9,r4
 5091024:	1808d43a 	srli	r4,r3,16
 5091028:	1806943a 	slli	r3,r3,16
 509102c:	10bfffcc 	andi	r2,r2,65535
 5091030:	2253883a 	add	r9,r4,r9
 5091034:	1887883a 	add	r3,r3,r2
 5091038:	ba403836 	bltu	r23,r9,509111c <__divdf3+0x66c>
 509103c:	ba403626 	beq	r23,r9,5091118 <__divdf3+0x668>
 5091040:	42000054 	ori	r8,r8,1
 5091044:	a880ffc4 	addi	r2,r21,1023
 5091048:	00bf570e 	bge	zero,r2,5090da8 <__alt_data_end+0xfffc2ba8>
 509104c:	40c001cc 	andi	r3,r8,7
 5091050:	18000726 	beq	r3,zero,5091070 <__divdf3+0x5c0>
 5091054:	40c003cc 	andi	r3,r8,15
 5091058:	01000104 	movi	r4,4
 509105c:	19000426 	beq	r3,r4,5091070 <__divdf3+0x5c0>
 5091060:	4107883a 	add	r3,r8,r4
 5091064:	1a11803a 	cmpltu	r8,r3,r8
 5091068:	8a23883a 	add	r17,r17,r8
 509106c:	1811883a 	mov	r8,r3
 5091070:	88c0402c 	andhi	r3,r17,256
 5091074:	18000426 	beq	r3,zero,5091088 <__divdf3+0x5d8>
 5091078:	00ffc034 	movhi	r3,65280
 509107c:	18ffffc4 	addi	r3,r3,-1
 5091080:	a8810004 	addi	r2,r21,1024
 5091084:	88e2703a 	and	r17,r17,r3
 5091088:	00c1ff84 	movi	r3,2046
 509108c:	18bee316 	blt	r3,r2,5090c1c <__alt_data_end+0xfffc2a1c>
 5091090:	8824977a 	slli	r18,r17,29
 5091094:	4010d0fa 	srli	r8,r8,3
 5091098:	8822927a 	slli	r17,r17,9
 509109c:	1081ffcc 	andi	r2,r2,2047
 50910a0:	9224b03a 	or	r18,r18,r8
 50910a4:	880ad33a 	srli	r5,r17,12
 50910a8:	98c0004c 	andi	r3,r19,1
 50910ac:	003edf06 	br	5090c2c <__alt_data_end+0xfffc2a2c>
 50910b0:	8080022c 	andhi	r2,r16,8
 50910b4:	10001226 	beq	r2,zero,5091100 <__divdf3+0x650>
 50910b8:	8880022c 	andhi	r2,r17,8
 50910bc:	1000101e 	bne	r2,zero,5091100 <__divdf3+0x650>
 50910c0:	00800434 	movhi	r2,16
 50910c4:	89400234 	orhi	r5,r17,8
 50910c8:	10bfffc4 	addi	r2,r2,-1
 50910cc:	b007883a 	mov	r3,r22
 50910d0:	288a703a 	and	r5,r5,r2
 50910d4:	4025883a 	mov	r18,r8
 50910d8:	003f3106 	br	5090da0 <__alt_data_end+0xfffc2ba0>
 50910dc:	008000c4 	movi	r2,3
 50910e0:	3880a626 	beq	r7,r2,509137c <__divdf3+0x8cc>
 50910e4:	00800044 	movi	r2,1
 50910e8:	3880521e 	bne	r7,r2,5091234 <__divdf3+0x784>
 50910ec:	b807883a 	mov	r3,r23
 50910f0:	0005883a 	mov	r2,zero
 50910f4:	000b883a 	mov	r5,zero
 50910f8:	0025883a 	mov	r18,zero
 50910fc:	003ecb06 	br	5090c2c <__alt_data_end+0xfffc2a2c>
 5091100:	00800434 	movhi	r2,16
 5091104:	81400234 	orhi	r5,r16,8
 5091108:	10bfffc4 	addi	r2,r2,-1
 509110c:	a007883a 	mov	r3,r20
 5091110:	288a703a 	and	r5,r5,r2
 5091114:	003f2206 	br	5090da0 <__alt_data_end+0xfffc2ba0>
 5091118:	183fca26 	beq	r3,zero,5091044 <__alt_data_end+0xfffc2e44>
 509111c:	e5ef883a 	add	r23,fp,r23
 5091120:	40bfffc4 	addi	r2,r8,-1
 5091124:	bf00392e 	bgeu	r23,fp,509120c <__divdf3+0x75c>
 5091128:	1011883a 	mov	r8,r2
 509112c:	ba7fc41e 	bne	r23,r9,5091040 <__alt_data_end+0xfffc2e40>
 5091130:	b0ffc31e 	bne	r22,r3,5091040 <__alt_data_end+0xfffc2e40>
 5091134:	003fc306 	br	5091044 <__alt_data_end+0xfffc2e44>
 5091138:	143ff604 	addi	r16,r2,-40
 509113c:	9c20983a 	sll	r16,r19,r16
 5091140:	0025883a 	mov	r18,zero
 5091144:	003ee206 	br	5090cd0 <__alt_data_end+0xfffc2ad0>
 5091148:	d9800315 	stw	r6,12(sp)
 509114c:	d9c00215 	stw	r7,8(sp)
 5091150:	50928080 	call	5092808 <__clzsi2>
 5091154:	10800804 	addi	r2,r2,32
 5091158:	d9c00217 	ldw	r7,8(sp)
 509115c:	d9800317 	ldw	r6,12(sp)
 5091160:	003ed106 	br	5090ca8 <__alt_data_end+0xfffc2aa8>
 5091164:	147ff604 	addi	r17,r2,-40
 5091168:	3462983a 	sll	r17,r6,r17
 509116c:	0011883a 	mov	r8,zero
 5091170:	003ef506 	br	5090d48 <__alt_data_end+0xfffc2b48>
 5091174:	3009883a 	mov	r4,r6
 5091178:	d9800315 	stw	r6,12(sp)
 509117c:	da400115 	stw	r9,4(sp)
 5091180:	50928080 	call	5092808 <__clzsi2>
 5091184:	10800804 	addi	r2,r2,32
 5091188:	da400117 	ldw	r9,4(sp)
 509118c:	d9800317 	ldw	r6,12(sp)
 5091190:	003ee306 	br	5090d20 <__alt_data_end+0xfffc2b20>
 5091194:	85a1883a 	add	r16,r16,r22
 5091198:	8585803a 	cmpltu	r2,r16,r22
 509119c:	1705883a 	add	r2,r2,fp
 50911a0:	14a5883a 	add	r18,r2,r18
 50911a4:	88bfffc4 	addi	r2,r17,-1
 50911a8:	e4800c2e 	bgeu	fp,r18,50911dc <__divdf3+0x72c>
 50911ac:	90c03e36 	bltu	r18,r3,50912a8 <__divdf3+0x7f8>
 50911b0:	1c806926 	beq	r3,r18,5091358 <__divdf3+0x8a8>
 50911b4:	90c7c83a 	sub	r3,r18,r3
 50911b8:	1023883a 	mov	r17,r2
 50911bc:	003f5206 	br	5090f08 <__alt_data_end+0xfffc2d08>
 50911c0:	923f0436 	bltu	r18,r8,5090dd4 <__alt_data_end+0xfffc2bd4>
 50911c4:	800897fa 	slli	r4,r16,31
 50911c8:	9004d07a 	srli	r2,r18,1
 50911cc:	8006d07a 	srli	r3,r16,1
 50911d0:	902097fa 	slli	r16,r18,31
 50911d4:	20a4b03a 	or	r18,r4,r2
 50911d8:	003f0106 	br	5090de0 <__alt_data_end+0xfffc2be0>
 50911dc:	e4bff51e 	bne	fp,r18,50911b4 <__alt_data_end+0xfffc2fb4>
 50911e0:	85bff22e 	bgeu	r16,r22,50911ac <__alt_data_end+0xfffc2fac>
 50911e4:	e0c7c83a 	sub	r3,fp,r3
 50911e8:	1023883a 	mov	r17,r2
 50911ec:	003f4606 	br	5090f08 <__alt_data_end+0xfffc2d08>
 50911f0:	100f883a 	mov	r7,r2
 50911f4:	003f2b06 	br	5090ea4 <__alt_data_end+0xfffc2ca4>
 50911f8:	180d883a 	mov	r6,r3
 50911fc:	003f1306 	br	5090e4c <__alt_data_end+0xfffc2c4c>
 5091200:	813fe436 	bltu	r16,r4,5091194 <__alt_data_end+0xfffc2f94>
 5091204:	0007883a 	mov	r3,zero
 5091208:	003f3f06 	br	5090f08 <__alt_data_end+0xfffc2d08>
 509120c:	ba402c36 	bltu	r23,r9,50912c0 <__divdf3+0x810>
 5091210:	4dc05426 	beq	r9,r23,5091364 <__divdf3+0x8b4>
 5091214:	1011883a 	mov	r8,r2
 5091218:	003f8906 	br	5091040 <__alt_data_end+0xfffc2e40>
 509121c:	023fffc4 	movi	r8,-1
 5091220:	003f8806 	br	5091044 <__alt_data_end+0xfffc2e44>
 5091224:	1811883a 	mov	r8,r3
 5091228:	003f5406 	br	5090f7c <__alt_data_end+0xfffc2d7c>
 509122c:	1025883a 	mov	r18,r2
 5091230:	003f6d06 	br	5090fe8 <__alt_data_end+0xfffc2de8>
 5091234:	b827883a 	mov	r19,r23
 5091238:	003f8206 	br	5091044 <__alt_data_end+0xfffc2e44>
 509123c:	010007c4 	movi	r4,31
 5091240:	20c02616 	blt	r4,r3,50912dc <__divdf3+0x82c>
 5091244:	00800804 	movi	r2,32
 5091248:	10c5c83a 	sub	r2,r2,r3
 509124c:	888a983a 	sll	r5,r17,r2
 5091250:	40c8d83a 	srl	r4,r8,r3
 5091254:	4084983a 	sll	r2,r8,r2
 5091258:	88e2d83a 	srl	r17,r17,r3
 509125c:	2906b03a 	or	r3,r5,r4
 5091260:	1004c03a 	cmpne	r2,r2,zero
 5091264:	1886b03a 	or	r3,r3,r2
 5091268:	188001cc 	andi	r2,r3,7
 509126c:	10000726 	beq	r2,zero,509128c <__divdf3+0x7dc>
 5091270:	188003cc 	andi	r2,r3,15
 5091274:	01000104 	movi	r4,4
 5091278:	11000426 	beq	r2,r4,509128c <__divdf3+0x7dc>
 509127c:	1805883a 	mov	r2,r3
 5091280:	10c00104 	addi	r3,r2,4
 5091284:	1885803a 	cmpltu	r2,r3,r2
 5091288:	88a3883a 	add	r17,r17,r2
 509128c:	8880202c 	andhi	r2,r17,128
 5091290:	10002726 	beq	r2,zero,5091330 <__divdf3+0x880>
 5091294:	98c0004c 	andi	r3,r19,1
 5091298:	00800044 	movi	r2,1
 509129c:	000b883a 	mov	r5,zero
 50912a0:	0025883a 	mov	r18,zero
 50912a4:	003e6106 	br	5090c2c <__alt_data_end+0xfffc2a2c>
 50912a8:	85a1883a 	add	r16,r16,r22
 50912ac:	8585803a 	cmpltu	r2,r16,r22
 50912b0:	1705883a 	add	r2,r2,fp
 50912b4:	14a5883a 	add	r18,r2,r18
 50912b8:	8c7fff84 	addi	r17,r17,-2
 50912bc:	003f1106 	br	5090f04 <__alt_data_end+0xfffc2d04>
 50912c0:	b589883a 	add	r4,r22,r22
 50912c4:	25ad803a 	cmpltu	r22,r4,r22
 50912c8:	b739883a 	add	fp,r22,fp
 50912cc:	40bfff84 	addi	r2,r8,-2
 50912d0:	bf2f883a 	add	r23,r23,fp
 50912d4:	202d883a 	mov	r22,r4
 50912d8:	003f9306 	br	5091128 <__alt_data_end+0xfffc2f28>
 50912dc:	013ff844 	movi	r4,-31
 50912e0:	2085c83a 	sub	r2,r4,r2
 50912e4:	8888d83a 	srl	r4,r17,r2
 50912e8:	00800804 	movi	r2,32
 50912ec:	18802126 	beq	r3,r2,5091374 <__divdf3+0x8c4>
 50912f0:	00801004 	movi	r2,64
 50912f4:	10c5c83a 	sub	r2,r2,r3
 50912f8:	8884983a 	sll	r2,r17,r2
 50912fc:	1204b03a 	or	r2,r2,r8
 5091300:	1004c03a 	cmpne	r2,r2,zero
 5091304:	2084b03a 	or	r2,r4,r2
 5091308:	144001cc 	andi	r17,r2,7
 509130c:	88000d1e 	bne	r17,zero,5091344 <__divdf3+0x894>
 5091310:	000b883a 	mov	r5,zero
 5091314:	1024d0fa 	srli	r18,r2,3
 5091318:	98c0004c 	andi	r3,r19,1
 509131c:	0005883a 	mov	r2,zero
 5091320:	9464b03a 	or	r18,r18,r17
 5091324:	003e4106 	br	5090c2c <__alt_data_end+0xfffc2a2c>
 5091328:	1007883a 	mov	r3,r2
 509132c:	0023883a 	mov	r17,zero
 5091330:	880a927a 	slli	r5,r17,9
 5091334:	1805883a 	mov	r2,r3
 5091338:	8822977a 	slli	r17,r17,29
 509133c:	280ad33a 	srli	r5,r5,12
 5091340:	003ff406 	br	5091314 <__alt_data_end+0xfffc3114>
 5091344:	10c003cc 	andi	r3,r2,15
 5091348:	01000104 	movi	r4,4
 509134c:	193ff626 	beq	r3,r4,5091328 <__alt_data_end+0xfffc3128>
 5091350:	0023883a 	mov	r17,zero
 5091354:	003fca06 	br	5091280 <__alt_data_end+0xfffc3080>
 5091358:	813fd336 	bltu	r16,r4,50912a8 <__alt_data_end+0xfffc30a8>
 509135c:	1023883a 	mov	r17,r2
 5091360:	003fa806 	br	5091204 <__alt_data_end+0xfffc3004>
 5091364:	b0ffd636 	bltu	r22,r3,50912c0 <__alt_data_end+0xfffc30c0>
 5091368:	1011883a 	mov	r8,r2
 509136c:	b0ff341e 	bne	r22,r3,5091040 <__alt_data_end+0xfffc2e40>
 5091370:	003f3406 	br	5091044 <__alt_data_end+0xfffc2e44>
 5091374:	0005883a 	mov	r2,zero
 5091378:	003fe006 	br	50912fc <__alt_data_end+0xfffc30fc>
 509137c:	00800434 	movhi	r2,16
 5091380:	89400234 	orhi	r5,r17,8
 5091384:	10bfffc4 	addi	r2,r2,-1
 5091388:	b807883a 	mov	r3,r23
 509138c:	288a703a 	and	r5,r5,r2
 5091390:	4025883a 	mov	r18,r8
 5091394:	003e8206 	br	5090da0 <__alt_data_end+0xfffc2ba0>

05091398 <__eqdf2>:
 5091398:	2804d53a 	srli	r2,r5,20
 509139c:	3806d53a 	srli	r3,r7,20
 50913a0:	02000434 	movhi	r8,16
 50913a4:	423fffc4 	addi	r8,r8,-1
 50913a8:	1081ffcc 	andi	r2,r2,2047
 50913ac:	0281ffc4 	movi	r10,2047
 50913b0:	2a12703a 	and	r9,r5,r8
 50913b4:	18c1ffcc 	andi	r3,r3,2047
 50913b8:	3a10703a 	and	r8,r7,r8
 50913bc:	280ad7fa 	srli	r5,r5,31
 50913c0:	380ed7fa 	srli	r7,r7,31
 50913c4:	12801026 	beq	r2,r10,5091408 <__eqdf2+0x70>
 50913c8:	0281ffc4 	movi	r10,2047
 50913cc:	1a800a26 	beq	r3,r10,50913f8 <__eqdf2+0x60>
 50913d0:	10c00226 	beq	r2,r3,50913dc <__eqdf2+0x44>
 50913d4:	00800044 	movi	r2,1
 50913d8:	f800283a 	ret
 50913dc:	4a3ffd1e 	bne	r9,r8,50913d4 <__alt_data_end+0xfffc31d4>
 50913e0:	21bffc1e 	bne	r4,r6,50913d4 <__alt_data_end+0xfffc31d4>
 50913e4:	29c00c26 	beq	r5,r7,5091418 <__eqdf2+0x80>
 50913e8:	103ffa1e 	bne	r2,zero,50913d4 <__alt_data_end+0xfffc31d4>
 50913ec:	2244b03a 	or	r2,r4,r9
 50913f0:	1004c03a 	cmpne	r2,r2,zero
 50913f4:	f800283a 	ret
 50913f8:	3214b03a 	or	r10,r6,r8
 50913fc:	503ff426 	beq	r10,zero,50913d0 <__alt_data_end+0xfffc31d0>
 5091400:	00800044 	movi	r2,1
 5091404:	f800283a 	ret
 5091408:	2254b03a 	or	r10,r4,r9
 509140c:	503fee26 	beq	r10,zero,50913c8 <__alt_data_end+0xfffc31c8>
 5091410:	00800044 	movi	r2,1
 5091414:	f800283a 	ret
 5091418:	0005883a 	mov	r2,zero
 509141c:	f800283a 	ret

05091420 <__gedf2>:
 5091420:	2804d53a 	srli	r2,r5,20
 5091424:	3806d53a 	srli	r3,r7,20
 5091428:	02000434 	movhi	r8,16
 509142c:	423fffc4 	addi	r8,r8,-1
 5091430:	1081ffcc 	andi	r2,r2,2047
 5091434:	0241ffc4 	movi	r9,2047
 5091438:	2a14703a 	and	r10,r5,r8
 509143c:	18c1ffcc 	andi	r3,r3,2047
 5091440:	3a10703a 	and	r8,r7,r8
 5091444:	280ad7fa 	srli	r5,r5,31
 5091448:	380ed7fa 	srli	r7,r7,31
 509144c:	12401d26 	beq	r2,r9,50914c4 <__gedf2+0xa4>
 5091450:	0241ffc4 	movi	r9,2047
 5091454:	1a401226 	beq	r3,r9,50914a0 <__gedf2+0x80>
 5091458:	1000081e 	bne	r2,zero,509147c <__gedf2+0x5c>
 509145c:	2296b03a 	or	r11,r4,r10
 5091460:	5813003a 	cmpeq	r9,r11,zero
 5091464:	1800091e 	bne	r3,zero,509148c <__gedf2+0x6c>
 5091468:	3218b03a 	or	r12,r6,r8
 509146c:	6000071e 	bne	r12,zero,509148c <__gedf2+0x6c>
 5091470:	0005883a 	mov	r2,zero
 5091474:	5800101e 	bne	r11,zero,50914b8 <__gedf2+0x98>
 5091478:	f800283a 	ret
 509147c:	18000c1e 	bne	r3,zero,50914b0 <__gedf2+0x90>
 5091480:	3212b03a 	or	r9,r6,r8
 5091484:	48000c26 	beq	r9,zero,50914b8 <__gedf2+0x98>
 5091488:	0013883a 	mov	r9,zero
 509148c:	39c03fcc 	andi	r7,r7,255
 5091490:	48000826 	beq	r9,zero,50914b4 <__gedf2+0x94>
 5091494:	38000926 	beq	r7,zero,50914bc <__gedf2+0x9c>
 5091498:	00800044 	movi	r2,1
 509149c:	f800283a 	ret
 50914a0:	3212b03a 	or	r9,r6,r8
 50914a4:	483fec26 	beq	r9,zero,5091458 <__alt_data_end+0xfffc3258>
 50914a8:	00bfff84 	movi	r2,-2
 50914ac:	f800283a 	ret
 50914b0:	39c03fcc 	andi	r7,r7,255
 50914b4:	29c00626 	beq	r5,r7,50914d0 <__gedf2+0xb0>
 50914b8:	283ff726 	beq	r5,zero,5091498 <__alt_data_end+0xfffc3298>
 50914bc:	00bfffc4 	movi	r2,-1
 50914c0:	f800283a 	ret
 50914c4:	2292b03a 	or	r9,r4,r10
 50914c8:	483fe126 	beq	r9,zero,5091450 <__alt_data_end+0xfffc3250>
 50914cc:	003ff606 	br	50914a8 <__alt_data_end+0xfffc32a8>
 50914d0:	18bff916 	blt	r3,r2,50914b8 <__alt_data_end+0xfffc32b8>
 50914d4:	10c00316 	blt	r2,r3,50914e4 <__gedf2+0xc4>
 50914d8:	42bff736 	bltu	r8,r10,50914b8 <__alt_data_end+0xfffc32b8>
 50914dc:	52000326 	beq	r10,r8,50914ec <__gedf2+0xcc>
 50914e0:	5200042e 	bgeu	r10,r8,50914f4 <__gedf2+0xd4>
 50914e4:	283fec1e 	bne	r5,zero,5091498 <__alt_data_end+0xfffc3298>
 50914e8:	003ff406 	br	50914bc <__alt_data_end+0xfffc32bc>
 50914ec:	313ff236 	bltu	r6,r4,50914b8 <__alt_data_end+0xfffc32b8>
 50914f0:	21bffc36 	bltu	r4,r6,50914e4 <__alt_data_end+0xfffc32e4>
 50914f4:	0005883a 	mov	r2,zero
 50914f8:	f800283a 	ret

050914fc <__ledf2>:
 50914fc:	2804d53a 	srli	r2,r5,20
 5091500:	3810d53a 	srli	r8,r7,20
 5091504:	00c00434 	movhi	r3,16
 5091508:	18ffffc4 	addi	r3,r3,-1
 509150c:	1081ffcc 	andi	r2,r2,2047
 5091510:	0241ffc4 	movi	r9,2047
 5091514:	28d4703a 	and	r10,r5,r3
 5091518:	4201ffcc 	andi	r8,r8,2047
 509151c:	38c6703a 	and	r3,r7,r3
 5091520:	280ad7fa 	srli	r5,r5,31
 5091524:	380ed7fa 	srli	r7,r7,31
 5091528:	12401f26 	beq	r2,r9,50915a8 <__ledf2+0xac>
 509152c:	0241ffc4 	movi	r9,2047
 5091530:	42401426 	beq	r8,r9,5091584 <__ledf2+0x88>
 5091534:	1000091e 	bne	r2,zero,509155c <__ledf2+0x60>
 5091538:	2296b03a 	or	r11,r4,r10
 509153c:	5813003a 	cmpeq	r9,r11,zero
 5091540:	29403fcc 	andi	r5,r5,255
 5091544:	40000a1e 	bne	r8,zero,5091570 <__ledf2+0x74>
 5091548:	30d8b03a 	or	r12,r6,r3
 509154c:	6000081e 	bne	r12,zero,5091570 <__ledf2+0x74>
 5091550:	0005883a 	mov	r2,zero
 5091554:	5800111e 	bne	r11,zero,509159c <__ledf2+0xa0>
 5091558:	f800283a 	ret
 509155c:	29403fcc 	andi	r5,r5,255
 5091560:	40000c1e 	bne	r8,zero,5091594 <__ledf2+0x98>
 5091564:	30d2b03a 	or	r9,r6,r3
 5091568:	48000c26 	beq	r9,zero,509159c <__ledf2+0xa0>
 509156c:	0013883a 	mov	r9,zero
 5091570:	39c03fcc 	andi	r7,r7,255
 5091574:	48000826 	beq	r9,zero,5091598 <__ledf2+0x9c>
 5091578:	38001126 	beq	r7,zero,50915c0 <__ledf2+0xc4>
 509157c:	00800044 	movi	r2,1
 5091580:	f800283a 	ret
 5091584:	30d2b03a 	or	r9,r6,r3
 5091588:	483fea26 	beq	r9,zero,5091534 <__alt_data_end+0xfffc3334>
 509158c:	00800084 	movi	r2,2
 5091590:	f800283a 	ret
 5091594:	39c03fcc 	andi	r7,r7,255
 5091598:	39400726 	beq	r7,r5,50915b8 <__ledf2+0xbc>
 509159c:	2800081e 	bne	r5,zero,50915c0 <__ledf2+0xc4>
 50915a0:	00800044 	movi	r2,1
 50915a4:	f800283a 	ret
 50915a8:	2292b03a 	or	r9,r4,r10
 50915ac:	483fdf26 	beq	r9,zero,509152c <__alt_data_end+0xfffc332c>
 50915b0:	00800084 	movi	r2,2
 50915b4:	f800283a 	ret
 50915b8:	4080030e 	bge	r8,r2,50915c8 <__ledf2+0xcc>
 50915bc:	383fef26 	beq	r7,zero,509157c <__alt_data_end+0xfffc337c>
 50915c0:	00bfffc4 	movi	r2,-1
 50915c4:	f800283a 	ret
 50915c8:	123feb16 	blt	r2,r8,5091578 <__alt_data_end+0xfffc3378>
 50915cc:	1abff336 	bltu	r3,r10,509159c <__alt_data_end+0xfffc339c>
 50915d0:	50c00326 	beq	r10,r3,50915e0 <__ledf2+0xe4>
 50915d4:	50c0042e 	bgeu	r10,r3,50915e8 <__ledf2+0xec>
 50915d8:	283fe81e 	bne	r5,zero,509157c <__alt_data_end+0xfffc337c>
 50915dc:	003ff806 	br	50915c0 <__alt_data_end+0xfffc33c0>
 50915e0:	313fee36 	bltu	r6,r4,509159c <__alt_data_end+0xfffc339c>
 50915e4:	21bffc36 	bltu	r4,r6,50915d8 <__alt_data_end+0xfffc33d8>
 50915e8:	0005883a 	mov	r2,zero
 50915ec:	f800283a 	ret

050915f0 <__muldf3>:
 50915f0:	defff304 	addi	sp,sp,-52
 50915f4:	2804d53a 	srli	r2,r5,20
 50915f8:	dd800915 	stw	r22,36(sp)
 50915fc:	282cd7fa 	srli	r22,r5,31
 5091600:	dc000315 	stw	r16,12(sp)
 5091604:	04000434 	movhi	r16,16
 5091608:	dd400815 	stw	r21,32(sp)
 509160c:	dc800515 	stw	r18,20(sp)
 5091610:	843fffc4 	addi	r16,r16,-1
 5091614:	dfc00c15 	stw	ra,48(sp)
 5091618:	df000b15 	stw	fp,44(sp)
 509161c:	ddc00a15 	stw	r23,40(sp)
 5091620:	dd000715 	stw	r20,28(sp)
 5091624:	dcc00615 	stw	r19,24(sp)
 5091628:	dc400415 	stw	r17,16(sp)
 509162c:	1481ffcc 	andi	r18,r2,2047
 5091630:	2c20703a 	and	r16,r5,r16
 5091634:	b02b883a 	mov	r21,r22
 5091638:	b2403fcc 	andi	r9,r22,255
 509163c:	90006026 	beq	r18,zero,50917c0 <__muldf3+0x1d0>
 5091640:	0081ffc4 	movi	r2,2047
 5091644:	2029883a 	mov	r20,r4
 5091648:	90803626 	beq	r18,r2,5091724 <__muldf3+0x134>
 509164c:	80800434 	orhi	r2,r16,16
 5091650:	100490fa 	slli	r2,r2,3
 5091654:	2020d77a 	srli	r16,r4,29
 5091658:	202890fa 	slli	r20,r4,3
 509165c:	94bf0044 	addi	r18,r18,-1023
 5091660:	80a0b03a 	or	r16,r16,r2
 5091664:	0027883a 	mov	r19,zero
 5091668:	0039883a 	mov	fp,zero
 509166c:	3804d53a 	srli	r2,r7,20
 5091670:	382ed7fa 	srli	r23,r7,31
 5091674:	04400434 	movhi	r17,16
 5091678:	8c7fffc4 	addi	r17,r17,-1
 509167c:	1081ffcc 	andi	r2,r2,2047
 5091680:	3011883a 	mov	r8,r6
 5091684:	3c62703a 	and	r17,r7,r17
 5091688:	ba803fcc 	andi	r10,r23,255
 509168c:	10006d26 	beq	r2,zero,5091844 <__muldf3+0x254>
 5091690:	00c1ffc4 	movi	r3,2047
 5091694:	10c06526 	beq	r2,r3,509182c <__muldf3+0x23c>
 5091698:	88c00434 	orhi	r3,r17,16
 509169c:	180690fa 	slli	r3,r3,3
 50916a0:	3022d77a 	srli	r17,r6,29
 50916a4:	301090fa 	slli	r8,r6,3
 50916a8:	10bf0044 	addi	r2,r2,-1023
 50916ac:	88e2b03a 	or	r17,r17,r3
 50916b0:	000b883a 	mov	r5,zero
 50916b4:	9085883a 	add	r2,r18,r2
 50916b8:	2cc8b03a 	or	r4,r5,r19
 50916bc:	00c003c4 	movi	r3,15
 50916c0:	bdacf03a 	xor	r22,r23,r22
 50916c4:	12c00044 	addi	r11,r2,1
 50916c8:	19009936 	bltu	r3,r4,5091930 <__muldf3+0x340>
 50916cc:	200890ba 	slli	r4,r4,2
 50916d0:	00c14274 	movhi	r3,1289
 50916d4:	18c5b904 	addi	r3,r3,5860
 50916d8:	20c9883a 	add	r4,r4,r3
 50916dc:	20c00017 	ldw	r3,0(r4)
 50916e0:	1800683a 	jmp	r3
 50916e4:	05091930 	cmpltui	r20,zero,9316
 50916e8:	05091744 	movi	r20,9309
 50916ec:	05091744 	movi	r20,9309
 50916f0:	05091740 	call	509174 <__alt_mem_sdram+0x509174>
 50916f4:	0509190c 	andi	r20,zero,9316
 50916f8:	0509190c 	andi	r20,zero,9316
 50916fc:	050918f4 	movhi	r20,9315
 5091700:	05091740 	call	509174 <__alt_mem_sdram+0x509174>
 5091704:	0509190c 	andi	r20,zero,9316
 5091708:	050918f4 	movhi	r20,9315
 509170c:	0509190c 	andi	r20,zero,9316
 5091710:	05091740 	call	509174 <__alt_mem_sdram+0x509174>
 5091714:	0509191c 	xori	r20,zero,9316
 5091718:	0509191c 	xori	r20,zero,9316
 509171c:	0509191c 	xori	r20,zero,9316
 5091720:	05091b38 	rdprs	r20,zero,9324
 5091724:	2404b03a 	or	r2,r4,r16
 5091728:	10006f1e 	bne	r2,zero,50918e8 <__muldf3+0x2f8>
 509172c:	04c00204 	movi	r19,8
 5091730:	0021883a 	mov	r16,zero
 5091734:	0029883a 	mov	r20,zero
 5091738:	07000084 	movi	fp,2
 509173c:	003fcb06 	br	509166c <__alt_data_end+0xfffc346c>
 5091740:	502d883a 	mov	r22,r10
 5091744:	00800084 	movi	r2,2
 5091748:	28805726 	beq	r5,r2,50918a8 <__muldf3+0x2b8>
 509174c:	008000c4 	movi	r2,3
 5091750:	28816626 	beq	r5,r2,5091cec <__muldf3+0x6fc>
 5091754:	00800044 	movi	r2,1
 5091758:	2881411e 	bne	r5,r2,5091c60 <__muldf3+0x670>
 509175c:	b02b883a 	mov	r21,r22
 5091760:	0005883a 	mov	r2,zero
 5091764:	000b883a 	mov	r5,zero
 5091768:	0029883a 	mov	r20,zero
 509176c:	1004953a 	slli	r2,r2,20
 5091770:	a8c03fcc 	andi	r3,r21,255
 5091774:	04400434 	movhi	r17,16
 5091778:	8c7fffc4 	addi	r17,r17,-1
 509177c:	180697fa 	slli	r3,r3,31
 5091780:	2c4a703a 	and	r5,r5,r17
 5091784:	288ab03a 	or	r5,r5,r2
 5091788:	28c6b03a 	or	r3,r5,r3
 509178c:	a005883a 	mov	r2,r20
 5091790:	dfc00c17 	ldw	ra,48(sp)
 5091794:	df000b17 	ldw	fp,44(sp)
 5091798:	ddc00a17 	ldw	r23,40(sp)
 509179c:	dd800917 	ldw	r22,36(sp)
 50917a0:	dd400817 	ldw	r21,32(sp)
 50917a4:	dd000717 	ldw	r20,28(sp)
 50917a8:	dcc00617 	ldw	r19,24(sp)
 50917ac:	dc800517 	ldw	r18,20(sp)
 50917b0:	dc400417 	ldw	r17,16(sp)
 50917b4:	dc000317 	ldw	r16,12(sp)
 50917b8:	dec00d04 	addi	sp,sp,52
 50917bc:	f800283a 	ret
 50917c0:	2404b03a 	or	r2,r4,r16
 50917c4:	2027883a 	mov	r19,r4
 50917c8:	10004226 	beq	r2,zero,50918d4 <__muldf3+0x2e4>
 50917cc:	8000fc26 	beq	r16,zero,5091bc0 <__muldf3+0x5d0>
 50917d0:	8009883a 	mov	r4,r16
 50917d4:	d9800215 	stw	r6,8(sp)
 50917d8:	d9c00015 	stw	r7,0(sp)
 50917dc:	da400115 	stw	r9,4(sp)
 50917e0:	50928080 	call	5092808 <__clzsi2>
 50917e4:	d9800217 	ldw	r6,8(sp)
 50917e8:	d9c00017 	ldw	r7,0(sp)
 50917ec:	da400117 	ldw	r9,4(sp)
 50917f0:	113ffd44 	addi	r4,r2,-11
 50917f4:	00c00704 	movi	r3,28
 50917f8:	1900ed16 	blt	r3,r4,5091bb0 <__muldf3+0x5c0>
 50917fc:	00c00744 	movi	r3,29
 5091800:	147ffe04 	addi	r17,r2,-8
 5091804:	1907c83a 	sub	r3,r3,r4
 5091808:	8460983a 	sll	r16,r16,r17
 509180c:	98c6d83a 	srl	r3,r19,r3
 5091810:	9c68983a 	sll	r20,r19,r17
 5091814:	1c20b03a 	or	r16,r3,r16
 5091818:	1080fcc4 	addi	r2,r2,1011
 509181c:	00a5c83a 	sub	r18,zero,r2
 5091820:	0027883a 	mov	r19,zero
 5091824:	0039883a 	mov	fp,zero
 5091828:	003f9006 	br	509166c <__alt_data_end+0xfffc346c>
 509182c:	3446b03a 	or	r3,r6,r17
 5091830:	1800261e 	bne	r3,zero,50918cc <__muldf3+0x2dc>
 5091834:	0023883a 	mov	r17,zero
 5091838:	0011883a 	mov	r8,zero
 509183c:	01400084 	movi	r5,2
 5091840:	003f9c06 	br	50916b4 <__alt_data_end+0xfffc34b4>
 5091844:	3446b03a 	or	r3,r6,r17
 5091848:	18001c26 	beq	r3,zero,50918bc <__muldf3+0x2cc>
 509184c:	8800ce26 	beq	r17,zero,5091b88 <__muldf3+0x598>
 5091850:	8809883a 	mov	r4,r17
 5091854:	d9800215 	stw	r6,8(sp)
 5091858:	da400115 	stw	r9,4(sp)
 509185c:	da800015 	stw	r10,0(sp)
 5091860:	50928080 	call	5092808 <__clzsi2>
 5091864:	d9800217 	ldw	r6,8(sp)
 5091868:	da400117 	ldw	r9,4(sp)
 509186c:	da800017 	ldw	r10,0(sp)
 5091870:	113ffd44 	addi	r4,r2,-11
 5091874:	00c00704 	movi	r3,28
 5091878:	1900bf16 	blt	r3,r4,5091b78 <__muldf3+0x588>
 509187c:	00c00744 	movi	r3,29
 5091880:	123ffe04 	addi	r8,r2,-8
 5091884:	1907c83a 	sub	r3,r3,r4
 5091888:	8a22983a 	sll	r17,r17,r8
 509188c:	30c6d83a 	srl	r3,r6,r3
 5091890:	3210983a 	sll	r8,r6,r8
 5091894:	1c62b03a 	or	r17,r3,r17
 5091898:	1080fcc4 	addi	r2,r2,1011
 509189c:	0085c83a 	sub	r2,zero,r2
 50918a0:	000b883a 	mov	r5,zero
 50918a4:	003f8306 	br	50916b4 <__alt_data_end+0xfffc34b4>
 50918a8:	b02b883a 	mov	r21,r22
 50918ac:	0081ffc4 	movi	r2,2047
 50918b0:	000b883a 	mov	r5,zero
 50918b4:	0029883a 	mov	r20,zero
 50918b8:	003fac06 	br	509176c <__alt_data_end+0xfffc356c>
 50918bc:	0023883a 	mov	r17,zero
 50918c0:	0011883a 	mov	r8,zero
 50918c4:	01400044 	movi	r5,1
 50918c8:	003f7a06 	br	50916b4 <__alt_data_end+0xfffc34b4>
 50918cc:	014000c4 	movi	r5,3
 50918d0:	003f7806 	br	50916b4 <__alt_data_end+0xfffc34b4>
 50918d4:	04c00104 	movi	r19,4
 50918d8:	0021883a 	mov	r16,zero
 50918dc:	0029883a 	mov	r20,zero
 50918e0:	07000044 	movi	fp,1
 50918e4:	003f6106 	br	509166c <__alt_data_end+0xfffc346c>
 50918e8:	04c00304 	movi	r19,12
 50918ec:	070000c4 	movi	fp,3
 50918f0:	003f5e06 	br	509166c <__alt_data_end+0xfffc346c>
 50918f4:	01400434 	movhi	r5,16
 50918f8:	002b883a 	mov	r21,zero
 50918fc:	297fffc4 	addi	r5,r5,-1
 5091900:	053fffc4 	movi	r20,-1
 5091904:	0081ffc4 	movi	r2,2047
 5091908:	003f9806 	br	509176c <__alt_data_end+0xfffc356c>
 509190c:	8023883a 	mov	r17,r16
 5091910:	a011883a 	mov	r8,r20
 5091914:	e00b883a 	mov	r5,fp
 5091918:	003f8a06 	br	5091744 <__alt_data_end+0xfffc3544>
 509191c:	8023883a 	mov	r17,r16
 5091920:	a011883a 	mov	r8,r20
 5091924:	482d883a 	mov	r22,r9
 5091928:	e00b883a 	mov	r5,fp
 509192c:	003f8506 	br	5091744 <__alt_data_end+0xfffc3544>
 5091930:	a00ad43a 	srli	r5,r20,16
 5091934:	401ad43a 	srli	r13,r8,16
 5091938:	a53fffcc 	andi	r20,r20,65535
 509193c:	423fffcc 	andi	r8,r8,65535
 5091940:	4519383a 	mul	r12,r8,r20
 5091944:	4147383a 	mul	r3,r8,r5
 5091948:	6d09383a 	mul	r4,r13,r20
 509194c:	600cd43a 	srli	r6,r12,16
 5091950:	2b5d383a 	mul	r14,r5,r13
 5091954:	20c9883a 	add	r4,r4,r3
 5091958:	310d883a 	add	r6,r6,r4
 509195c:	30c0022e 	bgeu	r6,r3,5091968 <__muldf3+0x378>
 5091960:	00c00074 	movhi	r3,1
 5091964:	70dd883a 	add	r14,r14,r3
 5091968:	8826d43a 	srli	r19,r17,16
 509196c:	8bffffcc 	andi	r15,r17,65535
 5091970:	7d23383a 	mul	r17,r15,r20
 5091974:	7949383a 	mul	r4,r15,r5
 5091978:	9d29383a 	mul	r20,r19,r20
 509197c:	8814d43a 	srli	r10,r17,16
 5091980:	3012943a 	slli	r9,r6,16
 5091984:	a129883a 	add	r20,r20,r4
 5091988:	633fffcc 	andi	r12,r12,65535
 509198c:	5515883a 	add	r10,r10,r20
 5091990:	3006d43a 	srli	r3,r6,16
 5091994:	4b13883a 	add	r9,r9,r12
 5091998:	2ccb383a 	mul	r5,r5,r19
 509199c:	5100022e 	bgeu	r10,r4,50919a8 <__muldf3+0x3b8>
 50919a0:	01000074 	movhi	r4,1
 50919a4:	290b883a 	add	r5,r5,r4
 50919a8:	802ad43a 	srli	r21,r16,16
 50919ac:	843fffcc 	andi	r16,r16,65535
 50919b0:	440d383a 	mul	r6,r8,r16
 50919b4:	4565383a 	mul	r18,r8,r21
 50919b8:	8349383a 	mul	r4,r16,r13
 50919bc:	500e943a 	slli	r7,r10,16
 50919c0:	3010d43a 	srli	r8,r6,16
 50919c4:	5028d43a 	srli	r20,r10,16
 50919c8:	2489883a 	add	r4,r4,r18
 50919cc:	8abfffcc 	andi	r10,r17,65535
 50919d0:	3a95883a 	add	r10,r7,r10
 50919d4:	4119883a 	add	r12,r8,r4
 50919d8:	a169883a 	add	r20,r20,r5
 50919dc:	1a87883a 	add	r3,r3,r10
 50919e0:	6d5b383a 	mul	r13,r13,r21
 50919e4:	6480022e 	bgeu	r12,r18,50919f0 <__muldf3+0x400>
 50919e8:	01000074 	movhi	r4,1
 50919ec:	691b883a 	add	r13,r13,r4
 50919f0:	7c25383a 	mul	r18,r15,r16
 50919f4:	7d4b383a 	mul	r5,r15,r21
 50919f8:	84cf383a 	mul	r7,r16,r19
 50919fc:	901ed43a 	srli	r15,r18,16
 5091a00:	6008d43a 	srli	r4,r12,16
 5091a04:	6010943a 	slli	r8,r12,16
 5091a08:	394f883a 	add	r7,r7,r5
 5091a0c:	333fffcc 	andi	r12,r6,65535
 5091a10:	79df883a 	add	r15,r15,r7
 5091a14:	235b883a 	add	r13,r4,r13
 5091a18:	9d63383a 	mul	r17,r19,r21
 5091a1c:	4309883a 	add	r4,r8,r12
 5091a20:	7940022e 	bgeu	r15,r5,5091a2c <__muldf3+0x43c>
 5091a24:	01400074 	movhi	r5,1
 5091a28:	8963883a 	add	r17,r17,r5
 5091a2c:	780a943a 	slli	r5,r15,16
 5091a30:	91bfffcc 	andi	r6,r18,65535
 5091a34:	70c7883a 	add	r3,r14,r3
 5091a38:	298d883a 	add	r6,r5,r6
 5091a3c:	1a8f803a 	cmpltu	r7,r3,r10
 5091a40:	350b883a 	add	r5,r6,r20
 5091a44:	20c7883a 	add	r3,r4,r3
 5091a48:	3955883a 	add	r10,r7,r5
 5091a4c:	1909803a 	cmpltu	r4,r3,r4
 5091a50:	6a91883a 	add	r8,r13,r10
 5091a54:	780cd43a 	srli	r6,r15,16
 5091a58:	2219883a 	add	r12,r4,r8
 5091a5c:	2d0b803a 	cmpltu	r5,r5,r20
 5091a60:	51cf803a 	cmpltu	r7,r10,r7
 5091a64:	29ceb03a 	or	r7,r5,r7
 5091a68:	4351803a 	cmpltu	r8,r8,r13
 5091a6c:	610b803a 	cmpltu	r5,r12,r4
 5091a70:	4148b03a 	or	r4,r8,r5
 5091a74:	398f883a 	add	r7,r7,r6
 5091a78:	3909883a 	add	r4,r7,r4
 5091a7c:	1810927a 	slli	r8,r3,9
 5091a80:	2449883a 	add	r4,r4,r17
 5091a84:	2008927a 	slli	r4,r4,9
 5091a88:	6022d5fa 	srli	r17,r12,23
 5091a8c:	1806d5fa 	srli	r3,r3,23
 5091a90:	4252b03a 	or	r9,r8,r9
 5091a94:	600a927a 	slli	r5,r12,9
 5091a98:	4810c03a 	cmpne	r8,r9,zero
 5091a9c:	2462b03a 	or	r17,r4,r17
 5091aa0:	40c6b03a 	or	r3,r8,r3
 5091aa4:	8900402c 	andhi	r4,r17,256
 5091aa8:	1950b03a 	or	r8,r3,r5
 5091aac:	20000726 	beq	r4,zero,5091acc <__muldf3+0x4dc>
 5091ab0:	4006d07a 	srli	r3,r8,1
 5091ab4:	880497fa 	slli	r2,r17,31
 5091ab8:	4200004c 	andi	r8,r8,1
 5091abc:	8822d07a 	srli	r17,r17,1
 5091ac0:	1a10b03a 	or	r8,r3,r8
 5091ac4:	1210b03a 	or	r8,r2,r8
 5091ac8:	5805883a 	mov	r2,r11
 5091acc:	1140ffc4 	addi	r5,r2,1023
 5091ad0:	0140440e 	bge	zero,r5,5091be4 <__muldf3+0x5f4>
 5091ad4:	40c001cc 	andi	r3,r8,7
 5091ad8:	18000726 	beq	r3,zero,5091af8 <__muldf3+0x508>
 5091adc:	40c003cc 	andi	r3,r8,15
 5091ae0:	01000104 	movi	r4,4
 5091ae4:	19000426 	beq	r3,r4,5091af8 <__muldf3+0x508>
 5091ae8:	4107883a 	add	r3,r8,r4
 5091aec:	1a11803a 	cmpltu	r8,r3,r8
 5091af0:	8a23883a 	add	r17,r17,r8
 5091af4:	1811883a 	mov	r8,r3
 5091af8:	88c0402c 	andhi	r3,r17,256
 5091afc:	18000426 	beq	r3,zero,5091b10 <__muldf3+0x520>
 5091b00:	11410004 	addi	r5,r2,1024
 5091b04:	00bfc034 	movhi	r2,65280
 5091b08:	10bfffc4 	addi	r2,r2,-1
 5091b0c:	88a2703a 	and	r17,r17,r2
 5091b10:	0081ff84 	movi	r2,2046
 5091b14:	117f6416 	blt	r2,r5,50918a8 <__alt_data_end+0xfffc36a8>
 5091b18:	8828977a 	slli	r20,r17,29
 5091b1c:	4010d0fa 	srli	r8,r8,3
 5091b20:	8822927a 	slli	r17,r17,9
 5091b24:	2881ffcc 	andi	r2,r5,2047
 5091b28:	a228b03a 	or	r20,r20,r8
 5091b2c:	880ad33a 	srli	r5,r17,12
 5091b30:	b02b883a 	mov	r21,r22
 5091b34:	003f0d06 	br	509176c <__alt_data_end+0xfffc356c>
 5091b38:	8080022c 	andhi	r2,r16,8
 5091b3c:	10000926 	beq	r2,zero,5091b64 <__muldf3+0x574>
 5091b40:	8880022c 	andhi	r2,r17,8
 5091b44:	1000071e 	bne	r2,zero,5091b64 <__muldf3+0x574>
 5091b48:	00800434 	movhi	r2,16
 5091b4c:	89400234 	orhi	r5,r17,8
 5091b50:	10bfffc4 	addi	r2,r2,-1
 5091b54:	b82b883a 	mov	r21,r23
 5091b58:	288a703a 	and	r5,r5,r2
 5091b5c:	4029883a 	mov	r20,r8
 5091b60:	003f6806 	br	5091904 <__alt_data_end+0xfffc3704>
 5091b64:	00800434 	movhi	r2,16
 5091b68:	81400234 	orhi	r5,r16,8
 5091b6c:	10bfffc4 	addi	r2,r2,-1
 5091b70:	288a703a 	and	r5,r5,r2
 5091b74:	003f6306 	br	5091904 <__alt_data_end+0xfffc3704>
 5091b78:	147ff604 	addi	r17,r2,-40
 5091b7c:	3462983a 	sll	r17,r6,r17
 5091b80:	0011883a 	mov	r8,zero
 5091b84:	003f4406 	br	5091898 <__alt_data_end+0xfffc3698>
 5091b88:	3009883a 	mov	r4,r6
 5091b8c:	d9800215 	stw	r6,8(sp)
 5091b90:	da400115 	stw	r9,4(sp)
 5091b94:	da800015 	stw	r10,0(sp)
 5091b98:	50928080 	call	5092808 <__clzsi2>
 5091b9c:	10800804 	addi	r2,r2,32
 5091ba0:	da800017 	ldw	r10,0(sp)
 5091ba4:	da400117 	ldw	r9,4(sp)
 5091ba8:	d9800217 	ldw	r6,8(sp)
 5091bac:	003f3006 	br	5091870 <__alt_data_end+0xfffc3670>
 5091bb0:	143ff604 	addi	r16,r2,-40
 5091bb4:	9c20983a 	sll	r16,r19,r16
 5091bb8:	0029883a 	mov	r20,zero
 5091bbc:	003f1606 	br	5091818 <__alt_data_end+0xfffc3618>
 5091bc0:	d9800215 	stw	r6,8(sp)
 5091bc4:	d9c00015 	stw	r7,0(sp)
 5091bc8:	da400115 	stw	r9,4(sp)
 5091bcc:	50928080 	call	5092808 <__clzsi2>
 5091bd0:	10800804 	addi	r2,r2,32
 5091bd4:	da400117 	ldw	r9,4(sp)
 5091bd8:	d9c00017 	ldw	r7,0(sp)
 5091bdc:	d9800217 	ldw	r6,8(sp)
 5091be0:	003f0306 	br	50917f0 <__alt_data_end+0xfffc35f0>
 5091be4:	00c00044 	movi	r3,1
 5091be8:	1947c83a 	sub	r3,r3,r5
 5091bec:	00800e04 	movi	r2,56
 5091bf0:	10feda16 	blt	r2,r3,509175c <__alt_data_end+0xfffc355c>
 5091bf4:	008007c4 	movi	r2,31
 5091bf8:	10c01b16 	blt	r2,r3,5091c68 <__muldf3+0x678>
 5091bfc:	00800804 	movi	r2,32
 5091c00:	10c5c83a 	sub	r2,r2,r3
 5091c04:	888a983a 	sll	r5,r17,r2
 5091c08:	40c8d83a 	srl	r4,r8,r3
 5091c0c:	4084983a 	sll	r2,r8,r2
 5091c10:	88e2d83a 	srl	r17,r17,r3
 5091c14:	2906b03a 	or	r3,r5,r4
 5091c18:	1004c03a 	cmpne	r2,r2,zero
 5091c1c:	1886b03a 	or	r3,r3,r2
 5091c20:	188001cc 	andi	r2,r3,7
 5091c24:	10000726 	beq	r2,zero,5091c44 <__muldf3+0x654>
 5091c28:	188003cc 	andi	r2,r3,15
 5091c2c:	01000104 	movi	r4,4
 5091c30:	11000426 	beq	r2,r4,5091c44 <__muldf3+0x654>
 5091c34:	1805883a 	mov	r2,r3
 5091c38:	10c00104 	addi	r3,r2,4
 5091c3c:	1885803a 	cmpltu	r2,r3,r2
 5091c40:	88a3883a 	add	r17,r17,r2
 5091c44:	8880202c 	andhi	r2,r17,128
 5091c48:	10001c26 	beq	r2,zero,5091cbc <__muldf3+0x6cc>
 5091c4c:	b02b883a 	mov	r21,r22
 5091c50:	00800044 	movi	r2,1
 5091c54:	000b883a 	mov	r5,zero
 5091c58:	0029883a 	mov	r20,zero
 5091c5c:	003ec306 	br	509176c <__alt_data_end+0xfffc356c>
 5091c60:	5805883a 	mov	r2,r11
 5091c64:	003f9906 	br	5091acc <__alt_data_end+0xfffc38cc>
 5091c68:	00bff844 	movi	r2,-31
 5091c6c:	1145c83a 	sub	r2,r2,r5
 5091c70:	8888d83a 	srl	r4,r17,r2
 5091c74:	00800804 	movi	r2,32
 5091c78:	18801a26 	beq	r3,r2,5091ce4 <__muldf3+0x6f4>
 5091c7c:	00801004 	movi	r2,64
 5091c80:	10c5c83a 	sub	r2,r2,r3
 5091c84:	8884983a 	sll	r2,r17,r2
 5091c88:	1204b03a 	or	r2,r2,r8
 5091c8c:	1004c03a 	cmpne	r2,r2,zero
 5091c90:	2084b03a 	or	r2,r4,r2
 5091c94:	144001cc 	andi	r17,r2,7
 5091c98:	88000d1e 	bne	r17,zero,5091cd0 <__muldf3+0x6e0>
 5091c9c:	000b883a 	mov	r5,zero
 5091ca0:	1028d0fa 	srli	r20,r2,3
 5091ca4:	b02b883a 	mov	r21,r22
 5091ca8:	0005883a 	mov	r2,zero
 5091cac:	a468b03a 	or	r20,r20,r17
 5091cb0:	003eae06 	br	509176c <__alt_data_end+0xfffc356c>
 5091cb4:	1007883a 	mov	r3,r2
 5091cb8:	0023883a 	mov	r17,zero
 5091cbc:	880a927a 	slli	r5,r17,9
 5091cc0:	1805883a 	mov	r2,r3
 5091cc4:	8822977a 	slli	r17,r17,29
 5091cc8:	280ad33a 	srli	r5,r5,12
 5091ccc:	003ff406 	br	5091ca0 <__alt_data_end+0xfffc3aa0>
 5091cd0:	10c003cc 	andi	r3,r2,15
 5091cd4:	01000104 	movi	r4,4
 5091cd8:	193ff626 	beq	r3,r4,5091cb4 <__alt_data_end+0xfffc3ab4>
 5091cdc:	0023883a 	mov	r17,zero
 5091ce0:	003fd506 	br	5091c38 <__alt_data_end+0xfffc3a38>
 5091ce4:	0005883a 	mov	r2,zero
 5091ce8:	003fe706 	br	5091c88 <__alt_data_end+0xfffc3a88>
 5091cec:	00800434 	movhi	r2,16
 5091cf0:	89400234 	orhi	r5,r17,8
 5091cf4:	10bfffc4 	addi	r2,r2,-1
 5091cf8:	b02b883a 	mov	r21,r22
 5091cfc:	288a703a 	and	r5,r5,r2
 5091d00:	4029883a 	mov	r20,r8
 5091d04:	003eff06 	br	5091904 <__alt_data_end+0xfffc3704>

05091d08 <__subdf3>:
 5091d08:	02000434 	movhi	r8,16
 5091d0c:	423fffc4 	addi	r8,r8,-1
 5091d10:	defffb04 	addi	sp,sp,-20
 5091d14:	2a14703a 	and	r10,r5,r8
 5091d18:	3812d53a 	srli	r9,r7,20
 5091d1c:	3a10703a 	and	r8,r7,r8
 5091d20:	2006d77a 	srli	r3,r4,29
 5091d24:	3004d77a 	srli	r2,r6,29
 5091d28:	dc000015 	stw	r16,0(sp)
 5091d2c:	501490fa 	slli	r10,r10,3
 5091d30:	2820d53a 	srli	r16,r5,20
 5091d34:	401090fa 	slli	r8,r8,3
 5091d38:	dc800215 	stw	r18,8(sp)
 5091d3c:	dc400115 	stw	r17,4(sp)
 5091d40:	dfc00415 	stw	ra,16(sp)
 5091d44:	202290fa 	slli	r17,r4,3
 5091d48:	dcc00315 	stw	r19,12(sp)
 5091d4c:	4a41ffcc 	andi	r9,r9,2047
 5091d50:	0101ffc4 	movi	r4,2047
 5091d54:	2824d7fa 	srli	r18,r5,31
 5091d58:	8401ffcc 	andi	r16,r16,2047
 5091d5c:	50c6b03a 	or	r3,r10,r3
 5091d60:	380ed7fa 	srli	r7,r7,31
 5091d64:	408ab03a 	or	r5,r8,r2
 5091d68:	300c90fa 	slli	r6,r6,3
 5091d6c:	49009626 	beq	r9,r4,5091fc8 <__subdf3+0x2c0>
 5091d70:	39c0005c 	xori	r7,r7,1
 5091d74:	8245c83a 	sub	r2,r16,r9
 5091d78:	3c807426 	beq	r7,r18,5091f4c <__subdf3+0x244>
 5091d7c:	0080af0e 	bge	zero,r2,509203c <__subdf3+0x334>
 5091d80:	48002a1e 	bne	r9,zero,5091e2c <__subdf3+0x124>
 5091d84:	2988b03a 	or	r4,r5,r6
 5091d88:	20009a1e 	bne	r4,zero,5091ff4 <__subdf3+0x2ec>
 5091d8c:	888001cc 	andi	r2,r17,7
 5091d90:	10000726 	beq	r2,zero,5091db0 <__subdf3+0xa8>
 5091d94:	888003cc 	andi	r2,r17,15
 5091d98:	01000104 	movi	r4,4
 5091d9c:	11000426 	beq	r2,r4,5091db0 <__subdf3+0xa8>
 5091da0:	890b883a 	add	r5,r17,r4
 5091da4:	2c63803a 	cmpltu	r17,r5,r17
 5091da8:	1c47883a 	add	r3,r3,r17
 5091dac:	2823883a 	mov	r17,r5
 5091db0:	1880202c 	andhi	r2,r3,128
 5091db4:	10005926 	beq	r2,zero,5091f1c <__subdf3+0x214>
 5091db8:	84000044 	addi	r16,r16,1
 5091dbc:	0081ffc4 	movi	r2,2047
 5091dc0:	8080be26 	beq	r16,r2,50920bc <__subdf3+0x3b4>
 5091dc4:	017fe034 	movhi	r5,65408
 5091dc8:	297fffc4 	addi	r5,r5,-1
 5091dcc:	1946703a 	and	r3,r3,r5
 5091dd0:	1804977a 	slli	r2,r3,29
 5091dd4:	1806927a 	slli	r3,r3,9
 5091dd8:	8822d0fa 	srli	r17,r17,3
 5091ddc:	8401ffcc 	andi	r16,r16,2047
 5091de0:	180ad33a 	srli	r5,r3,12
 5091de4:	9100004c 	andi	r4,r18,1
 5091de8:	1444b03a 	or	r2,r2,r17
 5091dec:	80c1ffcc 	andi	r3,r16,2047
 5091df0:	1820953a 	slli	r16,r3,20
 5091df4:	20c03fcc 	andi	r3,r4,255
 5091df8:	180897fa 	slli	r4,r3,31
 5091dfc:	00c00434 	movhi	r3,16
 5091e00:	18ffffc4 	addi	r3,r3,-1
 5091e04:	28c6703a 	and	r3,r5,r3
 5091e08:	1c06b03a 	or	r3,r3,r16
 5091e0c:	1906b03a 	or	r3,r3,r4
 5091e10:	dfc00417 	ldw	ra,16(sp)
 5091e14:	dcc00317 	ldw	r19,12(sp)
 5091e18:	dc800217 	ldw	r18,8(sp)
 5091e1c:	dc400117 	ldw	r17,4(sp)
 5091e20:	dc000017 	ldw	r16,0(sp)
 5091e24:	dec00504 	addi	sp,sp,20
 5091e28:	f800283a 	ret
 5091e2c:	0101ffc4 	movi	r4,2047
 5091e30:	813fd626 	beq	r16,r4,5091d8c <__alt_data_end+0xfffc3b8c>
 5091e34:	29402034 	orhi	r5,r5,128
 5091e38:	01000e04 	movi	r4,56
 5091e3c:	2080a316 	blt	r4,r2,50920cc <__subdf3+0x3c4>
 5091e40:	010007c4 	movi	r4,31
 5091e44:	2080c616 	blt	r4,r2,5092160 <__subdf3+0x458>
 5091e48:	01000804 	movi	r4,32
 5091e4c:	2089c83a 	sub	r4,r4,r2
 5091e50:	2910983a 	sll	r8,r5,r4
 5091e54:	308ed83a 	srl	r7,r6,r2
 5091e58:	3108983a 	sll	r4,r6,r4
 5091e5c:	2884d83a 	srl	r2,r5,r2
 5091e60:	41ccb03a 	or	r6,r8,r7
 5091e64:	2008c03a 	cmpne	r4,r4,zero
 5091e68:	310cb03a 	or	r6,r6,r4
 5091e6c:	898dc83a 	sub	r6,r17,r6
 5091e70:	89a3803a 	cmpltu	r17,r17,r6
 5091e74:	1887c83a 	sub	r3,r3,r2
 5091e78:	1c47c83a 	sub	r3,r3,r17
 5091e7c:	3023883a 	mov	r17,r6
 5091e80:	1880202c 	andhi	r2,r3,128
 5091e84:	10002326 	beq	r2,zero,5091f14 <__subdf3+0x20c>
 5091e88:	04c02034 	movhi	r19,128
 5091e8c:	9cffffc4 	addi	r19,r19,-1
 5091e90:	1ce6703a 	and	r19,r3,r19
 5091e94:	98007a26 	beq	r19,zero,5092080 <__subdf3+0x378>
 5091e98:	9809883a 	mov	r4,r19
 5091e9c:	50928080 	call	5092808 <__clzsi2>
 5091ea0:	113ffe04 	addi	r4,r2,-8
 5091ea4:	00c007c4 	movi	r3,31
 5091ea8:	19007b16 	blt	r3,r4,5092098 <__subdf3+0x390>
 5091eac:	00800804 	movi	r2,32
 5091eb0:	1105c83a 	sub	r2,r2,r4
 5091eb4:	8884d83a 	srl	r2,r17,r2
 5091eb8:	9906983a 	sll	r3,r19,r4
 5091ebc:	8922983a 	sll	r17,r17,r4
 5091ec0:	10c4b03a 	or	r2,r2,r3
 5091ec4:	24007816 	blt	r4,r16,50920a8 <__subdf3+0x3a0>
 5091ec8:	2421c83a 	sub	r16,r4,r16
 5091ecc:	80c00044 	addi	r3,r16,1
 5091ed0:	010007c4 	movi	r4,31
 5091ed4:	20c09516 	blt	r4,r3,509212c <__subdf3+0x424>
 5091ed8:	01400804 	movi	r5,32
 5091edc:	28cbc83a 	sub	r5,r5,r3
 5091ee0:	88c8d83a 	srl	r4,r17,r3
 5091ee4:	8962983a 	sll	r17,r17,r5
 5091ee8:	114a983a 	sll	r5,r2,r5
 5091eec:	10c6d83a 	srl	r3,r2,r3
 5091ef0:	8804c03a 	cmpne	r2,r17,zero
 5091ef4:	290ab03a 	or	r5,r5,r4
 5091ef8:	28a2b03a 	or	r17,r5,r2
 5091efc:	0021883a 	mov	r16,zero
 5091f00:	003fa206 	br	5091d8c <__alt_data_end+0xfffc3b8c>
 5091f04:	2090b03a 	or	r8,r4,r2
 5091f08:	40018e26 	beq	r8,zero,5092544 <__subdf3+0x83c>
 5091f0c:	1007883a 	mov	r3,r2
 5091f10:	2023883a 	mov	r17,r4
 5091f14:	888001cc 	andi	r2,r17,7
 5091f18:	103f9e1e 	bne	r2,zero,5091d94 <__alt_data_end+0xfffc3b94>
 5091f1c:	1804977a 	slli	r2,r3,29
 5091f20:	8822d0fa 	srli	r17,r17,3
 5091f24:	1810d0fa 	srli	r8,r3,3
 5091f28:	9100004c 	andi	r4,r18,1
 5091f2c:	1444b03a 	or	r2,r2,r17
 5091f30:	00c1ffc4 	movi	r3,2047
 5091f34:	80c02826 	beq	r16,r3,5091fd8 <__subdf3+0x2d0>
 5091f38:	01400434 	movhi	r5,16
 5091f3c:	297fffc4 	addi	r5,r5,-1
 5091f40:	80e0703a 	and	r16,r16,r3
 5091f44:	414a703a 	and	r5,r8,r5
 5091f48:	003fa806 	br	5091dec <__alt_data_end+0xfffc3bec>
 5091f4c:	0080630e 	bge	zero,r2,50920dc <__subdf3+0x3d4>
 5091f50:	48003026 	beq	r9,zero,5092014 <__subdf3+0x30c>
 5091f54:	0101ffc4 	movi	r4,2047
 5091f58:	813f8c26 	beq	r16,r4,5091d8c <__alt_data_end+0xfffc3b8c>
 5091f5c:	29402034 	orhi	r5,r5,128
 5091f60:	01000e04 	movi	r4,56
 5091f64:	2080a90e 	bge	r4,r2,509220c <__subdf3+0x504>
 5091f68:	298cb03a 	or	r6,r5,r6
 5091f6c:	3012c03a 	cmpne	r9,r6,zero
 5091f70:	0005883a 	mov	r2,zero
 5091f74:	4c53883a 	add	r9,r9,r17
 5091f78:	4c63803a 	cmpltu	r17,r9,r17
 5091f7c:	10c7883a 	add	r3,r2,r3
 5091f80:	88c7883a 	add	r3,r17,r3
 5091f84:	4823883a 	mov	r17,r9
 5091f88:	1880202c 	andhi	r2,r3,128
 5091f8c:	1000d026 	beq	r2,zero,50922d0 <__subdf3+0x5c8>
 5091f90:	84000044 	addi	r16,r16,1
 5091f94:	0081ffc4 	movi	r2,2047
 5091f98:	8080fe26 	beq	r16,r2,5092394 <__subdf3+0x68c>
 5091f9c:	00bfe034 	movhi	r2,65408
 5091fa0:	10bfffc4 	addi	r2,r2,-1
 5091fa4:	1886703a 	and	r3,r3,r2
 5091fa8:	880ad07a 	srli	r5,r17,1
 5091fac:	180497fa 	slli	r2,r3,31
 5091fb0:	8900004c 	andi	r4,r17,1
 5091fb4:	2922b03a 	or	r17,r5,r4
 5091fb8:	1806d07a 	srli	r3,r3,1
 5091fbc:	1462b03a 	or	r17,r2,r17
 5091fc0:	3825883a 	mov	r18,r7
 5091fc4:	003f7106 	br	5091d8c <__alt_data_end+0xfffc3b8c>
 5091fc8:	2984b03a 	or	r2,r5,r6
 5091fcc:	103f6826 	beq	r2,zero,5091d70 <__alt_data_end+0xfffc3b70>
 5091fd0:	39c03fcc 	andi	r7,r7,255
 5091fd4:	003f6706 	br	5091d74 <__alt_data_end+0xfffc3b74>
 5091fd8:	4086b03a 	or	r3,r8,r2
 5091fdc:	18015226 	beq	r3,zero,5092528 <__subdf3+0x820>
 5091fe0:	00c00434 	movhi	r3,16
 5091fe4:	41400234 	orhi	r5,r8,8
 5091fe8:	18ffffc4 	addi	r3,r3,-1
 5091fec:	28ca703a 	and	r5,r5,r3
 5091ff0:	003f7e06 	br	5091dec <__alt_data_end+0xfffc3bec>
 5091ff4:	10bfffc4 	addi	r2,r2,-1
 5091ff8:	1000491e 	bne	r2,zero,5092120 <__subdf3+0x418>
 5091ffc:	898fc83a 	sub	r7,r17,r6
 5092000:	89e3803a 	cmpltu	r17,r17,r7
 5092004:	1947c83a 	sub	r3,r3,r5
 5092008:	1c47c83a 	sub	r3,r3,r17
 509200c:	3823883a 	mov	r17,r7
 5092010:	003f9b06 	br	5091e80 <__alt_data_end+0xfffc3c80>
 5092014:	2988b03a 	or	r4,r5,r6
 5092018:	203f5c26 	beq	r4,zero,5091d8c <__alt_data_end+0xfffc3b8c>
 509201c:	10bfffc4 	addi	r2,r2,-1
 5092020:	1000931e 	bne	r2,zero,5092270 <__subdf3+0x568>
 5092024:	898d883a 	add	r6,r17,r6
 5092028:	3463803a 	cmpltu	r17,r6,r17
 509202c:	1947883a 	add	r3,r3,r5
 5092030:	88c7883a 	add	r3,r17,r3
 5092034:	3023883a 	mov	r17,r6
 5092038:	003fd306 	br	5091f88 <__alt_data_end+0xfffc3d88>
 509203c:	1000541e 	bne	r2,zero,5092190 <__subdf3+0x488>
 5092040:	80800044 	addi	r2,r16,1
 5092044:	1081ffcc 	andi	r2,r2,2047
 5092048:	01000044 	movi	r4,1
 509204c:	2080a20e 	bge	r4,r2,50922d8 <__subdf3+0x5d0>
 5092050:	8989c83a 	sub	r4,r17,r6
 5092054:	8905803a 	cmpltu	r2,r17,r4
 5092058:	1967c83a 	sub	r19,r3,r5
 509205c:	98a7c83a 	sub	r19,r19,r2
 5092060:	9880202c 	andhi	r2,r19,128
 5092064:	10006326 	beq	r2,zero,50921f4 <__subdf3+0x4ec>
 5092068:	3463c83a 	sub	r17,r6,r17
 509206c:	28c7c83a 	sub	r3,r5,r3
 5092070:	344d803a 	cmpltu	r6,r6,r17
 5092074:	19a7c83a 	sub	r19,r3,r6
 5092078:	3825883a 	mov	r18,r7
 509207c:	983f861e 	bne	r19,zero,5091e98 <__alt_data_end+0xfffc3c98>
 5092080:	8809883a 	mov	r4,r17
 5092084:	50928080 	call	5092808 <__clzsi2>
 5092088:	10800804 	addi	r2,r2,32
 509208c:	113ffe04 	addi	r4,r2,-8
 5092090:	00c007c4 	movi	r3,31
 5092094:	193f850e 	bge	r3,r4,5091eac <__alt_data_end+0xfffc3cac>
 5092098:	10bff604 	addi	r2,r2,-40
 509209c:	8884983a 	sll	r2,r17,r2
 50920a0:	0023883a 	mov	r17,zero
 50920a4:	243f880e 	bge	r4,r16,5091ec8 <__alt_data_end+0xfffc3cc8>
 50920a8:	00ffe034 	movhi	r3,65408
 50920ac:	18ffffc4 	addi	r3,r3,-1
 50920b0:	8121c83a 	sub	r16,r16,r4
 50920b4:	10c6703a 	and	r3,r2,r3
 50920b8:	003f3406 	br	5091d8c <__alt_data_end+0xfffc3b8c>
 50920bc:	9100004c 	andi	r4,r18,1
 50920c0:	000b883a 	mov	r5,zero
 50920c4:	0005883a 	mov	r2,zero
 50920c8:	003f4806 	br	5091dec <__alt_data_end+0xfffc3bec>
 50920cc:	298cb03a 	or	r6,r5,r6
 50920d0:	300cc03a 	cmpne	r6,r6,zero
 50920d4:	0005883a 	mov	r2,zero
 50920d8:	003f6406 	br	5091e6c <__alt_data_end+0xfffc3c6c>
 50920dc:	10009a1e 	bne	r2,zero,5092348 <__subdf3+0x640>
 50920e0:	82400044 	addi	r9,r16,1
 50920e4:	4881ffcc 	andi	r2,r9,2047
 50920e8:	02800044 	movi	r10,1
 50920ec:	5080670e 	bge	r10,r2,509228c <__subdf3+0x584>
 50920f0:	0081ffc4 	movi	r2,2047
 50920f4:	4880af26 	beq	r9,r2,50923b4 <__subdf3+0x6ac>
 50920f8:	898d883a 	add	r6,r17,r6
 50920fc:	1945883a 	add	r2,r3,r5
 5092100:	3447803a 	cmpltu	r3,r6,r17
 5092104:	1887883a 	add	r3,r3,r2
 5092108:	182297fa 	slli	r17,r3,31
 509210c:	300cd07a 	srli	r6,r6,1
 5092110:	1806d07a 	srli	r3,r3,1
 5092114:	4821883a 	mov	r16,r9
 5092118:	89a2b03a 	or	r17,r17,r6
 509211c:	003f1b06 	br	5091d8c <__alt_data_end+0xfffc3b8c>
 5092120:	0101ffc4 	movi	r4,2047
 5092124:	813f441e 	bne	r16,r4,5091e38 <__alt_data_end+0xfffc3c38>
 5092128:	003f1806 	br	5091d8c <__alt_data_end+0xfffc3b8c>
 509212c:	843ff844 	addi	r16,r16,-31
 5092130:	01400804 	movi	r5,32
 5092134:	1408d83a 	srl	r4,r2,r16
 5092138:	19405026 	beq	r3,r5,509227c <__subdf3+0x574>
 509213c:	01401004 	movi	r5,64
 5092140:	28c7c83a 	sub	r3,r5,r3
 5092144:	10c4983a 	sll	r2,r2,r3
 5092148:	88a2b03a 	or	r17,r17,r2
 509214c:	8822c03a 	cmpne	r17,r17,zero
 5092150:	2462b03a 	or	r17,r4,r17
 5092154:	0007883a 	mov	r3,zero
 5092158:	0021883a 	mov	r16,zero
 509215c:	003f6d06 	br	5091f14 <__alt_data_end+0xfffc3d14>
 5092160:	11fff804 	addi	r7,r2,-32
 5092164:	01000804 	movi	r4,32
 5092168:	29ced83a 	srl	r7,r5,r7
 509216c:	11004526 	beq	r2,r4,5092284 <__subdf3+0x57c>
 5092170:	01001004 	movi	r4,64
 5092174:	2089c83a 	sub	r4,r4,r2
 5092178:	2904983a 	sll	r2,r5,r4
 509217c:	118cb03a 	or	r6,r2,r6
 5092180:	300cc03a 	cmpne	r6,r6,zero
 5092184:	398cb03a 	or	r6,r7,r6
 5092188:	0005883a 	mov	r2,zero
 509218c:	003f3706 	br	5091e6c <__alt_data_end+0xfffc3c6c>
 5092190:	80002a26 	beq	r16,zero,509223c <__subdf3+0x534>
 5092194:	0101ffc4 	movi	r4,2047
 5092198:	49006626 	beq	r9,r4,5092334 <__subdf3+0x62c>
 509219c:	0085c83a 	sub	r2,zero,r2
 50921a0:	18c02034 	orhi	r3,r3,128
 50921a4:	01000e04 	movi	r4,56
 50921a8:	20807e16 	blt	r4,r2,50923a4 <__subdf3+0x69c>
 50921ac:	010007c4 	movi	r4,31
 50921b0:	2080e716 	blt	r4,r2,5092550 <__subdf3+0x848>
 50921b4:	01000804 	movi	r4,32
 50921b8:	2089c83a 	sub	r4,r4,r2
 50921bc:	1914983a 	sll	r10,r3,r4
 50921c0:	8890d83a 	srl	r8,r17,r2
 50921c4:	8908983a 	sll	r4,r17,r4
 50921c8:	1884d83a 	srl	r2,r3,r2
 50921cc:	5222b03a 	or	r17,r10,r8
 50921d0:	2006c03a 	cmpne	r3,r4,zero
 50921d4:	88e2b03a 	or	r17,r17,r3
 50921d8:	3463c83a 	sub	r17,r6,r17
 50921dc:	2885c83a 	sub	r2,r5,r2
 50921e0:	344d803a 	cmpltu	r6,r6,r17
 50921e4:	1187c83a 	sub	r3,r2,r6
 50921e8:	4821883a 	mov	r16,r9
 50921ec:	3825883a 	mov	r18,r7
 50921f0:	003f2306 	br	5091e80 <__alt_data_end+0xfffc3c80>
 50921f4:	24d0b03a 	or	r8,r4,r19
 50921f8:	40001b1e 	bne	r8,zero,5092268 <__subdf3+0x560>
 50921fc:	0005883a 	mov	r2,zero
 5092200:	0009883a 	mov	r4,zero
 5092204:	0021883a 	mov	r16,zero
 5092208:	003f4906 	br	5091f30 <__alt_data_end+0xfffc3d30>
 509220c:	010007c4 	movi	r4,31
 5092210:	20803a16 	blt	r4,r2,50922fc <__subdf3+0x5f4>
 5092214:	01000804 	movi	r4,32
 5092218:	2089c83a 	sub	r4,r4,r2
 509221c:	2912983a 	sll	r9,r5,r4
 5092220:	3090d83a 	srl	r8,r6,r2
 5092224:	3108983a 	sll	r4,r6,r4
 5092228:	2884d83a 	srl	r2,r5,r2
 509222c:	4a12b03a 	or	r9,r9,r8
 5092230:	2008c03a 	cmpne	r4,r4,zero
 5092234:	4912b03a 	or	r9,r9,r4
 5092238:	003f4e06 	br	5091f74 <__alt_data_end+0xfffc3d74>
 509223c:	1c48b03a 	or	r4,r3,r17
 5092240:	20003c26 	beq	r4,zero,5092334 <__subdf3+0x62c>
 5092244:	0084303a 	nor	r2,zero,r2
 5092248:	1000381e 	bne	r2,zero,509232c <__subdf3+0x624>
 509224c:	3463c83a 	sub	r17,r6,r17
 5092250:	28c5c83a 	sub	r2,r5,r3
 5092254:	344d803a 	cmpltu	r6,r6,r17
 5092258:	1187c83a 	sub	r3,r2,r6
 509225c:	4821883a 	mov	r16,r9
 5092260:	3825883a 	mov	r18,r7
 5092264:	003f0606 	br	5091e80 <__alt_data_end+0xfffc3c80>
 5092268:	2023883a 	mov	r17,r4
 509226c:	003f0906 	br	5091e94 <__alt_data_end+0xfffc3c94>
 5092270:	0101ffc4 	movi	r4,2047
 5092274:	813f3a1e 	bne	r16,r4,5091f60 <__alt_data_end+0xfffc3d60>
 5092278:	003ec406 	br	5091d8c <__alt_data_end+0xfffc3b8c>
 509227c:	0005883a 	mov	r2,zero
 5092280:	003fb106 	br	5092148 <__alt_data_end+0xfffc3f48>
 5092284:	0005883a 	mov	r2,zero
 5092288:	003fbc06 	br	509217c <__alt_data_end+0xfffc3f7c>
 509228c:	1c44b03a 	or	r2,r3,r17
 5092290:	80008e1e 	bne	r16,zero,50924cc <__subdf3+0x7c4>
 5092294:	1000c826 	beq	r2,zero,50925b8 <__subdf3+0x8b0>
 5092298:	2984b03a 	or	r2,r5,r6
 509229c:	103ebb26 	beq	r2,zero,5091d8c <__alt_data_end+0xfffc3b8c>
 50922a0:	8989883a 	add	r4,r17,r6
 50922a4:	1945883a 	add	r2,r3,r5
 50922a8:	2447803a 	cmpltu	r3,r4,r17
 50922ac:	1887883a 	add	r3,r3,r2
 50922b0:	1880202c 	andhi	r2,r3,128
 50922b4:	2023883a 	mov	r17,r4
 50922b8:	103f1626 	beq	r2,zero,5091f14 <__alt_data_end+0xfffc3d14>
 50922bc:	00bfe034 	movhi	r2,65408
 50922c0:	10bfffc4 	addi	r2,r2,-1
 50922c4:	5021883a 	mov	r16,r10
 50922c8:	1886703a 	and	r3,r3,r2
 50922cc:	003eaf06 	br	5091d8c <__alt_data_end+0xfffc3b8c>
 50922d0:	3825883a 	mov	r18,r7
 50922d4:	003f0f06 	br	5091f14 <__alt_data_end+0xfffc3d14>
 50922d8:	1c44b03a 	or	r2,r3,r17
 50922dc:	8000251e 	bne	r16,zero,5092374 <__subdf3+0x66c>
 50922e0:	1000661e 	bne	r2,zero,509247c <__subdf3+0x774>
 50922e4:	2990b03a 	or	r8,r5,r6
 50922e8:	40009626 	beq	r8,zero,5092544 <__subdf3+0x83c>
 50922ec:	2807883a 	mov	r3,r5
 50922f0:	3023883a 	mov	r17,r6
 50922f4:	3825883a 	mov	r18,r7
 50922f8:	003ea406 	br	5091d8c <__alt_data_end+0xfffc3b8c>
 50922fc:	127ff804 	addi	r9,r2,-32
 5092300:	01000804 	movi	r4,32
 5092304:	2a52d83a 	srl	r9,r5,r9
 5092308:	11008c26 	beq	r2,r4,509253c <__subdf3+0x834>
 509230c:	01001004 	movi	r4,64
 5092310:	2085c83a 	sub	r2,r4,r2
 5092314:	2884983a 	sll	r2,r5,r2
 5092318:	118cb03a 	or	r6,r2,r6
 509231c:	300cc03a 	cmpne	r6,r6,zero
 5092320:	4992b03a 	or	r9,r9,r6
 5092324:	0005883a 	mov	r2,zero
 5092328:	003f1206 	br	5091f74 <__alt_data_end+0xfffc3d74>
 509232c:	0101ffc4 	movi	r4,2047
 5092330:	493f9c1e 	bne	r9,r4,50921a4 <__alt_data_end+0xfffc3fa4>
 5092334:	2807883a 	mov	r3,r5
 5092338:	3023883a 	mov	r17,r6
 509233c:	4821883a 	mov	r16,r9
 5092340:	3825883a 	mov	r18,r7
 5092344:	003e9106 	br	5091d8c <__alt_data_end+0xfffc3b8c>
 5092348:	80001f1e 	bne	r16,zero,50923c8 <__subdf3+0x6c0>
 509234c:	1c48b03a 	or	r4,r3,r17
 5092350:	20005a26 	beq	r4,zero,50924bc <__subdf3+0x7b4>
 5092354:	0084303a 	nor	r2,zero,r2
 5092358:	1000561e 	bne	r2,zero,50924b4 <__subdf3+0x7ac>
 509235c:	89a3883a 	add	r17,r17,r6
 5092360:	1945883a 	add	r2,r3,r5
 5092364:	898d803a 	cmpltu	r6,r17,r6
 5092368:	3087883a 	add	r3,r6,r2
 509236c:	4821883a 	mov	r16,r9
 5092370:	003f0506 	br	5091f88 <__alt_data_end+0xfffc3d88>
 5092374:	10002b1e 	bne	r2,zero,5092424 <__subdf3+0x71c>
 5092378:	2984b03a 	or	r2,r5,r6
 509237c:	10008026 	beq	r2,zero,5092580 <__subdf3+0x878>
 5092380:	2807883a 	mov	r3,r5
 5092384:	3023883a 	mov	r17,r6
 5092388:	3825883a 	mov	r18,r7
 509238c:	0401ffc4 	movi	r16,2047
 5092390:	003e7e06 	br	5091d8c <__alt_data_end+0xfffc3b8c>
 5092394:	3809883a 	mov	r4,r7
 5092398:	0011883a 	mov	r8,zero
 509239c:	0005883a 	mov	r2,zero
 50923a0:	003ee306 	br	5091f30 <__alt_data_end+0xfffc3d30>
 50923a4:	1c62b03a 	or	r17,r3,r17
 50923a8:	8822c03a 	cmpne	r17,r17,zero
 50923ac:	0005883a 	mov	r2,zero
 50923b0:	003f8906 	br	50921d8 <__alt_data_end+0xfffc3fd8>
 50923b4:	3809883a 	mov	r4,r7
 50923b8:	4821883a 	mov	r16,r9
 50923bc:	0011883a 	mov	r8,zero
 50923c0:	0005883a 	mov	r2,zero
 50923c4:	003eda06 	br	5091f30 <__alt_data_end+0xfffc3d30>
 50923c8:	0101ffc4 	movi	r4,2047
 50923cc:	49003b26 	beq	r9,r4,50924bc <__subdf3+0x7b4>
 50923d0:	0085c83a 	sub	r2,zero,r2
 50923d4:	18c02034 	orhi	r3,r3,128
 50923d8:	01000e04 	movi	r4,56
 50923dc:	20806e16 	blt	r4,r2,5092598 <__subdf3+0x890>
 50923e0:	010007c4 	movi	r4,31
 50923e4:	20807716 	blt	r4,r2,50925c4 <__subdf3+0x8bc>
 50923e8:	01000804 	movi	r4,32
 50923ec:	2089c83a 	sub	r4,r4,r2
 50923f0:	1914983a 	sll	r10,r3,r4
 50923f4:	8890d83a 	srl	r8,r17,r2
 50923f8:	8908983a 	sll	r4,r17,r4
 50923fc:	1884d83a 	srl	r2,r3,r2
 5092400:	5222b03a 	or	r17,r10,r8
 5092404:	2006c03a 	cmpne	r3,r4,zero
 5092408:	88e2b03a 	or	r17,r17,r3
 509240c:	89a3883a 	add	r17,r17,r6
 5092410:	1145883a 	add	r2,r2,r5
 5092414:	898d803a 	cmpltu	r6,r17,r6
 5092418:	3087883a 	add	r3,r6,r2
 509241c:	4821883a 	mov	r16,r9
 5092420:	003ed906 	br	5091f88 <__alt_data_end+0xfffc3d88>
 5092424:	2984b03a 	or	r2,r5,r6
 5092428:	10004226 	beq	r2,zero,5092534 <__subdf3+0x82c>
 509242c:	1808d0fa 	srli	r4,r3,3
 5092430:	8822d0fa 	srli	r17,r17,3
 5092434:	1806977a 	slli	r3,r3,29
 5092438:	2080022c 	andhi	r2,r4,8
 509243c:	1c62b03a 	or	r17,r3,r17
 5092440:	10000826 	beq	r2,zero,5092464 <__subdf3+0x75c>
 5092444:	2812d0fa 	srli	r9,r5,3
 5092448:	4880022c 	andhi	r2,r9,8
 509244c:	1000051e 	bne	r2,zero,5092464 <__subdf3+0x75c>
 5092450:	300cd0fa 	srli	r6,r6,3
 5092454:	2804977a 	slli	r2,r5,29
 5092458:	4809883a 	mov	r4,r9
 509245c:	3825883a 	mov	r18,r7
 5092460:	11a2b03a 	or	r17,r2,r6
 5092464:	8806d77a 	srli	r3,r17,29
 5092468:	200890fa 	slli	r4,r4,3
 509246c:	882290fa 	slli	r17,r17,3
 5092470:	0401ffc4 	movi	r16,2047
 5092474:	1906b03a 	or	r3,r3,r4
 5092478:	003e4406 	br	5091d8c <__alt_data_end+0xfffc3b8c>
 509247c:	2984b03a 	or	r2,r5,r6
 5092480:	103e4226 	beq	r2,zero,5091d8c <__alt_data_end+0xfffc3b8c>
 5092484:	8989c83a 	sub	r4,r17,r6
 5092488:	8911803a 	cmpltu	r8,r17,r4
 509248c:	1945c83a 	sub	r2,r3,r5
 5092490:	1205c83a 	sub	r2,r2,r8
 5092494:	1200202c 	andhi	r8,r2,128
 5092498:	403e9a26 	beq	r8,zero,5091f04 <__alt_data_end+0xfffc3d04>
 509249c:	3463c83a 	sub	r17,r6,r17
 50924a0:	28c5c83a 	sub	r2,r5,r3
 50924a4:	344d803a 	cmpltu	r6,r6,r17
 50924a8:	1187c83a 	sub	r3,r2,r6
 50924ac:	3825883a 	mov	r18,r7
 50924b0:	003e3606 	br	5091d8c <__alt_data_end+0xfffc3b8c>
 50924b4:	0101ffc4 	movi	r4,2047
 50924b8:	493fc71e 	bne	r9,r4,50923d8 <__alt_data_end+0xfffc41d8>
 50924bc:	2807883a 	mov	r3,r5
 50924c0:	3023883a 	mov	r17,r6
 50924c4:	4821883a 	mov	r16,r9
 50924c8:	003e3006 	br	5091d8c <__alt_data_end+0xfffc3b8c>
 50924cc:	10003626 	beq	r2,zero,50925a8 <__subdf3+0x8a0>
 50924d0:	2984b03a 	or	r2,r5,r6
 50924d4:	10001726 	beq	r2,zero,5092534 <__subdf3+0x82c>
 50924d8:	1808d0fa 	srli	r4,r3,3
 50924dc:	8822d0fa 	srli	r17,r17,3
 50924e0:	1806977a 	slli	r3,r3,29
 50924e4:	2080022c 	andhi	r2,r4,8
 50924e8:	1c62b03a 	or	r17,r3,r17
 50924ec:	10000726 	beq	r2,zero,509250c <__subdf3+0x804>
 50924f0:	2812d0fa 	srli	r9,r5,3
 50924f4:	4880022c 	andhi	r2,r9,8
 50924f8:	1000041e 	bne	r2,zero,509250c <__subdf3+0x804>
 50924fc:	300cd0fa 	srli	r6,r6,3
 5092500:	2804977a 	slli	r2,r5,29
 5092504:	4809883a 	mov	r4,r9
 5092508:	11a2b03a 	or	r17,r2,r6
 509250c:	8806d77a 	srli	r3,r17,29
 5092510:	200890fa 	slli	r4,r4,3
 5092514:	882290fa 	slli	r17,r17,3
 5092518:	3825883a 	mov	r18,r7
 509251c:	1906b03a 	or	r3,r3,r4
 5092520:	0401ffc4 	movi	r16,2047
 5092524:	003e1906 	br	5091d8c <__alt_data_end+0xfffc3b8c>
 5092528:	000b883a 	mov	r5,zero
 509252c:	0005883a 	mov	r2,zero
 5092530:	003e2e06 	br	5091dec <__alt_data_end+0xfffc3bec>
 5092534:	0401ffc4 	movi	r16,2047
 5092538:	003e1406 	br	5091d8c <__alt_data_end+0xfffc3b8c>
 509253c:	0005883a 	mov	r2,zero
 5092540:	003f7506 	br	5092318 <__alt_data_end+0xfffc4118>
 5092544:	0005883a 	mov	r2,zero
 5092548:	0009883a 	mov	r4,zero
 509254c:	003e7806 	br	5091f30 <__alt_data_end+0xfffc3d30>
 5092550:	123ff804 	addi	r8,r2,-32
 5092554:	01000804 	movi	r4,32
 5092558:	1a10d83a 	srl	r8,r3,r8
 509255c:	11002526 	beq	r2,r4,50925f4 <__subdf3+0x8ec>
 5092560:	01001004 	movi	r4,64
 5092564:	2085c83a 	sub	r2,r4,r2
 5092568:	1884983a 	sll	r2,r3,r2
 509256c:	1444b03a 	or	r2,r2,r17
 5092570:	1004c03a 	cmpne	r2,r2,zero
 5092574:	40a2b03a 	or	r17,r8,r2
 5092578:	0005883a 	mov	r2,zero
 509257c:	003f1606 	br	50921d8 <__alt_data_end+0xfffc3fd8>
 5092580:	02000434 	movhi	r8,16
 5092584:	0009883a 	mov	r4,zero
 5092588:	423fffc4 	addi	r8,r8,-1
 509258c:	00bfffc4 	movi	r2,-1
 5092590:	0401ffc4 	movi	r16,2047
 5092594:	003e6606 	br	5091f30 <__alt_data_end+0xfffc3d30>
 5092598:	1c62b03a 	or	r17,r3,r17
 509259c:	8822c03a 	cmpne	r17,r17,zero
 50925a0:	0005883a 	mov	r2,zero
 50925a4:	003f9906 	br	509240c <__alt_data_end+0xfffc420c>
 50925a8:	2807883a 	mov	r3,r5
 50925ac:	3023883a 	mov	r17,r6
 50925b0:	0401ffc4 	movi	r16,2047
 50925b4:	003df506 	br	5091d8c <__alt_data_end+0xfffc3b8c>
 50925b8:	2807883a 	mov	r3,r5
 50925bc:	3023883a 	mov	r17,r6
 50925c0:	003df206 	br	5091d8c <__alt_data_end+0xfffc3b8c>
 50925c4:	123ff804 	addi	r8,r2,-32
 50925c8:	01000804 	movi	r4,32
 50925cc:	1a10d83a 	srl	r8,r3,r8
 50925d0:	11000a26 	beq	r2,r4,50925fc <__subdf3+0x8f4>
 50925d4:	01001004 	movi	r4,64
 50925d8:	2085c83a 	sub	r2,r4,r2
 50925dc:	1884983a 	sll	r2,r3,r2
 50925e0:	1444b03a 	or	r2,r2,r17
 50925e4:	1004c03a 	cmpne	r2,r2,zero
 50925e8:	40a2b03a 	or	r17,r8,r2
 50925ec:	0005883a 	mov	r2,zero
 50925f0:	003f8606 	br	509240c <__alt_data_end+0xfffc420c>
 50925f4:	0005883a 	mov	r2,zero
 50925f8:	003fdc06 	br	509256c <__alt_data_end+0xfffc436c>
 50925fc:	0005883a 	mov	r2,zero
 5092600:	003ff706 	br	50925e0 <__alt_data_end+0xfffc43e0>

05092604 <__fixdfsi>:
 5092604:	280cd53a 	srli	r6,r5,20
 5092608:	00c00434 	movhi	r3,16
 509260c:	18ffffc4 	addi	r3,r3,-1
 5092610:	3181ffcc 	andi	r6,r6,2047
 5092614:	01c0ff84 	movi	r7,1022
 5092618:	28c6703a 	and	r3,r5,r3
 509261c:	280ad7fa 	srli	r5,r5,31
 5092620:	3980120e 	bge	r7,r6,509266c <__fixdfsi+0x68>
 5092624:	00810744 	movi	r2,1053
 5092628:	11800c16 	blt	r2,r6,509265c <__fixdfsi+0x58>
 509262c:	00810cc4 	movi	r2,1075
 5092630:	1185c83a 	sub	r2,r2,r6
 5092634:	01c007c4 	movi	r7,31
 5092638:	18c00434 	orhi	r3,r3,16
 509263c:	38800d16 	blt	r7,r2,5092674 <__fixdfsi+0x70>
 5092640:	31befb44 	addi	r6,r6,-1043
 5092644:	2084d83a 	srl	r2,r4,r2
 5092648:	1986983a 	sll	r3,r3,r6
 509264c:	1884b03a 	or	r2,r3,r2
 5092650:	28000726 	beq	r5,zero,5092670 <__fixdfsi+0x6c>
 5092654:	0085c83a 	sub	r2,zero,r2
 5092658:	f800283a 	ret
 509265c:	00a00034 	movhi	r2,32768
 5092660:	10bfffc4 	addi	r2,r2,-1
 5092664:	2885883a 	add	r2,r5,r2
 5092668:	f800283a 	ret
 509266c:	0005883a 	mov	r2,zero
 5092670:	f800283a 	ret
 5092674:	008104c4 	movi	r2,1043
 5092678:	1185c83a 	sub	r2,r2,r6
 509267c:	1884d83a 	srl	r2,r3,r2
 5092680:	003ff306 	br	5092650 <__alt_data_end+0xfffc4450>

05092684 <__floatsidf>:
 5092684:	defffd04 	addi	sp,sp,-12
 5092688:	dfc00215 	stw	ra,8(sp)
 509268c:	dc400115 	stw	r17,4(sp)
 5092690:	dc000015 	stw	r16,0(sp)
 5092694:	20002b26 	beq	r4,zero,5092744 <__floatsidf+0xc0>
 5092698:	2023883a 	mov	r17,r4
 509269c:	2020d7fa 	srli	r16,r4,31
 50926a0:	20002d16 	blt	r4,zero,5092758 <__floatsidf+0xd4>
 50926a4:	8809883a 	mov	r4,r17
 50926a8:	50928080 	call	5092808 <__clzsi2>
 50926ac:	01410784 	movi	r5,1054
 50926b0:	288bc83a 	sub	r5,r5,r2
 50926b4:	01010cc4 	movi	r4,1075
 50926b8:	2149c83a 	sub	r4,r4,r5
 50926bc:	00c007c4 	movi	r3,31
 50926c0:	1900160e 	bge	r3,r4,509271c <__floatsidf+0x98>
 50926c4:	00c104c4 	movi	r3,1043
 50926c8:	1947c83a 	sub	r3,r3,r5
 50926cc:	88c6983a 	sll	r3,r17,r3
 50926d0:	00800434 	movhi	r2,16
 50926d4:	10bfffc4 	addi	r2,r2,-1
 50926d8:	1886703a 	and	r3,r3,r2
 50926dc:	2941ffcc 	andi	r5,r5,2047
 50926e0:	800d883a 	mov	r6,r16
 50926e4:	0005883a 	mov	r2,zero
 50926e8:	280a953a 	slli	r5,r5,20
 50926ec:	31803fcc 	andi	r6,r6,255
 50926f0:	01000434 	movhi	r4,16
 50926f4:	300c97fa 	slli	r6,r6,31
 50926f8:	213fffc4 	addi	r4,r4,-1
 50926fc:	1906703a 	and	r3,r3,r4
 5092700:	1946b03a 	or	r3,r3,r5
 5092704:	1986b03a 	or	r3,r3,r6
 5092708:	dfc00217 	ldw	ra,8(sp)
 509270c:	dc400117 	ldw	r17,4(sp)
 5092710:	dc000017 	ldw	r16,0(sp)
 5092714:	dec00304 	addi	sp,sp,12
 5092718:	f800283a 	ret
 509271c:	00c002c4 	movi	r3,11
 5092720:	1887c83a 	sub	r3,r3,r2
 5092724:	88c6d83a 	srl	r3,r17,r3
 5092728:	8904983a 	sll	r2,r17,r4
 509272c:	01000434 	movhi	r4,16
 5092730:	213fffc4 	addi	r4,r4,-1
 5092734:	2941ffcc 	andi	r5,r5,2047
 5092738:	1906703a 	and	r3,r3,r4
 509273c:	800d883a 	mov	r6,r16
 5092740:	003fe906 	br	50926e8 <__alt_data_end+0xfffc44e8>
 5092744:	000d883a 	mov	r6,zero
 5092748:	000b883a 	mov	r5,zero
 509274c:	0007883a 	mov	r3,zero
 5092750:	0005883a 	mov	r2,zero
 5092754:	003fe406 	br	50926e8 <__alt_data_end+0xfffc44e8>
 5092758:	0123c83a 	sub	r17,zero,r4
 509275c:	003fd106 	br	50926a4 <__alt_data_end+0xfffc44a4>

05092760 <__floatunsidf>:
 5092760:	defffe04 	addi	sp,sp,-8
 5092764:	dc000015 	stw	r16,0(sp)
 5092768:	dfc00115 	stw	ra,4(sp)
 509276c:	2021883a 	mov	r16,r4
 5092770:	20002226 	beq	r4,zero,50927fc <__floatunsidf+0x9c>
 5092774:	50928080 	call	5092808 <__clzsi2>
 5092778:	01010784 	movi	r4,1054
 509277c:	2089c83a 	sub	r4,r4,r2
 5092780:	01810cc4 	movi	r6,1075
 5092784:	310dc83a 	sub	r6,r6,r4
 5092788:	00c007c4 	movi	r3,31
 509278c:	1980120e 	bge	r3,r6,50927d8 <__floatunsidf+0x78>
 5092790:	00c104c4 	movi	r3,1043
 5092794:	1907c83a 	sub	r3,r3,r4
 5092798:	80ca983a 	sll	r5,r16,r3
 509279c:	00800434 	movhi	r2,16
 50927a0:	10bfffc4 	addi	r2,r2,-1
 50927a4:	2101ffcc 	andi	r4,r4,2047
 50927a8:	0021883a 	mov	r16,zero
 50927ac:	288a703a 	and	r5,r5,r2
 50927b0:	2008953a 	slli	r4,r4,20
 50927b4:	00c00434 	movhi	r3,16
 50927b8:	18ffffc4 	addi	r3,r3,-1
 50927bc:	28c6703a 	and	r3,r5,r3
 50927c0:	8005883a 	mov	r2,r16
 50927c4:	1906b03a 	or	r3,r3,r4
 50927c8:	dfc00117 	ldw	ra,4(sp)
 50927cc:	dc000017 	ldw	r16,0(sp)
 50927d0:	dec00204 	addi	sp,sp,8
 50927d4:	f800283a 	ret
 50927d8:	00c002c4 	movi	r3,11
 50927dc:	188bc83a 	sub	r5,r3,r2
 50927e0:	814ad83a 	srl	r5,r16,r5
 50927e4:	00c00434 	movhi	r3,16
 50927e8:	18ffffc4 	addi	r3,r3,-1
 50927ec:	81a0983a 	sll	r16,r16,r6
 50927f0:	2101ffcc 	andi	r4,r4,2047
 50927f4:	28ca703a 	and	r5,r5,r3
 50927f8:	003fed06 	br	50927b0 <__alt_data_end+0xfffc45b0>
 50927fc:	0009883a 	mov	r4,zero
 5092800:	000b883a 	mov	r5,zero
 5092804:	003fea06 	br	50927b0 <__alt_data_end+0xfffc45b0>

05092808 <__clzsi2>:
 5092808:	00bfffd4 	movui	r2,65535
 509280c:	11000536 	bltu	r2,r4,5092824 <__clzsi2+0x1c>
 5092810:	00803fc4 	movi	r2,255
 5092814:	11000f36 	bltu	r2,r4,5092854 <__clzsi2+0x4c>
 5092818:	00800804 	movi	r2,32
 509281c:	0007883a 	mov	r3,zero
 5092820:	00000506 	br	5092838 <__clzsi2+0x30>
 5092824:	00804034 	movhi	r2,256
 5092828:	10bfffc4 	addi	r2,r2,-1
 509282c:	11000c2e 	bgeu	r2,r4,5092860 <__clzsi2+0x58>
 5092830:	00800204 	movi	r2,8
 5092834:	00c00604 	movi	r3,24
 5092838:	20c8d83a 	srl	r4,r4,r3
 509283c:	00c14274 	movhi	r3,1289
 5092840:	18d82604 	addi	r3,r3,24728
 5092844:	1909883a 	add	r4,r3,r4
 5092848:	20c00003 	ldbu	r3,0(r4)
 509284c:	10c5c83a 	sub	r2,r2,r3
 5092850:	f800283a 	ret
 5092854:	00800604 	movi	r2,24
 5092858:	00c00204 	movi	r3,8
 509285c:	003ff606 	br	5092838 <__alt_data_end+0xfffc4638>
 5092860:	00800404 	movi	r2,16
 5092864:	1007883a 	mov	r3,r2
 5092868:	003ff306 	br	5092838 <__alt_data_end+0xfffc4638>

0509286c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 509286c:	defffe04 	addi	sp,sp,-8
 5092870:	dfc00115 	stw	ra,4(sp)
 5092874:	df000015 	stw	fp,0(sp)
 5092878:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 509287c:	00814274 	movhi	r2,1289
 5092880:	109f2b04 	addi	r2,r2,31916
 5092884:	10800017 	ldw	r2,0(r2)
 5092888:	10000526 	beq	r2,zero,50928a0 <alt_get_errno+0x34>
 509288c:	00814274 	movhi	r2,1289
 5092890:	109f2b04 	addi	r2,r2,31916
 5092894:	10800017 	ldw	r2,0(r2)
 5092898:	103ee83a 	callr	r2
 509289c:	00000206 	br	50928a8 <alt_get_errno+0x3c>
 50928a0:	008142b4 	movhi	r2,1290
 50928a4:	10a5f804 	addi	r2,r2,-26656
}
 50928a8:	e037883a 	mov	sp,fp
 50928ac:	dfc00117 	ldw	ra,4(sp)
 50928b0:	df000017 	ldw	fp,0(sp)
 50928b4:	dec00204 	addi	sp,sp,8
 50928b8:	f800283a 	ret

050928bc <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 50928bc:	defffb04 	addi	sp,sp,-20
 50928c0:	dfc00415 	stw	ra,16(sp)
 50928c4:	df000315 	stw	fp,12(sp)
 50928c8:	df000304 	addi	fp,sp,12
 50928cc:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 50928d0:	e0bfff17 	ldw	r2,-4(fp)
 50928d4:	10000616 	blt	r2,zero,50928f0 <close+0x34>
 50928d8:	e0bfff17 	ldw	r2,-4(fp)
 50928dc:	10c00324 	muli	r3,r2,12
 50928e0:	00814274 	movhi	r2,1289
 50928e4:	109aa804 	addi	r2,r2,27296
 50928e8:	1885883a 	add	r2,r3,r2
 50928ec:	00000106 	br	50928f4 <close+0x38>
 50928f0:	0005883a 	mov	r2,zero
 50928f4:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 50928f8:	e0bffd17 	ldw	r2,-12(fp)
 50928fc:	10001926 	beq	r2,zero,5092964 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 5092900:	e0bffd17 	ldw	r2,-12(fp)
 5092904:	10800017 	ldw	r2,0(r2)
 5092908:	10800417 	ldw	r2,16(r2)
 509290c:	10000626 	beq	r2,zero,5092928 <close+0x6c>
 5092910:	e0bffd17 	ldw	r2,-12(fp)
 5092914:	10800017 	ldw	r2,0(r2)
 5092918:	10800417 	ldw	r2,16(r2)
 509291c:	e13ffd17 	ldw	r4,-12(fp)
 5092920:	103ee83a 	callr	r2
 5092924:	00000106 	br	509292c <close+0x70>
 5092928:	0005883a 	mov	r2,zero
 509292c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 5092930:	e13fff17 	ldw	r4,-4(fp)
 5092934:	509317c0 	call	509317c <alt_release_fd>
    if (rval < 0)
 5092938:	e0bffe17 	ldw	r2,-8(fp)
 509293c:	1000070e 	bge	r2,zero,509295c <close+0xa0>
    {
      ALT_ERRNO = -rval;
 5092940:	509286c0 	call	509286c <alt_get_errno>
 5092944:	1007883a 	mov	r3,r2
 5092948:	e0bffe17 	ldw	r2,-8(fp)
 509294c:	0085c83a 	sub	r2,zero,r2
 5092950:	18800015 	stw	r2,0(r3)
      return -1;
 5092954:	00bfffc4 	movi	r2,-1
 5092958:	00000706 	br	5092978 <close+0xbc>
    }
    return 0;
 509295c:	0005883a 	mov	r2,zero
 5092960:	00000506 	br	5092978 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 5092964:	509286c0 	call	509286c <alt_get_errno>
 5092968:	1007883a 	mov	r3,r2
 509296c:	00801444 	movi	r2,81
 5092970:	18800015 	stw	r2,0(r3)
    return -1;
 5092974:	00bfffc4 	movi	r2,-1
  }
}
 5092978:	e037883a 	mov	sp,fp
 509297c:	dfc00117 	ldw	ra,4(sp)
 5092980:	df000017 	ldw	fp,0(sp)
 5092984:	dec00204 	addi	sp,sp,8
 5092988:	f800283a 	ret

0509298c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 509298c:	defffc04 	addi	sp,sp,-16
 5092990:	df000315 	stw	fp,12(sp)
 5092994:	df000304 	addi	fp,sp,12
 5092998:	e13ffd15 	stw	r4,-12(fp)
 509299c:	e17ffe15 	stw	r5,-8(fp)
 50929a0:	e1bfff15 	stw	r6,-4(fp)
  return len;
 50929a4:	e0bfff17 	ldw	r2,-4(fp)
}
 50929a8:	e037883a 	mov	sp,fp
 50929ac:	df000017 	ldw	fp,0(sp)
 50929b0:	dec00104 	addi	sp,sp,4
 50929b4:	f800283a 	ret

050929b8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 50929b8:	defffe04 	addi	sp,sp,-8
 50929bc:	dfc00115 	stw	ra,4(sp)
 50929c0:	df000015 	stw	fp,0(sp)
 50929c4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 50929c8:	00814274 	movhi	r2,1289
 50929cc:	109f2b04 	addi	r2,r2,31916
 50929d0:	10800017 	ldw	r2,0(r2)
 50929d4:	10000526 	beq	r2,zero,50929ec <alt_get_errno+0x34>
 50929d8:	00814274 	movhi	r2,1289
 50929dc:	109f2b04 	addi	r2,r2,31916
 50929e0:	10800017 	ldw	r2,0(r2)
 50929e4:	103ee83a 	callr	r2
 50929e8:	00000206 	br	50929f4 <alt_get_errno+0x3c>
 50929ec:	008142b4 	movhi	r2,1290
 50929f0:	10a5f804 	addi	r2,r2,-26656
}
 50929f4:	e037883a 	mov	sp,fp
 50929f8:	dfc00117 	ldw	ra,4(sp)
 50929fc:	df000017 	ldw	fp,0(sp)
 5092a00:	dec00204 	addi	sp,sp,8
 5092a04:	f800283a 	ret

05092a08 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 5092a08:	defffb04 	addi	sp,sp,-20
 5092a0c:	dfc00415 	stw	ra,16(sp)
 5092a10:	df000315 	stw	fp,12(sp)
 5092a14:	df000304 	addi	fp,sp,12
 5092a18:	e13ffe15 	stw	r4,-8(fp)
 5092a1c:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 5092a20:	e0bffe17 	ldw	r2,-8(fp)
 5092a24:	10000616 	blt	r2,zero,5092a40 <fstat+0x38>
 5092a28:	e0bffe17 	ldw	r2,-8(fp)
 5092a2c:	10c00324 	muli	r3,r2,12
 5092a30:	00814274 	movhi	r2,1289
 5092a34:	109aa804 	addi	r2,r2,27296
 5092a38:	1885883a 	add	r2,r3,r2
 5092a3c:	00000106 	br	5092a44 <fstat+0x3c>
 5092a40:	0005883a 	mov	r2,zero
 5092a44:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 5092a48:	e0bffd17 	ldw	r2,-12(fp)
 5092a4c:	10001026 	beq	r2,zero,5092a90 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 5092a50:	e0bffd17 	ldw	r2,-12(fp)
 5092a54:	10800017 	ldw	r2,0(r2)
 5092a58:	10800817 	ldw	r2,32(r2)
 5092a5c:	10000726 	beq	r2,zero,5092a7c <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
 5092a60:	e0bffd17 	ldw	r2,-12(fp)
 5092a64:	10800017 	ldw	r2,0(r2)
 5092a68:	10800817 	ldw	r2,32(r2)
 5092a6c:	e17fff17 	ldw	r5,-4(fp)
 5092a70:	e13ffd17 	ldw	r4,-12(fp)
 5092a74:	103ee83a 	callr	r2
 5092a78:	00000a06 	br	5092aa4 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 5092a7c:	e0bfff17 	ldw	r2,-4(fp)
 5092a80:	00c80004 	movi	r3,8192
 5092a84:	10c00115 	stw	r3,4(r2)
      return 0;
 5092a88:	0005883a 	mov	r2,zero
 5092a8c:	00000506 	br	5092aa4 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 5092a90:	50929b80 	call	50929b8 <alt_get_errno>
 5092a94:	1007883a 	mov	r3,r2
 5092a98:	00801444 	movi	r2,81
 5092a9c:	18800015 	stw	r2,0(r3)
    return -1;
 5092aa0:	00bfffc4 	movi	r2,-1
  }
}
 5092aa4:	e037883a 	mov	sp,fp
 5092aa8:	dfc00117 	ldw	ra,4(sp)
 5092aac:	df000017 	ldw	fp,0(sp)
 5092ab0:	dec00204 	addi	sp,sp,8
 5092ab4:	f800283a 	ret

05092ab8 <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
 5092ab8:	defff004 	addi	sp,sp,-64
 5092abc:	df000f15 	stw	fp,60(sp)
 5092ac0:	df000f04 	addi	fp,sp,60
 5092ac4:	e13ffd15 	stw	r4,-12(fp)
 5092ac8:	e17ffe15 	stw	r5,-8(fp)
 5092acc:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
 5092ad0:	00bffa84 	movi	r2,-22
 5092ad4:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 5092ad8:	e0bffd17 	ldw	r2,-12(fp)
 5092adc:	10800828 	cmpgeui	r2,r2,32
 5092ae0:	10005c1e 	bne	r2,zero,5092c54 <alt_irq_register+0x19c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 5092ae4:	0005303a 	rdctl	r2,status
 5092ae8:	e0bff615 	stw	r2,-40(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 5092aec:	e0fff617 	ldw	r3,-40(fp)
 5092af0:	00bfff84 	movi	r2,-2
 5092af4:	1884703a 	and	r2,r3,r2
 5092af8:	1001703a 	wrctl	status,r2
  
  return context;
 5092afc:	e0bff617 	ldw	r2,-40(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
 5092b00:	e0bff315 	stw	r2,-52(fp)

    alt_irq[id].handler = handler;
 5092b04:	008142b4 	movhi	r2,1290
 5092b08:	10a61304 	addi	r2,r2,-26548
 5092b0c:	e0fffd17 	ldw	r3,-12(fp)
 5092b10:	180690fa 	slli	r3,r3,3
 5092b14:	10c5883a 	add	r2,r2,r3
 5092b18:	e0ffff17 	ldw	r3,-4(fp)
 5092b1c:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
 5092b20:	008142b4 	movhi	r2,1290
 5092b24:	10a61304 	addi	r2,r2,-26548
 5092b28:	e0fffd17 	ldw	r3,-12(fp)
 5092b2c:	180690fa 	slli	r3,r3,3
 5092b30:	10c5883a 	add	r2,r2,r3
 5092b34:	10800104 	addi	r2,r2,4
 5092b38:	e0fffe17 	ldw	r3,-8(fp)
 5092b3c:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
 5092b40:	e0bfff17 	ldw	r2,-4(fp)
 5092b44:	10001f26 	beq	r2,zero,5092bc4 <alt_irq_register+0x10c>
 5092b48:	e0bffd17 	ldw	r2,-12(fp)
 5092b4c:	e0bff215 	stw	r2,-56(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 5092b50:	0005303a 	rdctl	r2,status
 5092b54:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 5092b58:	e0fff717 	ldw	r3,-36(fp)
 5092b5c:	00bfff84 	movi	r2,-2
 5092b60:	1884703a 	and	r2,r3,r2
 5092b64:	1001703a 	wrctl	status,r2
  
  return context;
 5092b68:	e0bff717 	ldw	r2,-36(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 5092b6c:	e0bff815 	stw	r2,-32(fp)

  alt_irq_active |= (1 << id);
 5092b70:	00c00044 	movi	r3,1
 5092b74:	e0bff217 	ldw	r2,-56(fp)
 5092b78:	1884983a 	sll	r2,r3,r2
 5092b7c:	1007883a 	mov	r3,r2
 5092b80:	008142b4 	movhi	r2,1290
 5092b84:	10a5f904 	addi	r2,r2,-26652
 5092b88:	10800017 	ldw	r2,0(r2)
 5092b8c:	1886b03a 	or	r3,r3,r2
 5092b90:	008142b4 	movhi	r2,1290
 5092b94:	10a5f904 	addi	r2,r2,-26652
 5092b98:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 5092b9c:	008142b4 	movhi	r2,1290
 5092ba0:	10a5f904 	addi	r2,r2,-26652
 5092ba4:	10800017 	ldw	r2,0(r2)
 5092ba8:	100170fa 	wrctl	ienable,r2
 5092bac:	e0bff817 	ldw	r2,-32(fp)
 5092bb0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 5092bb4:	e0bff917 	ldw	r2,-28(fp)
 5092bb8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 5092bbc:	0005883a 	mov	r2,zero
 5092bc0:	00001f06 	br	5092c40 <alt_irq_register+0x188>
 5092bc4:	e0bffd17 	ldw	r2,-12(fp)
 5092bc8:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 5092bcc:	0005303a 	rdctl	r2,status
 5092bd0:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 5092bd4:	e0fffa17 	ldw	r3,-24(fp)
 5092bd8:	00bfff84 	movi	r2,-2
 5092bdc:	1884703a 	and	r2,r3,r2
 5092be0:	1001703a 	wrctl	status,r2
  
  return context;
 5092be4:	e0bffa17 	ldw	r2,-24(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 5092be8:	e0bffb15 	stw	r2,-20(fp)

  alt_irq_active &= ~(1 << id);
 5092bec:	00c00044 	movi	r3,1
 5092bf0:	e0bff417 	ldw	r2,-48(fp)
 5092bf4:	1884983a 	sll	r2,r3,r2
 5092bf8:	0084303a 	nor	r2,zero,r2
 5092bfc:	1007883a 	mov	r3,r2
 5092c00:	008142b4 	movhi	r2,1290
 5092c04:	10a5f904 	addi	r2,r2,-26652
 5092c08:	10800017 	ldw	r2,0(r2)
 5092c0c:	1886703a 	and	r3,r3,r2
 5092c10:	008142b4 	movhi	r2,1290
 5092c14:	10a5f904 	addi	r2,r2,-26652
 5092c18:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 5092c1c:	008142b4 	movhi	r2,1290
 5092c20:	10a5f904 	addi	r2,r2,-26652
 5092c24:	10800017 	ldw	r2,0(r2)
 5092c28:	100170fa 	wrctl	ienable,r2
 5092c2c:	e0bffb17 	ldw	r2,-20(fp)
 5092c30:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 5092c34:	e0bffc17 	ldw	r2,-16(fp)
 5092c38:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 5092c3c:	0005883a 	mov	r2,zero
 5092c40:	e0bff115 	stw	r2,-60(fp)
 5092c44:	e0bff317 	ldw	r2,-52(fp)
 5092c48:	e0bff515 	stw	r2,-44(fp)
 5092c4c:	e0bff517 	ldw	r2,-44(fp)
 5092c50:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
 5092c54:	e0bff117 	ldw	r2,-60(fp)
}
 5092c58:	e037883a 	mov	sp,fp
 5092c5c:	df000017 	ldw	fp,0(sp)
 5092c60:	dec00104 	addi	sp,sp,4
 5092c64:	f800283a 	ret

05092c68 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 5092c68:	defffe04 	addi	sp,sp,-8
 5092c6c:	dfc00115 	stw	ra,4(sp)
 5092c70:	df000015 	stw	fp,0(sp)
 5092c74:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 5092c78:	00814274 	movhi	r2,1289
 5092c7c:	109f2b04 	addi	r2,r2,31916
 5092c80:	10800017 	ldw	r2,0(r2)
 5092c84:	10000526 	beq	r2,zero,5092c9c <alt_get_errno+0x34>
 5092c88:	00814274 	movhi	r2,1289
 5092c8c:	109f2b04 	addi	r2,r2,31916
 5092c90:	10800017 	ldw	r2,0(r2)
 5092c94:	103ee83a 	callr	r2
 5092c98:	00000206 	br	5092ca4 <alt_get_errno+0x3c>
 5092c9c:	008142b4 	movhi	r2,1290
 5092ca0:	10a5f804 	addi	r2,r2,-26656
}
 5092ca4:	e037883a 	mov	sp,fp
 5092ca8:	dfc00117 	ldw	ra,4(sp)
 5092cac:	df000017 	ldw	fp,0(sp)
 5092cb0:	dec00204 	addi	sp,sp,8
 5092cb4:	f800283a 	ret

05092cb8 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 5092cb8:	deffed04 	addi	sp,sp,-76
 5092cbc:	dfc01215 	stw	ra,72(sp)
 5092cc0:	df001115 	stw	fp,68(sp)
 5092cc4:	df001104 	addi	fp,sp,68
 5092cc8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 5092ccc:	e0bfff17 	ldw	r2,-4(fp)
 5092cd0:	10000616 	blt	r2,zero,5092cec <isatty+0x34>
 5092cd4:	e0bfff17 	ldw	r2,-4(fp)
 5092cd8:	10c00324 	muli	r3,r2,12
 5092cdc:	00814274 	movhi	r2,1289
 5092ce0:	109aa804 	addi	r2,r2,27296
 5092ce4:	1885883a 	add	r2,r3,r2
 5092ce8:	00000106 	br	5092cf0 <isatty+0x38>
 5092cec:	0005883a 	mov	r2,zero
 5092cf0:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 5092cf4:	e0bfef17 	ldw	r2,-68(fp)
 5092cf8:	10000e26 	beq	r2,zero,5092d34 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 5092cfc:	e0bfef17 	ldw	r2,-68(fp)
 5092d00:	10800017 	ldw	r2,0(r2)
 5092d04:	10800817 	ldw	r2,32(r2)
 5092d08:	1000021e 	bne	r2,zero,5092d14 <isatty+0x5c>
    {
      return 1;
 5092d0c:	00800044 	movi	r2,1
 5092d10:	00000d06 	br	5092d48 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 5092d14:	e0bff004 	addi	r2,fp,-64
 5092d18:	100b883a 	mov	r5,r2
 5092d1c:	e13fff17 	ldw	r4,-4(fp)
 5092d20:	5092a080 	call	5092a08 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 5092d24:	e0bff117 	ldw	r2,-60(fp)
 5092d28:	10880020 	cmpeqi	r2,r2,8192
 5092d2c:	10803fcc 	andi	r2,r2,255
 5092d30:	00000506 	br	5092d48 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 5092d34:	5092c680 	call	5092c68 <alt_get_errno>
 5092d38:	1007883a 	mov	r3,r2
 5092d3c:	00801444 	movi	r2,81
 5092d40:	18800015 	stw	r2,0(r3)
    return 0;
 5092d44:	0005883a 	mov	r2,zero
  }
}
 5092d48:	e037883a 	mov	sp,fp
 5092d4c:	dfc00117 	ldw	ra,4(sp)
 5092d50:	df000017 	ldw	fp,0(sp)
 5092d54:	dec00204 	addi	sp,sp,8
 5092d58:	f800283a 	ret

05092d5c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 5092d5c:	defffc04 	addi	sp,sp,-16
 5092d60:	df000315 	stw	fp,12(sp)
 5092d64:	df000304 	addi	fp,sp,12
 5092d68:	e13ffd15 	stw	r4,-12(fp)
 5092d6c:	e17ffe15 	stw	r5,-8(fp)
 5092d70:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 5092d74:	e0fffe17 	ldw	r3,-8(fp)
 5092d78:	e0bffd17 	ldw	r2,-12(fp)
 5092d7c:	18800c26 	beq	r3,r2,5092db0 <alt_load_section+0x54>
  {
    while( to != end )
 5092d80:	00000806 	br	5092da4 <alt_load_section+0x48>
    {
      *to++ = *from++;
 5092d84:	e0bffe17 	ldw	r2,-8(fp)
 5092d88:	10c00104 	addi	r3,r2,4
 5092d8c:	e0fffe15 	stw	r3,-8(fp)
 5092d90:	e0fffd17 	ldw	r3,-12(fp)
 5092d94:	19000104 	addi	r4,r3,4
 5092d98:	e13ffd15 	stw	r4,-12(fp)
 5092d9c:	18c00017 	ldw	r3,0(r3)
 5092da0:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 5092da4:	e0fffe17 	ldw	r3,-8(fp)
 5092da8:	e0bfff17 	ldw	r2,-4(fp)
 5092dac:	18bff51e 	bne	r3,r2,5092d84 <__alt_data_end+0xfffc4b84>
    {
      *to++ = *from++;
    }
  }
}
 5092db0:	0001883a 	nop
 5092db4:	e037883a 	mov	sp,fp
 5092db8:	df000017 	ldw	fp,0(sp)
 5092dbc:	dec00104 	addi	sp,sp,4
 5092dc0:	f800283a 	ret

05092dc4 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 5092dc4:	defffe04 	addi	sp,sp,-8
 5092dc8:	dfc00115 	stw	ra,4(sp)
 5092dcc:	df000015 	stw	fp,0(sp)
 5092dd0:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 5092dd4:	01814274 	movhi	r6,1289
 5092dd8:	319f3004 	addi	r6,r6,31936
 5092ddc:	01414274 	movhi	r5,1289
 5092de0:	29587104 	addi	r5,r5,25028
 5092de4:	01014274 	movhi	r4,1289
 5092de8:	211f3004 	addi	r4,r4,31936
 5092dec:	5092d5c0 	call	5092d5c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 5092df0:	01814234 	movhi	r6,1288
 5092df4:	31807004 	addi	r6,r6,448
 5092df8:	01414234 	movhi	r5,1288
 5092dfc:	29400804 	addi	r5,r5,32
 5092e00:	01014234 	movhi	r4,1288
 5092e04:	21000804 	addi	r4,r4,32
 5092e08:	5092d5c0 	call	5092d5c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 5092e0c:	01814274 	movhi	r6,1289
 5092e10:	31987104 	addi	r6,r6,25028
 5092e14:	01414274 	movhi	r5,1289
 5092e18:	2954fa04 	addi	r5,r5,21480
 5092e1c:	01014274 	movhi	r4,1289
 5092e20:	2114fa04 	addi	r4,r4,21480
 5092e24:	5092d5c0 	call	5092d5c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 5092e28:	50942f00 	call	50942f0 <alt_dcache_flush_all>
  alt_icache_flush_all();
 5092e2c:	50944ec0 	call	50944ec <alt_icache_flush_all>
}
 5092e30:	0001883a 	nop
 5092e34:	e037883a 	mov	sp,fp
 5092e38:	dfc00117 	ldw	ra,4(sp)
 5092e3c:	df000017 	ldw	fp,0(sp)
 5092e40:	dec00204 	addi	sp,sp,8
 5092e44:	f800283a 	ret

05092e48 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 5092e48:	defffe04 	addi	sp,sp,-8
 5092e4c:	dfc00115 	stw	ra,4(sp)
 5092e50:	df000015 	stw	fp,0(sp)
 5092e54:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 5092e58:	00814274 	movhi	r2,1289
 5092e5c:	109f2b04 	addi	r2,r2,31916
 5092e60:	10800017 	ldw	r2,0(r2)
 5092e64:	10000526 	beq	r2,zero,5092e7c <alt_get_errno+0x34>
 5092e68:	00814274 	movhi	r2,1289
 5092e6c:	109f2b04 	addi	r2,r2,31916
 5092e70:	10800017 	ldw	r2,0(r2)
 5092e74:	103ee83a 	callr	r2
 5092e78:	00000206 	br	5092e84 <alt_get_errno+0x3c>
 5092e7c:	008142b4 	movhi	r2,1290
 5092e80:	10a5f804 	addi	r2,r2,-26656
}
 5092e84:	e037883a 	mov	sp,fp
 5092e88:	dfc00117 	ldw	ra,4(sp)
 5092e8c:	df000017 	ldw	fp,0(sp)
 5092e90:	dec00204 	addi	sp,sp,8
 5092e94:	f800283a 	ret

05092e98 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 5092e98:	defff904 	addi	sp,sp,-28
 5092e9c:	dfc00615 	stw	ra,24(sp)
 5092ea0:	df000515 	stw	fp,20(sp)
 5092ea4:	df000504 	addi	fp,sp,20
 5092ea8:	e13ffd15 	stw	r4,-12(fp)
 5092eac:	e17ffe15 	stw	r5,-8(fp)
 5092eb0:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 5092eb4:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 5092eb8:	e0bffd17 	ldw	r2,-12(fp)
 5092ebc:	10000616 	blt	r2,zero,5092ed8 <lseek+0x40>
 5092ec0:	e0bffd17 	ldw	r2,-12(fp)
 5092ec4:	10c00324 	muli	r3,r2,12
 5092ec8:	00814274 	movhi	r2,1289
 5092ecc:	109aa804 	addi	r2,r2,27296
 5092ed0:	1885883a 	add	r2,r3,r2
 5092ed4:	00000106 	br	5092edc <lseek+0x44>
 5092ed8:	0005883a 	mov	r2,zero
 5092edc:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 5092ee0:	e0bffc17 	ldw	r2,-16(fp)
 5092ee4:	10001026 	beq	r2,zero,5092f28 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 5092ee8:	e0bffc17 	ldw	r2,-16(fp)
 5092eec:	10800017 	ldw	r2,0(r2)
 5092ef0:	10800717 	ldw	r2,28(r2)
 5092ef4:	10000926 	beq	r2,zero,5092f1c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 5092ef8:	e0bffc17 	ldw	r2,-16(fp)
 5092efc:	10800017 	ldw	r2,0(r2)
 5092f00:	10800717 	ldw	r2,28(r2)
 5092f04:	e1bfff17 	ldw	r6,-4(fp)
 5092f08:	e17ffe17 	ldw	r5,-8(fp)
 5092f0c:	e13ffc17 	ldw	r4,-16(fp)
 5092f10:	103ee83a 	callr	r2
 5092f14:	e0bffb15 	stw	r2,-20(fp)
 5092f18:	00000506 	br	5092f30 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 5092f1c:	00bfde84 	movi	r2,-134
 5092f20:	e0bffb15 	stw	r2,-20(fp)
 5092f24:	00000206 	br	5092f30 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
 5092f28:	00bfebc4 	movi	r2,-81
 5092f2c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 5092f30:	e0bffb17 	ldw	r2,-20(fp)
 5092f34:	1000070e 	bge	r2,zero,5092f54 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
 5092f38:	5092e480 	call	5092e48 <alt_get_errno>
 5092f3c:	1007883a 	mov	r3,r2
 5092f40:	e0bffb17 	ldw	r2,-20(fp)
 5092f44:	0085c83a 	sub	r2,zero,r2
 5092f48:	18800015 	stw	r2,0(r3)
    rc = -1;
 5092f4c:	00bfffc4 	movi	r2,-1
 5092f50:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 5092f54:	e0bffb17 	ldw	r2,-20(fp)
}
 5092f58:	e037883a 	mov	sp,fp
 5092f5c:	dfc00117 	ldw	ra,4(sp)
 5092f60:	df000017 	ldw	fp,0(sp)
 5092f64:	dec00204 	addi	sp,sp,8
 5092f68:	f800283a 	ret

05092f6c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 5092f6c:	defffd04 	addi	sp,sp,-12
 5092f70:	dfc00215 	stw	ra,8(sp)
 5092f74:	df000115 	stw	fp,4(sp)
 5092f78:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 5092f7c:	0009883a 	mov	r4,zero
 5092f80:	50934400 	call	5093440 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 5092f84:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 5092f88:	50934780 	call	5093478 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 5092f8c:	01814274 	movhi	r6,1289
 5092f90:	31986904 	addi	r6,r6,24996
 5092f94:	01414274 	movhi	r5,1289
 5092f98:	29586904 	addi	r5,r5,24996
 5092f9c:	01014274 	movhi	r4,1289
 5092fa0:	21186904 	addi	r4,r4,24996
 5092fa4:	50948b40 	call	50948b4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 5092fa8:	509442c0 	call	509442c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 5092fac:	01014274 	movhi	r4,1289
 5092fb0:	21112304 	addi	r4,r4,17548
 5092fb4:	50950540 	call	5095054 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 5092fb8:	d0a6da17 	ldw	r2,-25752(gp)
 5092fbc:	d0e6db17 	ldw	r3,-25748(gp)
 5092fc0:	d126dc17 	ldw	r4,-25744(gp)
 5092fc4:	200d883a 	mov	r6,r4
 5092fc8:	180b883a 	mov	r5,r3
 5092fcc:	1009883a 	mov	r4,r2
 5092fd0:	50822f80 	call	50822f8 <main>
 5092fd4:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 5092fd8:	01000044 	movi	r4,1
 5092fdc:	50928bc0 	call	50928bc <close>
  exit (result);
 5092fe0:	e13fff17 	ldw	r4,-4(fp)
 5092fe4:	50950680 	call	5095068 <exit>

05092fe8 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 5092fe8:	defffe04 	addi	sp,sp,-8
 5092fec:	df000115 	stw	fp,4(sp)
 5092ff0:	df000104 	addi	fp,sp,4
 5092ff4:	e13fff15 	stw	r4,-4(fp)
}
 5092ff8:	0001883a 	nop
 5092ffc:	e037883a 	mov	sp,fp
 5093000:	df000017 	ldw	fp,0(sp)
 5093004:	dec00104 	addi	sp,sp,4
 5093008:	f800283a 	ret

0509300c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 509300c:	defffe04 	addi	sp,sp,-8
 5093010:	df000115 	stw	fp,4(sp)
 5093014:	df000104 	addi	fp,sp,4
 5093018:	e13fff15 	stw	r4,-4(fp)
}
 509301c:	0001883a 	nop
 5093020:	e037883a 	mov	sp,fp
 5093024:	df000017 	ldw	fp,0(sp)
 5093028:	dec00104 	addi	sp,sp,4
 509302c:	f800283a 	ret

05093030 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 5093030:	defffe04 	addi	sp,sp,-8
 5093034:	dfc00115 	stw	ra,4(sp)
 5093038:	df000015 	stw	fp,0(sp)
 509303c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 5093040:	00814274 	movhi	r2,1289
 5093044:	109f2b04 	addi	r2,r2,31916
 5093048:	10800017 	ldw	r2,0(r2)
 509304c:	10000526 	beq	r2,zero,5093064 <alt_get_errno+0x34>
 5093050:	00814274 	movhi	r2,1289
 5093054:	109f2b04 	addi	r2,r2,31916
 5093058:	10800017 	ldw	r2,0(r2)
 509305c:	103ee83a 	callr	r2
 5093060:	00000206 	br	509306c <alt_get_errno+0x3c>
 5093064:	008142b4 	movhi	r2,1290
 5093068:	10a5f804 	addi	r2,r2,-26656
}
 509306c:	e037883a 	mov	sp,fp
 5093070:	dfc00117 	ldw	ra,4(sp)
 5093074:	df000017 	ldw	fp,0(sp)
 5093078:	dec00204 	addi	sp,sp,8
 509307c:	f800283a 	ret

05093080 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 5093080:	defff904 	addi	sp,sp,-28
 5093084:	dfc00615 	stw	ra,24(sp)
 5093088:	df000515 	stw	fp,20(sp)
 509308c:	df000504 	addi	fp,sp,20
 5093090:	e13ffd15 	stw	r4,-12(fp)
 5093094:	e17ffe15 	stw	r5,-8(fp)
 5093098:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 509309c:	e0bffd17 	ldw	r2,-12(fp)
 50930a0:	10000616 	blt	r2,zero,50930bc <read+0x3c>
 50930a4:	e0bffd17 	ldw	r2,-12(fp)
 50930a8:	10c00324 	muli	r3,r2,12
 50930ac:	00814274 	movhi	r2,1289
 50930b0:	109aa804 	addi	r2,r2,27296
 50930b4:	1885883a 	add	r2,r3,r2
 50930b8:	00000106 	br	50930c0 <read+0x40>
 50930bc:	0005883a 	mov	r2,zero
 50930c0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 50930c4:	e0bffb17 	ldw	r2,-20(fp)
 50930c8:	10002226 	beq	r2,zero,5093154 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 50930cc:	e0bffb17 	ldw	r2,-20(fp)
 50930d0:	10800217 	ldw	r2,8(r2)
 50930d4:	108000cc 	andi	r2,r2,3
 50930d8:	10800060 	cmpeqi	r2,r2,1
 50930dc:	1000181e 	bne	r2,zero,5093140 <read+0xc0>
        (fd->dev->read))
 50930e0:	e0bffb17 	ldw	r2,-20(fp)
 50930e4:	10800017 	ldw	r2,0(r2)
 50930e8:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 50930ec:	10001426 	beq	r2,zero,5093140 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 50930f0:	e0bffb17 	ldw	r2,-20(fp)
 50930f4:	10800017 	ldw	r2,0(r2)
 50930f8:	10800517 	ldw	r2,20(r2)
 50930fc:	e0ffff17 	ldw	r3,-4(fp)
 5093100:	180d883a 	mov	r6,r3
 5093104:	e17ffe17 	ldw	r5,-8(fp)
 5093108:	e13ffb17 	ldw	r4,-20(fp)
 509310c:	103ee83a 	callr	r2
 5093110:	e0bffc15 	stw	r2,-16(fp)
 5093114:	e0bffc17 	ldw	r2,-16(fp)
 5093118:	1000070e 	bge	r2,zero,5093138 <read+0xb8>
        {
          ALT_ERRNO = -rval;
 509311c:	50930300 	call	5093030 <alt_get_errno>
 5093120:	1007883a 	mov	r3,r2
 5093124:	e0bffc17 	ldw	r2,-16(fp)
 5093128:	0085c83a 	sub	r2,zero,r2
 509312c:	18800015 	stw	r2,0(r3)
          return -1;
 5093130:	00bfffc4 	movi	r2,-1
 5093134:	00000c06 	br	5093168 <read+0xe8>
        }
        return rval;
 5093138:	e0bffc17 	ldw	r2,-16(fp)
 509313c:	00000a06 	br	5093168 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
 5093140:	50930300 	call	5093030 <alt_get_errno>
 5093144:	1007883a 	mov	r3,r2
 5093148:	00800344 	movi	r2,13
 509314c:	18800015 	stw	r2,0(r3)
 5093150:	00000406 	br	5093164 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 5093154:	50930300 	call	5093030 <alt_get_errno>
 5093158:	1007883a 	mov	r3,r2
 509315c:	00801444 	movi	r2,81
 5093160:	18800015 	stw	r2,0(r3)
  }
  return -1;
 5093164:	00bfffc4 	movi	r2,-1
}
 5093168:	e037883a 	mov	sp,fp
 509316c:	dfc00117 	ldw	ra,4(sp)
 5093170:	df000017 	ldw	fp,0(sp)
 5093174:	dec00204 	addi	sp,sp,8
 5093178:	f800283a 	ret

0509317c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 509317c:	defffe04 	addi	sp,sp,-8
 5093180:	df000115 	stw	fp,4(sp)
 5093184:	df000104 	addi	fp,sp,4
 5093188:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 509318c:	e0bfff17 	ldw	r2,-4(fp)
 5093190:	108000d0 	cmplti	r2,r2,3
 5093194:	10000d1e 	bne	r2,zero,50931cc <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
 5093198:	00814274 	movhi	r2,1289
 509319c:	109aa804 	addi	r2,r2,27296
 50931a0:	e0ffff17 	ldw	r3,-4(fp)
 50931a4:	18c00324 	muli	r3,r3,12
 50931a8:	10c5883a 	add	r2,r2,r3
 50931ac:	10800204 	addi	r2,r2,8
 50931b0:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 50931b4:	00814274 	movhi	r2,1289
 50931b8:	109aa804 	addi	r2,r2,27296
 50931bc:	e0ffff17 	ldw	r3,-4(fp)
 50931c0:	18c00324 	muli	r3,r3,12
 50931c4:	10c5883a 	add	r2,r2,r3
 50931c8:	10000015 	stw	zero,0(r2)
  }
}
 50931cc:	0001883a 	nop
 50931d0:	e037883a 	mov	sp,fp
 50931d4:	df000017 	ldw	fp,0(sp)
 50931d8:	dec00104 	addi	sp,sp,4
 50931dc:	f800283a 	ret

050931e0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 50931e0:	defff904 	addi	sp,sp,-28
 50931e4:	df000615 	stw	fp,24(sp)
 50931e8:	df000604 	addi	fp,sp,24
 50931ec:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 50931f0:	0005303a 	rdctl	r2,status
 50931f4:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 50931f8:	e0fffe17 	ldw	r3,-8(fp)
 50931fc:	00bfff84 	movi	r2,-2
 5093200:	1884703a 	and	r2,r3,r2
 5093204:	1001703a 	wrctl	status,r2
  
  return context;
 5093208:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 509320c:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 5093210:	d0a00d17 	ldw	r2,-32716(gp)
 5093214:	10c000c4 	addi	r3,r2,3
 5093218:	00bfff04 	movi	r2,-4
 509321c:	1884703a 	and	r2,r3,r2
 5093220:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 5093224:	d0e00d17 	ldw	r3,-32716(gp)
 5093228:	e0bfff17 	ldw	r2,-4(fp)
 509322c:	1887883a 	add	r3,r3,r2
 5093230:	00814374 	movhi	r2,1293
 5093234:	10b88004 	addi	r2,r2,-7680
 5093238:	10c0062e 	bgeu	r2,r3,5093254 <sbrk+0x74>
 509323c:	e0bffb17 	ldw	r2,-20(fp)
 5093240:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 5093244:	e0bffa17 	ldw	r2,-24(fp)
 5093248:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 509324c:	00bfffc4 	movi	r2,-1
 5093250:	00000b06 	br	5093280 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 5093254:	d0a00d17 	ldw	r2,-32716(gp)
 5093258:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 509325c:	d0e00d17 	ldw	r3,-32716(gp)
 5093260:	e0bfff17 	ldw	r2,-4(fp)
 5093264:	1885883a 	add	r2,r3,r2
 5093268:	d0a00d15 	stw	r2,-32716(gp)
 509326c:	e0bffb17 	ldw	r2,-20(fp)
 5093270:	e0bffc15 	stw	r2,-16(fp)
 5093274:	e0bffc17 	ldw	r2,-16(fp)
 5093278:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 509327c:	e0bffd17 	ldw	r2,-12(fp)
} 
 5093280:	e037883a 	mov	sp,fp
 5093284:	df000017 	ldw	fp,0(sp)
 5093288:	dec00104 	addi	sp,sp,4
 509328c:	f800283a 	ret

05093290 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
 5093290:	defffd04 	addi	sp,sp,-12
 5093294:	dfc00215 	stw	ra,8(sp)
 5093298:	df000115 	stw	fp,4(sp)
 509329c:	df000104 	addi	fp,sp,4
 50932a0:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
 50932a4:	e13fff17 	ldw	r4,-4(fp)
 50932a8:	50941980 	call	5094198 <alt_busy_sleep>
}
 50932ac:	e037883a 	mov	sp,fp
 50932b0:	dfc00117 	ldw	ra,4(sp)
 50932b4:	df000017 	ldw	fp,0(sp)
 50932b8:	dec00204 	addi	sp,sp,8
 50932bc:	f800283a 	ret

050932c0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 50932c0:	defffe04 	addi	sp,sp,-8
 50932c4:	dfc00115 	stw	ra,4(sp)
 50932c8:	df000015 	stw	fp,0(sp)
 50932cc:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 50932d0:	00814274 	movhi	r2,1289
 50932d4:	109f2b04 	addi	r2,r2,31916
 50932d8:	10800017 	ldw	r2,0(r2)
 50932dc:	10000526 	beq	r2,zero,50932f4 <alt_get_errno+0x34>
 50932e0:	00814274 	movhi	r2,1289
 50932e4:	109f2b04 	addi	r2,r2,31916
 50932e8:	10800017 	ldw	r2,0(r2)
 50932ec:	103ee83a 	callr	r2
 50932f0:	00000206 	br	50932fc <alt_get_errno+0x3c>
 50932f4:	008142b4 	movhi	r2,1290
 50932f8:	10a5f804 	addi	r2,r2,-26656
}
 50932fc:	e037883a 	mov	sp,fp
 5093300:	dfc00117 	ldw	ra,4(sp)
 5093304:	df000017 	ldw	fp,0(sp)
 5093308:	dec00204 	addi	sp,sp,8
 509330c:	f800283a 	ret

05093310 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 5093310:	defff904 	addi	sp,sp,-28
 5093314:	dfc00615 	stw	ra,24(sp)
 5093318:	df000515 	stw	fp,20(sp)
 509331c:	df000504 	addi	fp,sp,20
 5093320:	e13ffd15 	stw	r4,-12(fp)
 5093324:	e17ffe15 	stw	r5,-8(fp)
 5093328:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 509332c:	e0bffd17 	ldw	r2,-12(fp)
 5093330:	10000616 	blt	r2,zero,509334c <write+0x3c>
 5093334:	e0bffd17 	ldw	r2,-12(fp)
 5093338:	10c00324 	muli	r3,r2,12
 509333c:	00814274 	movhi	r2,1289
 5093340:	109aa804 	addi	r2,r2,27296
 5093344:	1885883a 	add	r2,r3,r2
 5093348:	00000106 	br	5093350 <write+0x40>
 509334c:	0005883a 	mov	r2,zero
 5093350:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 5093354:	e0bffb17 	ldw	r2,-20(fp)
 5093358:	10002126 	beq	r2,zero,50933e0 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 509335c:	e0bffb17 	ldw	r2,-20(fp)
 5093360:	10800217 	ldw	r2,8(r2)
 5093364:	108000cc 	andi	r2,r2,3
 5093368:	10001826 	beq	r2,zero,50933cc <write+0xbc>
 509336c:	e0bffb17 	ldw	r2,-20(fp)
 5093370:	10800017 	ldw	r2,0(r2)
 5093374:	10800617 	ldw	r2,24(r2)
 5093378:	10001426 	beq	r2,zero,50933cc <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 509337c:	e0bffb17 	ldw	r2,-20(fp)
 5093380:	10800017 	ldw	r2,0(r2)
 5093384:	10800617 	ldw	r2,24(r2)
 5093388:	e0ffff17 	ldw	r3,-4(fp)
 509338c:	180d883a 	mov	r6,r3
 5093390:	e17ffe17 	ldw	r5,-8(fp)
 5093394:	e13ffb17 	ldw	r4,-20(fp)
 5093398:	103ee83a 	callr	r2
 509339c:	e0bffc15 	stw	r2,-16(fp)
 50933a0:	e0bffc17 	ldw	r2,-16(fp)
 50933a4:	1000070e 	bge	r2,zero,50933c4 <write+0xb4>
      {
        ALT_ERRNO = -rval;
 50933a8:	50932c00 	call	50932c0 <alt_get_errno>
 50933ac:	1007883a 	mov	r3,r2
 50933b0:	e0bffc17 	ldw	r2,-16(fp)
 50933b4:	0085c83a 	sub	r2,zero,r2
 50933b8:	18800015 	stw	r2,0(r3)
        return -1;
 50933bc:	00bfffc4 	movi	r2,-1
 50933c0:	00000c06 	br	50933f4 <write+0xe4>
      }
      return rval;
 50933c4:	e0bffc17 	ldw	r2,-16(fp)
 50933c8:	00000a06 	br	50933f4 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
 50933cc:	50932c00 	call	50932c0 <alt_get_errno>
 50933d0:	1007883a 	mov	r3,r2
 50933d4:	00800344 	movi	r2,13
 50933d8:	18800015 	stw	r2,0(r3)
 50933dc:	00000406 	br	50933f0 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 50933e0:	50932c00 	call	50932c0 <alt_get_errno>
 50933e4:	1007883a 	mov	r3,r2
 50933e8:	00801444 	movi	r2,81
 50933ec:	18800015 	stw	r2,0(r3)
  }
  return -1;
 50933f0:	00bfffc4 	movi	r2,-1
}
 50933f4:	e037883a 	mov	sp,fp
 50933f8:	dfc00117 	ldw	ra,4(sp)
 50933fc:	df000017 	ldw	fp,0(sp)
 5093400:	dec00204 	addi	sp,sp,8
 5093404:	f800283a 	ret

05093408 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 5093408:	defffd04 	addi	sp,sp,-12
 509340c:	dfc00215 	stw	ra,8(sp)
 5093410:	df000115 	stw	fp,4(sp)
 5093414:	df000104 	addi	fp,sp,4
 5093418:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 509341c:	01414274 	movhi	r5,1289
 5093420:	295f2804 	addi	r5,r5,31904
 5093424:	e13fff17 	ldw	r4,-4(fp)
 5093428:	50943880 	call	5094388 <alt_dev_llist_insert>
}
 509342c:	e037883a 	mov	sp,fp
 5093430:	dfc00117 	ldw	ra,4(sp)
 5093434:	df000017 	ldw	fp,0(sp)
 5093438:	dec00204 	addi	sp,sp,8
 509343c:	f800283a 	ret

05093440 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 5093440:	defffd04 	addi	sp,sp,-12
 5093444:	dfc00215 	stw	ra,8(sp)
 5093448:	df000115 	stw	fp,4(sp)
 509344c:	df000104 	addi	fp,sp,4
 5093450:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
 5093454:	5094d480 	call	5094d48 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 5093458:	00800044 	movi	r2,1
 509345c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 5093460:	0001883a 	nop
 5093464:	e037883a 	mov	sp,fp
 5093468:	dfc00117 	ldw	ra,4(sp)
 509346c:	df000017 	ldw	fp,0(sp)
 5093470:	dec00204 	addi	sp,sp,8
 5093474:	f800283a 	ret

05093478 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 5093478:	defffe04 	addi	sp,sp,-8
 509347c:	dfc00115 	stw	ra,4(sp)
 5093480:	df000015 	stw	fp,0(sp)
 5093484:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
 5093488:	01c0fa04 	movi	r7,1000
 509348c:	000d883a 	mov	r6,zero
 5093490:	000b883a 	mov	r5,zero
 5093494:	01014434 	movhi	r4,1296
 5093498:	21040804 	addi	r4,r4,4128
 509349c:	5093fcc0 	call	5093fcc <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
 50934a0:	01800044 	movi	r6,1
 50934a4:	000b883a 	mov	r5,zero
 50934a8:	01014274 	movhi	r4,1289
 50934ac:	211b1204 	addi	r4,r4,27720
 50934b0:	50936400 	call	5093640 <altera_avalon_jtag_uart_init>
 50934b4:	01014274 	movhi	r4,1289
 50934b8:	211b0804 	addi	r4,r4,27680
 50934bc:	50934080 	call	5093408 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
 50934c0:	0001883a 	nop
}
 50934c4:	0001883a 	nop
 50934c8:	e037883a 	mov	sp,fp
 50934cc:	dfc00117 	ldw	ra,4(sp)
 50934d0:	df000017 	ldw	fp,0(sp)
 50934d4:	dec00204 	addi	sp,sp,8
 50934d8:	f800283a 	ret

050934dc <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 50934dc:	defffa04 	addi	sp,sp,-24
 50934e0:	dfc00515 	stw	ra,20(sp)
 50934e4:	df000415 	stw	fp,16(sp)
 50934e8:	df000404 	addi	fp,sp,16
 50934ec:	e13ffd15 	stw	r4,-12(fp)
 50934f0:	e17ffe15 	stw	r5,-8(fp)
 50934f4:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 50934f8:	e0bffd17 	ldw	r2,-12(fp)
 50934fc:	10800017 	ldw	r2,0(r2)
 5093500:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 5093504:	e0bffc17 	ldw	r2,-16(fp)
 5093508:	10c00a04 	addi	r3,r2,40
 509350c:	e0bffd17 	ldw	r2,-12(fp)
 5093510:	10800217 	ldw	r2,8(r2)
 5093514:	100f883a 	mov	r7,r2
 5093518:	e1bfff17 	ldw	r6,-4(fp)
 509351c:	e17ffe17 	ldw	r5,-8(fp)
 5093520:	1809883a 	mov	r4,r3
 5093524:	5093b140 	call	5093b14 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 5093528:	e037883a 	mov	sp,fp
 509352c:	dfc00117 	ldw	ra,4(sp)
 5093530:	df000017 	ldw	fp,0(sp)
 5093534:	dec00204 	addi	sp,sp,8
 5093538:	f800283a 	ret

0509353c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 509353c:	defffa04 	addi	sp,sp,-24
 5093540:	dfc00515 	stw	ra,20(sp)
 5093544:	df000415 	stw	fp,16(sp)
 5093548:	df000404 	addi	fp,sp,16
 509354c:	e13ffd15 	stw	r4,-12(fp)
 5093550:	e17ffe15 	stw	r5,-8(fp)
 5093554:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 5093558:	e0bffd17 	ldw	r2,-12(fp)
 509355c:	10800017 	ldw	r2,0(r2)
 5093560:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 5093564:	e0bffc17 	ldw	r2,-16(fp)
 5093568:	10c00a04 	addi	r3,r2,40
 509356c:	e0bffd17 	ldw	r2,-12(fp)
 5093570:	10800217 	ldw	r2,8(r2)
 5093574:	100f883a 	mov	r7,r2
 5093578:	e1bfff17 	ldw	r6,-4(fp)
 509357c:	e17ffe17 	ldw	r5,-8(fp)
 5093580:	1809883a 	mov	r4,r3
 5093584:	5093d300 	call	5093d30 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 5093588:	e037883a 	mov	sp,fp
 509358c:	dfc00117 	ldw	ra,4(sp)
 5093590:	df000017 	ldw	fp,0(sp)
 5093594:	dec00204 	addi	sp,sp,8
 5093598:	f800283a 	ret

0509359c <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 509359c:	defffc04 	addi	sp,sp,-16
 50935a0:	dfc00315 	stw	ra,12(sp)
 50935a4:	df000215 	stw	fp,8(sp)
 50935a8:	df000204 	addi	fp,sp,8
 50935ac:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 50935b0:	e0bfff17 	ldw	r2,-4(fp)
 50935b4:	10800017 	ldw	r2,0(r2)
 50935b8:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 50935bc:	e0bffe17 	ldw	r2,-8(fp)
 50935c0:	10c00a04 	addi	r3,r2,40
 50935c4:	e0bfff17 	ldw	r2,-4(fp)
 50935c8:	10800217 	ldw	r2,8(r2)
 50935cc:	100b883a 	mov	r5,r2
 50935d0:	1809883a 	mov	r4,r3
 50935d4:	50939bc0 	call	50939bc <altera_avalon_jtag_uart_close>
}
 50935d8:	e037883a 	mov	sp,fp
 50935dc:	dfc00117 	ldw	ra,4(sp)
 50935e0:	df000017 	ldw	fp,0(sp)
 50935e4:	dec00204 	addi	sp,sp,8
 50935e8:	f800283a 	ret

050935ec <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 50935ec:	defffa04 	addi	sp,sp,-24
 50935f0:	dfc00515 	stw	ra,20(sp)
 50935f4:	df000415 	stw	fp,16(sp)
 50935f8:	df000404 	addi	fp,sp,16
 50935fc:	e13ffd15 	stw	r4,-12(fp)
 5093600:	e17ffe15 	stw	r5,-8(fp)
 5093604:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 5093608:	e0bffd17 	ldw	r2,-12(fp)
 509360c:	10800017 	ldw	r2,0(r2)
 5093610:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 5093614:	e0bffc17 	ldw	r2,-16(fp)
 5093618:	10800a04 	addi	r2,r2,40
 509361c:	e1bfff17 	ldw	r6,-4(fp)
 5093620:	e17ffe17 	ldw	r5,-8(fp)
 5093624:	1009883a 	mov	r4,r2
 5093628:	5093a240 	call	5093a24 <altera_avalon_jtag_uart_ioctl>
}
 509362c:	e037883a 	mov	sp,fp
 5093630:	dfc00117 	ldw	ra,4(sp)
 5093634:	df000017 	ldw	fp,0(sp)
 5093638:	dec00204 	addi	sp,sp,8
 509363c:	f800283a 	ret

05093640 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 5093640:	defffa04 	addi	sp,sp,-24
 5093644:	dfc00515 	stw	ra,20(sp)
 5093648:	df000415 	stw	fp,16(sp)
 509364c:	df000404 	addi	fp,sp,16
 5093650:	e13ffd15 	stw	r4,-12(fp)
 5093654:	e17ffe15 	stw	r5,-8(fp)
 5093658:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 509365c:	e0bffd17 	ldw	r2,-12(fp)
 5093660:	00c00044 	movi	r3,1
 5093664:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 5093668:	e0bffd17 	ldw	r2,-12(fp)
 509366c:	10800017 	ldw	r2,0(r2)
 5093670:	10800104 	addi	r2,r2,4
 5093674:	1007883a 	mov	r3,r2
 5093678:	e0bffd17 	ldw	r2,-12(fp)
 509367c:	10800817 	ldw	r2,32(r2)
 5093680:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 5093684:	e0bffe17 	ldw	r2,-8(fp)
 5093688:	e0ffff17 	ldw	r3,-4(fp)
 509368c:	d8000015 	stw	zero,0(sp)
 5093690:	e1fffd17 	ldw	r7,-12(fp)
 5093694:	01814274 	movhi	r6,1289
 5093698:	318dc204 	addi	r6,r6,14088
 509369c:	180b883a 	mov	r5,r3
 50936a0:	1009883a 	mov	r4,r2
 50936a4:	50945200 	call	5094520 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 50936a8:	e0bffd17 	ldw	r2,-12(fp)
 50936ac:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 50936b0:	e0bffd17 	ldw	r2,-12(fp)
 50936b4:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 50936b8:	008142b4 	movhi	r2,1290
 50936bc:	10a5fd04 	addi	r2,r2,-26636
 50936c0:	10800017 	ldw	r2,0(r2)
 50936c4:	e1fffd17 	ldw	r7,-12(fp)
 50936c8:	01814274 	movhi	r6,1289
 50936cc:	318e4504 	addi	r6,r6,14612
 50936d0:	100b883a 	mov	r5,r2
 50936d4:	1809883a 	mov	r4,r3
 50936d8:	50940580 	call	5094058 <alt_alarm_start>
 50936dc:	1000040e 	bge	r2,zero,50936f0 <altera_avalon_jtag_uart_init+0xb0>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 50936e0:	e0fffd17 	ldw	r3,-12(fp)
 50936e4:	00a00034 	movhi	r2,32768
 50936e8:	10bfffc4 	addi	r2,r2,-1
 50936ec:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 50936f0:	0001883a 	nop
 50936f4:	e037883a 	mov	sp,fp
 50936f8:	dfc00117 	ldw	ra,4(sp)
 50936fc:	df000017 	ldw	fp,0(sp)
 5093700:	dec00204 	addi	sp,sp,8
 5093704:	f800283a 	ret

05093708 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 5093708:	defff804 	addi	sp,sp,-32
 509370c:	df000715 	stw	fp,28(sp)
 5093710:	df000704 	addi	fp,sp,28
 5093714:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 5093718:	e0bfff17 	ldw	r2,-4(fp)
 509371c:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 5093720:	e0bffb17 	ldw	r2,-20(fp)
 5093724:	10800017 	ldw	r2,0(r2)
 5093728:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 509372c:	e0bffc17 	ldw	r2,-16(fp)
 5093730:	10800104 	addi	r2,r2,4
 5093734:	10800037 	ldwio	r2,0(r2)
 5093738:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 509373c:	e0bffd17 	ldw	r2,-12(fp)
 5093740:	1080c00c 	andi	r2,r2,768
 5093744:	10006d26 	beq	r2,zero,50938fc <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 5093748:	e0bffd17 	ldw	r2,-12(fp)
 509374c:	1080400c 	andi	r2,r2,256
 5093750:	10003526 	beq	r2,zero,5093828 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 5093754:	00800074 	movhi	r2,1
 5093758:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 509375c:	e0bffb17 	ldw	r2,-20(fp)
 5093760:	10800a17 	ldw	r2,40(r2)
 5093764:	10800044 	addi	r2,r2,1
 5093768:	1081ffcc 	andi	r2,r2,2047
 509376c:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 5093770:	e0bffb17 	ldw	r2,-20(fp)
 5093774:	10c00b17 	ldw	r3,44(r2)
 5093778:	e0bffe17 	ldw	r2,-8(fp)
 509377c:	18801526 	beq	r3,r2,50937d4 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 5093780:	e0bffc17 	ldw	r2,-16(fp)
 5093784:	10800037 	ldwio	r2,0(r2)
 5093788:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 509378c:	e0bff917 	ldw	r2,-28(fp)
 5093790:	10a0000c 	andi	r2,r2,32768
 5093794:	10001126 	beq	r2,zero,50937dc <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 5093798:	e0bffb17 	ldw	r2,-20(fp)
 509379c:	10800a17 	ldw	r2,40(r2)
 50937a0:	e0fff917 	ldw	r3,-28(fp)
 50937a4:	1809883a 	mov	r4,r3
 50937a8:	e0fffb17 	ldw	r3,-20(fp)
 50937ac:	1885883a 	add	r2,r3,r2
 50937b0:	10800e04 	addi	r2,r2,56
 50937b4:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 50937b8:	e0bffb17 	ldw	r2,-20(fp)
 50937bc:	10800a17 	ldw	r2,40(r2)
 50937c0:	10800044 	addi	r2,r2,1
 50937c4:	10c1ffcc 	andi	r3,r2,2047
 50937c8:	e0bffb17 	ldw	r2,-20(fp)
 50937cc:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 50937d0:	003fe206 	br	509375c <__alt_data_end+0xfffc555c>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 50937d4:	0001883a 	nop
 50937d8:	00000106 	br	50937e0 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 50937dc:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 50937e0:	e0bff917 	ldw	r2,-28(fp)
 50937e4:	10bfffec 	andhi	r2,r2,65535
 50937e8:	10000f26 	beq	r2,zero,5093828 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 50937ec:	e0bffb17 	ldw	r2,-20(fp)
 50937f0:	10c00817 	ldw	r3,32(r2)
 50937f4:	00bfff84 	movi	r2,-2
 50937f8:	1886703a 	and	r3,r3,r2
 50937fc:	e0bffb17 	ldw	r2,-20(fp)
 5093800:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 5093804:	e0bffc17 	ldw	r2,-16(fp)
 5093808:	10800104 	addi	r2,r2,4
 509380c:	1007883a 	mov	r3,r2
 5093810:	e0bffb17 	ldw	r2,-20(fp)
 5093814:	10800817 	ldw	r2,32(r2)
 5093818:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 509381c:	e0bffc17 	ldw	r2,-16(fp)
 5093820:	10800104 	addi	r2,r2,4
 5093824:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 5093828:	e0bffd17 	ldw	r2,-12(fp)
 509382c:	1080800c 	andi	r2,r2,512
 5093830:	103fbe26 	beq	r2,zero,509372c <__alt_data_end+0xfffc552c>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 5093834:	e0bffd17 	ldw	r2,-12(fp)
 5093838:	1004d43a 	srli	r2,r2,16
 509383c:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 5093840:	00001406 	br	5093894 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 5093844:	e0bffc17 	ldw	r2,-16(fp)
 5093848:	e0fffb17 	ldw	r3,-20(fp)
 509384c:	18c00d17 	ldw	r3,52(r3)
 5093850:	e13ffb17 	ldw	r4,-20(fp)
 5093854:	20c7883a 	add	r3,r4,r3
 5093858:	18c20e04 	addi	r3,r3,2104
 509385c:	18c00003 	ldbu	r3,0(r3)
 5093860:	18c03fcc 	andi	r3,r3,255
 5093864:	18c0201c 	xori	r3,r3,128
 5093868:	18ffe004 	addi	r3,r3,-128
 509386c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 5093870:	e0bffb17 	ldw	r2,-20(fp)
 5093874:	10800d17 	ldw	r2,52(r2)
 5093878:	10800044 	addi	r2,r2,1
 509387c:	10c1ffcc 	andi	r3,r2,2047
 5093880:	e0bffb17 	ldw	r2,-20(fp)
 5093884:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 5093888:	e0bffa17 	ldw	r2,-24(fp)
 509388c:	10bfffc4 	addi	r2,r2,-1
 5093890:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 5093894:	e0bffa17 	ldw	r2,-24(fp)
 5093898:	10000526 	beq	r2,zero,50938b0 <altera_avalon_jtag_uart_irq+0x1a8>
 509389c:	e0bffb17 	ldw	r2,-20(fp)
 50938a0:	10c00d17 	ldw	r3,52(r2)
 50938a4:	e0bffb17 	ldw	r2,-20(fp)
 50938a8:	10800c17 	ldw	r2,48(r2)
 50938ac:	18bfe51e 	bne	r3,r2,5093844 <__alt_data_end+0xfffc5644>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 50938b0:	e0bffa17 	ldw	r2,-24(fp)
 50938b4:	103f9d26 	beq	r2,zero,509372c <__alt_data_end+0xfffc552c>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 50938b8:	e0bffb17 	ldw	r2,-20(fp)
 50938bc:	10c00817 	ldw	r3,32(r2)
 50938c0:	00bfff44 	movi	r2,-3
 50938c4:	1886703a 	and	r3,r3,r2
 50938c8:	e0bffb17 	ldw	r2,-20(fp)
 50938cc:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 50938d0:	e0bffb17 	ldw	r2,-20(fp)
 50938d4:	10800017 	ldw	r2,0(r2)
 50938d8:	10800104 	addi	r2,r2,4
 50938dc:	1007883a 	mov	r3,r2
 50938e0:	e0bffb17 	ldw	r2,-20(fp)
 50938e4:	10800817 	ldw	r2,32(r2)
 50938e8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 50938ec:	e0bffc17 	ldw	r2,-16(fp)
 50938f0:	10800104 	addi	r2,r2,4
 50938f4:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 50938f8:	003f8c06 	br	509372c <__alt_data_end+0xfffc552c>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 50938fc:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 5093900:	0001883a 	nop
 5093904:	e037883a 	mov	sp,fp
 5093908:	df000017 	ldw	fp,0(sp)
 509390c:	dec00104 	addi	sp,sp,4
 5093910:	f800283a 	ret

05093914 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 5093914:	defff804 	addi	sp,sp,-32
 5093918:	df000715 	stw	fp,28(sp)
 509391c:	df000704 	addi	fp,sp,28
 5093920:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 5093924:	e0bffb17 	ldw	r2,-20(fp)
 5093928:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 509392c:	e0bff917 	ldw	r2,-28(fp)
 5093930:	10800017 	ldw	r2,0(r2)
 5093934:	10800104 	addi	r2,r2,4
 5093938:	10800037 	ldwio	r2,0(r2)
 509393c:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 5093940:	e0bffa17 	ldw	r2,-24(fp)
 5093944:	1081000c 	andi	r2,r2,1024
 5093948:	10000b26 	beq	r2,zero,5093978 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 509394c:	e0bff917 	ldw	r2,-28(fp)
 5093950:	10800017 	ldw	r2,0(r2)
 5093954:	10800104 	addi	r2,r2,4
 5093958:	1007883a 	mov	r3,r2
 509395c:	e0bff917 	ldw	r2,-28(fp)
 5093960:	10800817 	ldw	r2,32(r2)
 5093964:	10810014 	ori	r2,r2,1024
 5093968:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 509396c:	e0bff917 	ldw	r2,-28(fp)
 5093970:	10000915 	stw	zero,36(r2)
 5093974:	00000a06 	br	50939a0 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 5093978:	e0bff917 	ldw	r2,-28(fp)
 509397c:	10c00917 	ldw	r3,36(r2)
 5093980:	00a00034 	movhi	r2,32768
 5093984:	10bfff04 	addi	r2,r2,-4
 5093988:	10c00536 	bltu	r2,r3,50939a0 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 509398c:	e0bff917 	ldw	r2,-28(fp)
 5093990:	10800917 	ldw	r2,36(r2)
 5093994:	10c00044 	addi	r3,r2,1
 5093998:	e0bff917 	ldw	r2,-28(fp)
 509399c:	10c00915 	stw	r3,36(r2)
 50939a0:	008142b4 	movhi	r2,1290
 50939a4:	10a5fd04 	addi	r2,r2,-26636
 50939a8:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 50939ac:	e037883a 	mov	sp,fp
 50939b0:	df000017 	ldw	fp,0(sp)
 50939b4:	dec00104 	addi	sp,sp,4
 50939b8:	f800283a 	ret

050939bc <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 50939bc:	defffd04 	addi	sp,sp,-12
 50939c0:	df000215 	stw	fp,8(sp)
 50939c4:	df000204 	addi	fp,sp,8
 50939c8:	e13ffe15 	stw	r4,-8(fp)
 50939cc:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 50939d0:	00000506 	br	50939e8 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 50939d4:	e0bfff17 	ldw	r2,-4(fp)
 50939d8:	1090000c 	andi	r2,r2,16384
 50939dc:	10000226 	beq	r2,zero,50939e8 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 50939e0:	00bffd44 	movi	r2,-11
 50939e4:	00000b06 	br	5093a14 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 50939e8:	e0bffe17 	ldw	r2,-8(fp)
 50939ec:	10c00d17 	ldw	r3,52(r2)
 50939f0:	e0bffe17 	ldw	r2,-8(fp)
 50939f4:	10800c17 	ldw	r2,48(r2)
 50939f8:	18800526 	beq	r3,r2,5093a10 <altera_avalon_jtag_uart_close+0x54>
 50939fc:	e0bffe17 	ldw	r2,-8(fp)
 5093a00:	10c00917 	ldw	r3,36(r2)
 5093a04:	e0bffe17 	ldw	r2,-8(fp)
 5093a08:	10800117 	ldw	r2,4(r2)
 5093a0c:	18bff136 	bltu	r3,r2,50939d4 <__alt_data_end+0xfffc57d4>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 5093a10:	0005883a 	mov	r2,zero
}
 5093a14:	e037883a 	mov	sp,fp
 5093a18:	df000017 	ldw	fp,0(sp)
 5093a1c:	dec00104 	addi	sp,sp,4
 5093a20:	f800283a 	ret

05093a24 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 5093a24:	defffa04 	addi	sp,sp,-24
 5093a28:	df000515 	stw	fp,20(sp)
 5093a2c:	df000504 	addi	fp,sp,20
 5093a30:	e13ffd15 	stw	r4,-12(fp)
 5093a34:	e17ffe15 	stw	r5,-8(fp)
 5093a38:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 5093a3c:	00bff9c4 	movi	r2,-25
 5093a40:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 5093a44:	e0bffe17 	ldw	r2,-8(fp)
 5093a48:	10da8060 	cmpeqi	r3,r2,27137
 5093a4c:	1800031e 	bne	r3,zero,5093a5c <altera_avalon_jtag_uart_ioctl+0x38>
 5093a50:	109a80a0 	cmpeqi	r2,r2,27138
 5093a54:	1000181e 	bne	r2,zero,5093ab8 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 5093a58:	00002906 	br	5093b00 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 5093a5c:	e0bffd17 	ldw	r2,-12(fp)
 5093a60:	10c00117 	ldw	r3,4(r2)
 5093a64:	00a00034 	movhi	r2,32768
 5093a68:	10bfffc4 	addi	r2,r2,-1
 5093a6c:	18802126 	beq	r3,r2,5093af4 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 5093a70:	e0bfff17 	ldw	r2,-4(fp)
 5093a74:	10800017 	ldw	r2,0(r2)
 5093a78:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 5093a7c:	e0bffc17 	ldw	r2,-16(fp)
 5093a80:	10800090 	cmplti	r2,r2,2
 5093a84:	1000061e 	bne	r2,zero,5093aa0 <altera_avalon_jtag_uart_ioctl+0x7c>
 5093a88:	e0fffc17 	ldw	r3,-16(fp)
 5093a8c:	00a00034 	movhi	r2,32768
 5093a90:	10bfffc4 	addi	r2,r2,-1
 5093a94:	18800226 	beq	r3,r2,5093aa0 <altera_avalon_jtag_uart_ioctl+0x7c>
 5093a98:	e0bffc17 	ldw	r2,-16(fp)
 5093a9c:	00000206 	br	5093aa8 <altera_avalon_jtag_uart_ioctl+0x84>
 5093aa0:	00a00034 	movhi	r2,32768
 5093aa4:	10bfff84 	addi	r2,r2,-2
 5093aa8:	e0fffd17 	ldw	r3,-12(fp)
 5093aac:	18800115 	stw	r2,4(r3)
      rc = 0;
 5093ab0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 5093ab4:	00000f06 	br	5093af4 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 5093ab8:	e0bffd17 	ldw	r2,-12(fp)
 5093abc:	10c00117 	ldw	r3,4(r2)
 5093ac0:	00a00034 	movhi	r2,32768
 5093ac4:	10bfffc4 	addi	r2,r2,-1
 5093ac8:	18800c26 	beq	r3,r2,5093afc <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 5093acc:	e0bffd17 	ldw	r2,-12(fp)
 5093ad0:	10c00917 	ldw	r3,36(r2)
 5093ad4:	e0bffd17 	ldw	r2,-12(fp)
 5093ad8:	10800117 	ldw	r2,4(r2)
 5093adc:	1885803a 	cmpltu	r2,r3,r2
 5093ae0:	10c03fcc 	andi	r3,r2,255
 5093ae4:	e0bfff17 	ldw	r2,-4(fp)
 5093ae8:	10c00015 	stw	r3,0(r2)
      rc = 0;
 5093aec:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 5093af0:	00000206 	br	5093afc <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 5093af4:	0001883a 	nop
 5093af8:	00000106 	br	5093b00 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 5093afc:	0001883a 	nop

  default:
    break;
  }

  return rc;
 5093b00:	e0bffb17 	ldw	r2,-20(fp)
}
 5093b04:	e037883a 	mov	sp,fp
 5093b08:	df000017 	ldw	fp,0(sp)
 5093b0c:	dec00104 	addi	sp,sp,4
 5093b10:	f800283a 	ret

05093b14 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 5093b14:	defff304 	addi	sp,sp,-52
 5093b18:	dfc00c15 	stw	ra,48(sp)
 5093b1c:	df000b15 	stw	fp,44(sp)
 5093b20:	df000b04 	addi	fp,sp,44
 5093b24:	e13ffc15 	stw	r4,-16(fp)
 5093b28:	e17ffd15 	stw	r5,-12(fp)
 5093b2c:	e1bffe15 	stw	r6,-8(fp)
 5093b30:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 5093b34:	e0bffd17 	ldw	r2,-12(fp)
 5093b38:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 5093b3c:	00004706 	br	5093c5c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 5093b40:	e0bffc17 	ldw	r2,-16(fp)
 5093b44:	10800a17 	ldw	r2,40(r2)
 5093b48:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 5093b4c:	e0bffc17 	ldw	r2,-16(fp)
 5093b50:	10800b17 	ldw	r2,44(r2)
 5093b54:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 5093b58:	e0fff717 	ldw	r3,-36(fp)
 5093b5c:	e0bff817 	ldw	r2,-32(fp)
 5093b60:	18800536 	bltu	r3,r2,5093b78 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 5093b64:	e0fff717 	ldw	r3,-36(fp)
 5093b68:	e0bff817 	ldw	r2,-32(fp)
 5093b6c:	1885c83a 	sub	r2,r3,r2
 5093b70:	e0bff615 	stw	r2,-40(fp)
 5093b74:	00000406 	br	5093b88 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 5093b78:	00c20004 	movi	r3,2048
 5093b7c:	e0bff817 	ldw	r2,-32(fp)
 5093b80:	1885c83a 	sub	r2,r3,r2
 5093b84:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 5093b88:	e0bff617 	ldw	r2,-40(fp)
 5093b8c:	10001e26 	beq	r2,zero,5093c08 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 5093b90:	e0fffe17 	ldw	r3,-8(fp)
 5093b94:	e0bff617 	ldw	r2,-40(fp)
 5093b98:	1880022e 	bgeu	r3,r2,5093ba4 <altera_avalon_jtag_uart_read+0x90>
        n = space;
 5093b9c:	e0bffe17 	ldw	r2,-8(fp)
 5093ba0:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 5093ba4:	e0bffc17 	ldw	r2,-16(fp)
 5093ba8:	10c00e04 	addi	r3,r2,56
 5093bac:	e0bff817 	ldw	r2,-32(fp)
 5093bb0:	1885883a 	add	r2,r3,r2
 5093bb4:	e1bff617 	ldw	r6,-40(fp)
 5093bb8:	100b883a 	mov	r5,r2
 5093bbc:	e13ff517 	ldw	r4,-44(fp)
 5093bc0:	508a7c00 	call	508a7c0 <memcpy>
      ptr   += n;
 5093bc4:	e0fff517 	ldw	r3,-44(fp)
 5093bc8:	e0bff617 	ldw	r2,-40(fp)
 5093bcc:	1885883a 	add	r2,r3,r2
 5093bd0:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 5093bd4:	e0fffe17 	ldw	r3,-8(fp)
 5093bd8:	e0bff617 	ldw	r2,-40(fp)
 5093bdc:	1885c83a 	sub	r2,r3,r2
 5093be0:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 5093be4:	e0fff817 	ldw	r3,-32(fp)
 5093be8:	e0bff617 	ldw	r2,-40(fp)
 5093bec:	1885883a 	add	r2,r3,r2
 5093bf0:	10c1ffcc 	andi	r3,r2,2047
 5093bf4:	e0bffc17 	ldw	r2,-16(fp)
 5093bf8:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 5093bfc:	e0bffe17 	ldw	r2,-8(fp)
 5093c00:	00bfcf16 	blt	zero,r2,5093b40 <__alt_data_end+0xfffc5940>
 5093c04:	00000106 	br	5093c0c <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 5093c08:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 5093c0c:	e0fff517 	ldw	r3,-44(fp)
 5093c10:	e0bffd17 	ldw	r2,-12(fp)
 5093c14:	1880141e 	bne	r3,r2,5093c68 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 5093c18:	e0bfff17 	ldw	r2,-4(fp)
 5093c1c:	1090000c 	andi	r2,r2,16384
 5093c20:	1000131e 	bne	r2,zero,5093c70 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 5093c24:	0001883a 	nop
 5093c28:	e0bffc17 	ldw	r2,-16(fp)
 5093c2c:	10c00a17 	ldw	r3,40(r2)
 5093c30:	e0bff717 	ldw	r2,-36(fp)
 5093c34:	1880051e 	bne	r3,r2,5093c4c <altera_avalon_jtag_uart_read+0x138>
 5093c38:	e0bffc17 	ldw	r2,-16(fp)
 5093c3c:	10c00917 	ldw	r3,36(r2)
 5093c40:	e0bffc17 	ldw	r2,-16(fp)
 5093c44:	10800117 	ldw	r2,4(r2)
 5093c48:	18bff736 	bltu	r3,r2,5093c28 <__alt_data_end+0xfffc5a28>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 5093c4c:	e0bffc17 	ldw	r2,-16(fp)
 5093c50:	10c00a17 	ldw	r3,40(r2)
 5093c54:	e0bff717 	ldw	r2,-36(fp)
 5093c58:	18800726 	beq	r3,r2,5093c78 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 5093c5c:	e0bffe17 	ldw	r2,-8(fp)
 5093c60:	00bfb716 	blt	zero,r2,5093b40 <__alt_data_end+0xfffc5940>
 5093c64:	00000506 	br	5093c7c <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 5093c68:	0001883a 	nop
 5093c6c:	00000306 	br	5093c7c <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 5093c70:	0001883a 	nop
 5093c74:	00000106 	br	5093c7c <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 5093c78:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 5093c7c:	e0fff517 	ldw	r3,-44(fp)
 5093c80:	e0bffd17 	ldw	r2,-12(fp)
 5093c84:	18801826 	beq	r3,r2,5093ce8 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 5093c88:	0005303a 	rdctl	r2,status
 5093c8c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 5093c90:	e0fffb17 	ldw	r3,-20(fp)
 5093c94:	00bfff84 	movi	r2,-2
 5093c98:	1884703a 	and	r2,r3,r2
 5093c9c:	1001703a 	wrctl	status,r2
  
  return context;
 5093ca0:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 5093ca4:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 5093ca8:	e0bffc17 	ldw	r2,-16(fp)
 5093cac:	10800817 	ldw	r2,32(r2)
 5093cb0:	10c00054 	ori	r3,r2,1
 5093cb4:	e0bffc17 	ldw	r2,-16(fp)
 5093cb8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 5093cbc:	e0bffc17 	ldw	r2,-16(fp)
 5093cc0:	10800017 	ldw	r2,0(r2)
 5093cc4:	10800104 	addi	r2,r2,4
 5093cc8:	1007883a 	mov	r3,r2
 5093ccc:	e0bffc17 	ldw	r2,-16(fp)
 5093cd0:	10800817 	ldw	r2,32(r2)
 5093cd4:	18800035 	stwio	r2,0(r3)
 5093cd8:	e0bffa17 	ldw	r2,-24(fp)
 5093cdc:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 5093ce0:	e0bff917 	ldw	r2,-28(fp)
 5093ce4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 5093ce8:	e0fff517 	ldw	r3,-44(fp)
 5093cec:	e0bffd17 	ldw	r2,-12(fp)
 5093cf0:	18800426 	beq	r3,r2,5093d04 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 5093cf4:	e0fff517 	ldw	r3,-44(fp)
 5093cf8:	e0bffd17 	ldw	r2,-12(fp)
 5093cfc:	1885c83a 	sub	r2,r3,r2
 5093d00:	00000606 	br	5093d1c <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 5093d04:	e0bfff17 	ldw	r2,-4(fp)
 5093d08:	1090000c 	andi	r2,r2,16384
 5093d0c:	10000226 	beq	r2,zero,5093d18 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 5093d10:	00bffd44 	movi	r2,-11
 5093d14:	00000106 	br	5093d1c <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 5093d18:	00bffec4 	movi	r2,-5
}
 5093d1c:	e037883a 	mov	sp,fp
 5093d20:	dfc00117 	ldw	ra,4(sp)
 5093d24:	df000017 	ldw	fp,0(sp)
 5093d28:	dec00204 	addi	sp,sp,8
 5093d2c:	f800283a 	ret

05093d30 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 5093d30:	defff304 	addi	sp,sp,-52
 5093d34:	dfc00c15 	stw	ra,48(sp)
 5093d38:	df000b15 	stw	fp,44(sp)
 5093d3c:	df000b04 	addi	fp,sp,44
 5093d40:	e13ffc15 	stw	r4,-16(fp)
 5093d44:	e17ffd15 	stw	r5,-12(fp)
 5093d48:	e1bffe15 	stw	r6,-8(fp)
 5093d4c:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 5093d50:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 5093d54:	e0bffd17 	ldw	r2,-12(fp)
 5093d58:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 5093d5c:	00003706 	br	5093e3c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 5093d60:	e0bffc17 	ldw	r2,-16(fp)
 5093d64:	10800c17 	ldw	r2,48(r2)
 5093d68:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 5093d6c:	e0bffc17 	ldw	r2,-16(fp)
 5093d70:	10800d17 	ldw	r2,52(r2)
 5093d74:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 5093d78:	e0fff917 	ldw	r3,-28(fp)
 5093d7c:	e0bff517 	ldw	r2,-44(fp)
 5093d80:	1880062e 	bgeu	r3,r2,5093d9c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 5093d84:	e0fff517 	ldw	r3,-44(fp)
 5093d88:	e0bff917 	ldw	r2,-28(fp)
 5093d8c:	1885c83a 	sub	r2,r3,r2
 5093d90:	10bfffc4 	addi	r2,r2,-1
 5093d94:	e0bff615 	stw	r2,-40(fp)
 5093d98:	00000b06 	br	5093dc8 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 5093d9c:	e0bff517 	ldw	r2,-44(fp)
 5093da0:	10000526 	beq	r2,zero,5093db8 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 5093da4:	00c20004 	movi	r3,2048
 5093da8:	e0bff917 	ldw	r2,-28(fp)
 5093dac:	1885c83a 	sub	r2,r3,r2
 5093db0:	e0bff615 	stw	r2,-40(fp)
 5093db4:	00000406 	br	5093dc8 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 5093db8:	00c1ffc4 	movi	r3,2047
 5093dbc:	e0bff917 	ldw	r2,-28(fp)
 5093dc0:	1885c83a 	sub	r2,r3,r2
 5093dc4:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 5093dc8:	e0bff617 	ldw	r2,-40(fp)
 5093dcc:	10001e26 	beq	r2,zero,5093e48 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 5093dd0:	e0fffe17 	ldw	r3,-8(fp)
 5093dd4:	e0bff617 	ldw	r2,-40(fp)
 5093dd8:	1880022e 	bgeu	r3,r2,5093de4 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 5093ddc:	e0bffe17 	ldw	r2,-8(fp)
 5093de0:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 5093de4:	e0bffc17 	ldw	r2,-16(fp)
 5093de8:	10c20e04 	addi	r3,r2,2104
 5093dec:	e0bff917 	ldw	r2,-28(fp)
 5093df0:	1885883a 	add	r2,r3,r2
 5093df4:	e1bff617 	ldw	r6,-40(fp)
 5093df8:	e17ffd17 	ldw	r5,-12(fp)
 5093dfc:	1009883a 	mov	r4,r2
 5093e00:	508a7c00 	call	508a7c0 <memcpy>
      ptr   += n;
 5093e04:	e0fffd17 	ldw	r3,-12(fp)
 5093e08:	e0bff617 	ldw	r2,-40(fp)
 5093e0c:	1885883a 	add	r2,r3,r2
 5093e10:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 5093e14:	e0fffe17 	ldw	r3,-8(fp)
 5093e18:	e0bff617 	ldw	r2,-40(fp)
 5093e1c:	1885c83a 	sub	r2,r3,r2
 5093e20:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 5093e24:	e0fff917 	ldw	r3,-28(fp)
 5093e28:	e0bff617 	ldw	r2,-40(fp)
 5093e2c:	1885883a 	add	r2,r3,r2
 5093e30:	10c1ffcc 	andi	r3,r2,2047
 5093e34:	e0bffc17 	ldw	r2,-16(fp)
 5093e38:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 5093e3c:	e0bffe17 	ldw	r2,-8(fp)
 5093e40:	00bfc716 	blt	zero,r2,5093d60 <__alt_data_end+0xfffc5b60>
 5093e44:	00000106 	br	5093e4c <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 5093e48:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 5093e4c:	0005303a 	rdctl	r2,status
 5093e50:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 5093e54:	e0fffb17 	ldw	r3,-20(fp)
 5093e58:	00bfff84 	movi	r2,-2
 5093e5c:	1884703a 	and	r2,r3,r2
 5093e60:	1001703a 	wrctl	status,r2
  
  return context;
 5093e64:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 5093e68:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 5093e6c:	e0bffc17 	ldw	r2,-16(fp)
 5093e70:	10800817 	ldw	r2,32(r2)
 5093e74:	10c00094 	ori	r3,r2,2
 5093e78:	e0bffc17 	ldw	r2,-16(fp)
 5093e7c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 5093e80:	e0bffc17 	ldw	r2,-16(fp)
 5093e84:	10800017 	ldw	r2,0(r2)
 5093e88:	10800104 	addi	r2,r2,4
 5093e8c:	1007883a 	mov	r3,r2
 5093e90:	e0bffc17 	ldw	r2,-16(fp)
 5093e94:	10800817 	ldw	r2,32(r2)
 5093e98:	18800035 	stwio	r2,0(r3)
 5093e9c:	e0bffa17 	ldw	r2,-24(fp)
 5093ea0:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 5093ea4:	e0bff817 	ldw	r2,-32(fp)
 5093ea8:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 5093eac:	e0bffe17 	ldw	r2,-8(fp)
 5093eb0:	0080100e 	bge	zero,r2,5093ef4 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 5093eb4:	e0bfff17 	ldw	r2,-4(fp)
 5093eb8:	1090000c 	andi	r2,r2,16384
 5093ebc:	1000101e 	bne	r2,zero,5093f00 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 5093ec0:	0001883a 	nop
 5093ec4:	e0bffc17 	ldw	r2,-16(fp)
 5093ec8:	10c00d17 	ldw	r3,52(r2)
 5093ecc:	e0bff517 	ldw	r2,-44(fp)
 5093ed0:	1880051e 	bne	r3,r2,5093ee8 <altera_avalon_jtag_uart_write+0x1b8>
 5093ed4:	e0bffc17 	ldw	r2,-16(fp)
 5093ed8:	10c00917 	ldw	r3,36(r2)
 5093edc:	e0bffc17 	ldw	r2,-16(fp)
 5093ee0:	10800117 	ldw	r2,4(r2)
 5093ee4:	18bff736 	bltu	r3,r2,5093ec4 <__alt_data_end+0xfffc5cc4>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 5093ee8:	e0bffc17 	ldw	r2,-16(fp)
 5093eec:	10800917 	ldw	r2,36(r2)
 5093ef0:	1000051e 	bne	r2,zero,5093f08 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 5093ef4:	e0bffe17 	ldw	r2,-8(fp)
 5093ef8:	00bfd016 	blt	zero,r2,5093e3c <__alt_data_end+0xfffc5c3c>
 5093efc:	00000306 	br	5093f0c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 5093f00:	0001883a 	nop
 5093f04:	00000106 	br	5093f0c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 5093f08:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 5093f0c:	e0fffd17 	ldw	r3,-12(fp)
 5093f10:	e0bff717 	ldw	r2,-36(fp)
 5093f14:	18800426 	beq	r3,r2,5093f28 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 5093f18:	e0fffd17 	ldw	r3,-12(fp)
 5093f1c:	e0bff717 	ldw	r2,-36(fp)
 5093f20:	1885c83a 	sub	r2,r3,r2
 5093f24:	00000606 	br	5093f40 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 5093f28:	e0bfff17 	ldw	r2,-4(fp)
 5093f2c:	1090000c 	andi	r2,r2,16384
 5093f30:	10000226 	beq	r2,zero,5093f3c <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 5093f34:	00bffd44 	movi	r2,-11
 5093f38:	00000106 	br	5093f40 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 5093f3c:	00bffec4 	movi	r2,-5
}
 5093f40:	e037883a 	mov	sp,fp
 5093f44:	dfc00117 	ldw	ra,4(sp)
 5093f48:	df000017 	ldw	fp,0(sp)
 5093f4c:	dec00204 	addi	sp,sp,8
 5093f50:	f800283a 	ret

05093f54 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 5093f54:	defffa04 	addi	sp,sp,-24
 5093f58:	dfc00515 	stw	ra,20(sp)
 5093f5c:	df000415 	stw	fp,16(sp)
 5093f60:	df000404 	addi	fp,sp,16
 5093f64:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 5093f68:	0007883a 	mov	r3,zero
 5093f6c:	e0bfff17 	ldw	r2,-4(fp)
 5093f70:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 5093f74:	e0bfff17 	ldw	r2,-4(fp)
 5093f78:	10800104 	addi	r2,r2,4
 5093f7c:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 5093f80:	0005303a 	rdctl	r2,status
 5093f84:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 5093f88:	e0fffd17 	ldw	r3,-12(fp)
 5093f8c:	00bfff84 	movi	r2,-2
 5093f90:	1884703a 	and	r2,r3,r2
 5093f94:	1001703a 	wrctl	status,r2
  
  return context;
 5093f98:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 5093f9c:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
 5093fa0:	5094c400 	call	5094c40 <alt_tick>
 5093fa4:	e0bffc17 	ldw	r2,-16(fp)
 5093fa8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 5093fac:	e0bffe17 	ldw	r2,-8(fp)
 5093fb0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 5093fb4:	0001883a 	nop
 5093fb8:	e037883a 	mov	sp,fp
 5093fbc:	dfc00117 	ldw	ra,4(sp)
 5093fc0:	df000017 	ldw	fp,0(sp)
 5093fc4:	dec00204 	addi	sp,sp,8
 5093fc8:	f800283a 	ret

05093fcc <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 5093fcc:	defff804 	addi	sp,sp,-32
 5093fd0:	dfc00715 	stw	ra,28(sp)
 5093fd4:	df000615 	stw	fp,24(sp)
 5093fd8:	df000604 	addi	fp,sp,24
 5093fdc:	e13ffc15 	stw	r4,-16(fp)
 5093fe0:	e17ffd15 	stw	r5,-12(fp)
 5093fe4:	e1bffe15 	stw	r6,-8(fp)
 5093fe8:	e1ffff15 	stw	r7,-4(fp)
 5093fec:	e0bfff17 	ldw	r2,-4(fp)
 5093ff0:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 5093ff4:	008142b4 	movhi	r2,1290
 5093ff8:	10a5fd04 	addi	r2,r2,-26636
 5093ffc:	10800017 	ldw	r2,0(r2)
 5094000:	1000041e 	bne	r2,zero,5094014 <alt_avalon_timer_sc_init+0x48>
  {
    _alt_tick_rate = nticks;
 5094004:	008142b4 	movhi	r2,1290
 5094008:	10a5fd04 	addi	r2,r2,-26636
 509400c:	e0fffb17 	ldw	r3,-20(fp)
 5094010:	10c00015 	stw	r3,0(r2)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 5094014:	e0bffc17 	ldw	r2,-16(fp)
 5094018:	10800104 	addi	r2,r2,4
 509401c:	00c001c4 	movi	r3,7
 5094020:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 5094024:	d8000015 	stw	zero,0(sp)
 5094028:	e1fffc17 	ldw	r7,-16(fp)
 509402c:	01814274 	movhi	r6,1289
 5094030:	318fd504 	addi	r6,r6,16212
 5094034:	e17ffe17 	ldw	r5,-8(fp)
 5094038:	e13ffd17 	ldw	r4,-12(fp)
 509403c:	50945200 	call	5094520 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 5094040:	0001883a 	nop
 5094044:	e037883a 	mov	sp,fp
 5094048:	dfc00117 	ldw	ra,4(sp)
 509404c:	df000017 	ldw	fp,0(sp)
 5094050:	dec00204 	addi	sp,sp,8
 5094054:	f800283a 	ret

05094058 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 5094058:	defff504 	addi	sp,sp,-44
 509405c:	df000a15 	stw	fp,40(sp)
 5094060:	df000a04 	addi	fp,sp,40
 5094064:	e13ffc15 	stw	r4,-16(fp)
 5094068:	e17ffd15 	stw	r5,-12(fp)
 509406c:	e1bffe15 	stw	r6,-8(fp)
 5094070:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 5094074:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 5094078:	008142b4 	movhi	r2,1290
 509407c:	10a5fd04 	addi	r2,r2,-26636
 5094080:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
 5094084:	10003f26 	beq	r2,zero,5094184 <alt_alarm_start+0x12c>
  {
    if (alarm)
 5094088:	e0bffc17 	ldw	r2,-16(fp)
 509408c:	10003b26 	beq	r2,zero,509417c <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
 5094090:	e0bffc17 	ldw	r2,-16(fp)
 5094094:	e0fffe17 	ldw	r3,-8(fp)
 5094098:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 509409c:	e0bffc17 	ldw	r2,-16(fp)
 50940a0:	e0ffff17 	ldw	r3,-4(fp)
 50940a4:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 50940a8:	0005303a 	rdctl	r2,status
 50940ac:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 50940b0:	e0fff917 	ldw	r3,-28(fp)
 50940b4:	00bfff84 	movi	r2,-2
 50940b8:	1884703a 	and	r2,r3,r2
 50940bc:	1001703a 	wrctl	status,r2
  
  return context;
 50940c0:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 50940c4:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 50940c8:	008142b4 	movhi	r2,1290
 50940cc:	10a5fe04 	addi	r2,r2,-26632
 50940d0:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
 50940d4:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 50940d8:	e0fffd17 	ldw	r3,-12(fp)
 50940dc:	e0bff617 	ldw	r2,-40(fp)
 50940e0:	1885883a 	add	r2,r3,r2
 50940e4:	10c00044 	addi	r3,r2,1
 50940e8:	e0bffc17 	ldw	r2,-16(fp)
 50940ec:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 50940f0:	e0bffc17 	ldw	r2,-16(fp)
 50940f4:	10c00217 	ldw	r3,8(r2)
 50940f8:	e0bff617 	ldw	r2,-40(fp)
 50940fc:	1880042e 	bgeu	r3,r2,5094110 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
 5094100:	e0bffc17 	ldw	r2,-16(fp)
 5094104:	00c00044 	movi	r3,1
 5094108:	10c00405 	stb	r3,16(r2)
 509410c:	00000206 	br	5094118 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
 5094110:	e0bffc17 	ldw	r2,-16(fp)
 5094114:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 5094118:	e0fffc17 	ldw	r3,-16(fp)
 509411c:	00814274 	movhi	r2,1289
 5094120:	109f2e04 	addi	r2,r2,31928
 5094124:	e0bffa15 	stw	r2,-24(fp)
 5094128:	e0fffb15 	stw	r3,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 509412c:	e0bffb17 	ldw	r2,-20(fp)
 5094130:	e0fffa17 	ldw	r3,-24(fp)
 5094134:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 5094138:	e0bffa17 	ldw	r2,-24(fp)
 509413c:	10c00017 	ldw	r3,0(r2)
 5094140:	e0bffb17 	ldw	r2,-20(fp)
 5094144:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 5094148:	e0bffa17 	ldw	r2,-24(fp)
 509414c:	10800017 	ldw	r2,0(r2)
 5094150:	e0fffb17 	ldw	r3,-20(fp)
 5094154:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 5094158:	e0bffa17 	ldw	r2,-24(fp)
 509415c:	e0fffb17 	ldw	r3,-20(fp)
 5094160:	10c00015 	stw	r3,0(r2)
 5094164:	e0bff817 	ldw	r2,-32(fp)
 5094168:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 509416c:	e0bff717 	ldw	r2,-36(fp)
 5094170:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 5094174:	0005883a 	mov	r2,zero
 5094178:	00000306 	br	5094188 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
 509417c:	00bffa84 	movi	r2,-22
 5094180:	00000106 	br	5094188 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
 5094184:	00bfde84 	movi	r2,-134
  }
}
 5094188:	e037883a 	mov	sp,fp
 509418c:	df000017 	ldw	fp,0(sp)
 5094190:	dec00104 	addi	sp,sp,4
 5094194:	f800283a 	ret

05094198 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
 5094198:	defffa04 	addi	sp,sp,-24
 509419c:	dfc00515 	stw	ra,20(sp)
 50941a0:	df000415 	stw	fp,16(sp)
 50941a4:	df000404 	addi	fp,sp,16
 50941a8:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
 50941ac:	008000c4 	movi	r2,3
 50941b0:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
 50941b4:	e0fffd17 	ldw	r3,-12(fp)
 50941b8:	008003f4 	movhi	r2,15
 50941bc:	10909004 	addi	r2,r2,16960
 50941c0:	1885383a 	mul	r2,r3,r2
 50941c4:	100b883a 	mov	r5,r2
 50941c8:	01017db4 	movhi	r4,1526
 50941cc:	21384004 	addi	r4,r4,-7936
 50941d0:	50828780 	call	5082878 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
 50941d4:	100b883a 	mov	r5,r2
 50941d8:	01200034 	movhi	r4,32768
 50941dc:	213fffc4 	addi	r4,r4,-1
 50941e0:	50828780 	call	5082878 <__udivsi3>
 50941e4:	100b883a 	mov	r5,r2
 50941e8:	e13fff17 	ldw	r4,-4(fp)
 50941ec:	50828780 	call	5082878 <__udivsi3>
 50941f0:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
 50941f4:	e0bffe17 	ldw	r2,-8(fp)
 50941f8:	10002a26 	beq	r2,zero,50942a4 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
 50941fc:	e03ffc15 	stw	zero,-16(fp)
 5094200:	00001706 	br	5094260 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
 5094204:	00a00034 	movhi	r2,32768
 5094208:	10bfffc4 	addi	r2,r2,-1
 509420c:	10bfffc4 	addi	r2,r2,-1
 5094210:	103ffe1e 	bne	r2,zero,509420c <__alt_data_end+0xfffc600c>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
 5094214:	e0fffd17 	ldw	r3,-12(fp)
 5094218:	008003f4 	movhi	r2,15
 509421c:	10909004 	addi	r2,r2,16960
 5094220:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
 5094224:	100b883a 	mov	r5,r2
 5094228:	01017db4 	movhi	r4,1526
 509422c:	21384004 	addi	r4,r4,-7936
 5094230:	50828780 	call	5082878 <__udivsi3>
 5094234:	100b883a 	mov	r5,r2
 5094238:	01200034 	movhi	r4,32768
 509423c:	213fffc4 	addi	r4,r4,-1
 5094240:	50828780 	call	5082878 <__udivsi3>
 5094244:	1007883a 	mov	r3,r2
 5094248:	e0bfff17 	ldw	r2,-4(fp)
 509424c:	10c5c83a 	sub	r2,r2,r3
 5094250:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
 5094254:	e0bffc17 	ldw	r2,-16(fp)
 5094258:	10800044 	addi	r2,r2,1
 509425c:	e0bffc15 	stw	r2,-16(fp)
 5094260:	e0fffc17 	ldw	r3,-16(fp)
 5094264:	e0bffe17 	ldw	r2,-8(fp)
 5094268:	18bfe616 	blt	r3,r2,5094204 <__alt_data_end+0xfffc6004>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 509426c:	e0fffd17 	ldw	r3,-12(fp)
 5094270:	008003f4 	movhi	r2,15
 5094274:	10909004 	addi	r2,r2,16960
 5094278:	1885383a 	mul	r2,r3,r2
 509427c:	100b883a 	mov	r5,r2
 5094280:	01017db4 	movhi	r4,1526
 5094284:	21384004 	addi	r4,r4,-7936
 5094288:	50828780 	call	5082878 <__udivsi3>
 509428c:	1007883a 	mov	r3,r2
 5094290:	e0bfff17 	ldw	r2,-4(fp)
 5094294:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 5094298:	10bfffc4 	addi	r2,r2,-1
 509429c:	103ffe1e 	bne	r2,zero,5094298 <__alt_data_end+0xfffc6098>
 50942a0:	00000d06 	br	50942d8 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 50942a4:	e0fffd17 	ldw	r3,-12(fp)
 50942a8:	008003f4 	movhi	r2,15
 50942ac:	10909004 	addi	r2,r2,16960
 50942b0:	1885383a 	mul	r2,r3,r2
 50942b4:	100b883a 	mov	r5,r2
 50942b8:	01017db4 	movhi	r4,1526
 50942bc:	21384004 	addi	r4,r4,-7936
 50942c0:	50828780 	call	5082878 <__udivsi3>
 50942c4:	1007883a 	mov	r3,r2
 50942c8:	e0bfff17 	ldw	r2,-4(fp)
 50942cc:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 50942d0:	10bfffc4 	addi	r2,r2,-1
 50942d4:	00bffe16 	blt	zero,r2,50942d0 <__alt_data_end+0xfffc60d0>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
 50942d8:	0005883a 	mov	r2,zero
}
 50942dc:	e037883a 	mov	sp,fp
 50942e0:	dfc00117 	ldw	ra,4(sp)
 50942e4:	df000017 	ldw	fp,0(sp)
 50942e8:	dec00204 	addi	sp,sp,8
 50942ec:	f800283a 	ret

050942f0 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 50942f0:	defffe04 	addi	sp,sp,-8
 50942f4:	df000115 	stw	fp,4(sp)
 50942f8:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 50942fc:	e03fff15 	stw	zero,-4(fp)
 5094300:	00000506 	br	5094318 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
 5094304:	e0bfff17 	ldw	r2,-4(fp)
 5094308:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 509430c:	e0bfff17 	ldw	r2,-4(fp)
 5094310:	10800804 	addi	r2,r2,32
 5094314:	e0bfff15 	stw	r2,-4(fp)
 5094318:	e0bfff17 	ldw	r2,-4(fp)
 509431c:	10820030 	cmpltui	r2,r2,2048
 5094320:	103ff81e 	bne	r2,zero,5094304 <__alt_data_end+0xfffc6104>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 5094324:	0001883a 	nop
 5094328:	e037883a 	mov	sp,fp
 509432c:	df000017 	ldw	fp,0(sp)
 5094330:	dec00104 	addi	sp,sp,4
 5094334:	f800283a 	ret

05094338 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 5094338:	defffe04 	addi	sp,sp,-8
 509433c:	dfc00115 	stw	ra,4(sp)
 5094340:	df000015 	stw	fp,0(sp)
 5094344:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 5094348:	00814274 	movhi	r2,1289
 509434c:	109f2b04 	addi	r2,r2,31916
 5094350:	10800017 	ldw	r2,0(r2)
 5094354:	10000526 	beq	r2,zero,509436c <alt_get_errno+0x34>
 5094358:	00814274 	movhi	r2,1289
 509435c:	109f2b04 	addi	r2,r2,31916
 5094360:	10800017 	ldw	r2,0(r2)
 5094364:	103ee83a 	callr	r2
 5094368:	00000206 	br	5094374 <alt_get_errno+0x3c>
 509436c:	008142b4 	movhi	r2,1290
 5094370:	10a5f804 	addi	r2,r2,-26656
}
 5094374:	e037883a 	mov	sp,fp
 5094378:	dfc00117 	ldw	ra,4(sp)
 509437c:	df000017 	ldw	fp,0(sp)
 5094380:	dec00204 	addi	sp,sp,8
 5094384:	f800283a 	ret

05094388 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 5094388:	defffa04 	addi	sp,sp,-24
 509438c:	dfc00515 	stw	ra,20(sp)
 5094390:	df000415 	stw	fp,16(sp)
 5094394:	df000404 	addi	fp,sp,16
 5094398:	e13ffe15 	stw	r4,-8(fp)
 509439c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 50943a0:	e0bffe17 	ldw	r2,-8(fp)
 50943a4:	10000326 	beq	r2,zero,50943b4 <alt_dev_llist_insert+0x2c>
 50943a8:	e0bffe17 	ldw	r2,-8(fp)
 50943ac:	10800217 	ldw	r2,8(r2)
 50943b0:	1000061e 	bne	r2,zero,50943cc <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 50943b4:	50943380 	call	5094338 <alt_get_errno>
 50943b8:	1007883a 	mov	r3,r2
 50943bc:	00800584 	movi	r2,22
 50943c0:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 50943c4:	00bffa84 	movi	r2,-22
 50943c8:	00001306 	br	5094418 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 50943cc:	e0bffe17 	ldw	r2,-8(fp)
 50943d0:	e0ffff17 	ldw	r3,-4(fp)
 50943d4:	e0fffc15 	stw	r3,-16(fp)
 50943d8:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 50943dc:	e0bffd17 	ldw	r2,-12(fp)
 50943e0:	e0fffc17 	ldw	r3,-16(fp)
 50943e4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 50943e8:	e0bffc17 	ldw	r2,-16(fp)
 50943ec:	10c00017 	ldw	r3,0(r2)
 50943f0:	e0bffd17 	ldw	r2,-12(fp)
 50943f4:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 50943f8:	e0bffc17 	ldw	r2,-16(fp)
 50943fc:	10800017 	ldw	r2,0(r2)
 5094400:	e0fffd17 	ldw	r3,-12(fp)
 5094404:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 5094408:	e0bffc17 	ldw	r2,-16(fp)
 509440c:	e0fffd17 	ldw	r3,-12(fp)
 5094410:	10c00015 	stw	r3,0(r2)

  return 0;  
 5094414:	0005883a 	mov	r2,zero
}
 5094418:	e037883a 	mov	sp,fp
 509441c:	dfc00117 	ldw	ra,4(sp)
 5094420:	df000017 	ldw	fp,0(sp)
 5094424:	dec00204 	addi	sp,sp,8
 5094428:	f800283a 	ret

0509442c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 509442c:	defffd04 	addi	sp,sp,-12
 5094430:	dfc00215 	stw	ra,8(sp)
 5094434:	df000115 	stw	fp,4(sp)
 5094438:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 509443c:	00814274 	movhi	r2,1289
 5094440:	1094f904 	addi	r2,r2,21476
 5094444:	e0bfff15 	stw	r2,-4(fp)
 5094448:	00000606 	br	5094464 <_do_ctors+0x38>
        (*ctor) (); 
 509444c:	e0bfff17 	ldw	r2,-4(fp)
 5094450:	10800017 	ldw	r2,0(r2)
 5094454:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 5094458:	e0bfff17 	ldw	r2,-4(fp)
 509445c:	10bfff04 	addi	r2,r2,-4
 5094460:	e0bfff15 	stw	r2,-4(fp)
 5094464:	e0ffff17 	ldw	r3,-4(fp)
 5094468:	00814274 	movhi	r2,1289
 509446c:	1094fa04 	addi	r2,r2,21480
 5094470:	18bff62e 	bgeu	r3,r2,509444c <__alt_data_end+0xfffc624c>
        (*ctor) (); 
}
 5094474:	0001883a 	nop
 5094478:	e037883a 	mov	sp,fp
 509447c:	dfc00117 	ldw	ra,4(sp)
 5094480:	df000017 	ldw	fp,0(sp)
 5094484:	dec00204 	addi	sp,sp,8
 5094488:	f800283a 	ret

0509448c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 509448c:	defffd04 	addi	sp,sp,-12
 5094490:	dfc00215 	stw	ra,8(sp)
 5094494:	df000115 	stw	fp,4(sp)
 5094498:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 509449c:	00814274 	movhi	r2,1289
 50944a0:	1094f904 	addi	r2,r2,21476
 50944a4:	e0bfff15 	stw	r2,-4(fp)
 50944a8:	00000606 	br	50944c4 <_do_dtors+0x38>
        (*dtor) (); 
 50944ac:	e0bfff17 	ldw	r2,-4(fp)
 50944b0:	10800017 	ldw	r2,0(r2)
 50944b4:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 50944b8:	e0bfff17 	ldw	r2,-4(fp)
 50944bc:	10bfff04 	addi	r2,r2,-4
 50944c0:	e0bfff15 	stw	r2,-4(fp)
 50944c4:	e0ffff17 	ldw	r3,-4(fp)
 50944c8:	00814274 	movhi	r2,1289
 50944cc:	1094fa04 	addi	r2,r2,21480
 50944d0:	18bff62e 	bgeu	r3,r2,50944ac <__alt_data_end+0xfffc62ac>
        (*dtor) (); 
}
 50944d4:	0001883a 	nop
 50944d8:	e037883a 	mov	sp,fp
 50944dc:	dfc00117 	ldw	ra,4(sp)
 50944e0:	df000017 	ldw	fp,0(sp)
 50944e4:	dec00204 	addi	sp,sp,8
 50944e8:	f800283a 	ret

050944ec <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 50944ec:	defffe04 	addi	sp,sp,-8
 50944f0:	dfc00115 	stw	ra,4(sp)
 50944f4:	df000015 	stw	fp,0(sp)
 50944f8:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 50944fc:	01440004 	movi	r5,4096
 5094500:	0009883a 	mov	r4,zero
 5094504:	5094fc40 	call	5094fc4 <alt_icache_flush>
#endif
}
 5094508:	0001883a 	nop
 509450c:	e037883a 	mov	sp,fp
 5094510:	dfc00117 	ldw	ra,4(sp)
 5094514:	df000017 	ldw	fp,0(sp)
 5094518:	dec00204 	addi	sp,sp,8
 509451c:	f800283a 	ret

05094520 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 5094520:	defff904 	addi	sp,sp,-28
 5094524:	dfc00615 	stw	ra,24(sp)
 5094528:	df000515 	stw	fp,20(sp)
 509452c:	df000504 	addi	fp,sp,20
 5094530:	e13ffc15 	stw	r4,-16(fp)
 5094534:	e17ffd15 	stw	r5,-12(fp)
 5094538:	e1bffe15 	stw	r6,-8(fp)
 509453c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 5094540:	e0800217 	ldw	r2,8(fp)
 5094544:	d8800015 	stw	r2,0(sp)
 5094548:	e1ffff17 	ldw	r7,-4(fp)
 509454c:	e1bffe17 	ldw	r6,-8(fp)
 5094550:	e17ffd17 	ldw	r5,-12(fp)
 5094554:	e13ffc17 	ldw	r4,-16(fp)
 5094558:	50947000 	call	5094700 <alt_iic_isr_register>
}  
 509455c:	e037883a 	mov	sp,fp
 5094560:	dfc00117 	ldw	ra,4(sp)
 5094564:	df000017 	ldw	fp,0(sp)
 5094568:	dec00204 	addi	sp,sp,8
 509456c:	f800283a 	ret

05094570 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 5094570:	defff904 	addi	sp,sp,-28
 5094574:	df000615 	stw	fp,24(sp)
 5094578:	df000604 	addi	fp,sp,24
 509457c:	e13ffe15 	stw	r4,-8(fp)
 5094580:	e17fff15 	stw	r5,-4(fp)
 5094584:	e0bfff17 	ldw	r2,-4(fp)
 5094588:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 509458c:	0005303a 	rdctl	r2,status
 5094590:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 5094594:	e0fffb17 	ldw	r3,-20(fp)
 5094598:	00bfff84 	movi	r2,-2
 509459c:	1884703a 	and	r2,r3,r2
 50945a0:	1001703a 	wrctl	status,r2
  
  return context;
 50945a4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 50945a8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 50945ac:	00c00044 	movi	r3,1
 50945b0:	e0bffa17 	ldw	r2,-24(fp)
 50945b4:	1884983a 	sll	r2,r3,r2
 50945b8:	1007883a 	mov	r3,r2
 50945bc:	008142b4 	movhi	r2,1290
 50945c0:	10a5f904 	addi	r2,r2,-26652
 50945c4:	10800017 	ldw	r2,0(r2)
 50945c8:	1886b03a 	or	r3,r3,r2
 50945cc:	008142b4 	movhi	r2,1290
 50945d0:	10a5f904 	addi	r2,r2,-26652
 50945d4:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 50945d8:	008142b4 	movhi	r2,1290
 50945dc:	10a5f904 	addi	r2,r2,-26652
 50945e0:	10800017 	ldw	r2,0(r2)
 50945e4:	100170fa 	wrctl	ienable,r2
 50945e8:	e0bffc17 	ldw	r2,-16(fp)
 50945ec:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 50945f0:	e0bffd17 	ldw	r2,-12(fp)
 50945f4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 50945f8:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 50945fc:	0001883a 	nop
}
 5094600:	e037883a 	mov	sp,fp
 5094604:	df000017 	ldw	fp,0(sp)
 5094608:	dec00104 	addi	sp,sp,4
 509460c:	f800283a 	ret

05094610 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 5094610:	defff904 	addi	sp,sp,-28
 5094614:	df000615 	stw	fp,24(sp)
 5094618:	df000604 	addi	fp,sp,24
 509461c:	e13ffe15 	stw	r4,-8(fp)
 5094620:	e17fff15 	stw	r5,-4(fp)
 5094624:	e0bfff17 	ldw	r2,-4(fp)
 5094628:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 509462c:	0005303a 	rdctl	r2,status
 5094630:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 5094634:	e0fffb17 	ldw	r3,-20(fp)
 5094638:	00bfff84 	movi	r2,-2
 509463c:	1884703a 	and	r2,r3,r2
 5094640:	1001703a 	wrctl	status,r2
  
  return context;
 5094644:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 5094648:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 509464c:	00c00044 	movi	r3,1
 5094650:	e0bffa17 	ldw	r2,-24(fp)
 5094654:	1884983a 	sll	r2,r3,r2
 5094658:	0084303a 	nor	r2,zero,r2
 509465c:	1007883a 	mov	r3,r2
 5094660:	008142b4 	movhi	r2,1290
 5094664:	10a5f904 	addi	r2,r2,-26652
 5094668:	10800017 	ldw	r2,0(r2)
 509466c:	1886703a 	and	r3,r3,r2
 5094670:	008142b4 	movhi	r2,1290
 5094674:	10a5f904 	addi	r2,r2,-26652
 5094678:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 509467c:	008142b4 	movhi	r2,1290
 5094680:	10a5f904 	addi	r2,r2,-26652
 5094684:	10800017 	ldw	r2,0(r2)
 5094688:	100170fa 	wrctl	ienable,r2
 509468c:	e0bffc17 	ldw	r2,-16(fp)
 5094690:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 5094694:	e0bffd17 	ldw	r2,-12(fp)
 5094698:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 509469c:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 50946a0:	0001883a 	nop
}
 50946a4:	e037883a 	mov	sp,fp
 50946a8:	df000017 	ldw	fp,0(sp)
 50946ac:	dec00104 	addi	sp,sp,4
 50946b0:	f800283a 	ret

050946b4 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 50946b4:	defffc04 	addi	sp,sp,-16
 50946b8:	df000315 	stw	fp,12(sp)
 50946bc:	df000304 	addi	fp,sp,12
 50946c0:	e13ffe15 	stw	r4,-8(fp)
 50946c4:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 50946c8:	000530fa 	rdctl	r2,ienable
 50946cc:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 50946d0:	00c00044 	movi	r3,1
 50946d4:	e0bfff17 	ldw	r2,-4(fp)
 50946d8:	1884983a 	sll	r2,r3,r2
 50946dc:	1007883a 	mov	r3,r2
 50946e0:	e0bffd17 	ldw	r2,-12(fp)
 50946e4:	1884703a 	and	r2,r3,r2
 50946e8:	1004c03a 	cmpne	r2,r2,zero
 50946ec:	10803fcc 	andi	r2,r2,255
}
 50946f0:	e037883a 	mov	sp,fp
 50946f4:	df000017 	ldw	fp,0(sp)
 50946f8:	dec00104 	addi	sp,sp,4
 50946fc:	f800283a 	ret

05094700 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 5094700:	defff504 	addi	sp,sp,-44
 5094704:	dfc00a15 	stw	ra,40(sp)
 5094708:	df000915 	stw	fp,36(sp)
 509470c:	df000904 	addi	fp,sp,36
 5094710:	e13ffc15 	stw	r4,-16(fp)
 5094714:	e17ffd15 	stw	r5,-12(fp)
 5094718:	e1bffe15 	stw	r6,-8(fp)
 509471c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 5094720:	00bffa84 	movi	r2,-22
 5094724:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 5094728:	e0bffd17 	ldw	r2,-12(fp)
 509472c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 5094730:	e0bff817 	ldw	r2,-32(fp)
 5094734:	10800808 	cmpgei	r2,r2,32
 5094738:	1000271e 	bne	r2,zero,50947d8 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 509473c:	0005303a 	rdctl	r2,status
 5094740:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 5094744:	e0fffb17 	ldw	r3,-20(fp)
 5094748:	00bfff84 	movi	r2,-2
 509474c:	1884703a 	and	r2,r3,r2
 5094750:	1001703a 	wrctl	status,r2
  
  return context;
 5094754:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 5094758:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
 509475c:	008142b4 	movhi	r2,1290
 5094760:	10a61304 	addi	r2,r2,-26548
 5094764:	e0fff817 	ldw	r3,-32(fp)
 5094768:	180690fa 	slli	r3,r3,3
 509476c:	10c5883a 	add	r2,r2,r3
 5094770:	e0fffe17 	ldw	r3,-8(fp)
 5094774:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 5094778:	008142b4 	movhi	r2,1290
 509477c:	10a61304 	addi	r2,r2,-26548
 5094780:	e0fff817 	ldw	r3,-32(fp)
 5094784:	180690fa 	slli	r3,r3,3
 5094788:	10c5883a 	add	r2,r2,r3
 509478c:	10800104 	addi	r2,r2,4
 5094790:	e0ffff17 	ldw	r3,-4(fp)
 5094794:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 5094798:	e0bffe17 	ldw	r2,-8(fp)
 509479c:	10000526 	beq	r2,zero,50947b4 <alt_iic_isr_register+0xb4>
 50947a0:	e0bff817 	ldw	r2,-32(fp)
 50947a4:	100b883a 	mov	r5,r2
 50947a8:	e13ffc17 	ldw	r4,-16(fp)
 50947ac:	50945700 	call	5094570 <alt_ic_irq_enable>
 50947b0:	00000406 	br	50947c4 <alt_iic_isr_register+0xc4>
 50947b4:	e0bff817 	ldw	r2,-32(fp)
 50947b8:	100b883a 	mov	r5,r2
 50947bc:	e13ffc17 	ldw	r4,-16(fp)
 50947c0:	50946100 	call	5094610 <alt_ic_irq_disable>
 50947c4:	e0bff715 	stw	r2,-36(fp)
 50947c8:	e0bffa17 	ldw	r2,-24(fp)
 50947cc:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 50947d0:	e0bff917 	ldw	r2,-28(fp)
 50947d4:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 50947d8:	e0bff717 	ldw	r2,-36(fp)
}
 50947dc:	e037883a 	mov	sp,fp
 50947e0:	dfc00117 	ldw	ra,4(sp)
 50947e4:	df000017 	ldw	fp,0(sp)
 50947e8:	dec00204 	addi	sp,sp,8
 50947ec:	f800283a 	ret

050947f0 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 50947f0:	defff904 	addi	sp,sp,-28
 50947f4:	dfc00615 	stw	ra,24(sp)
 50947f8:	df000515 	stw	fp,20(sp)
 50947fc:	df000504 	addi	fp,sp,20
 5094800:	e13ffc15 	stw	r4,-16(fp)
 5094804:	e17ffd15 	stw	r5,-12(fp)
 5094808:	e1bffe15 	stw	r6,-8(fp)
 509480c:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 5094810:	e1bfff17 	ldw	r6,-4(fp)
 5094814:	e17ffe17 	ldw	r5,-8(fp)
 5094818:	e13ffd17 	ldw	r4,-12(fp)
 509481c:	5094a4c0 	call	5094a4c <open>
 5094820:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 5094824:	e0bffb17 	ldw	r2,-20(fp)
 5094828:	10001c16 	blt	r2,zero,509489c <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
 509482c:	00814274 	movhi	r2,1289
 5094830:	109aa804 	addi	r2,r2,27296
 5094834:	e0fffb17 	ldw	r3,-20(fp)
 5094838:	18c00324 	muli	r3,r3,12
 509483c:	10c5883a 	add	r2,r2,r3
 5094840:	10c00017 	ldw	r3,0(r2)
 5094844:	e0bffc17 	ldw	r2,-16(fp)
 5094848:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 509484c:	00814274 	movhi	r2,1289
 5094850:	109aa804 	addi	r2,r2,27296
 5094854:	e0fffb17 	ldw	r3,-20(fp)
 5094858:	18c00324 	muli	r3,r3,12
 509485c:	10c5883a 	add	r2,r2,r3
 5094860:	10800104 	addi	r2,r2,4
 5094864:	10c00017 	ldw	r3,0(r2)
 5094868:	e0bffc17 	ldw	r2,-16(fp)
 509486c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 5094870:	00814274 	movhi	r2,1289
 5094874:	109aa804 	addi	r2,r2,27296
 5094878:	e0fffb17 	ldw	r3,-20(fp)
 509487c:	18c00324 	muli	r3,r3,12
 5094880:	10c5883a 	add	r2,r2,r3
 5094884:	10800204 	addi	r2,r2,8
 5094888:	10c00017 	ldw	r3,0(r2)
 509488c:	e0bffc17 	ldw	r2,-16(fp)
 5094890:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 5094894:	e13ffb17 	ldw	r4,-20(fp)
 5094898:	509317c0 	call	509317c <alt_release_fd>
  }
} 
 509489c:	0001883a 	nop
 50948a0:	e037883a 	mov	sp,fp
 50948a4:	dfc00117 	ldw	ra,4(sp)
 50948a8:	df000017 	ldw	fp,0(sp)
 50948ac:	dec00204 	addi	sp,sp,8
 50948b0:	f800283a 	ret

050948b4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 50948b4:	defffb04 	addi	sp,sp,-20
 50948b8:	dfc00415 	stw	ra,16(sp)
 50948bc:	df000315 	stw	fp,12(sp)
 50948c0:	df000304 	addi	fp,sp,12
 50948c4:	e13ffd15 	stw	r4,-12(fp)
 50948c8:	e17ffe15 	stw	r5,-8(fp)
 50948cc:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 50948d0:	01c07fc4 	movi	r7,511
 50948d4:	01800044 	movi	r6,1
 50948d8:	e17ffd17 	ldw	r5,-12(fp)
 50948dc:	01014274 	movhi	r4,1289
 50948e0:	211aab04 	addi	r4,r4,27308
 50948e4:	50947f00 	call	50947f0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 50948e8:	01c07fc4 	movi	r7,511
 50948ec:	000d883a 	mov	r6,zero
 50948f0:	e17ffe17 	ldw	r5,-8(fp)
 50948f4:	01014274 	movhi	r4,1289
 50948f8:	211aa804 	addi	r4,r4,27296
 50948fc:	50947f00 	call	50947f0 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 5094900:	01c07fc4 	movi	r7,511
 5094904:	01800044 	movi	r6,1
 5094908:	e17fff17 	ldw	r5,-4(fp)
 509490c:	01014274 	movhi	r4,1289
 5094910:	211aae04 	addi	r4,r4,27320
 5094914:	50947f00 	call	50947f0 <alt_open_fd>
}  
 5094918:	0001883a 	nop
 509491c:	e037883a 	mov	sp,fp
 5094920:	dfc00117 	ldw	ra,4(sp)
 5094924:	df000017 	ldw	fp,0(sp)
 5094928:	dec00204 	addi	sp,sp,8
 509492c:	f800283a 	ret

05094930 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 5094930:	defffe04 	addi	sp,sp,-8
 5094934:	dfc00115 	stw	ra,4(sp)
 5094938:	df000015 	stw	fp,0(sp)
 509493c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 5094940:	00814274 	movhi	r2,1289
 5094944:	109f2b04 	addi	r2,r2,31916
 5094948:	10800017 	ldw	r2,0(r2)
 509494c:	10000526 	beq	r2,zero,5094964 <alt_get_errno+0x34>
 5094950:	00814274 	movhi	r2,1289
 5094954:	109f2b04 	addi	r2,r2,31916
 5094958:	10800017 	ldw	r2,0(r2)
 509495c:	103ee83a 	callr	r2
 5094960:	00000206 	br	509496c <alt_get_errno+0x3c>
 5094964:	008142b4 	movhi	r2,1290
 5094968:	10a5f804 	addi	r2,r2,-26656
}
 509496c:	e037883a 	mov	sp,fp
 5094970:	dfc00117 	ldw	ra,4(sp)
 5094974:	df000017 	ldw	fp,0(sp)
 5094978:	dec00204 	addi	sp,sp,8
 509497c:	f800283a 	ret

05094980 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 5094980:	defffd04 	addi	sp,sp,-12
 5094984:	df000215 	stw	fp,8(sp)
 5094988:	df000204 	addi	fp,sp,8
 509498c:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 5094990:	e0bfff17 	ldw	r2,-4(fp)
 5094994:	10800217 	ldw	r2,8(r2)
 5094998:	10d00034 	orhi	r3,r2,16384
 509499c:	e0bfff17 	ldw	r2,-4(fp)
 50949a0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 50949a4:	e03ffe15 	stw	zero,-8(fp)
 50949a8:	00001d06 	br	5094a20 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 50949ac:	00814274 	movhi	r2,1289
 50949b0:	109aa804 	addi	r2,r2,27296
 50949b4:	e0fffe17 	ldw	r3,-8(fp)
 50949b8:	18c00324 	muli	r3,r3,12
 50949bc:	10c5883a 	add	r2,r2,r3
 50949c0:	10c00017 	ldw	r3,0(r2)
 50949c4:	e0bfff17 	ldw	r2,-4(fp)
 50949c8:	10800017 	ldw	r2,0(r2)
 50949cc:	1880111e 	bne	r3,r2,5094a14 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 50949d0:	00814274 	movhi	r2,1289
 50949d4:	109aa804 	addi	r2,r2,27296
 50949d8:	e0fffe17 	ldw	r3,-8(fp)
 50949dc:	18c00324 	muli	r3,r3,12
 50949e0:	10c5883a 	add	r2,r2,r3
 50949e4:	10800204 	addi	r2,r2,8
 50949e8:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 50949ec:	1000090e 	bge	r2,zero,5094a14 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 50949f0:	e0bffe17 	ldw	r2,-8(fp)
 50949f4:	10c00324 	muli	r3,r2,12
 50949f8:	00814274 	movhi	r2,1289
 50949fc:	109aa804 	addi	r2,r2,27296
 5094a00:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 5094a04:	e0bfff17 	ldw	r2,-4(fp)
 5094a08:	18800226 	beq	r3,r2,5094a14 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 5094a0c:	00bffcc4 	movi	r2,-13
 5094a10:	00000a06 	br	5094a3c <alt_file_locked+0xbc>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 5094a14:	e0bffe17 	ldw	r2,-8(fp)
 5094a18:	10800044 	addi	r2,r2,1
 5094a1c:	e0bffe15 	stw	r2,-8(fp)
 5094a20:	00814274 	movhi	r2,1289
 5094a24:	109f2a04 	addi	r2,r2,31912
 5094a28:	10800017 	ldw	r2,0(r2)
 5094a2c:	1007883a 	mov	r3,r2
 5094a30:	e0bffe17 	ldw	r2,-8(fp)
 5094a34:	18bfdd2e 	bgeu	r3,r2,50949ac <__alt_data_end+0xfffc67ac>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 5094a38:	0005883a 	mov	r2,zero
}
 5094a3c:	e037883a 	mov	sp,fp
 5094a40:	df000017 	ldw	fp,0(sp)
 5094a44:	dec00104 	addi	sp,sp,4
 5094a48:	f800283a 	ret

05094a4c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 5094a4c:	defff604 	addi	sp,sp,-40
 5094a50:	dfc00915 	stw	ra,36(sp)
 5094a54:	df000815 	stw	fp,32(sp)
 5094a58:	df000804 	addi	fp,sp,32
 5094a5c:	e13ffd15 	stw	r4,-12(fp)
 5094a60:	e17ffe15 	stw	r5,-8(fp)
 5094a64:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 5094a68:	00bfffc4 	movi	r2,-1
 5094a6c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 5094a70:	00bffb44 	movi	r2,-19
 5094a74:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 5094a78:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 5094a7c:	01414274 	movhi	r5,1289
 5094a80:	295f2804 	addi	r5,r5,31904
 5094a84:	e13ffd17 	ldw	r4,-12(fp)
 5094a88:	5094d6c0 	call	5094d6c <alt_find_dev>
 5094a8c:	e0bff815 	stw	r2,-32(fp)
 5094a90:	e0bff817 	ldw	r2,-32(fp)
 5094a94:	1000051e 	bne	r2,zero,5094aac <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 5094a98:	e13ffd17 	ldw	r4,-12(fp)
 5094a9c:	5094dfc0 	call	5094dfc <alt_find_file>
 5094aa0:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 5094aa4:	00800044 	movi	r2,1
 5094aa8:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 5094aac:	e0bff817 	ldw	r2,-32(fp)
 5094ab0:	10002926 	beq	r2,zero,5094b58 <open+0x10c>
  {
    if ((index = alt_get_fd (dev)) < 0)
 5094ab4:	e13ff817 	ldw	r4,-32(fp)
 5094ab8:	5094f100 	call	5094f10 <alt_get_fd>
 5094abc:	e0bff915 	stw	r2,-28(fp)
 5094ac0:	e0bff917 	ldw	r2,-28(fp)
 5094ac4:	1000030e 	bge	r2,zero,5094ad4 <open+0x88>
    {
      status = index;
 5094ac8:	e0bff917 	ldw	r2,-28(fp)
 5094acc:	e0bffa15 	stw	r2,-24(fp)
 5094ad0:	00002306 	br	5094b60 <open+0x114>
    }
    else
    {
      fd = &alt_fd_list[index];
 5094ad4:	e0bff917 	ldw	r2,-28(fp)
 5094ad8:	10c00324 	muli	r3,r2,12
 5094adc:	00814274 	movhi	r2,1289
 5094ae0:	109aa804 	addi	r2,r2,27296
 5094ae4:	1885883a 	add	r2,r3,r2
 5094ae8:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 5094aec:	e0fffe17 	ldw	r3,-8(fp)
 5094af0:	00900034 	movhi	r2,16384
 5094af4:	10bfffc4 	addi	r2,r2,-1
 5094af8:	1886703a 	and	r3,r3,r2
 5094afc:	e0bffc17 	ldw	r2,-16(fp)
 5094b00:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 5094b04:	e0bffb17 	ldw	r2,-20(fp)
 5094b08:	1000051e 	bne	r2,zero,5094b20 <open+0xd4>
 5094b0c:	e13ffc17 	ldw	r4,-16(fp)
 5094b10:	50949800 	call	5094980 <alt_file_locked>
 5094b14:	e0bffa15 	stw	r2,-24(fp)
 5094b18:	e0bffa17 	ldw	r2,-24(fp)
 5094b1c:	10001016 	blt	r2,zero,5094b60 <open+0x114>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 5094b20:	e0bff817 	ldw	r2,-32(fp)
 5094b24:	10800317 	ldw	r2,12(r2)
 5094b28:	10000826 	beq	r2,zero,5094b4c <open+0x100>
 5094b2c:	e0bff817 	ldw	r2,-32(fp)
 5094b30:	10800317 	ldw	r2,12(r2)
 5094b34:	e1ffff17 	ldw	r7,-4(fp)
 5094b38:	e1bffe17 	ldw	r6,-8(fp)
 5094b3c:	e17ffd17 	ldw	r5,-12(fp)
 5094b40:	e13ffc17 	ldw	r4,-16(fp)
 5094b44:	103ee83a 	callr	r2
 5094b48:	00000106 	br	5094b50 <open+0x104>
 5094b4c:	0005883a 	mov	r2,zero
 5094b50:	e0bffa15 	stw	r2,-24(fp)
 5094b54:	00000206 	br	5094b60 <open+0x114>
      }
    }
  }
  else
  {
    status = -ENODEV;
 5094b58:	00bffb44 	movi	r2,-19
 5094b5c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 5094b60:	e0bffa17 	ldw	r2,-24(fp)
 5094b64:	1000090e 	bge	r2,zero,5094b8c <open+0x140>
  {
    alt_release_fd (index);  
 5094b68:	e13ff917 	ldw	r4,-28(fp)
 5094b6c:	509317c0 	call	509317c <alt_release_fd>
    ALT_ERRNO = -status;
 5094b70:	50949300 	call	5094930 <alt_get_errno>
 5094b74:	1007883a 	mov	r3,r2
 5094b78:	e0bffa17 	ldw	r2,-24(fp)
 5094b7c:	0085c83a 	sub	r2,zero,r2
 5094b80:	18800015 	stw	r2,0(r3)
    return -1;
 5094b84:	00bfffc4 	movi	r2,-1
 5094b88:	00000106 	br	5094b90 <open+0x144>
  }
  
  /* return the reference upon success */

  return index;
 5094b8c:	e0bff917 	ldw	r2,-28(fp)
}
 5094b90:	e037883a 	mov	sp,fp
 5094b94:	dfc00117 	ldw	ra,4(sp)
 5094b98:	df000017 	ldw	fp,0(sp)
 5094b9c:	dec00204 	addi	sp,sp,8
 5094ba0:	f800283a 	ret

05094ba4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 5094ba4:	defffa04 	addi	sp,sp,-24
 5094ba8:	df000515 	stw	fp,20(sp)
 5094bac:	df000504 	addi	fp,sp,20
 5094bb0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 5094bb4:	0005303a 	rdctl	r2,status
 5094bb8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 5094bbc:	e0fffc17 	ldw	r3,-16(fp)
 5094bc0:	00bfff84 	movi	r2,-2
 5094bc4:	1884703a 	and	r2,r3,r2
 5094bc8:	1001703a 	wrctl	status,r2
  
  return context;
 5094bcc:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 5094bd0:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 5094bd4:	e0bfff17 	ldw	r2,-4(fp)
 5094bd8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 5094bdc:	e0bffd17 	ldw	r2,-12(fp)
 5094be0:	10800017 	ldw	r2,0(r2)
 5094be4:	e0fffd17 	ldw	r3,-12(fp)
 5094be8:	18c00117 	ldw	r3,4(r3)
 5094bec:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 5094bf0:	e0bffd17 	ldw	r2,-12(fp)
 5094bf4:	10800117 	ldw	r2,4(r2)
 5094bf8:	e0fffd17 	ldw	r3,-12(fp)
 5094bfc:	18c00017 	ldw	r3,0(r3)
 5094c00:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 5094c04:	e0bffd17 	ldw	r2,-12(fp)
 5094c08:	e0fffd17 	ldw	r3,-12(fp)
 5094c0c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 5094c10:	e0bffd17 	ldw	r2,-12(fp)
 5094c14:	e0fffd17 	ldw	r3,-12(fp)
 5094c18:	10c00015 	stw	r3,0(r2)
 5094c1c:	e0bffb17 	ldw	r2,-20(fp)
 5094c20:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 5094c24:	e0bffe17 	ldw	r2,-8(fp)
 5094c28:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 5094c2c:	0001883a 	nop
 5094c30:	e037883a 	mov	sp,fp
 5094c34:	df000017 	ldw	fp,0(sp)
 5094c38:	dec00104 	addi	sp,sp,4
 5094c3c:	f800283a 	ret

05094c40 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 5094c40:	defffb04 	addi	sp,sp,-20
 5094c44:	dfc00415 	stw	ra,16(sp)
 5094c48:	df000315 	stw	fp,12(sp)
 5094c4c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 5094c50:	d0a00e17 	ldw	r2,-32712(gp)
 5094c54:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 5094c58:	d0a6de17 	ldw	r2,-25736(gp)
 5094c5c:	10800044 	addi	r2,r2,1
 5094c60:	d0a6de15 	stw	r2,-25736(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 5094c64:	00002e06 	br	5094d20 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 5094c68:	e0bffd17 	ldw	r2,-12(fp)
 5094c6c:	10800017 	ldw	r2,0(r2)
 5094c70:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 5094c74:	e0bffd17 	ldw	r2,-12(fp)
 5094c78:	10800403 	ldbu	r2,16(r2)
 5094c7c:	10803fcc 	andi	r2,r2,255
 5094c80:	10000426 	beq	r2,zero,5094c94 <alt_tick+0x54>
 5094c84:	d0a6de17 	ldw	r2,-25736(gp)
 5094c88:	1000021e 	bne	r2,zero,5094c94 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 5094c8c:	e0bffd17 	ldw	r2,-12(fp)
 5094c90:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 5094c94:	e0bffd17 	ldw	r2,-12(fp)
 5094c98:	10800217 	ldw	r2,8(r2)
 5094c9c:	d0e6de17 	ldw	r3,-25736(gp)
 5094ca0:	18801d36 	bltu	r3,r2,5094d18 <alt_tick+0xd8>
 5094ca4:	e0bffd17 	ldw	r2,-12(fp)
 5094ca8:	10800403 	ldbu	r2,16(r2)
 5094cac:	10803fcc 	andi	r2,r2,255
 5094cb0:	1000191e 	bne	r2,zero,5094d18 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 5094cb4:	e0bffd17 	ldw	r2,-12(fp)
 5094cb8:	10800317 	ldw	r2,12(r2)
 5094cbc:	e0fffd17 	ldw	r3,-12(fp)
 5094cc0:	18c00517 	ldw	r3,20(r3)
 5094cc4:	1809883a 	mov	r4,r3
 5094cc8:	103ee83a 	callr	r2
 5094ccc:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 5094cd0:	e0bfff17 	ldw	r2,-4(fp)
 5094cd4:	1000031e 	bne	r2,zero,5094ce4 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 5094cd8:	e13ffd17 	ldw	r4,-12(fp)
 5094cdc:	5094ba40 	call	5094ba4 <alt_alarm_stop>
 5094ce0:	00000d06 	br	5094d18 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 5094ce4:	e0bffd17 	ldw	r2,-12(fp)
 5094ce8:	10c00217 	ldw	r3,8(r2)
 5094cec:	e0bfff17 	ldw	r2,-4(fp)
 5094cf0:	1887883a 	add	r3,r3,r2
 5094cf4:	e0bffd17 	ldw	r2,-12(fp)
 5094cf8:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 5094cfc:	e0bffd17 	ldw	r2,-12(fp)
 5094d00:	10c00217 	ldw	r3,8(r2)
 5094d04:	d0a6de17 	ldw	r2,-25736(gp)
 5094d08:	1880032e 	bgeu	r3,r2,5094d18 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 5094d0c:	e0bffd17 	ldw	r2,-12(fp)
 5094d10:	00c00044 	movi	r3,1
 5094d14:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 5094d18:	e0bffe17 	ldw	r2,-8(fp)
 5094d1c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 5094d20:	e0fffd17 	ldw	r3,-12(fp)
 5094d24:	d0a00e04 	addi	r2,gp,-32712
 5094d28:	18bfcf1e 	bne	r3,r2,5094c68 <__alt_data_end+0xfffc6a68>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 5094d2c:	0001883a 	nop
}
 5094d30:	0001883a 	nop
 5094d34:	e037883a 	mov	sp,fp
 5094d38:	dfc00117 	ldw	ra,4(sp)
 5094d3c:	df000017 	ldw	fp,0(sp)
 5094d40:	dec00204 	addi	sp,sp,8
 5094d44:	f800283a 	ret

05094d48 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 5094d48:	deffff04 	addi	sp,sp,-4
 5094d4c:	df000015 	stw	fp,0(sp)
 5094d50:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 5094d54:	000170fa 	wrctl	ienable,zero
}
 5094d58:	0001883a 	nop
 5094d5c:	e037883a 	mov	sp,fp
 5094d60:	df000017 	ldw	fp,0(sp)
 5094d64:	dec00104 	addi	sp,sp,4
 5094d68:	f800283a 	ret

05094d6c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 5094d6c:	defffa04 	addi	sp,sp,-24
 5094d70:	dfc00515 	stw	ra,20(sp)
 5094d74:	df000415 	stw	fp,16(sp)
 5094d78:	df000404 	addi	fp,sp,16
 5094d7c:	e13ffe15 	stw	r4,-8(fp)
 5094d80:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 5094d84:	e0bfff17 	ldw	r2,-4(fp)
 5094d88:	10800017 	ldw	r2,0(r2)
 5094d8c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 5094d90:	e13ffe17 	ldw	r4,-8(fp)
 5094d94:	5082b380 	call	5082b38 <strlen>
 5094d98:	10800044 	addi	r2,r2,1
 5094d9c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 5094da0:	00000d06 	br	5094dd8 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 5094da4:	e0bffc17 	ldw	r2,-16(fp)
 5094da8:	10800217 	ldw	r2,8(r2)
 5094dac:	e0fffd17 	ldw	r3,-12(fp)
 5094db0:	180d883a 	mov	r6,r3
 5094db4:	e17ffe17 	ldw	r5,-8(fp)
 5094db8:	1009883a 	mov	r4,r2
 5094dbc:	50950a00 	call	50950a0 <memcmp>
 5094dc0:	1000021e 	bne	r2,zero,5094dcc <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 5094dc4:	e0bffc17 	ldw	r2,-16(fp)
 5094dc8:	00000706 	br	5094de8 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 5094dcc:	e0bffc17 	ldw	r2,-16(fp)
 5094dd0:	10800017 	ldw	r2,0(r2)
 5094dd4:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 5094dd8:	e0fffc17 	ldw	r3,-16(fp)
 5094ddc:	e0bfff17 	ldw	r2,-4(fp)
 5094de0:	18bff01e 	bne	r3,r2,5094da4 <__alt_data_end+0xfffc6ba4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 5094de4:	0005883a 	mov	r2,zero
}
 5094de8:	e037883a 	mov	sp,fp
 5094dec:	dfc00117 	ldw	ra,4(sp)
 5094df0:	df000017 	ldw	fp,0(sp)
 5094df4:	dec00204 	addi	sp,sp,8
 5094df8:	f800283a 	ret

05094dfc <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 5094dfc:	defffb04 	addi	sp,sp,-20
 5094e00:	dfc00415 	stw	ra,16(sp)
 5094e04:	df000315 	stw	fp,12(sp)
 5094e08:	df000304 	addi	fp,sp,12
 5094e0c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 5094e10:	00814274 	movhi	r2,1289
 5094e14:	109f2604 	addi	r2,r2,31896
 5094e18:	10800017 	ldw	r2,0(r2)
 5094e1c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 5094e20:	00003106 	br	5094ee8 <alt_find_file+0xec>
  {
    len = strlen(next->name);
 5094e24:	e0bffd17 	ldw	r2,-12(fp)
 5094e28:	10800217 	ldw	r2,8(r2)
 5094e2c:	1009883a 	mov	r4,r2
 5094e30:	5082b380 	call	5082b38 <strlen>
 5094e34:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 5094e38:	e0bffd17 	ldw	r2,-12(fp)
 5094e3c:	10c00217 	ldw	r3,8(r2)
 5094e40:	e0bffe17 	ldw	r2,-8(fp)
 5094e44:	10bfffc4 	addi	r2,r2,-1
 5094e48:	1885883a 	add	r2,r3,r2
 5094e4c:	10800003 	ldbu	r2,0(r2)
 5094e50:	10803fcc 	andi	r2,r2,255
 5094e54:	1080201c 	xori	r2,r2,128
 5094e58:	10bfe004 	addi	r2,r2,-128
 5094e5c:	10800bd8 	cmpnei	r2,r2,47
 5094e60:	1000031e 	bne	r2,zero,5094e70 <alt_find_file+0x74>
    {
      len -= 1;
 5094e64:	e0bffe17 	ldw	r2,-8(fp)
 5094e68:	10bfffc4 	addi	r2,r2,-1
 5094e6c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 5094e70:	e0bffe17 	ldw	r2,-8(fp)
 5094e74:	e0ffff17 	ldw	r3,-4(fp)
 5094e78:	1885883a 	add	r2,r3,r2
 5094e7c:	10800003 	ldbu	r2,0(r2)
 5094e80:	10803fcc 	andi	r2,r2,255
 5094e84:	1080201c 	xori	r2,r2,128
 5094e88:	10bfe004 	addi	r2,r2,-128
 5094e8c:	10800be0 	cmpeqi	r2,r2,47
 5094e90:	1000081e 	bne	r2,zero,5094eb4 <alt_find_file+0xb8>
 5094e94:	e0bffe17 	ldw	r2,-8(fp)
 5094e98:	e0ffff17 	ldw	r3,-4(fp)
 5094e9c:	1885883a 	add	r2,r3,r2
 5094ea0:	10800003 	ldbu	r2,0(r2)
 5094ea4:	10803fcc 	andi	r2,r2,255
 5094ea8:	1080201c 	xori	r2,r2,128
 5094eac:	10bfe004 	addi	r2,r2,-128
 5094eb0:	10000a1e 	bne	r2,zero,5094edc <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
 5094eb4:	e0bffd17 	ldw	r2,-12(fp)
 5094eb8:	10800217 	ldw	r2,8(r2)
 5094ebc:	e0fffe17 	ldw	r3,-8(fp)
 5094ec0:	180d883a 	mov	r6,r3
 5094ec4:	e17fff17 	ldw	r5,-4(fp)
 5094ec8:	1009883a 	mov	r4,r2
 5094ecc:	50950a00 	call	50950a0 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 5094ed0:	1000021e 	bne	r2,zero,5094edc <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 5094ed4:	e0bffd17 	ldw	r2,-12(fp)
 5094ed8:	00000806 	br	5094efc <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
 5094edc:	e0bffd17 	ldw	r2,-12(fp)
 5094ee0:	10800017 	ldw	r2,0(r2)
 5094ee4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 5094ee8:	e0fffd17 	ldw	r3,-12(fp)
 5094eec:	00814274 	movhi	r2,1289
 5094ef0:	109f2604 	addi	r2,r2,31896
 5094ef4:	18bfcb1e 	bne	r3,r2,5094e24 <__alt_data_end+0xfffc6c24>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 5094ef8:	0005883a 	mov	r2,zero
}
 5094efc:	e037883a 	mov	sp,fp
 5094f00:	dfc00117 	ldw	ra,4(sp)
 5094f04:	df000017 	ldw	fp,0(sp)
 5094f08:	dec00204 	addi	sp,sp,8
 5094f0c:	f800283a 	ret

05094f10 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 5094f10:	defffc04 	addi	sp,sp,-16
 5094f14:	df000315 	stw	fp,12(sp)
 5094f18:	df000304 	addi	fp,sp,12
 5094f1c:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 5094f20:	00bffa04 	movi	r2,-24
 5094f24:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 5094f28:	e03ffd15 	stw	zero,-12(fp)
 5094f2c:	00001d06 	br	5094fa4 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
 5094f30:	00814274 	movhi	r2,1289
 5094f34:	109aa804 	addi	r2,r2,27296
 5094f38:	e0fffd17 	ldw	r3,-12(fp)
 5094f3c:	18c00324 	muli	r3,r3,12
 5094f40:	10c5883a 	add	r2,r2,r3
 5094f44:	10800017 	ldw	r2,0(r2)
 5094f48:	1000131e 	bne	r2,zero,5094f98 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
 5094f4c:	00814274 	movhi	r2,1289
 5094f50:	109aa804 	addi	r2,r2,27296
 5094f54:	e0fffd17 	ldw	r3,-12(fp)
 5094f58:	18c00324 	muli	r3,r3,12
 5094f5c:	10c5883a 	add	r2,r2,r3
 5094f60:	e0ffff17 	ldw	r3,-4(fp)
 5094f64:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 5094f68:	00814274 	movhi	r2,1289
 5094f6c:	109f2a04 	addi	r2,r2,31912
 5094f70:	10c00017 	ldw	r3,0(r2)
 5094f74:	e0bffd17 	ldw	r2,-12(fp)
 5094f78:	1880040e 	bge	r3,r2,5094f8c <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
 5094f7c:	00814274 	movhi	r2,1289
 5094f80:	109f2a04 	addi	r2,r2,31912
 5094f84:	e0fffd17 	ldw	r3,-12(fp)
 5094f88:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
 5094f8c:	e0bffd17 	ldw	r2,-12(fp)
 5094f90:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 5094f94:	00000606 	br	5094fb0 <alt_get_fd+0xa0>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 5094f98:	e0bffd17 	ldw	r2,-12(fp)
 5094f9c:	10800044 	addi	r2,r2,1
 5094fa0:	e0bffd15 	stw	r2,-12(fp)
 5094fa4:	e0bffd17 	ldw	r2,-12(fp)
 5094fa8:	10800810 	cmplti	r2,r2,32
 5094fac:	103fe01e 	bne	r2,zero,5094f30 <__alt_data_end+0xfffc6d30>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 5094fb0:	e0bffe17 	ldw	r2,-8(fp)
}
 5094fb4:	e037883a 	mov	sp,fp
 5094fb8:	df000017 	ldw	fp,0(sp)
 5094fbc:	dec00104 	addi	sp,sp,4
 5094fc0:	f800283a 	ret

05094fc4 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 5094fc4:	defffb04 	addi	sp,sp,-20
 5094fc8:	df000415 	stw	fp,16(sp)
 5094fcc:	df000404 	addi	fp,sp,16
 5094fd0:	e13ffe15 	stw	r4,-8(fp)
 5094fd4:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 5094fd8:	e0bfff17 	ldw	r2,-4(fp)
 5094fdc:	10840070 	cmpltui	r2,r2,4097
 5094fe0:	1000021e 	bne	r2,zero,5094fec <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 5094fe4:	00840004 	movi	r2,4096
 5094fe8:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
 5094fec:	e0fffe17 	ldw	r3,-8(fp)
 5094ff0:	e0bfff17 	ldw	r2,-4(fp)
 5094ff4:	1885883a 	add	r2,r3,r2
 5094ff8:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 5094ffc:	e0bffe17 	ldw	r2,-8(fp)
 5095000:	e0bffc15 	stw	r2,-16(fp)
 5095004:	00000506 	br	509501c <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 5095008:	e0bffc17 	ldw	r2,-16(fp)
 509500c:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 5095010:	e0bffc17 	ldw	r2,-16(fp)
 5095014:	10800804 	addi	r2,r2,32
 5095018:	e0bffc15 	stw	r2,-16(fp)
 509501c:	e0fffc17 	ldw	r3,-16(fp)
 5095020:	e0bffd17 	ldw	r2,-12(fp)
 5095024:	18bff836 	bltu	r3,r2,5095008 <__alt_data_end+0xfffc6e08>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 5095028:	e0bffe17 	ldw	r2,-8(fp)
 509502c:	108007cc 	andi	r2,r2,31
 5095030:	10000226 	beq	r2,zero,509503c <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 5095034:	e0bffc17 	ldw	r2,-16(fp)
 5095038:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 509503c:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 5095040:	0001883a 	nop
 5095044:	e037883a 	mov	sp,fp
 5095048:	df000017 	ldw	fp,0(sp)
 509504c:	dec00104 	addi	sp,sp,4
 5095050:	f800283a 	ret

05095054 <atexit>:
 5095054:	200b883a 	mov	r5,r4
 5095058:	000f883a 	mov	r7,zero
 509505c:	000d883a 	mov	r6,zero
 5095060:	0009883a 	mov	r4,zero
 5095064:	509511c1 	jmpi	509511c <__register_exitproc>

05095068 <exit>:
 5095068:	defffe04 	addi	sp,sp,-8
 509506c:	000b883a 	mov	r5,zero
 5095070:	dc000015 	stw	r16,0(sp)
 5095074:	dfc00115 	stw	ra,4(sp)
 5095078:	2021883a 	mov	r16,r4
 509507c:	50952340 	call	5095234 <__call_exitprocs>
 5095080:	00814274 	movhi	r2,1289
 5095084:	109f2004 	addi	r2,r2,31872
 5095088:	11000017 	ldw	r4,0(r2)
 509508c:	20800f17 	ldw	r2,60(r4)
 5095090:	10000126 	beq	r2,zero,5095098 <exit+0x30>
 5095094:	103ee83a 	callr	r2
 5095098:	8009883a 	mov	r4,r16
 509509c:	50953b40 	call	50953b4 <_exit>

050950a0 <memcmp>:
 50950a0:	01c000c4 	movi	r7,3
 50950a4:	3980192e 	bgeu	r7,r6,509510c <memcmp+0x6c>
 50950a8:	2144b03a 	or	r2,r4,r5
 50950ac:	11c4703a 	and	r2,r2,r7
 50950b0:	10000f26 	beq	r2,zero,50950f0 <memcmp+0x50>
 50950b4:	20800003 	ldbu	r2,0(r4)
 50950b8:	28c00003 	ldbu	r3,0(r5)
 50950bc:	10c0151e 	bne	r2,r3,5095114 <memcmp+0x74>
 50950c0:	31bfff84 	addi	r6,r6,-2
 50950c4:	01ffffc4 	movi	r7,-1
 50950c8:	00000406 	br	50950dc <memcmp+0x3c>
 50950cc:	20800003 	ldbu	r2,0(r4)
 50950d0:	28c00003 	ldbu	r3,0(r5)
 50950d4:	31bfffc4 	addi	r6,r6,-1
 50950d8:	10c00e1e 	bne	r2,r3,5095114 <memcmp+0x74>
 50950dc:	21000044 	addi	r4,r4,1
 50950e0:	29400044 	addi	r5,r5,1
 50950e4:	31fff91e 	bne	r6,r7,50950cc <__alt_data_end+0xfffc6ecc>
 50950e8:	0005883a 	mov	r2,zero
 50950ec:	f800283a 	ret
 50950f0:	20c00017 	ldw	r3,0(r4)
 50950f4:	28800017 	ldw	r2,0(r5)
 50950f8:	18bfee1e 	bne	r3,r2,50950b4 <__alt_data_end+0xfffc6eb4>
 50950fc:	31bfff04 	addi	r6,r6,-4
 5095100:	21000104 	addi	r4,r4,4
 5095104:	29400104 	addi	r5,r5,4
 5095108:	39bff936 	bltu	r7,r6,50950f0 <__alt_data_end+0xfffc6ef0>
 509510c:	303fe91e 	bne	r6,zero,50950b4 <__alt_data_end+0xfffc6eb4>
 5095110:	003ff506 	br	50950e8 <__alt_data_end+0xfffc6ee8>
 5095114:	10c5c83a 	sub	r2,r2,r3
 5095118:	f800283a 	ret

0509511c <__register_exitproc>:
 509511c:	defffa04 	addi	sp,sp,-24
 5095120:	dc000315 	stw	r16,12(sp)
 5095124:	04014274 	movhi	r16,1289
 5095128:	841f2004 	addi	r16,r16,31872
 509512c:	80c00017 	ldw	r3,0(r16)
 5095130:	dc400415 	stw	r17,16(sp)
 5095134:	dfc00515 	stw	ra,20(sp)
 5095138:	18805217 	ldw	r2,328(r3)
 509513c:	2023883a 	mov	r17,r4
 5095140:	10003726 	beq	r2,zero,5095220 <__register_exitproc+0x104>
 5095144:	10c00117 	ldw	r3,4(r2)
 5095148:	010007c4 	movi	r4,31
 509514c:	20c00e16 	blt	r4,r3,5095188 <__register_exitproc+0x6c>
 5095150:	1a000044 	addi	r8,r3,1
 5095154:	8800221e 	bne	r17,zero,50951e0 <__register_exitproc+0xc4>
 5095158:	18c00084 	addi	r3,r3,2
 509515c:	18c7883a 	add	r3,r3,r3
 5095160:	18c7883a 	add	r3,r3,r3
 5095164:	12000115 	stw	r8,4(r2)
 5095168:	10c7883a 	add	r3,r2,r3
 509516c:	19400015 	stw	r5,0(r3)
 5095170:	0005883a 	mov	r2,zero
 5095174:	dfc00517 	ldw	ra,20(sp)
 5095178:	dc400417 	ldw	r17,16(sp)
 509517c:	dc000317 	ldw	r16,12(sp)
 5095180:	dec00604 	addi	sp,sp,24
 5095184:	f800283a 	ret
 5095188:	00800034 	movhi	r2,0
 509518c:	10800004 	addi	r2,r2,0
 5095190:	10002626 	beq	r2,zero,509522c <__register_exitproc+0x110>
 5095194:	01006404 	movi	r4,400
 5095198:	d9400015 	stw	r5,0(sp)
 509519c:	d9800115 	stw	r6,4(sp)
 50951a0:	d9c00215 	stw	r7,8(sp)
 50951a4:	00000000 	call	0 <__alt_mem_sdram>
 50951a8:	d9400017 	ldw	r5,0(sp)
 50951ac:	d9800117 	ldw	r6,4(sp)
 50951b0:	d9c00217 	ldw	r7,8(sp)
 50951b4:	10001d26 	beq	r2,zero,509522c <__register_exitproc+0x110>
 50951b8:	81000017 	ldw	r4,0(r16)
 50951bc:	10000115 	stw	zero,4(r2)
 50951c0:	02000044 	movi	r8,1
 50951c4:	22405217 	ldw	r9,328(r4)
 50951c8:	0007883a 	mov	r3,zero
 50951cc:	12400015 	stw	r9,0(r2)
 50951d0:	20805215 	stw	r2,328(r4)
 50951d4:	10006215 	stw	zero,392(r2)
 50951d8:	10006315 	stw	zero,396(r2)
 50951dc:	883fde26 	beq	r17,zero,5095158 <__alt_data_end+0xfffc6f58>
 50951e0:	18c9883a 	add	r4,r3,r3
 50951e4:	2109883a 	add	r4,r4,r4
 50951e8:	1109883a 	add	r4,r2,r4
 50951ec:	21802215 	stw	r6,136(r4)
 50951f0:	01800044 	movi	r6,1
 50951f4:	12406217 	ldw	r9,392(r2)
 50951f8:	30cc983a 	sll	r6,r6,r3
 50951fc:	4992b03a 	or	r9,r9,r6
 5095200:	12406215 	stw	r9,392(r2)
 5095204:	21c04215 	stw	r7,264(r4)
 5095208:	01000084 	movi	r4,2
 509520c:	893fd21e 	bne	r17,r4,5095158 <__alt_data_end+0xfffc6f58>
 5095210:	11006317 	ldw	r4,396(r2)
 5095214:	218cb03a 	or	r6,r4,r6
 5095218:	11806315 	stw	r6,396(r2)
 509521c:	003fce06 	br	5095158 <__alt_data_end+0xfffc6f58>
 5095220:	18805304 	addi	r2,r3,332
 5095224:	18805215 	stw	r2,328(r3)
 5095228:	003fc606 	br	5095144 <__alt_data_end+0xfffc6f44>
 509522c:	00bfffc4 	movi	r2,-1
 5095230:	003fd006 	br	5095174 <__alt_data_end+0xfffc6f74>

05095234 <__call_exitprocs>:
 5095234:	defff504 	addi	sp,sp,-44
 5095238:	df000915 	stw	fp,36(sp)
 509523c:	dd400615 	stw	r21,24(sp)
 5095240:	dc800315 	stw	r18,12(sp)
 5095244:	dfc00a15 	stw	ra,40(sp)
 5095248:	ddc00815 	stw	r23,32(sp)
 509524c:	dd800715 	stw	r22,28(sp)
 5095250:	dd000515 	stw	r20,20(sp)
 5095254:	dcc00415 	stw	r19,16(sp)
 5095258:	dc400215 	stw	r17,8(sp)
 509525c:	dc000115 	stw	r16,4(sp)
 5095260:	d9000015 	stw	r4,0(sp)
 5095264:	2839883a 	mov	fp,r5
 5095268:	04800044 	movi	r18,1
 509526c:	057fffc4 	movi	r21,-1
 5095270:	00814274 	movhi	r2,1289
 5095274:	109f2004 	addi	r2,r2,31872
 5095278:	12000017 	ldw	r8,0(r2)
 509527c:	45005217 	ldw	r20,328(r8)
 5095280:	44c05204 	addi	r19,r8,328
 5095284:	a0001c26 	beq	r20,zero,50952f8 <__call_exitprocs+0xc4>
 5095288:	a0800117 	ldw	r2,4(r20)
 509528c:	15ffffc4 	addi	r23,r2,-1
 5095290:	b8000d16 	blt	r23,zero,50952c8 <__call_exitprocs+0x94>
 5095294:	14000044 	addi	r16,r2,1
 5095298:	8421883a 	add	r16,r16,r16
 509529c:	8421883a 	add	r16,r16,r16
 50952a0:	84402004 	addi	r17,r16,128
 50952a4:	a463883a 	add	r17,r20,r17
 50952a8:	a421883a 	add	r16,r20,r16
 50952ac:	e0001e26 	beq	fp,zero,5095328 <__call_exitprocs+0xf4>
 50952b0:	80804017 	ldw	r2,256(r16)
 50952b4:	e0801c26 	beq	fp,r2,5095328 <__call_exitprocs+0xf4>
 50952b8:	bdffffc4 	addi	r23,r23,-1
 50952bc:	843fff04 	addi	r16,r16,-4
 50952c0:	8c7fff04 	addi	r17,r17,-4
 50952c4:	bd7ff91e 	bne	r23,r21,50952ac <__alt_data_end+0xfffc70ac>
 50952c8:	00800034 	movhi	r2,0
 50952cc:	10800004 	addi	r2,r2,0
 50952d0:	10000926 	beq	r2,zero,50952f8 <__call_exitprocs+0xc4>
 50952d4:	a0800117 	ldw	r2,4(r20)
 50952d8:	1000301e 	bne	r2,zero,509539c <__call_exitprocs+0x168>
 50952dc:	a0800017 	ldw	r2,0(r20)
 50952e0:	10003226 	beq	r2,zero,50953ac <__call_exitprocs+0x178>
 50952e4:	a009883a 	mov	r4,r20
 50952e8:	98800015 	stw	r2,0(r19)
 50952ec:	00000000 	call	0 <__alt_mem_sdram>
 50952f0:	9d000017 	ldw	r20,0(r19)
 50952f4:	a03fe41e 	bne	r20,zero,5095288 <__alt_data_end+0xfffc7088>
 50952f8:	dfc00a17 	ldw	ra,40(sp)
 50952fc:	df000917 	ldw	fp,36(sp)
 5095300:	ddc00817 	ldw	r23,32(sp)
 5095304:	dd800717 	ldw	r22,28(sp)
 5095308:	dd400617 	ldw	r21,24(sp)
 509530c:	dd000517 	ldw	r20,20(sp)
 5095310:	dcc00417 	ldw	r19,16(sp)
 5095314:	dc800317 	ldw	r18,12(sp)
 5095318:	dc400217 	ldw	r17,8(sp)
 509531c:	dc000117 	ldw	r16,4(sp)
 5095320:	dec00b04 	addi	sp,sp,44
 5095324:	f800283a 	ret
 5095328:	a0800117 	ldw	r2,4(r20)
 509532c:	80c00017 	ldw	r3,0(r16)
 5095330:	10bfffc4 	addi	r2,r2,-1
 5095334:	15c01426 	beq	r2,r23,5095388 <__call_exitprocs+0x154>
 5095338:	80000015 	stw	zero,0(r16)
 509533c:	183fde26 	beq	r3,zero,50952b8 <__alt_data_end+0xfffc70b8>
 5095340:	95c8983a 	sll	r4,r18,r23
 5095344:	a0806217 	ldw	r2,392(r20)
 5095348:	a5800117 	ldw	r22,4(r20)
 509534c:	2084703a 	and	r2,r4,r2
 5095350:	10000b26 	beq	r2,zero,5095380 <__call_exitprocs+0x14c>
 5095354:	a0806317 	ldw	r2,396(r20)
 5095358:	2088703a 	and	r4,r4,r2
 509535c:	20000c1e 	bne	r4,zero,5095390 <__call_exitprocs+0x15c>
 5095360:	89400017 	ldw	r5,0(r17)
 5095364:	d9000017 	ldw	r4,0(sp)
 5095368:	183ee83a 	callr	r3
 509536c:	a0800117 	ldw	r2,4(r20)
 5095370:	15bfbf1e 	bne	r2,r22,5095270 <__alt_data_end+0xfffc7070>
 5095374:	98800017 	ldw	r2,0(r19)
 5095378:	153fcf26 	beq	r2,r20,50952b8 <__alt_data_end+0xfffc70b8>
 509537c:	003fbc06 	br	5095270 <__alt_data_end+0xfffc7070>
 5095380:	183ee83a 	callr	r3
 5095384:	003ff906 	br	509536c <__alt_data_end+0xfffc716c>
 5095388:	a5c00115 	stw	r23,4(r20)
 509538c:	003feb06 	br	509533c <__alt_data_end+0xfffc713c>
 5095390:	89000017 	ldw	r4,0(r17)
 5095394:	183ee83a 	callr	r3
 5095398:	003ff406 	br	509536c <__alt_data_end+0xfffc716c>
 509539c:	a0800017 	ldw	r2,0(r20)
 50953a0:	a027883a 	mov	r19,r20
 50953a4:	1029883a 	mov	r20,r2
 50953a8:	003fb606 	br	5095284 <__alt_data_end+0xfffc7084>
 50953ac:	0005883a 	mov	r2,zero
 50953b0:	003ffb06 	br	50953a0 <__alt_data_end+0xfffc71a0>

050953b4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 50953b4:	defffd04 	addi	sp,sp,-12
 50953b8:	df000215 	stw	fp,8(sp)
 50953bc:	df000204 	addi	fp,sp,8
 50953c0:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 50953c4:	0001883a 	nop
 50953c8:	e0bfff17 	ldw	r2,-4(fp)
 50953cc:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 50953d0:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 50953d4:	10000226 	beq	r2,zero,50953e0 <_exit+0x2c>
    ALT_SIM_FAIL();
 50953d8:	002af070 	cmpltui	zero,zero,43969
 50953dc:	00000106 	br	50953e4 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 50953e0:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 50953e4:	003fff06 	br	50953e4 <__alt_data_end+0xfffc71e4>
